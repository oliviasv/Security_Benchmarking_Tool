#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2020/08/19 $
#
# Description   : This document implements the security configuration as recommended by the
#                  CIS Microsoft 365 Foundations Benchmark v1.2.0
#
#<ui_metadata>
#<display_name>CIS Microsoft 365 Foundations E3 L2 v1.2.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Microsoft 365 Foundations E3 L2</name>
#  <version>1.2.0</version>
#  <link>https://workbench.cisecurity.org/files/2860</link>
#</spec>
#<labels>microsoft_365</labels>
#<benchmark_refs>LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SECURE_SCORE_AGE</name>
#    <default>7</default>
#    <description>Maximum Secure Score Age</description>
#    <info>The maximum age (in days) of a secure score result.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"microsoft_azure">

<custom_item>
  description    : "1.1.2 Ensure multifactor authentication is enabled for all users in all roles"
  info           : "Enable multifactor authentication for all users in the Microsoft 365 tenant. Users will be prompted to authenticate with a second factor upon logging in to Microsoft 365 services each day. The second factor is most commonly a text message to a registered mobile phone number where they type in an authorization code, or with a mobile application like Microsoft Authenticator.

Rationale:

Multifactor authentication requires an individual to present a minimum of two separate forms of authentication before access is granted. Multifactor authentication provides additional assurance that the individual attempting to gain access is who they claim to be. With multifactor authentication, an attacker would need to compromise at least two different authentication mechanisms, increasing the difficulty of compromise and thus reducing the risk.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "To enable multifactor authentication for all users, use the Microsoft 365 Admin Center:

Log in to https://admin.microsoft.com as a Global Administrator.

Go to Admin centers and click on Azure Active Directory.

Select Enterprise applications then, under Security, select Conditional Access.

Click New policy

Select Cloud apps or actions > All cloud apps (and don't exclude any apps)

Access Controls > Grant > Require multi-factor authentication (and nothing else)

Conditions > Client Apps > Configure (Yes) > Explicitly select Browser, Mobile apps and desktop clients, Modern authentication clients, Exchange ActiveSync clients, and Other clients

Leave all other conditions blank

Make sure the policy is enabled

Create

Impact:

Implementation of multifactor authentication for all users will necessitate a change to user routine. All users will be required to enroll in multifactor authentication using using phone, SMS, or an authentication application. After enrollment, use of multifactor authentication will be required for future authentication to the environment.

Default Value:

Disabled"
  reference      : "800-171|3.5.3,800-53|IA-2(2),CSF|PR.AC-1,ITSG-33|IA-2(2),LEVEL|2NS,NESA|T5.4.2,SWIFT-CSCv1|1.2"
  see_also       : "https://workbench.cisecurity.org/files/2860"
  request        : "listSecureScores"
# Note: Variable @SECURE_SCORE_AGE@ replaced with "7" in field "json_transform".
  json_transform : '.[0] | select((.createdDateTime | iso_8601_days_ago) < 7) | .controlScores.[] | select(.controlName=="MFARegistrationV2") | .description'
  regex          : "You have [0-9]+ out of [0-9]+ users registered and protected with MFA"
  expect         : "^MANUAL_REVIEW_REQUIRED$"
  severity       : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "2.1 Ensure third party integrated applications are not allowed"
  info        : "Do not allow third party integrated applications to connect to your services.

Rationale:

You should not allow third party integrated applications to connect to your services unless there is a very clear value and you have robust security controls in place. While there are legitimate uses, attackers can grant access from breached accounts to third party applications to exfiltrate data from your tenancy without having to maintain the breached account.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To prohibit third party integrated applications, use the Microsoft 365 Admin Center:

Select Admin Centers and Azure Active Directory.

Select Users from the Azure navigation pane

Select Users Settings.

Set App Registrations is set to No.

Impact:

Implementation of this change will impact both end users and administrators. End users will not be able to integrate third-party applications that they may wish to use. Administrators are likely to receive requests from end users to grant them permission to necessary third-party applications.

Default Value:

Yes"
  reference   : "LEVEL|2NS"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "2.2 Ensure calendar details sharing with external users is disabled"
  info        : "You should not allow your users to share the full details of their calendars with external users.

Rationale:

Attackers often spend time learning about your organization before launching an attack. Publicly available calendars can help attackers understand organizational relationships and determine when specific users may be more vulnerable to an attack, such as when they are traveling.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To disable calendar details sharing with external users, use the Microsoft 365 Admin Center:

Select Admin Center and Click to expand Settings.

Click Settings.

Click Calendar.

Set Let your users share their calendars with external users who have O365 or Exchange to Off or unchecked.

Click Save.

To disabled calendar details sharing with external users policy, use the Exchange Online PowerShell Module:

Connect to Exchange Online using Connect-EXOPSSession.

Run the following Exchange Online PowerShell command:

Set-SharingPolicy -Identity 'Name of the policy' -Enabled $False

Impact:

This functionality is not widely used. As a result, it is unlikely that implementation of this setting will cause an impact to most users. Users that do utilize this functionality are likely to experience a minor inconvenience when scheduling meetings or synchronizing calendars with people outside the tenant.

Default Value:

On"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "2.6 Ensure user consent to apps accessing company data on their behalf is not allowed"
  info        : "By default, users can consent to applications accessing your organization's data, although only for some permissions. For example, by default a user can consent to allow an app to access their own mailbox or the Teams conversations for a team the user owns, but cannot consent to allow an app unattended access to read and write to all SharePoint sites in your organization.

Do not allow users to grant consent to apps accessing company data on their behalf.

Rationale:

Attackers commonly use custom applications to trick users into granting them access to company data.

While allowing users to consent by themselves does allow users to easily acquire useful applications that integrate with Microsoft 365, Azure and other services, it can represent a risk if not used and monitored carefully.

Disable future user consent operations to help reduce your threat-surface and mitigate this risk. If user consent is disabled, previous consent grants will still be honored but all future consent operations must be performed by an administrator.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To prohibit user consent to apps accessing company data on their behalf, use the Microsoft 365 Admin Center:

Select Admin Centers and Azure Active Directory.

Select Enterprise Applications from the Azure navigation pane.

Select Users Settings.

Set Users can consent to apps accessing company data on their behalf to No.

Click the Save option at the top of the window.

To prohibit user consent to apps accessing company data on their behalf, use the Microsoft Online PowerShell Module:

Connect to Microsoft Online service using Connect-MSOLService.

Run the following Microsoft Online PowerShell command:

Set-MsolCompanySettings -UsersPermissionToUserConsentToAppEnabled $False

Impact:

If user consent is disabled, previous consent grants will still be honored but all future consent operations must be performed by an administrator. Tenant-wide admin consent can be requested by users through an integrated administrator consent request workflow or through organizational support processes.

Default Value:

UI - Yes PowerShell - True"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "2.7 Ensure the admin consent workflow is enabled"
  info        : "Without an admin consent workflow (Preview), a user in a tenant where user consent is disabled will be blocked when they try to access any app that requires permissions to access organizational data. The user sees a generic error message that says they're unauthorized to access the app and they should ask their admin for help.

Rationale:

The admin consent workflow (Preview) gives admins a secure way to grant access to applications that require admin approval. When a user tries to access an application but is unable to provide consent, they can send a request for admin approval. The request is sent via email to admins who have been designated as reviewers. A reviewer takes action on the request, and the user is notified of the action.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To enable the admin consent workflow (Preview), use the Microsoft 365 Admin Center:

Select Admin Centers and Azure Active Directory.

Select Enterprise Applications from the Azure Navigation pane.

Select Users Settings.

Set Admin consent requests (Preview) to Yes.

Select Select admin consent request reviewers and choose the admins you would like to review user generated app consent requests.

Select Save at the top of the window.

Impact:

To approve requests, a reviewer must be a global administrator, cloud application administrator, or application administrator. The reviewer must already have one of these admin roles assigned; simply designating them as a reviewer doesn't elevate their privileges.

Default Value:

Users can request admin consent to apps they are unable to consent to: No

Selected users to review admin consent requests: None

Selected users will receive email notifications for requests: Yes

Selected users will receive request expiration reminders: Yes

Consent request expires after (days): 30"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "2.8 - Ensure users installing Outlook add-ins is not allowed"
  info        : "By default, users can install add-ins in their Microsoft Outlook Desktop client, allowing data access within the client application.

Do not allow users to install add-ins in Outlook.

Rationale:

Attackers commonly use vulnerable and custom-built add-ins to access data in user applications.

While allowing users to install add-ins by themselves does allow them to easily acquire useful add-ins that integrate with Microsoft applications, it can represent a risk if not used and monitored carefully.

Disable future user's ability to install add-ins in Microsoft Outlook helps reduce your threat-surface and mitigate this risk.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To prohibit users installing Outlook add-ins, use the Microsoft 365 Admin Center:

Select Admin Centers and Exchange.

Select Permissions from the Exchange navigation pane.

Select User Roles.

De-Select My Custom Apps My Marketplace Apps and My ReadWriteMailboxApps.

To prohibit users installing Outlook add-ins, use the Microsoft Online PowerShell Module:

Connect to Microsoft Online service using Connect-MSOLService.

Run the following Microsoft Online PowerShell command:

$newPolicyName = 'Role Assignment Policy - Prevent Add-ins'
$revisedRoles = 'MyTeamMailboxes', 'MyTextMessaging', 'MyDistributionGroups', 'MyMailSubscriptions', 'MyBaseOptions', 'MyVoiceMail', 'MyProfileInformation', 'MyContactInformation', 'MyRetentionPolicies', 'MyDistributionGroupMembership'

New-RoleAssignmentPolicy -Name $newPolicyName -Roles $revisedRoles
Set-RoleAssignmentPolicy -id $newPolicyName -IsDefault
Get-Mailbox -ResultSize Unlimited | Set-Mailbox -RoleAssignmentPolicy $newPolicyName

If you have other Role Assignment Policies modify the last line to filter out your custom policies

Impact:

Implementation of this change will impact both end users and administrators. End users will not be able to integrate third-party applications that they may wish to use. Administrators are likely to receive requests from end users to grant them permission to necessary third-party applications.

Default Value:

UI - My Custom Apps is Checked, My Marketplace Apps is Checked, and My ReadWriteMailboxApps is Checked

PowerShell - My Custom Apps My Marketplace Apps and My ReadWriteMailboxApps are Present"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "3.2 Ensure SharePoint Online data classification policies are set up and used"
  info        : "You should set up and use SharePoint Online data classification policies on data stored in your SharePoint Online sites.

Rationale:

The policies will help categorize your most important data so you can effectively protect it from illicit access, and will help make it easier to investigate discovered breaches.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To set up data classification policies, use the Microsoft 365 Admin Center:

Under Admin centers select Compliance to open the Microsoft 365 Compliance Center.

Expand Classification then choose Sensitivity labels.

Click Create label to create a label.

Impact:

Creation of data classification policies will not cause a significant impact to an organization. However, ensuring long term adherence with policies can potentially be a significant training and ongoing compliance effort across an organization. Organizations should ensure that training and compliance planning is part of the classification policy creation process."
  reference   : "LEVEL|2NS"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "3.3 Ensure external domains are not allowed in Skype or Teams"
  info        : "Disable the ability of your users to communicate via Skype or Teams with users outside your organization.

Rationale:

You should not allow your users to communicate with Skype or Teams users outside your organization. While there are legitimate, productivity-improving scenarios for this, it also represents a potential security threat because those external users will be able to interact with your users over Skype for Business or Teams. Attackers may be able to pretend to be someone your user knows and then send malicious links or attachments, resulting in an account breach or leaked information.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To disable Skype for Business and Teams access with external users, use the Microsoft 365 Admin Center:

Under Admin Centers choose Teams.

Expand Org Wide Settings then select External Access.

Set Users can communicate with Skype for Business and Teams users to Off.

Set Skype for Business users can communicate with Skype users to Off.

Impact:

Impact associated with this change is highly dependent upon current practices in the tenant. If users do not regularly communicate with external parties using Skype or Teams channels, then minimal impact is likely. However, if users do regularly utilize Teams and Skype for client communication, potentially significant impacts could occur, and users should be contacts, and if necessary, alternate mechanisms to continue this communication should be identified prior to disabling external access to Teams and Skype.

Default Value:

On"
  reference   : "LEVEL|2NS"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "3.6 Ensure that external users cannot share files, folders, and sites they do not own"
  info        : "SharePoint gives users the ability to share files, folder, and site collections. Internal users can share with external collaborators, who with the right permissions, could share those to another external party.

Rationale:

Sharing and collaboration are key; however, file, folder, or site collection owners should have the authority over what external users get shared with to prevent unauthorized disclosures of information.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To set SharePoint sharing settings, use the Microsoft 365 Admin Center:

Under Admin centers select SharePoint.

Expand Policies then select Sharing.

Expand More external sharing settings, uncheck Allow guests to share items they don't own.

Click Save.

To Set Prevent external users from sharing files, folders, and sites that they don't own, use the SharePoint Online PowerShell Module:

Connect to SharePoint Online service using Connect-MSOLService.

Run the following SharePoint Online PowerShell command:

Set-SPOTenant -PreventExternalUsersFromResharing $True

Impact:

Impact associated with this change is highly dependent upon current practices. If users do not regularly share with external parties, then minimal impact is likely. However, if users do regularly share with guests/externally, minimum impacts could occur as those external users will be unable to 're-share' content."
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "3.7 Ensure external file sharing in Teams is enabled for only approved cloud storage services"
  info        : "Microsoft Teams enables collaboration via file sharing. This file sharing is conducted within Teams, using SharePoint Online, by default; however, third-party cloud services are allowed as well.

Rationale:

Ensuring that only authorized cloud storage providers are accessible from Teams will help to dissuade the use of non-approved storage providers.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To Set external file sharing in Teams, use the Microsoft 365 Admin Center:

Under Admin Centers choose Teams.

Expand Org-wide settings select Teams settings.

Set each cloud storage service under Files to On if it is authorized.

** To verify external file sharing in Teams you may also utilize Powershell. Ensure that the Skype for business online, Windows Powershell module and Microsoft Teams module are both installed. **

Install the Powershell module for teams. Skype module will need downloaded from Microsoft.

Install-Module MicrosoftTeams
Import-Module SkypeOnlineConnector

Connect to your tenant as a Global Administrator, methods will differ based on whether 2FA is enabled. See the following article for more information - https://docs.microsoft.com/en-us/office365/enterprise/powershell/manage-skype-for-business-online-with-office-365-powershell

Run the following command to verify which cloud storage providers are enabled for Teams

Get-CsTeamsClientConfiguration | select allow*

Run the following Powershell command to disable external providers that are not authorized. (the example disables ShareFile, GoogleDrive, Box, and DropBox

Set-CsTeamsClientConfiguration -AllowGoogleDrive $false -AllowShareFile $false -AllowBox $false -AllowDropBox $false

You may verify this worked by running the following Powershell command again.

Get-CsTeamsClientConfiguration | select allow*

Impact:

Impact associated with this change is highly dependent upon current practices in the tenant. If users do not use other storage providers, then minimal impact is likely. However, if users do regularly utilize providers outside of the tenant this will affect their ability to continue to do so.

Default Value:

On

Notes:

Skype Online Connector - https://www.microsoft.com/en-us/download/details.aspx?id=39366"
  reference   : "LEVEL|2NS"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "4.4 Ensure automatic forwarding options are disabled"
  info        : "You should disable automatic forwarding to prevent users from auto-forwarding mail through Outlook and Outlook on the Web.

Rationale:

In the event that an attacker gains control of an end-user account they could create rules to ex-filtrate data from your environment.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To perform remediation you may use the Exchange Online PowerShell Module:

Connect to Exchange online using Connect-EXOPSSession

Run the following Powershell to disable auto-forwarding to remote domains:

Set-RemoteDomain Default -AutoForwardEnabled $false

Run the following Powershell to verify AutoForwardEnabled is now set to False.

Get-RemoteDomain Default | fl AllowedOOFType, AutoForwardEnabled

Impact:

Care should be taken before implementation to ensure there is no business need for case-by-case auto-forwarding. Disabling auto-forwarding to remote domains will affect all users and in an organization.

Default Value:

True

References:

https://docs.microsoft.com/en-us/archive/blogs/exovoice/disable-automatic-forwarding-in-office-365-and-exchange-server-to-prevent-information-leakage

https://docs.microsoft.com/en-us/powershell/module/exchange/mail-flow/set-remotedomain?view=exchange-ps"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "4.6 Ensure the Client Rules Forwarding Block is enabled"
  info        : "You should enable the Client Rules Forwarding Block, which prevents the use of any client-side rules that forward email to an external domain.

Rationale:

The use of client-side forwarding rules to exfiltrate data to external recipients is an increasingly used vector for data exfiltration by bad actors.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To create the Client Rules Forwarding Block, use the Exchange Online PowerShell Module:

Connect to Exchange Online using Connect-EXOPSSession.

Run the following Exchange Online PowerShell commands to create a rule:

$rejectMessageText = 'To improve security, auto-forwarding rules to external addresses has been disabled. Please contact your Microsoft Partner if you'd like to set up an exception.'

New-TransportRule -name 'Client Rules To External Block' -Priority 0 -SentToScope NotInOrganization -FromScope InOrganization -MessageTypeMatches AutoForward -RejectMessageEnhancedStatusCode 5.7.1 -RejectMessageReasonText $rejectMessageText

Verify that Client Rules To External Block gets created.

Impact:

Care should be taken before implementation to ensure there is no business need for case-by-case auto-forwarding. Disabling auto-forwarding to remote domains will affect all users and in an organization."
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "4.9 Ensure basic authentication for Exchange Online is disabled"
  info        : "Basic authentication may allow users to access Exchange Online using legacy or unapproved email clients that do not support modern authentication mechanisms, such as multifactor authentication.

Rationale:

Disabling basic authentication prevents use of legacy and unapproved email clients with weaker authentication mechanisms that would increase the risk of email account credential compromise.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To disable basic authentication, use the Exchange Online PowerShell Module:

Run the Microsoft Exchange Online PowerShell Module.

Connect using Connect-EXOPSSession.

Run the following PowerShell command:

*Note: If policy exists and command fails you may run Remove-AuthenticationPolicy first to ensure policy creation/application occurs as expected.

$AuthenticationPolicy = Get-OrganizationConfig | Select-Object DefaultAuthenticationPolicy

If (-not $AuthenticationPolicy.Identity) {
  $AuthenticationPolicy = New-AuthenticationPolicy 'Block Basic Auth';
  Set-OrganizationConfig -DefaultAuthenticationPolicy $AuthenticationPolicy.Identity
}

Set-AuthenticationPolicy -Identity $AuthenticationPolicy.Identity -AllowBasicAuthActiveSync:$false -AllowBasicAuthAutodiscover:$false -AllowBasicAuthImap:$false -AllowBasicAuthMapi:$false -AllowBasicAuthOfflineAddressBook:$false -AllowBasicAuthOutlookService:$false -AllowBasicAuthPop:$false -AllowBasicAuthPowershell:$false -AllowBasicAuthReportingWebServices:$false -AllowBasicAuthRpc:$false -AllowBasicAuthSmtp:$false -AllowBasicAuthWebServices:$false

Get-User -ResultSize Unlimited | ForEach-Object { Set-User -Identity $_.Identity -AuthenticationPolicy $AuthenticationPolicy.Identity -STSRefreshTokensValidFrom $([System.DateTime]::UtcNow) }

Impact:

Blocking basic authentication will block the following legacy Exchange Online features:

App passwords: An app password is a code that gives an app or device permission to access your Microsoft 365 account. If multi-factor authentication is enabled for your organization and you're using apps that connect to your Microsoft 365 account, you'll need to generate an app password so the app can connect to Microsoft 365. For example, if you're using Outlook 2016 or earlier with Microsoft 365, an app password is required.

Availability address spaces: These contain a service account that's used to share calendar free/busy information in hybrid and federated deployments. The service account authenticates with a username and password, so blocking Basic authentication blocks the authentication flow.

Blocking basic authentication may also be accomplished via other methods such as conditional access.

Default Value:

false

References:

https://docs.microsoft.com/en-us/exchange/clients-and-mobile-in-exchange-online/disable-basic-authentication-in-exchange-online?redirectSourcePath=%252fen-us%252farticle%252fdisable-basic-authentication-in-exchange-online-bba2059a-7242-41d0-bb3f-baaf7ec1abd7"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "4.15 Ensure MailTips are enabled for end users"
  info        : "MailTips assist end users with identifying strange patterns to emails they send

Rationale:

Setting up MailTips gives a visual aid to users when they send emails to large groups of recipients or send emails to recipients not within the tenant.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To enable MailTips, use the Exchange Online PowerShell Module:

Run Microsoft Exchange Online PowerShell Module

Connect using Connect-EXOPSSession

Run the following PowerShell command:

Set-OrganizationConfig -MailTipsAllTipsEnabled $true -MailTipsExternalRecipientsTipsEnabled $true -MailTipsGroupMetricsEnabled $true -MailTipsLargeAudienceThreshold '25'

Default Value:

MailTipsAllTipsEnabled: True MailTipsExternalRecipientsTipsEnabled: False MailTipsGroupMetricsEnabled: True MailTipsLargeAudienceThreshold: 25"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "4.16 Ensure that LinkedIn contact synchronization is disabled."
  info        : "You should disable integration with Facebook as a measure to help prevent phishing scams.

Rationale:

Office 365 is the prime target of phishing scams. Phishing attacks are a subset of social engineering strategy that imitate a trusted source and concoct a seemingly logical scenario for handing over sensitive information. Social networking sites have made social engineering attacks easier to conduct.

Facebook integration is enabled by default in Office 365 that could lead to a risk scenario where an external party could be accidentally disclosed sensitive information.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To disable Facebook contacts synchronization, perform the following steps from Exchange Online PowerShell:

Use Microsoft Explorer or Edge then navigate to https://admin.microsoft.com and login as a Global Admin.

Expand Admin centers then select Exchange.

Once the Exchange Admin center is open select hybrid

Select configure to install the Exchange Online PowerShell module.

In the PowerShell window, enter the following command

Connect-EXOPSSession -UserPrincipalName xxx@somecompany.com

To disable Facebook integration enter the following command

Set-OwaMailboxPolicy -Identity OwaMailboxPolicy-Default -DisableFacebook

Verify that the value of FacebookEnabled is now set to False run the following command.

Get-OwaMailboxPolicy | select FacebookEnabled

Impact:

Users will not be able to sync contacts or use Facebook integration.

Default Value:

Facebook integration is enabled by default.

References:

https://docs.microsoft.com/en-us/powershell/module/exchange/client-access/set-owamailboxpolicy?view=exchange-ps"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<custom_item>
  description    : "5.4 Ensure the Application Usage report is reviewed at least weekly"
  info           : "You should review the Application Usage report at least weekly. This report includes a usage summary for all Software As A Service (SaaS) applications that are integrated with your directory.

Rationale:

Review the list of app registrations on a regular basis to look for risky apps that users have enabled that could cause data spillage or accidental elevation of privilege. Attackers can often get access to data illicitly through third-party SaaS applications.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "To review the report, perform the following steps using the Azure Portal:

Go to portal.azure.com.

Click Azure Active Directory.

Select Enterprise applications.

Review the information."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-53|AU-6,CN-L3|7.1.3.3(d),CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,ITSG-33|AU-6,LEVEL|2NS,NESA|M5.2.5,NESA|T3.6.3,NESA|T3.6.6,NESA|T8.3.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/files/2860"
  request        : "listApplications"
  json_transform : '.[].displayName'
  regex          : ".*"
  expect         : "^MANUAL_REVIEW_REQUIRED$"
  severity       : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "6.1 Ensure document sharing is being controlled by domains with whitelist or blacklist"
  info        : "You should control sharing of documents to external domains by either blocking domains or only allowing sharing with specific named domains.

Rationale:

Attackers will often attempt to expose sensitive information to external entities through sharing, and restricting the domains that your users can share documents with will reduce that surface area.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To configure document sharing restrictions, use the Microsoft 365 Admin Center:

Navigate to Microsoft 365 administration portal (https://admin.microsoft.com), Click on Admin Centers and then SharePoint.

Expand Policies then click Sharing.

Expand More external sharing settings and check Limit external sharing by domain.

Select Add domains to add a list of approved domains

Click Save at the bottom of the page.

To configure document sharing restrictions, you can also use SharePoint Online PowerShell:

Connect to SharePoint Online using Connect-SPOService

Run the following PowerShell command:

Set-SPOTenant -SharingDomainRestrictionMode AllowList -SharingAllowedDomainList 'domain1.com domain2.com'

Impact:

Enabling this feature will prevent users from sharing documents with domains outside of the organization unless allowed.

Default Value:

off"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<report type:"WARNING">
  description : "6.4 Ensure external storage providers available in Outlook on the Web are restricted"
  info        : "You should restrict storage providers that are integrated with Outlook on the Web.

Rationale:

By default additional storage providers are allowed in Outlook on the Web (such as Box, Dropbox, Facebook, Google Drive, OneDrive Personal, etc.). This could lead to information leakage and additional risk of infection from organizational non-trusted storage providers. Restricting this will inherently reduce risk as it will narrow opportunities for infection and data leakage.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To disable external storage providers, use the Exchange Online PowerShell Module:

Connect to Exchange Online using Connect-EXOPSSession.

Run the following Powershell command:

Set-OwaMailboxPolicy -Identity OwaMailboxPolicy-Default -AdditionalStorageProvidersAvailable $false

Run the following Powershell command to verify that the value is now False:

Get-OwaMailboxPolicy | Format-Table Name, AdditionalStorageProvidersAvailable

Impact:

Impact associated with this change is highly dependent upon current practices in the tenant. If users do not use other storage providers, then minimal impact is likely. However, if users do regularly utilize providers outside of the tenant this will affect their ability to continue to do so.

Default Value:

Additional Storage Providers - True

References:

https://docs.microsoft.com/en-us/powershell/module/exchange/client-access/set-owamailboxpolicy?view=exchange-ps"
  reference   : "LEVEL|2S"
  see_also    : "https://workbench.cisecurity.org/files/2860"
</report>

<custom_item>
  description    : "7.5 Ensure mobile devices are set to wipe on multiple sign-in failures to prevent brute force compromise"
  info           : "Require mobile devices to wipe on multiple sign-in failures

Rationale:

Devices without this protection are vulnerable to being accessed physically by attackers who can then steal account credentials, data, or install malware on the device."
  solution       : "To set mobile device management profiles, use the Microsoft 365 Admin Center:

Under Admin Centers select Endpoint Management.

Select Devices and then select Configuration profiles

Select Create profile

Set a Name for the policy, choose the appropriate Platform and select Device restrictions

In the Password section, ensure that Number of sign-in failures before wiping device is set to 10.

Impact:

This setting has no impact, unless a user mistypes their password multiple times and causes their device to wipe. In that case, it will have a high user impact.

Default Value:

The default is to not wipe the device on multiple failed attempts."
  reference      : "800-53|AC-7(2),ITSG-33|AC-7(2),LEVEL|2NS,NIAv2|OS10"
  see_also       : "https://workbench.cisecurity.org/files/2860"
  request        : "listDeviceManagement"
  json_transform : '.[] | select((.["@odata.type"] | test("androidGeneralDeviceConfiguration")) or (.["@odata.type"] | test("iosGeneralDeviceConfiguration"))) | "Display Name: \(.displayName) - Passcode Sign In Failure Count Before Wipe: \(.passcodeSignInFailureCountBeforeWipe)"'
  regex          : "Passcode Sign In Failure Count Before Wipe:"
  expect         : "Passcode Sign In Failure Count Before Wipe: ([1-9]|10)$"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "7.12 Ensure mobile device management policies are required for email profiles"
  info           : "You should configure your mobile device management policies to require the policy to manage the email profile of the user.

Rationale:

If you do not require this, users will be able to setup and configure email accounts without the protections of the mobile device management policy, leading to potential breaches of accounts and data."
  solution       : "To set mobile device management policies, use the Microsoft 365 Admin Center:

Select Device Management under Admin Centers.

Select Device compliance and then select Policies

Select Create Policy

Set a Name for the policy, choose the appropriate Platform

Under Settings and Email ensure that Require mobile devices to have a managed email profile is set to Require.

Impact:

This setting will have a moderate impact on users

Default Value:

This setting is not enabled by default"
  reference      : "800-171|3.1.18,800-53|AC-19,800-53|IA-5(1),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF|PR.AC-3,ISO/IEC-27001|A.6.2.1,ISO/IEC-27001|A.9.4.3,ITSG-33|AC-19,ITSG-33|IA-5(1),LEVEL|2NS,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  see_also       : "https://workbench.cisecurity.org/files/2860"
  request        : "listDeviceManagement"
  json_transform : '.[] | select(.["@odata.type"] | test("androidGeneralDeviceConfiguration")) | "Display Name: \(.displayName) - Password expiration: \(.passwordExpirationDays)"'
  regex          : "Password expiration:"
  expect         : "Password expiration: 0$"
  match_all      : YES
</custom_item>

</check_type>
