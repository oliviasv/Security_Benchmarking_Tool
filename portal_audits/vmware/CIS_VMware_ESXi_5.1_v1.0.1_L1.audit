#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.6 $
# $Date: 2016/06/18 $
#
# Description	: This .audit is designed to query VMware 5.1
# 	  as defined by CIS in the CIS VMware ESXi v1.0.1 benchmark
#                 https://workbench.cisecurity.org/files/902
#
#<ui_metadata>
#<display_name>CIS VMware ESXi 5.1 v1.0.1 Level 1</display_name>
#<spec>
#  <type>CIS</type>
#  <name>VMware ESXi 5.1 Level 1</name>
#  <version>1.0.1</version>
#  <link>https://workbench.cisecurity.org/files/902</link>
#</spec>
#<labels>vmware,cis,esxi,esxi_5,esxi_5.1</labels>
#<benchmark_refs>LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>NTP_SERVER</name>
#    <default>0\.us\.pool\.ntp\.org</default>
#    <description>NTP server address</description>
#    <info>The name or IP address of the NTP server for your organization.</info>
#  </variable>
#  <variable>
#    <name>LOG_HOST</name>
#    <default>192\.168\.0\.1</default>
#    <description>Remote syslog IP</description>
#    <info>The IP address of the centralized syslog server for your organization.</info>
#  </variable>
#  <variable>
#    <name>DCUI_ACCESS</name>
#    <default>root</default>
#    <description>DCUI Access Users</description>
#    <info>List of trusted users that can override lockdown mode</info>
#  </variable>
#  <variable>
#    <name>AGENT_ADDRESS</name>
#    <default>192\.168\.0\.1</default>
#    <description>VMSafe agent addr</description>
#    <info>The VMsafe CPU/memory API allows a security virtual machine to inspect and modify the contents of the memory and CPU registers on other VMs, for the purpose of detecting and preventing malware attacks.</info>
#  </variable>
#  <variable>
#    <name>AGENT_PORT</name>
#    <default>10000</default>
#    <description>Agent Port Num</description>
#    <info>The VMsafe CPU/memory API allows a security virtual machine to inspect and modify the contents of the memory and CPU registers on other VMs, for the purpose of detecting and preventing malware attacks.</info>
#  </variable>
#  <variable>
#    <name>LOG_DIR</name>
#    <default>\\[\\] \/scratch\/log1</default>
#    <description>System log dir</description>
#    <info>The path to the system log directory.</info>
#  </variable>
#  <variable>
#    <name>SHELL_SESSION_TIMEOUT</name>
#    <default>(300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])</default>
#    <description>SSH session timeout</description>
#    <info>The number of minutes before an idle SSH session will be disconnected.</info>
#  </variable>
#  <variable>
#    <name>CPU_SHARE_LEVEL</name>
#    <default>normal</default>
#    <description>The CPU Share Level</description>
#    <info>Use limits, shares, and reservations to prevent virtual machines from taking over resources</info>
#  </variable>
#  <variable>
#    <name>NUM_MEM_SHARES</name>
#    <default>20480</default>
#    <description>Num Memory Shares</description>
#    <info>Use limits, shares, and reservations to prevent virtual machines from taking over resources</info>
#  </variable>
#  <variable>
#    <name>MEM_SHARE_LEVEL</name>
#    <default>normal</default>
#    <description>Mem Share Level</description>
#    <info>Use limits, shares, and reservations to prevent virtual machines from taking over resources</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"VMware">

<report type:"WARNING">
  description : "1.1 Keep ESXi system properly patched"
  info        : "VMware Update Manager is a tool used to automate patch management for vSphere hosts
and Virtual machines. Creating a baseline for patches is a good way to ensure all hosts are
at the same patch level.

*Rationale*

By staying up to date on ESXi patches, vulnerabilities in the hypervisor can be mitigated. An
educated attacker can exploit known vulnerabilities when attempting to attain access or
elevate privileges on an ESXi host.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.update_manager.doc/GUID-EF6BEE4C-4583-4A8C-81B9-5B074CA2E272.html\n"
  solution    : "Leverage the VMware Update Manager to test and apply patches as they become available.

Impact-VMs must be powered off in order to update the host ESXi server."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-18,LEVEL|1S"
</report>

<report type:"WARNING">
  description : "1.2 Verify Image Profile and VIB Acceptance Levels"
  info        : "The ESXi Image Profiles supports four VIB acceptance levels. A VIB (vSphere Installation
Bundle) is a collection of files that are packaged into an archive. The VIB contains a
signature file that is used to verify the level of trust.

*Rationale*

Verify the ESXi Image Profile to only allow signed VIBs. An unsigned VIB represents
untested code installed on an ESXi host.The ESXi Image profile supports four acceptance levels-1. VMwareCertified - VIBs created, tested and signed by VMware
2. VMwareAccepted - VIBs created by a VMware partner but tested and signed by
VMware
3. PartnerSupported - VIBs created, tested and signed by a certified VMware partner
4. CommunitySupported - VIBs that have not been tested by VMware or a VMware
partner.Community Supported VIBs are not supported and do not have a digital signature. To
protect the security and integrity of your ESXi hosts do not allow unsigned
(CommunitySupported) VIBs to be installed on your hosts.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.install.doc/GUID-56600593-EC2E-4125-B1A0-065BDD16CF2D.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Set the Software AcceptanceLevel for each host
Foreach ($VMHost in Get-VMHost ) {$ESXCli = Get-EsxCli -VMHost $VMHost $ESXCli.software.acceptance.Set('PartnerSupported')}

Default Value-The default level is PartnerSupported"
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-17,LEVEL|1S"
</report>

<report type:"WARNING">
  description : "1.3 Verify no unauthorized kernel modules are loaded on the host"
  info        : "ESXi hosts by default do not permit the loading of kernel modules that lack valid digital
signatures. This feature can be overridden which would result in unauthorized kernel
modules to be loaded.

*Rationale*


VMware provides digital signatures for kernel modules. By default the ESXi host does not
permit loading of kernel modules that lack a valid digital signature. However, this behavior
can be overridden allowing unauthorized kernel modules to be loaded. Untested or
malicious kernel modules loaded on the ESXi host can put the host at risk for instability
and/or exploitation.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-E9B71B85-FBA3-447C-8A60-DEE2AE1A405A.html\n"
  info        : "http://kb.vmware.com/kb/2042473\n"
  info        : "http://kb.vmware.com/kb/2042473\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# To disable a module-
$ESXCli = Get-EsxCli -VMHost MyHost
$ESXCli.system.module.set($false, $false, 'MyModuleName')
Note- evacuate VMs and place the host into maintenance mode before disabling kernel
modules."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-17,LEVEL|1S"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "1.4 Ensure that the Forged Transmits policy is set to reject"
  info        : "Ensure that the Forged Transmits policy is set to reject.

*Rationale*

If the virtual machine operating system changes the MAC address, the operating system can
send frames with an impersonated source MAC address at any time. This allows an
operating system to stage malicious attacks on the devices in a network by impersonating a
network adaptor authorized by the receiving network. Forged transmissions should be set
to accept by default. This means the dvPortgroup does not compare the source and
effective MAC addresses. To protect against MAC address impersonation, all virtual
switches should have forged transmissions set to reject."
  solution    : "1. Configure by using the vSphere Web Client to connect to the vCenter Server and as administrator-
2. Go to Home > Networking.
3. Select each VDS and edit each dvPortgroup connected to active VM's requiring securing.
4. Edit Settings for each PortGroup under Security.
5. Set the Forged transmits value to 'Reject'

Impact-This will prevent VMs from changing their effective MAC address. This will affect
applications that require this functionality. An example of an application like this is
Microsoft Clustering, which requires systems to effectively share a MAC address. This will
also affect how a layer 2 bridge will operate. This will also affect applications that require a
specific MAC address for licensing. An exception should be made for the dvPortgroups that
these applications are connected to."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,ITSG-33|SC-7(12),LEVEL|1S,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> (<xsl:value-of select=\"audit:name\"/>) - forgedTransmits = <xsl:value-of select=\"audit:spec/audit:policy/audit:security/audit:forgedTransmits\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/><xsl:text> - forgedTransmits = NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "forgedTransmits ="
  expect      : "forgedTransmits = FALSE$"
</custom_item>

<report type:"WARNING">
  description : "1.5 Ensure that VDS Netflow traffic is only being sent to authorized collector IP Addresses"
  info        : "Ensure that VDS Netflow traffic is only being sent to authorized collector IP Addresses.

*Rationale*

The vSphere vDS can export Netflow information about traffic crossing the vDS. Netflow
exports are not encrypted and can contain information about the virtual network making it
easier for a MITM attack to be executed successfully. If Netflow export is required, verify
that all vDS Netflow target IP Addresses are correct.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.networking.doc/GUID-E19FECAD-8629-4E8A-B61C-1F1C16770B3B.html\n"
  solution    : "1. From the Web or vSphere Clients.
2. Configure the Netflow destinations to be correct.
3. Edit the VDS properties.
4. In the Netflow tab, set the Collector Settings > IP Address and Port."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1NS"
</report>

<report type:"WARNING">
  description : "1.6 Restrict port-level configuration overrides on vDS"
  info        : "Restrict port-level configuration overrides on vDS.

*Rationale*

Port-level configuration over-rides are disabled by default. Once enabled, this allows for
different security settings to be set from what is established at the Port-Group level. There
are cases where particular VM's require unique configurations, but this should be
monitored so it is only used when authorized. If over-rides are not monitored, anyone who
gains access to a VM with a less secure VDS configuration could exploit that broader access.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.networking.doc/GUID-EA78AD26-F099-4136-9EA6-AD60626D3EF7.html\n"
  solution    : "1. From the Web or vSphere Clients.
2. Verify that Port Mirror destination interfaces are correct.
3. Edit the VDS properties and in the Port Mirror tab.
4. Configure the Destination VLAN, Port or Uplink ID's.

Default Value-Port-level configuration over-rides are disabled by default. This is the prescribed state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "2.1 Configure NTP time synchronization"
  info        : "NTP(Network Time Protocol) synchronization should be configured and enabled on each
VMware ESXi host. Verify that the NTP time server is correct for each host to ensure
accurate time for system event logs.

*Rationale*

By ensuring that all systems use the same relative time source (including the relevant
localization offset), and that the relative time source can be correlated to an agreed-upon
time standard, you can make it simpler to track and correlate an intruder's actions when
reviewing the relevant log files. Incorrect time settings can make it difficult to inspect and
correlate log files to detect attacks, and can make auditing inaccurate."
  info        : "NOTE: Update NTP_SERVER to the appropriate value for the local environment."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vcli.examples.doc/cli_manage_networks.11.9.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Set the NTP Settings for all hosts
# If an internal NTP server is used replace pool.ntp.org with
# the IP address of the internal NTP server
$NTPServers = 'pool.ntp.org', 'pool2.ntp.org' Get-VMHost | Add-VmHostNtpServer $NTPServers

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-17,800-171|3.3.7,800-53|AU-8(1),CSCv6|6.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.4,ITSG-33|AU-8(1),LEVEL|1S,NESA|T3.6.7,NIAv2|NS44,NIAv2|NS45,NIAv2|NS46,NIAv2|NS47,PCI-DSSv3.1|10.4,PCI-DSSv3.2|10.4"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:dateTimeInfo/audit:ntpConfig/audit:server\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - NTP Server : <xsl:value-of select=\"audit:propSet/audit:val/audit:dateTimeInfo/audit:ntpConfig/audit:server\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>NTP Server : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "NTP Server : "
# Note: Variable @NTP_SERVER@ replaced with "0\\.us\\.pool\\.ntp\\.org" in field "expect".
  expect      : "NTP Server : 0\\.us\\.pool\\.ntp\\.org$"
</custom_item>

<report type:"WARNING">
  description : "2.2 Configure the ESXi host firewall to restrict access to services running on the host"
  info        : "The ESXi Firewall is enabled by default and allows ping (ICMP) and communication with
DHCP/DNS clients. Confirm that access to services are only allowed by authorized
IP's/networks to protect from outside attacks.

*Rationale*

Unrestricted access to services running on an ESXi host can expose a host to outside attacks
and unauthorized access. Reduce the risk by configuring the ESXi firewall to only allow
access from authorized networks.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-DD4322FF-3DC4-4716-8819-6688938F99D7.html\n"
  solution    : "To implement the recommended configuration state, run the following ESXi shell
command-# /etc/init.d/[SERVICE] STOP

Impact-Only systems in the IP whitelist/ACL will be able to connect to services on the ESXi server.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-19,LEVEL|1S"
</report>

<report type:"WARNING">
  description : "2.3 Disable Managed Object Browser (MOB)"
  info        : "The Managed Object Browser (MOB) is a web-based server application that lets you
examine objects that exist on the server side. This is installed and started automatically
when vCenter is installed.

*Rationale*


The managed object browser (MOB) provides a way to explore the object model used by
the VMkernel to manage the host; it enables configurations to be changed as well. This
interface is meant to be used primarily for debugging the vSphere SDK. Because there are
no access controls the MOB could also be used as a method to obtain information about a
host being targeted for unauthorized access.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-0EF83EA7-277C-400B-B697-04BDC9173EA3.html\n"
  solution    : "To implement the recommended configuration state, run the following ESXi shell
command-vim-cmd proxysvc/remove_service '/mob' 'httpsWithRedirect'Note- You cannot disable the MOB while a host is in lockdown mode.

Impact-The MOB will no longer be available for diagnostics. Some 3rd party tools use this interface
to gather information. Testing should be done after disabling the MOB to verify 3rd party
applications are still functioning as expected.To re-enable the MOB temporarily- ~ # vim-cmd proxysvc/add_np_service '/mob' httpsWithRedirect /var/run/vmware/proxy-mob

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-17,LEVEL|1S"
</report>

<report type:"WARNING">
  description : "2.4 Do not use default self-signed certificates for ESXi communication"
  info        : "The default certificates are not signed by a commercial certificate authority (CA). These
default x.509 certificates should be replaced with those issued by a trusted CA.

*Rationale*

Using the default self-signed certificates may increase risk related to Man-in-The-Middle
(MiTM) attacks. Replace default self-signed certificates with those from a trusted CA, either
commercial or organizational.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-A261E6D8-03E4-48ED-ADB6-473C2DAAB7AD.html\n"
  info        : "http://kb.vmware.com/kb/2015499\n"
  info        : "http://kb.vmware.com/kb/2034833\n"
  solution    : "Leverage VMware's SSL Certificate Automation Tool to install CA-signed SSL certificates. Fore more information on this tool, please see http-//kb.vmware.com/kb/2041600.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<if>
  <condition type:"AND">
    <custom_item>
      type        : AUDIT_VCENTER
      description : "2.6 Ensure proper SNMP configuration"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,'snmp.receiver') and contains (audit:key,'.enabled') and contains (audit:value,'true')]\">"
      xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,'snmp.receiver') and contains (audit:key,'.enabled') and contains (audit:value,'true')]\">"
      xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val/audit:OptionValue[audit:key='VirtualCenter.InstanceName']/audit:value\"/> - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "snmp\.receiver\.([Xx]|[0-9]+)\.enabled : "
      expect      : "snmp\.receiver\.([Xx]|[0-9]+)\.enabled : TRUE$"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type        : AUDIT_VCENTER
      description : "2.6 Ensure proper SNMP configuration- 'community name public does not exist'"
      info        : "Verify that SNMP (Simple Network Management Protocol) is configured and that all the
settings are correct. If SNMP is not being used, it should be disabled.Note- ESXi 5.1 supports SNMPv3 which provides stronger security than SNMPv1 or
SNMPv2, including key authentication and encryption.

*Rationale*

If SNMP is not being used, it should remain disabled. If it is being used, the proper trap
destination should be configured. If SNMP is not properly configured, monitoring
information can be sent to a malicious host."
      info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.monitoring.doc/GUID-8EF36D7D-59B6-4C74-B1AA-4A9D18AB6250.html\n"
      solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Update the host SNMP Configuration (single host connection required)
Get-VmHostSNMP | Set-VMHostSNMP -Enabled-$true -ReadOnlyCommunity '<secret>'

Notes-. SNMP must be configured on each ESXi host. SNMP settings can be configured using Host Profiles"
      see_also    : "https://workbench.cisecurity.org/files/902"
      reference   : "800-171|3.5.2,800-53|IA-5,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,LEVEL|1S,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,'snmp.receiver') and contains (audit:key,'.community') and contains (audit:value,'public')]\">"
      xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,'snmp.receiver') and contains (audit:key,'.community') and contains (audit:value,'public')]\">"
      xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val/audit:OptionValue[audit:key='VirtualCenter.InstanceName']/audit:value\"/> - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "snmp\.receiver\.[0-9]+\.community : "
      not_expect  : "snmp\.receiver\.[0-9]+\.community : [Pp][Uu][Bb][Ll][Ii][Cc]"
    </custom_item>

    <custom_item>
      type        : AUDIT_VCENTER
      description : "2.6 Ensure proper SNMP configuration- 'community name private does not exist'"
      info        : "Verify that SNMP (Simple Network Management Protocol) is configured and that all the
settings are correct. If SNMP is not being used, it should be disabled.

Note- ESXi 5.1 supports SNMPv3 which provides stronger security than SNMPv1 or SNMPv2, including key authentication and encryption.

*Rationale*

If SNMP is not being used, it should remain disabled. If it is being used, the proper trap destination should be configured. If SNMP is not properly configured, monitoring information can be sent to a malicious host."
      info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.monitoring.doc/GUID-8EF36D7D-59B6-4C74-B1AA-4A9D18AB6250.html\n"
      solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Update the host SNMP Configuration (single host connection required)
Get-VmHostSNMP | Set-VMHostSNMP -Enabled-$true -ReadOnlyCommunity '<secret>'
Notes-. SNMP must be configured on each ESXi host. SNMP settings can be configured using Host Profiles"
      see_also    : "https://workbench.cisecurity.org/files/902"
      reference   : "800-171|3.5.2,800-53|IA-5,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,LEVEL|1S,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,'snmp.receiver') and contains (audit:key,'.community') and contains (audit:value,'public')]\">"
      xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,'snmp.receiver') and contains (audit:key,'.community') and contains (audit:value,'public')]\">"
      xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val/audit:OptionValue[audit:key='VirtualCenter.InstanceName']/audit:value\"/> - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "snmp\.receiver\.[0-9]+\.community : "
      not_expect  : "snmp\.receiver\.[0-9]+\.community : [Pp][Rr][Ii][Vv][Aa][Tt][Ee]"
    </custom_item>
  </then>
</if>

<custom_item>
  type        : AUDIT_ESX
  description : "2.7 Prevent unintended use of dvfilter network APIs"
  info        : "Confirm that dvfilter API is not configured if not is use. If you are using virtual security appliances that leverage this API then configuration may be necessary.

*Rationale*

If you are not using products that make use of the dvfilter network API (e.g. VMSafe), the
host should not be configured to send network information to a VM. If the API is enabled,
an attacker might attempt to connect a VM to it, thereby potentially providing access to the
network of other VMs on the host. If you are using a product that makes use of this API then
verify that the host has been configured correctly."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.ext_solutions.doc/GUID-6013E15D-92CE-4970-953C-ACCB36ADA8AD.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Set Net.DVFilterBindIpAddress to null on all hosts
Get-VMHost HOST1 | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name Net.DVFilterBindIpAddress -Value '' }

Impact-This will prevent a dvfilter-based network security appliance such as a firewall from
functioning if not configured correctly.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Net.DVFilterBindIpAddress']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Net.DVFilterBindIpAddress']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Net.DVFilterBindIpAddress']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Net.DVFilterBindIpAddress : NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Net\.DVFilterBindIpAddress : "
  expect      : "Net\.DVFilterBindIpAddress : NOT configured"
</custom_item>

<report type:"WARNING">
  description : "2.8 When adding ESXi hosts to Active Directory use the vSphere Authentication Proxy to protect passwords"
  info        : "If you are using Host Profiles to join ESXi hosts to Active Directory then vSphere
Authentication Proxy should be used to keep credentials from being sent over the
network.


*Rationale*

If you configure your host to join an Active Directory domain using Host Profiles the active
directory credentials are saved in the host profile and are transmitted over the network. To
avoid having to save active directory credentials in the Host Profile and to avoid
transmitting active directory credentials over the network use the vSphere Authentication
Proxy.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-084B74BD-40A5-4A4B-A82C-0C9912D580DC.html\n"
  solution    : "To implement the recommended configuration state, perform the following-1. From the vSphere web client, navigate to 'Host Profiles'
2. Select the host profile.
3. Select 'Manage' -> 'Edit Host profile'.
4. Expand 'Security and Services' -> 'Security Settings' -> 'Authentication
Configuration'.
5. Select 'Active Directory configuration'.
6. Set the 'Join Domain Method' to 'Use vSphere Authentication Proxy to add the host
do domain'.
7. Provide the IP address of the authentication proxy.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-13,800-125A|HY-SR-15,LEVEL|1S"
</report>

<report type:"WARNING">
  description : "3.1 Configure a centralized location to collect ESXi host core dumps"
  info        : "The VMware vSphere Network Dump Collector service allows for collecting diagnostic
information from a host that experiences a critical fault.

*Rationale*

When a host crashes, an analysis of the resultant core dump is essential to being able to
identify the cause of the crash to identify a resolution. Installing a centralized dump
collector helps ensure that core files are successfully saved and made available in the event
an ESXi host should ever panic.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://kb.vmware.com/kb/1032051 http://kb.vmware.com/kb/2003042\n"
  solution    : "To implement the recommended configuration state, run the following ESXi shell
command-# Configure remote Dump Collector Server
esxcli system coredump network set -v [VMK#] -i [DUMP_SERVER] -o [PORT]
# Enable remote Dump Collector
esxcli system coredump network set -e true

Impact-No impact on functionality.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<report type:"WARNING">
  description : "3.2 Configure Host Profiles to monitor and alert on configuration changes"
  info        : "The Host Profiles feature monitors host configurations against an established profile and
provides notification when unauthorized configurations take place.

*Rationale*

Monitoring for configuration drift and unauthorized changes is critical to ensuring the
security of an ESXi hosts. Host Profiles provide an automated method for monitoring host
configurations against an established template and for providing notification in the event
deviations are detected.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.hostprofiles.doc/GUID-78BB234A-D735-4356-9CCF-19DD55DB8060.html\n"
  solution    : "Perform the following-1. Configure a reference ESXi host with the desired configuration and use the host to
create a Host Profile.
2. Attach the host profile to other hosts with identical hardware configurations.
3. Monitor hosts compliance to the host profile from the vSphere Client."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "3.3 Configure persistent logging for all ESXi host"
  info        : "System logs are required for auditing and diagnostic purposes. If you do not store system
logs permanently, for example on a datastore, they disappear after a reboot. Ensuring
persistent logging is set can prevent the loss of logs on reboot.

*Rationale*

ESXi can be configured to store log files on an in-memory file system. This occurs when the
host's /scratch directory is linked to /tmp/scratch. When this is done only a single day's
worth of logs are stored at any time, in addition log files will be reinitialized upon each
reboot. This presents a security risk as user activity logged on the host is only stored
temporarily and will not be preserved across reboots. This can also complicate auditing
and make it harder to monitor events and diagnose issues. ESXi host logging should always
be configured to a persistent datastore."
  info        : "NOTE: Update LOG_DIR to the appropriate value for the local environment"
  info        : "\nhttp://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.install.doc/GUID-9F67DB52-F469-451F-B6C8-DAE8D95976E7.html\n"
  info        : "http://kb.vmware.com/kb/1033696\n"
  solution    : "Perform the following-1. Logon to the ESXi shell.
2. Run 'ls -al /' to verify/scratch is not linked to/tmp/scratch.
3. If/scratch is linked to/tmp/scratch change it to a persistent datastore.
4. Identify the datastore path where you want to place scratch.
5. Login to the vSphere web client.
6. Navigating to the host.
7. Select 'Manage' -> 'Advanced System Settings'.
8. Enter Syslog.global.LogDir in the filter.
9. Set the Syslog.global.LogDir to the desired datastore path.Alternatively, run the following PowerCLI command-# Set Syslog.global.logDir for each host
Get-VMHost | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name Syslog.global.logDir -Value '<NewLocation>' }

Note- the Syslog.global.LogDir must be set for each host. The host syslog parameters can also be configured using the vCLI or PowerCLI, or using an API client.

Impact-Additional disk space will be required to store log files.

Default Value-When booting from a local disk- YESWhen booting from USB/SD- NOWhen using Auto Deploy Stateless Installs- NO"
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-20,800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Syslog.global.logDir']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Syslog.global.logDir']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Syslog.global.logDir']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Syslog.global.logDir : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Syslog\.global\.logDir : "
# Note: Variable @LOG_DIR@ replaced with "\\\\[\\\\] \\/scratch\\/log1" in field "expect".
  expect      : "Syslog\.global\.logDir : \\\\[\\\\] \\/scratch\\/log1$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "3.4 Configure remote logging for ESXi hosts"
  info        : "By default ESXI logs are stored on a local scratch volume or ramdisk. To preserve logs
further configure centralized logging for the ESXI hosts.

*Rationale*

Remote logging to a central log host provides a secure, centralized store for ESXi logs. By
gathering host log files onto a central host you can more easily monitor all hosts with a
single tool. You can also do aggregate analysis and searching to look for such things as
coordinated attacks on multiple hosts. Logging to a secure, centralized log server also helps
prevent log tampering and also provides a long-term audit record."
  info        : "NOTE: Update LOG_HOST to the appropriate value for the local environment."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.install.doc/GUID-471EFE67-9035-473E-8217-6B67E493A518.html\n"
  solution    : "Perform the following-1. Install/Enable a syslog host (i.e vSphere Syslog Collector).
2. From the vSphere web client select the host and click 'Manage' -> 'Advanced Sytem
Settings'
3. Enter Syslog.global.logHost in the filter.
4. Set the Syslog.global.logHost to the hostname of your syslog server.To implement the recommended configuration state, run the following PowerCLI
command-# Set Syslog.global.logHost for each host
Get-VMHost | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name
Syslog.global.logHost -Value '<NewLocation>' }
Note- When setting a remote log host it is also recommended to set the
'Syslog.global.logDirUnique' to true. You must configure the syslog settings for each host.
The host syslog parameters can also be configured using the vCLI or PowerCLI, or using an
API client.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-20,800-171|3.3.8,800-53|AU-9(2),CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSF|PR.PT-1,ITSG-33|AU-9(2),LEVEL|1S,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,PCI-DSSv3.1|10.5.3,PCI-DSSv3.1|10.5.4,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Syslog.global.logHost']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Syslog.global.logHost']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Syslog.global.logHost']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Syslog.global.logHost : NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Syslog\.global\.logHost : "
# Note: Variable @LOG_HOST@ replaced with "192\\.168\\.0\\.1" in field "expect".
  expect      : "Syslog\.global\.logHost : 192\\.168\\.0\\.1$"
</custom_item>

<report type:"WARNING">
  description : "4.1 Create a non-root user account for local admin access"
  info        : "Create at least one named user account and use this account in lieu of a shared 'root'
account.

*Rationale*

By default each ESXi host has a single 'root' admin account that is used for local
administration and to connect the host to vCenter Server. To avoid sharing a common root
account it is recommended on each host to create at least one named user account and
assign it full admin privileges and to use this account in lieu of a shared 'root' account. Set
a highly complex password for the 'root' account and secure it in a safe location. Limit the
use of 'root' but do not remove the 'root' account.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-670B9B8C-3810-4790-AC83-57142A9FE16F.html\n"
  solution    : "Local ESXi user accounts cannot be created using the vSphere web client, you must use the
vSphere client.1. Connect directly to the ESXi host using the vSphere Client.
2. Login as root.
3. Select the 'Local Users & Groups' tab
4. Add a local user, be sure to grant shell access to this user.
5. Select the 'Permissions' tab.
6. Assign the 'Administrator' role to the user.
7. Repeat this for each ESXi hosts.Notes-1. Even if you add your ESXi host to an Active Directory domain it is still recommended
to add at least one local user account to ensure admins can still login in the event the
host ever becomes isolated and unable to access Active Directory.
2. Adding local user accounts can be automated using Host Profiles.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-13,800-125A|HY-SR-14,LEVEL|1S"
</report>

<custom_item>
  type        : AUDIT_VCENTER
  description : "4.2 Ensure the vpxuser account's password is automatically changed every 10 or fewer days"
  info        : "When a host is added to the vCenter Server inventory, vCenter Server creates a special user
account called vpxuser on the host. vpxuser is a privileged account that acts as a proxy for
all actions initiated through vCenter Server. Ensure that vpxuser's password is set to
change every 10 or fewer days.

*Rationale*

Ensuring that the password expires frequently limits the amount of time an attacker can
use the vpxuser password if it is compromised."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-96210743-0C17-4AE9-89FC-76778EC9D06E.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Set the vCenter Password Expiration Value to 10
Get-AdvancedSetting -Entity $defaultVIServer -Name 'VirtualCenter.VimPasswordExpirationInDays' | Set-AdvancedSetting -Value 10

Impact-The password aging policy must not be shorter than the interval that is set to automatically
change the vpxuser password, otherwise vCenter might get locked out of an ESXi host.

Default Value-Password automatically changes every 30 days."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.5.10,800-171|3.5.7,800-171|3.5.8,800-171|3.5.9,800-53|IA-5,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,LEVEL|1S,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:val[@xsi:type='ArrayOfOptionValue']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:OptionValue[audit:key[text()='config.VirtualCenter.VimPasswordExpirationInDays']]/audit:value\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:OptionValue[audit:key='VirtualCenter.InstanceName']/audit:value\"/> - config.VirtualCenter.VimPasswordExpirationInDays : <xsl:value-of select=\"audit:OptionValue[audit:key[text()='config.VirtualCenter.VimPasswordExpirationInDays']]/audit:value\"/>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:OptionValue[audit:key='VirtualCenter.InstanceName']/audit:value\"/> - <xsl:text>config.VirtualCenter.VimPasswordExpirationInDays : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "config\.VirtualCenter\.VimPasswordExpirationInDays : "
  expect      : "config\.VirtualCenter\.VimPasswordExpirationInDays : (10|[1-9])$"
</custom_item>

<report type:"WARNING">
  description : "4.3 Establish a password policy for password complexity"
  info        : "Require the use of passwords that are not easily guessed and that are difficult for password
generators to determine.

*Rationale*


ESXi uses the pam_passwdqc.so plug-in to set password strength and complexity. It is
important to use passwords that are not easily guessed and that are difficult for password
generators to determine.Note- ESXi imposes no restrictions on the root password. Password strength and
complexity rules only apply to non-root users.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-F48903DA-8A66-47C7-9796-CD12339B2164.html\n"
  info        : "http://www.openwall.com/passwdqc/README.shtml\n"
  solution    : "Perform the following-1. Login to the ESXi shell as a user with administrator privileges.
2. Open /etc./pam.d/passwd
3. Locate the following line-password requisite /lib/security/$ISA/pam_passwdqc.so retry=N
min=N0,N1,N2,N3,N44. Set N is less than or equal to 5
5. Set N0 to disabled
6. Set N1 to disabled
7. Set N2 to disabled
8. Set N3 to disabled
9. Set N4 to 14 or greaterThis above requires all passwords to be 14 or more characters long and comprised of at
least one character from four distinct character sets. Additionally, a maximum of 5 login
attempts are permitted.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "4.4 Use Active Directory for local user authentication - Review Domain"
  info        : "ESXi can be configured to use a directory service such as Active Directory to manage users
and groups. It is recommended that a directory service be used.

*Rationale*

Joining ESXi hosts to an Active Directory (AD) domain will eliminate the need to create and
maintain multiple local user accounts. Using AD for user authentication simplifies the ESXi
host configuration, ensures password complexity and reuse policies are enforced and
reduces the risk of security breaches and unauthorized access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-A61A8FA4-A4AF-475C-860E-3FD8947F0D0B.html\n"
  info        : "http://kb.vmware.com/kb/1025569\n"
  solution    : "From the vSphere Web Client-
1. Select the host and go to 'Manage' -> 'Authentication Services' and click the 'Join
Domain' button.
2. Provide the domain name along with the user credentials for an AD user that has the
rights to join computers to the domain.To implement the recommended configuration state, run the following PowerCLI
command-# Join the ESXI Host to the Domain
Get-VMHost HOST1 | Get-VMHostAuthentication | Set-VMHostAuthentication -Domain domain.local -User Administrator -Password Passw0rd -JoinDomainNotes-1. Host Profiles can be used to automate adding hosts to an AD domain.
2. Consider using the vSphere Authentication proxy to avoid transmitting AD
credentials over the network.
3. If the AD group 'ESX Admins' (default) is created all users and groups that are
assigned as members to this group will have full administrative access to all ESXi
hosts the domain."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-13,800-125A|HY-SR-14,800-125A|HY-SR-15,800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CSF|PR.AC-1,ITSG-33|IA-2,LEVEL|1S"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:text>\nDomain : </xsl:text><xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:authenticationManagerInfo/audit:authConfig[@xsi:type='HostActiveDirectoryInfo']/audit:joinedDomain\"/>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "4.4 Use Active Directory for local user authentication - Enabled = 'true'"
  info        : "ESXi can be configured to use a directory service such as Active Directory to manage users
and groups. It is recommended that a directory service be used.

*Rationale*

Joining ESXi hosts to an Active Directory (AD) domain will eliminate the need to create and
maintain multiple local user accounts. Using AD for user authentication simplifies the ESXi
host configuration, ensures password complexity and reuse policies are enforced and
reduces the risk of security breaches and unauthorized access."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-A61A8FA4-A4AF-475C-860E-3FD8947F0D0B.html\n"
  info        : "http://kb.vmware.com/kb/1025569\n"
  solution    : "From the vSphere Web Client-
1. Select the host and go to 'Manage' -> 'Authentication Services' and click the 'Join Domain' button.
2. Provide the domain name along with the user credentials for an AD user that has the
rights to join computers to the domain.To implement the recommended configuration state, run the following PowerCLI
command-# Join the ESXI Host to the Domain
Get-VMHost HOST1 | Get-VMHostAuthentication | Set-VMHostAuthentication -Domain
domain.local -User Administrator -Password Passw0rd -JoinDomainNotes-1. Host Profiles can be used to automate adding hosts to an AD domain.
2. Consider using the vSphere Authentication proxy to avoid transmitting AD
credentials over the network.
3. If the AD group 'ESX Admins' (default) is created all users and groups that are
assigned as members to this group will have full administrative access to all ESXi
hosts the domain."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-13,800-125A|HY-SR-14,800-125A|HY-SR-15,800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,LEVEL|1S,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,TBA-FIISB|35.1,TBA-FIISB|36.1"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:text>\nEnabled : </xsl:text><xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:authenticationManagerInfo/audit:authConfig[@xsi:type='HostActiveDirectoryInfo']/audit:enabled\"/>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Enabled"
  expect      : "Enabled : true"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "4.5 Verify Active Directory group membership for the 'ESX Admins' group"
  info        : "The AD group used by vSphere is defined by the esxAdminsGroup attribute. By default, this
attribute is set to 'ESX Admins'. All members of the 'ESX Admins' group are granted full
administrative access to all ESXi hosts in the domain. Monitor AD for the creation of this
group and limit membership to highly trusted users and groups.

*Rationale*

An unauthorized user having membership in the group set by the esxAdminsGroup
attribute will have full administrative access to all ESXi hosts. Given this, such users may
compromise the confidentiality, availability, and integrity of the all ESXi hosts and the
respective data and processes they influence."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.wssdk.apiref.doc/vim.host.AuthenticationManager.html\n"
  solution    : "1. Verify the setting of the esxAdminsGroup attribute ('ESX Admins' by default).
2. Check the list of members for that Microsoft Active Directory group.
3. Remove any unauthorized users from that group.

Impact-Coordination between vSphere admins and Active Directory admins is needed.

Default Value-The AD group used by vSphere is defined by the esxAdminsGroup attribute. By default, this attribute is set to 'ESX Admins'"
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-13,800-125A|HY-SR-14,800-125A|HY-SR-15,800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6,LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Config.HostAgent.plugins.hostsvc.esxAdminsGroup']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Config.HostAgent.plugins.hostsvc.esxAdminsGroup']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Config.HostAgent.plugins.hostsvc.esxAdminsGroup']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Config.HostAgent.plugins.hostsvc.esxAdminsGroup : NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Config\.HostAgent\.plugins\.hostsvc\.esxAdminsGroup : "
  not_expect  : "ESX Admins$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "5.2 Disable ESXi Shell unless needed for diagnostics or troubleshooting"
  info        : "The ESXi shell should only be enabled when running diagnostics or troubleshooting.
Otherwise it should be disabled on each host.

*Rationale*


ESXi Shell is an interactive command line environment available from the Direct Console
User Interface (DCUI) or remotely via SSH. Access to this mode requires the root password
of the server. The ESXi Shell can be turned on and off for individual hosts. Activities
performed from the ESXi Shell bypass vCenter RBAC and audit controls. The ESXi shell
should only be turned on when needed to troubleshoot/resolve problems that cannot be
fixed through the vSphere client or vCLI/PowerCLI."
  info        : "http://kb.vmware.com/kb/2004746\n"
  solution    : "Perform the following-1. From the vSphere web client select the host.
2. Select 'Manage' -> 'Security Profile'.
3. Scroll down to 'Services'.
4. Click 'Edit...'.
5. Select 'ESXi Shell'.
6. Click 'Stop'.
7. Change the Startup Policy 'Start and Stop Manually'Additionally, the following PowerCLI command will implement the recommended
configuration state-# Set ESXi Shell to start manually rather than automatic for all hosts
Get-VMHost | Get-VMHostService | Where { $_.key -eq 'TSM' } | Set-VMHostService - Policy Off

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-16,800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:service/audit:service[audit:key='TSM']\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:service/audit:service[audit:key='TSM']/audit:label\"/> : running = <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:service/audit:service[audit:key='TSM']/audit:running\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>ESXi Shell : running = NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "ESXi Shell : running ="
  expect      : "ESXi Shell : running = FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "5.3 Disable SSH"
  info        : "Disable Secure Shell (SSH) for each ESXi host to prevent remote access to the ESXi shell.
only enable if needed for troubleshooting or diagnostics.

*Rationale*

The ESXi shell, when enabled, can be accessed directly from the host console through the
DCUI or remotely using SSH. Remote access to the host should be limited to the vSphere
Client, remote command-line tools (vCLI/PowerCLI), and through the published APIs.
Under normal circumstances remote access to the host using SSH should be disabled."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-12E27BF3-3769-4665-8769-DA76C2BC9FFE.html\n"
  solution    : "Perform the following-1. From the vSphere web client select the host.
2. Select 'Manage' -> 'Security Profile'.
3. Scroll down to 'Services'.
4. Click 'Edit...'.
5. Select 'SSH'.
6. Click 'Stop'.
7. Change the Startup Policy 'to Start and Stop Manually'.Additionally, the following PowerCLI command will implement the recommended
configuration state-# Set SSH to start manually rather than automatic for all hosts
Get-VMHost | Get-VMHostService | Where { $_.key -eq 'TSM-SSH' } | Set-VMHostService - Policy Off

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-16,800-125A|HY-SR-17,800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:service/audit:service[audit:key='TSM-SSH']\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:service/audit:service[audit:key='TSM-SSH']/audit:label\"/> : running = <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:service/audit:service[audit:key='TSM-SSH']/audit:running\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>SSH : running = NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "SSH : running = "
  expect      : "SSH : running = FALSE$"
</custom_item>

<report type:"WARNING">
  description : "5.4 Enable lockdown mode to restrict remote access"
  info        : "Lockdown mode disables local access to the ESXi host. All management must be done from
vCenter to ensure proper permissions and roles are being applied when using lockdown
mode.

*Rationale*

Enabling lockdown mode disables direct access to an ESXi host requiring the host be
managed remotely from vCenter Server. Lockdown limits ESXi host access to the vCenter
server. This is done to ensure the roles and access controls implemented in vCenter are
always enforced and users cannot bypass them by logging into a host directly. By forcing all
interaction to occur through vCenter Server, the risk of someone inadvertently attaining
elevated privileges or performing tasks that are not properly audited is greatly reduced.
Note- Lockdown mode does not apply to users who log in using authorized keys. When you
use an authorized key file for root user authentication, root users are not prevented from
accessing a host with SSH even when the host is in lockdown mode. Note that users listed in
the DCUI.Access list for each host are allowed to override lockdown mode and login to the
DCUI. By default the 'root' user is the only user listed in the DCUI.Access list.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-88B24613-E8F9-40D2-B838-225F5FF480FF.html\n"
  info        : "http://kb.vmware.com/kb/1008077\n"
  solution    : "From the vSphere web client-1. Select the host
2. Select 'Manage' -> 'Security Profile'.
3. Scroll down to 'Lockdown Mode'.
4. Click 'Edit...'.
5. Select the 'Enable Lockdown Mode' checkbox.To implement the recommended configuration state, run the following PowerCLI
command-# Enable lockdown mode for each host
Get-VMHost | Foreach { $_.EnterLockdownMode() }

Impact-There are some operations, such as backup and troubleshooting, that require direct access
to the host. In these cases Lockdown Mode can be disabled on a temporary basis for
specific hosts as needed, and then re-enabled when the task is completed.
Note- Lockdown mode does not apply to users listed in the DCUI.Access list, which by
default includes the root user.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-16,LEVEL|1S"
</report>

<report type:"WARNING">
  description : "5.5 Remove keys from SSH authorized_keys file"
  info        : "For day-to-day operations the ESXi host should be in Lockdown mode with the Secure Shell
(SSH) service disabled. Lockdown mode does not prevent root users from logging in using
authorized keys. When you use an authorized key file for root user authentication, root
users are not prevented from accessing a host with SSH even when the host is in lockdown
mode.

*Rationale*

ESXi hosts come with SSH which can be enabled to allow remote access without requiring
user authentication. To enable password free access copy the remote users public key into
the /etc/ssh/keys-root/authorized_keys file on the ESXi host. The presence of the
remote user's public key in the authorized_keys file identifies the user as trusted, meaning
the user is granted access to the host without providing a password.Note- Lockdown mode does not apply to root users who log in using authorized keys.
When you use an authorized key file for root user authentication, root users are not
prevented from accessing a host with SSH even when the host is in lockdown mode.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-392ADDE9-FD3B-49A2-BF64-4ACBB60EB149.html\n"
  solution    : "To check for SSH keys added to the authorized_keys file-1. Logon to the ESXi shell as root or an authorized admin user.
2. Verify the contents of the /etc/ssh/keys-root/authorized_keys file.
3. If the file is not empty remove any keys found in the file.

Impact-Disabling the SSH authorized_keys access may limit your ability to run unattended remote
scripts.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-16,LEVEL|1S"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "5.6 Set a timeout to automatically terminate idle ESXi Shell and SSH sessions"
  info        : "Set a timeout to automatically terminate any idle ESXi shell and SSH sessions.

*Rationale*

If a user forgets to logout of their SSH session the idle connection will remain indefinitely
increasing the potential for someone to gain privileged access to the host. The
ESXiShellInteractiveTimeOut allows you to automatically terminate idle shell sessions."
  info        : "NOTE: Update SHELL_SESSION_TIMEOUT to the appropriate value for the local environment."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-A1D310D7-F00B-4827-9469-EC2C318A0C30.html"
  info        : "http://kb.vmware.com/kb/2004746\n"
  solution    : "From the vSphere web client-1. Select the host.
2. Click 'Manage' -> 'Advanced System Settings'.
3. Type ESXiShellInteractiveTimeOut in the filter.
4. Set the attribute to the desired value.Note- A value of 0 disables the ESXi ShellInteractiveTimeOut.Additionally, the following PowerCLI command will implement the recommended
configuration state-# Set Remove UserVars.ESXiShellInteractiveTimeOut to 300 on all hosts
Get-VMHost | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name UserVars.ESXiShellInteractiveTimeOut -Value 300 }

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-16,800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1S,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='UserVars.ESXiShellInteractiveTimeOut']\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='UserVars.ESXiShellInteractiveTimeOut']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='UserVars.ESXiShellInteractiveTimeOut']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>UserVars.ESXiShellInteractiveTimeOut : NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "UserVars\.ESXiShellInteractiveTimeOut : "
# Note: Variable @SHELL_SESSION_TIMEOUT@ replaced with "(300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])" in field "expect".
  expect      : "UserVars\.ESXiShellInteractiveTimeOut : (300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "5.8 Set DCUI.Access to allow trusted users to override lockdown mode"
  info        : "Create a list of highly trusted users that would be able to override lockdown mode and
access the DCUI in the event a host became isolated.

*Rationale*

Lockdown disables direct host access requiring admins manage hosts from vCenter.
However, if a host becomes isolated from vCenter the admin would become locked out and
would be unable to manage the host. To avoid potentially becoming locked out of an ESXi
hosts that is running in locked down mode set the DCUI.Access to a list of highly trusted
users that are allowed to override the lockdown mode and access the DCUI."
  info        : "NOTE: Update DCUI_ACCESS to the appropriate value for the local environment."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-D92BB375-9F94-449E-838E-51086C43CF80.html\n"
  solution    : "To implement the recommended configuration state, run the following ESXi shell
command-vim-cmd hostsvc/advopt/update DCUI.Access string [USERS]

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-16,800-125A|HY-SR-17,800-171|3.1.15,800-171|3.1.2,800-53|AC-17(4),CSCv6|5.1,CSF|PR.AC-3,CSF|PR.PT-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-17(4),LEVEL|1NS,SWIFT-CSCv1|5.1"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='DCUI\.Access']\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='DCUI\.Access']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='DCUI\.Access']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>DCUI\.Access : NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "DCUI\.Access : "
# Note: Variable @DCUI_ACCESS@ replaced with "root" in field "expect".
  expect      : "DCUI\.Access : root$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "6.1 Enable bidirectional CHAP authentication for iSCSI traffic"
  info        : "By enabling bidirectional CHAP authentication, an additional level of security enables the
initiator to authenticate the target.

*Rationale*

vSphere allows for the use of bidirectional authentication of both the iSCSI target and host.
Choosing not to enforce more stringent authentication can make sense if you create a
dedicated network or VLAN to service all your iSCSI devices. By not authenticating both the
iSCSI target and host, there is a potential for a MiTM attack in which an attacker might
impersonate either side of the connection to steal data. Bidirectional authentication can
mitigate this risk. If the iSCSI facility is isolated from general network traffic, it is less
vulnerable to exploitation."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.storage.doc/GUID-AC65D747-728F-4109-96DD-49B433E2F266.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Set the Chap settings for the Iscsi Adapter
Get-VMHost | Get-VMHostHba | Where {$_.Type -eq 'Iscsi'} | Set-VMHostHba # Use desired parameters here


Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-53|IA-3(1),CSF|PR.AC-1,ITSG-33|IA-3(1),LEVEL|1S,NESA|T5.4.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:storageDevice/audit:hostBusAdapter[contains (@xsi:type,'HostInternetScsi')]\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:storageDevice/audit:hostBusAdapter[contains (@xsi:type,'HostInternetScsi')]\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> (<xsl:value-of select=\"audit:device\"/>) - chapAuthEnabled : <xsl:value-of select=\"audit:authenticationProperties/audit:chapAuthEnabled\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"//audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>chapAuthEnabled : No iSCSI devices found</xsl:text><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "chapAuthEnabled : "
  not_expect  : "chapAuthEnabled : FALSE$"
</custom_item>

<report type:"WARNING">
  description : "6.2 Ensure uniqueness of CHAP authentication secrets"
  info        : "CHAP (Challenge-Handshake Authentication Protocol) requires both Client and Host to
know the secret (Password) to establish connection. When setting up CHAP ensure each
host connects with a unique secret.

*Rationale*

The mutual authentication secret for each host should be different; if possible, the secret
should be different for each client authenticating to the server as well. This ensures that if a
single host is compromised, an attacker cannot create another arbitrary host and
authenticate to the storage device. With a single shared secret, compromise of one host can
allow an attacker to authenticate to the storage device.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.storage.doc/GUID-AC65D747-728F-4109-96DD-49B433E2F266.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Set the Chap settings for the Iscsi Adapter
Get-VMHost | Get-VMHostHba | Where {$_.Type -eq 'Iscsi'} | Set-VMHostHba # Use desired parameters here

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<report type:"WARNING">
  description : "7.1.1 Disable VDS network healthcheck if not used"
  info        : "Disable VDS network healthcheck if not used.

*Rationale*

Network Healthcheck is disabled by default. Once enabled, the healthcheck packets contain
information on host#, vds# port#, which an attacker would find useful. It is recommended
that network healthcheck be used for troubleshooting, and turned off when
troubleshooting is finished.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. Using the vSphere Web Client.
2. Select each VDS.
3. Go to Manage > Settings > Health check'.
4. Disable the VLAN and MTU Check and Teaming and Failover Check settings.

Impact-Limit the use of this feature only to when actively troubleshooting VLAN or MTU issues on a VDS.

Default Value-The default value is the prescribed value."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "7.1.2 Ensure that the MAC Address Change policy is set to reject"
  info        : "Ensure that the MAC Address Change policy is set to reject.

*Rationale*

If the virtual machine operating system changes the MAC address, it can send frames with
an impersonated source MAC address at any time. This allows it to stage malicious attacks
on the devices in a network by impersonating a network adaptor authorized by the
receiving network. This will prevent VMs from changing their effective MAC address. It will
affect applications that require this functionality. An example of an application like this is
Microsoft Clustering, which requires systems to effectively share a MAC address. This will
also affect how a layer 2 bridge will operate. This will also affect applications that require a
specific MAC address for licensing. An exception should be made for the dvPortgroups that
these applications are connected to."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.wssdk.apiref.doc/vim.host.NetworkPolicy.SecurityPolicy.html\n"
  solution    : "1. Configure by using the vSphere Client to connect to the vCenter Server and logging in as an administrator.
2. Go to 'Home > Inventory > Networking'.
3. Select each dvPortgroup connected to active VMs requiring securing.
4. Go to tab 'Summary > Edit Settings > Policies > Security'.
5. Set 'Mac Address Changes' = 'Reject'

Impact-This will prevent VMs from changing their effective MAC address. It will affect applications
that require this functionality. An example of an application like this is Microsoft Clustering,
which requires systems to effectively share a MAC address. This will also affect how a layer
2 bridge will operate. This will also affect applications that require a specific MAC address
for licensing. An exception should be made for the dvPortgroups that these applications are
connected to."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,ITSG-33|SC-7(12),LEVEL|1S,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> (<xsl:value-of select=\"audit:spec/audit:name\"/>) - macChanges = <xsl:value-of select=\"audit:computedPolicy/audit:security/audit:macChanges\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/><xsl:text> - macChanges = NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "macChanges ="
  expect      : "macChanges = FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "7.1.3 Ensure that the Promiscuous Mode policy is set to reject"
  info        : "Configure the vDS Promiscuous Mode setting to reject.

*Rationale*

When promiscuous mode is enabled for a dvPortgroup, all virtual machines connected to
the dvPortgroup have the potential of reading all packets across that network, meaning
only the virtual machines connected to that dvPortgroup. Promiscuous mode is disabled by
default on the ESXi host, and this is the recommended setting. However, there might be a
legitimate reason to enable it for debugging, monitoring or troubleshooting reasons.
Security devices might require the ability to see all packets on a vSwitch. An exception
should be made for the dvPortgroups that these applications are connected to, in order to
allow for full-time visibility to the traffic on that dvPortgroup."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.wssdk.apiref.doc/vim.host.NetworkPolicy.SecurityPolicy.html\n"
  solution    : "1. Verify by using the vSphere Client to connect to the vCenter Server and logging in as
an administrator.
2. Go to 'Home > Inventory > Networking'.
3. Select each dvPortgroup connected to active VMs requiring securing.
4. Go to tab 'Summary > Edit Settings > Policies > Security'.
5. Configure 'Promiscuous Mode' = 'Reject'

Impact-Security devices that require the ability to see all packets on a vSwitch will not operate
properly if the Promiscuous Mode parameter is set to Reject.

Default Value-Promiscuous mode is disabled by default. This is the prescribed setting."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,ITSG-33|SC-7(12),LEVEL|1S,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> (<xsl:value-of select=\"audit:spec/audit:name\"/>) - allowPromiscuous = <xsl:value-of select=\"audit:computedPolicy/audit:security/audit:allowPromiscuous\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/><xsl:text> - allowPromiscuous = NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "allowPromiscuous ="
  expect      : "allowPromiscuous = FALSE$"
</custom_item>

<report type:"WARNING">
  description : "7.1.4 Ensure that there are no unused ports on a distributed virtual port group"
  info        : "Ensure that there are no unused ports on a distributed virtual port group.

*Rationale*

The number of ports available on a vdSwitch distributed port group can be adjusted to
exactly match the number of virtual machine vNICs that need to be assigned to that
dvPortgroup. Limiting the number of ports to just what is needed limits the potential for an
administrator, either accidentally or maliciously, to move a virtual machine to an
unauthorized network. This is especially relevant if the management network is on a
dvPortgroup, because it could help prevent someone from putting a rogue virtual machine
on this network.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.wssdk.apiref.doc/vim.dvs.DistributedVirtualPortgroup.html\n"
  solution    : "1. Connect to the vCenter Server with vSphere Client ( Home > Inventory >
Networking view, find all dvSwitches) or the Web Client (Networking > vDS name >
dvPortgroup name > Manage > Edit Settings > General)
2. Configure the number of ports available to be only the amount required for
legitimate virtual machine connections to that dvPortgroup.

Impact-The VDS or dvPortgroup on the VDS will not have any extra available port capacity."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<report type:"WARNING">
  description : "7.1.5 Ensure that VDS Port Mirror traffic is only being sent to authorized collector ports or VLANs"
  info        : "Ensure that VDS Port Mirror traffic is only being sent to authorized collectors.

*Rationale*

The vSphere VDS can mirror traffic from one port to another in order to allow for packet
capture devices to collect specific traffic flows. Port mirroring will send a copy of all traffic
specified in un-encrypted format. This mirrored traffic contains the full data in the packets
captured and can result in total compromise of that data if misdirected. If Port Mirroring is
required, verify that all Port Mirror Destination VLAN, Port and Uplink ID's are correct.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.networking.doc/GUID-CFFD9157-FC17-440D-BDB4-E16FD447A1BA.html\n"
  solution    : "1. From the Web or vSphere Clients.
2. Configure the Port Mirror destination interfaces to be correct.
3. Edit the VDS properties.
4. In the Port Mirror tab, configure the Destination VLAN, Port, and Uplink ID's."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1NS"
</report>

<report type:"WARNING">
  description : "7.1.6 Verify that the autoexpand option for VDS dvPortgroups is disabled"
  info        : "Disable the autoexpand option for vDS dvPortgroups.

*Rationale*

If the 'no-unused-dvports' guideline is followed, there should be only the exact number of
ports on a vDS that are actually needed. The Autoexpand feature on vDS dvPortgroups can
override that limit. The feature allows dvPortgroups to automatically add 10 virtual
distributed switch ports to a dvPortgroup that has run out of available ports. The risk is
that maliciously or inadvertently, a virtual machine that is not supposed to be part of that
portgroup is able to affect confidentiality, integrity or authenticity of data of other virtual
machines on that portgroup. To reduce the risk of inappropriate dvPortgroup access, the
autoexpand option on VDS should be disabled. By default the option is disabled, but regular
monitoring should be implemented to verify this has not been changed.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://kb.vmware.com/kb/1022312\n"
  solution    : "1. Connect to the vCenter Server using the Web Client.
2. Open the settings for Networking > (vDS name) > (dvPortgroup name) > Manage >
Edit Settings > General
3. Configure 'Port allocation' to 'Fixed'.
4. Configure the 'Number of Ports' to the exact amount required for legitimate virtual
machine connections to that dvPortgroup.

Default Value-The default state is the prescribed state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<report type:"WARNING">
  description : "7.2.1 Ensure that port groups are not configured to the value of the native VLAN"
  info        : "Do not use Native VLAN ID 1.

*Rationale*

ESXi does not use the concept of native VLAN. Frames with VLAN specified in the port
group will have a tag, but frames with VLAN not specified in the port group are not tagged
and therefore will end up as belonging to native VLAN of the physical switch. For example,
frames on VLAN 1 from a Cisco physical switch will be untagged, because this is considered
as the native VLAN. However, frames from ESXi specified as VLAN 1 will be tagged with a 1;
therefore, traffic from ESXi that is destined for the native VLAN will not be correctly routed
(because it is tagged with a 1 instead of being untagged), and traffic from the physical
switch coming from the native VLAN will not be visible (because it is not tagged). If the
ESXi virtual switch port group uses the native VLAN ID, traffic from those VMs will not be
visible to the native VLAN on the switch, because the switch is expecting untagged traffic.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "If the default value of 1 for the native VLAN is being used, the ESXi Server virtual switch
port groups should be configured with any value between 2 and 4094. Otherwise, ensure
that the port group is not configured to use whatever value is set for the native VLAN."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1S"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "7.2.2 Ensure that port groups are not configured to VLAN 4095 except for Virtual Guest Tagging (VGT)"
  info        : "Don't use VLAN 4095 except for Virtual Guest Tagging (VGT).

*Rationale*

When a port group is set to VLAN 4095, this activates VGT mode. In this mode, the vSwitch
passes all network frames to the guest VM without modifying the VLAN tags, leaving it up
to the guest to deal with them. VLAN 4095 should be used only if the guest has been
specifically configured to manage VLAN tags itself. If VGT is enabled inappropriately, it
might cause denial of service or allow a guest VM to interact with traffic on an
unauthorized VLAN."
  solution    : "VLAN ID setting on all port groups should not be set to 4095 unless VGT is required."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> (<xsl:value-of select=\"audit:spec/audit:name\"/>) - vlanId = <xsl:value-of select=\"audit:spec/audit:vlanId\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/><xsl:text> - vlanId = NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "vlanId ="
  not_expect  : "vlanId = 4095$"
</custom_item>

<report type:"WARNING">
  description : "7.2.3 Ensure that port groups are not configured to VLAN values reserved by upstream physical switches"
  info        : "Ensure that port groups are not configured to VLAN values reserved by upstream physical
switches


*Rationale*

Certain physical switches reserve certain VLAN IDs for internal purposes and often
disallow traffic configured to these values. For example, Cisco Catalyst switches typically
reserve VLANs 1001 through 1024 and 4094, while Nexus switches typically reserve 3968
through 4047 and 4094. Check with the documentation for your specific switch. Using a
reserved VLAN might result in a denial of service on the network.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst4500/12-2/20ew/configuration/guide/config/vlans.html\n"
  info        : "http://www.cisco.com/c/en/us/td/docs/switches/datacenter/nexus5500/sw/layer2/7x/b_5500_Layer2_Config_7x/b_5500_Layer2_Config_7x_chapter_010.html\n"
  solution    : "VLAN ID setting on all port groups should not be set to reserved values of the physical
switch.Additionally, the following PowerCLI command may be used-# List all vSwitches, their Portgroups and VLAN Ids
Get-VirtualPortGroup -Standard | Select virtualSwitch, Name, VlanID"
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1NS"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "7.3.1 Ensure that the vSwitch Forged Transmits policy is set to reject"
  info        : "Set the vSwitch Forged Transmits policy is set to reject for each vSwitch.

*Rationale*

If the virtual machine operating system changes the MAC address, the operating system can
send frames with an impersonated source MAC address at any time. This allows an
operating system to stage malicious attacks on the devices in a network by impersonating a
network adaptor authorized by the receiving network. Forged transmissions should be set
to accept by default. This means the virtual switch does not compare the source and
effective MAC addresses. To protect against MAC address impersonation, all virtual
switches should have forged transmissions set to reject."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.networking.doc/GUID-74E2059A-CC5E-4B06-81B5-3881C80E46CE.html\n"
  solution    : "Verify by using the vSphere Client to connect to the vCenter Server and as administrator-1. Go to 'Home > Inventory > Hosts and clusters'.
2. Select each ESXi host with active virtual switches connected to active VM's requiring
securing.
3. Go to tab 'Configuration > Network > vSwitch(?) > Properties > Ports > vSwitch >
Default Policies > Security'
4. Set 'Forged Transmits' to 'Reject'. Additionally, the following ESXi shell command may be used-# esxcli network vswitch standard policy security set -v vSwitch2 -f false

Impact-This will prevent VMs from changing their effective MAC address. This will affect
applications that require this functionality. An example of an application like this is
Microsoft Clustering, which requires systems to effectively share a MAC address. This will
also affect how a layer 2 bridge will operate. This will also affect applications that require a
specific MAC address for licensing. An exception should be made for the port groups that
these applications are connected to."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,ITSG-33|SC-7(12),LEVEL|1S,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> (<xsl:value-of select=\"audit:name\"/>) - forgedTransmits = <xsl:value-of select=\"audit:spec/audit:policy/audit:security/audit:forgedTransmits\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/><xsl:text> - forgedTransmits = NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "forgedTransmits ="
  expect      : "forgedTransmits = FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "7.3.2 Ensure that the vSwitch MAC Address Change policy is set to reject"
  info        : "Ensure that the MAC Address Change policy within the vSwitch is set to reject.

*Rationale*

If the virtual machine operating system changes the MAC address, it can send frames with
an impersonated source MAC address at any time. This allows it to stage malicious attacks
on the devices in a network by impersonating a network adaptor authorized by the
receiving network. This will prevent VMs from changing their effective MAC address. It will
affect applications that require this functionality. An example of an application like this is
Microsoft Clustering, which requires systems to effectively share a MAC address. This will
also affect how a layer 2 bridge will operate. This will also affect applications that require a
specific MAC address for licensing. An exception should be made for the port groups that
these applications are connected to."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.networking.doc/GUID-74E2059A-CC5E-4B06-81B5-3881C80E46CE.html\n"
  solution    : "Using the vSphere Client, connect to the vCenter Server and as administrator-1. Go to 'Home > Inventory > Hosts and clusters'.
2. Select each ESXi host with active virtual switches connected to active VM's requiring
securing.
3. Go to tab 'Configuration > Network > vSwitch(?) > Properties > Ports > vSwitch >
Default Policies > Security'
4. Set 'Mac Address Changes' to 'Reject'.Additionally, perform the following to implement the recommended configuration state
using the ESXi shell-# esxcli network vswitch standard policy security set -v vSwitch2 -m false

Impact-This will prevent VMs from changing their effective MAC address. It will affect applications
that require this functionality. An example of an application like this is Microsoft Clustering,
which requires systems to effectively share a MAC address. This will also affect how a layer
2 bridge will operate. This will also affect applications that require a specific MAC address
for licensing. An exception should be made for the port groups that these applications are
connected to."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,ITSG-33|SC-7(12),LEVEL|1S,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> (<xsl:value-of select=\"audit:name\"/>) - macChanges = <xsl:value-of select=\"audit:spec/audit:policy/audit:security/audit:macChanges\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/><xsl:text> - macChanges = NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "macChanges ="
  expect      : "macChanges = FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "7.3.3 Ensure that the vSwitch Promiscuous Mode policy is set to reject"
  info        : "Ensure that the Promiscuous Mode Policy within the vSwitch is set to reject.

*Rationale*

When promiscuous mode is enabled for a virtual switch all virtual machines connected to
the dvPortgroup have the potential of reading all packets crossing that network.
Promiscuous mode is disabled by default on the ESXi Server, and this is the recommended
setting. However, there might be a legitimate reason to enable it for debugging, monitoring
or troubleshooting reasons. Security devices might require the ability to see all packets on
a vSwitch. An exception should be made for the dvPortgroups that these applications are
connected to, in order to allow for full-time visibility to the traffic on that dvPortgroup."
  info        : "http://kb.vmware.com/kb/1004099\n"
  solution    : "Using the vSphere Client, connect to the vCenter Server and as administrator-1. Go to 'Home > Inventory > Hosts and clusters'.
2. Select each ESXi host with active virtual switches connected to active VM's requiring
securing.
3. Go to tab 'Configuration > Network > vSwitch name > Properties > Ports > vSwitch >
Default Policies > Security'
4. Set 'Promiscuous Mode' = 'Reject'Additionally, perform the following to implement the recommended configuration state via
the ESXi shell-# esxcli network vswitch standard policy security set -v vSwitch2 -p false

Impact-Security devices that require the ability to see all packets on a vSwitch will not operate
properly if the Promiscuous Mode parameter is set to Reject.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,ITSG-33|SC-7(12),LEVEL|1S,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='HostConfigInfo']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> (<xsl:value-of select=\"audit:name\"/>) - allowPromiscuous = <xsl:value-of select=\"audit:spec/audit:policy/audit:security/audit:allowPromiscuous\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/><xsl:text> - allowPromiscuous = NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "allowPromiscuous ="
  expect      : "allowPromiscuous = FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.1.1 Disable VM communication through VMCI"
  info        : "Configure the Virtual Machine Communication Interface (VMCI) to restrict VM
communication.

*Rationale*

If the interface is not restricted, a VM can detect and be detected by all other VMs with the
same option enabled within the same host. This might be the intended behavior, but
custom-built software can have unexpected vulnerabilities that might potentially lead to an
exploit. Additionally, it is possible for a VM to detect how many other VMs are within the
same ESXI system by simply registering the VM. This information might also be used for a
potentially malicious objective. By default, the setting is FALSE. The VM can be exposed to
other VMs within the same system as long as there is at least one program connected to the
VMCI socket interface.Guest-to-guest communications (virtual machine to virtual machine) are deprecated in the
vSphere 5.1 release. This functionality will be removed in the next major release. VMware
will continue support for host to guest communications."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.ICbase/PDF/ws8x_esx51_vmci_sockets.pdf"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-
# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'vmci0.unrestricted' -value $false

Impact-Virtual machines will be unable to communicate using VMCI technology.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.13.2,800-171|3.13.5,800-53|SC-7(21),CSF|PR.AC-5,CSF|PR.DS-5,LEVEL|1S,NESA|T4.5.3,NIAv2|VL6"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualMachineVMCIDevice']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - vmci0.unrestricted : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualMachineVMCIDevice']/audit:allowUnrestrictedCommunication\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - vmci0.unrestricted : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualMachineVMCIDevice']/audit:allowUnrestrictedCommunication\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - vmci0.unrestricted : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - vmci0.unrestricted : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "vmci0\.unrestricted : "
  expect      : "vmci0\.unrestricted : FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.1.2 Limit informational messages from the VM to the VMX file"
  info        : "Limit informational messages from the virtual machine to the VMX file to avoid filling the
datastore and causing a Denial of Service (DoS).

*Rationale*

The configuration file containing these name-value pairs is limited to a size of 1MB. This
1MB capacity should be sufficient for most cases, but you can change this value if
necessary. You might increase this value if large amounts of custom information are being
stored in the configuration file. The default limit is 1MB; this limit is applied even when the
sizeLimit parameter is not listed in the .vmx file. Uncontrolled size for the VMX file can
lead to denial of service if the datastore is filled."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vmtools.install.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'tools.setInfo.sizeLimit' -value 1048576

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-53|AU-4,CSF|PR.DS-4,CSF|PR.PT-1,ITSG-33|AU-4,LEVEL|1S,NESA|T3.3.1,NESA|T3.6.2,SWIFT-CSCv1|6.4"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.setInfo.sizeLimit']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - tools.setInfo.sizeLimit : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.setInfo.sizeLimit']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - tools.setInfo.sizeLimit : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.setInfo.sizeLimit']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - tools.setInfo.sizeLimit : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - tools.setInfo.sizeLimit : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "tools\.setInfo\.sizeLimit : "
  expect      : "tools\.setInfo\.sizeLimit : 1048576$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.1.3 Limit sharing of console connections"
  info        : "Limit the max number of console connections to prevent non-administrators from
observing the VMs screen.

*Rationale*

By default, remote console sessions can be connected to by more than one user at a time.
When multiple sessions are activated, each terminal window gets a notification about the
new session. If an administrator in the VM logs in using a VMware remote console during
their session, a non-administrator in the VM might connect to the console and observe the
administrator's actions. Also, this could result in an administrator losing console access to a
virtual machine. For example if a jump box is being used for an open console session, and
the admin loses connection to that box, then the console session remains open. Allowing
two console sessions permits debugging via a shared session. For highest security, only one
remote console session at a time should be allowed."
  info        : "http://kb.vmware.com/kb/2015407\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'RemoteDisplay.maxConnections' -value 1

Impact-Only one remote console connection to the VM will be permitted. Other attempts will be
rejected until the first session disconnects.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='RemoteDisplay.maxConnections']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - RemoteDisplay.maxConnections : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='RemoteDisplay.maxConnections']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - RemoteDisplay.maxConnections : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='RemoteDisplay.maxConnections']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - RemoteDisplay.maxConnections : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - RemoteDisplay.maxConnections : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "RemoteDisplay\.maxConnections : "
  expect      : "RemoteDisplay\.maxConnections : 1$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.2.1 Disconnect unauthorized devices - Floppy Devices"
  info        : "Any enabled or connected device represents a potential attack channel. Users and
processes without privileges on a virtual machine can connect or disconnect hardware
devices, such as network adapters and CD-ROM drives. Attackers can use this capability to
breach virtual machine security. Removing unnecessary hardware devices can help prevent
attacks.

*Rationale*

Besides disabling unnecessary virtual devices from within the virtual machine, you should
ensure that no device is connected to a virtual machine if it is not required to be there. For
example, serial and parallel ports are rarely used for virtual machines in a datacenter
environment, and CD/DVD drives are usually connected only temporarily during software
installation. For less commonly used devices that are not required, either the parameter
should not be present or its value must be FALSE.NOTE- The parameters listed are not sufficient to ensure that a device is usable; other
parameters are required to indicate specifically how each device is instantiated. Any
enabled or connected device represents another potential attack channel.

http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-822B2ED3-D8D2-4F57-8335-CA46E915A729.html

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-
# Remove all Floppy drives attached to VMs
Get-VM | Get-FloppyDrive | Remove-FloppyDrive

Impact-Virtual machine will need to be powered off to reverse change if any of these devices are
needed at a later time.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.8.7,800-53|MP-7,CSF|PR.PT-2,LEVEL|1S"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualFloppy']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual Floppies : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualFloppy']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual Floppies : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualFloppy']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual Floppies : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual Floppies : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.2.2 Disconnect unauthorized devices - CD/DVD Devices"
  info        : "Any enabled or connected device represents a potential attack channel. Users and
processes without privileges on a virtual machine can connect or disconnect hardware
devices, such as network adapters and CD-ROM drives. Attackers can use this capability to
breach virtual machine security. Removing unnecessary hardware devices can help prevent
attacks.

*Rationale*

Besides disabling unnecessary virtual devices from within the virtual machine, you should
ensure that no device is connected to a virtual machine if it is not required to be there. For
example, serial and parallel ports are rarely used for virtual machines in a datacenter
environment, and CD/DVD drives are usually connected only temporarily during software
installation. For less commonly used devices that are not required, either the parameter
should not be present or its value must be FALSE.NOTE- The parameters listed are not sufficient to ensure that a device is usable; other
parameters are required to indicate specifically how each device is instantiated. Any
enabled or connected device represents another potential attack channel.

http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-822B2ED3-D8D2-4F57-8335-CA46E915A729.html

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Remove all CD/DVD Drives attached to VMs
Get-VM | Get-CDDrive | Remove-CDDrive

Impact-Virtual machine will need to be powered off to reverse change if any of these devices are
needed at a later time.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.8.7,800-53|MP-7,CSF|PR.PT-2,LEVEL|1S"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualCdrom']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual CD/DVD : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualCdrom']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual CD/DVD : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualCdrom']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual CD/DVD : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual CD/DVD : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.2.3 Disconnect unauthorized devices - Parallel Devices"
  info        : "Any enabled or connected device represents a potential attack channel. Users and
processes without privileges on a virtual machine can connect or disconnect hardware
devices, such as network adapters and CD-ROM drives. Attackers can use this capability to
breach virtual machine security. Removing unnecessary hardware devices can help prevent
attacks.


*Rationale*

Besides disabling unnecessary virtual devices from within the virtual machine, you should
ensure that no device is connected to a virtual machine if it is not required to be there. For
example, serial and parallel ports are rarely used for virtual machines in a datacenter
environment, and CD/DVD drives are usually connected only temporarily during software
installation. For less commonly used devices that are not required, either the parameter
should not be present or its value must be FALSE.

NOTE- The parameters listed are not sufficient to ensure that a device is usable; other
parameters are required to indicate specifically how each device is instantiated. Any
enabled or connected device represents another potential attack channel.

http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-822B2ED3-D8D2-4F57-8335-CA46E915A729.html

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# In this Example you will need to add the functions from this post-
http-//blogs.vmware.com/vipowershell/2012/05/working-with-vm-devices-in-powercli.html
# Remove all Parallel Ports attached to VMs
Get-VM | Get-ParallelPort | Remove-ParallelPort

Impact-Virtual machine will need to be powered off to reverse change if any of these devices are
needed at a later time.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualParallelPort']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual Parallel Port : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualParallelPort']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual Parallel Port : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualParallelPort']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual Parallel Port : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual Parallel Port : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.2.4 Disconnect unauthorized devices - Serial Devices"
  info        : "Any enabled or connected device represents a potential attack channel. Users and
processes without privileges on a virtual machine can connect or disconnect hardware
devices, such as network adapters and CD-ROM drives. Attackers can use this capability to
breach virtual machine security. Removing unnecessary hardware devices can help prevent
attacks.

*Rationale*

Besides disabling unnecessary virtual devices from within the virtual machine, you should
ensure that no device is connected to a virtual machine if it is not required to be there. For
example, serial and parallel ports are rarely used for virtual machines in a datacenter
environment, and CD/DVD drives are usually connected only temporarily during software
installation. For less commonly used devices that are not required, either the parameter
should not be present or its value must be FALSE.

NOTE- The parameters listed are not sufficient to ensure that a device is usable; other
parameters are required to indicate specifically how each device is instantiated. Any
enabled or connected device represents another potential attack channel.

http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-822B2ED3-D8D2-4F57-8335-CA46E915A729.html

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "
To implement the recommended configuration state, run the following PowerCLI
command-# In this Example you will need to add the functions from this post-
http-//blogs.vmware.com/vipowershell/2012/05/working-with-vm-devices-in-powercli.html
# Remove all Serial Ports attached to VMs
Get-VM | Get-SerialPort | Remove-SerialPort

Impact-Virtual machine will need to be powered off to reverse change if any of these devices are
needed at a later time.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualSerialPort']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual Serial Port : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualSerialPort']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual Serial Port : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualSerialPort']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual Serial Port : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual Serial Port : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.2.5 Disconnect unauthorized devices - USB Devices"
  info        : "Any enabled or connected device represents a potential attack channel. Users and
processes without privileges on a virtual machine can connect or disconnect hardware
devices, such as network adapters and CD-ROM drives. Attackers can use this capability to
breach virtual machine security. Removing unnecessary hardware devices can help prevent
attacks.

*Rationale*

Besides disabling unnecessary virtual devices from within the virtual machine, you should
ensure that no device is connected to a virtual machine if it is not required to be there. For
example, serial and parallel ports are rarely used for virtual machines in a datacenter
environment, and CD/DVD drives are usually connected only temporarily during software
installation. For less commonly used devices that are not required, either the parameter
should not be present or its value must be FALSE.
NOTE- The parameters listed are not sufficient to ensure that a device is usable; other
parameters are required to indicate specifically how each device is instantiated. Any
enabled or connected device represents another potential attack channel.

http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-822B2ED3-D8D2-4F57-8335-CA46E915A729.html

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Remove all USB Devices attached to VMs
Get-VM | Get-USBDevice | Remove-USBDevice

Impact-Virtual machine will need to be powered off to reverse change if any of these devices are
needed at a later time.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.8.7,800-53|MP-7,CSF|PR.PT-2,LEVEL|1S"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualUSBController']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual USB Controller : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualUSBController']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual USB Controller : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualUSBController']/audit:deviceInfo/audit:label\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual USB Controller : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual USB Controller : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.2.6 Prevent unauthorized removal, connection, and modification of devices"
  info        : "
Prevent unauthorized removal, connection, and modification of devices.

*Rationale*

Normal users and processes - that is, users and processes without root or administrator
privileges within virtual machines have the capability to connect or disconnect devices,
such as network adaptors and CD-ROM drives, as well as the ability to modify device
settings. In general, you should use the virtual machine settings editor or configuration
editor to remove any unneeded or unused hardware devices. However, you might want to
use the device again, so removing it is not always a good solution. In that case, you can
prevent a user or running process in the virtual machine from connecting or disconnecting
a device from within the guest operating system, as well as modifying devices, by adding
the following parameters.By default, a rogue user with non-administrator privileges in a virtual machine can-. Connect a disconnected CD-ROM drive and access sensitive information on the
media left in the drive. Disconnect a network adapter to isolate the virtual machine from its network, which is a denial of service. Modify settings on a device."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-C5898E50-2182-4B71-BADC-C9BFA409FB6C.html\n"
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vmtools.install.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'isolation.device.edit.disable' -value $true

Impact-Device interaction is blocked inside the guest OS using VMware tools.

Default Value-
The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.1.7,800-53|AC-6(10),CSF|PR.AC-4,LEVEL|1S"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.device.edit.disable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.device.edit.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.device.edit.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.device.edit.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.device.edit.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.device.edit.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.device.edit.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.device\.edit\.disable : "
  expect      : "isolation\.device\.edit\.disable : TRUE$"
</custom_item>

<report type:"WARNING">
  description : "8.3.1 Disable unnecessary or superfluous functions inside VMs"
  info        : "Reduce the number of potential attack vectors by disabling unnecessary system
components that are not needed to support the application or service running on the
virtual machine.

*Rationale*

By disabling unnecessary system components that are not needed to support the
application or service running on the system, you reduce the number of parts that can be
attacked. VMs often don't require as many services or functions as ordinary physical
servers; so when virtualizing, you should evaluate whether a particular service or function
is truly needed. Any service running in a VM provides a potential avenue of attack.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-6BFA8CA7-610F-4E6B-9FC6-D656917B7E7A.html\n"
  solution    : "Some of these steps include-1. Disable unused services in the operating system. For example, if the system runs a
file server, make sure to turn off any Web services.
2. Disconnect unused physical devices, such as CD/DVD drives, floppy drives, and USB
adaptors. This is described in the Removing Unnecessary Hardware Devices section
in the ESXI Configuration Guide.
3. Turn off any screen savers. If using a Linux, BSD, or Solaris guest operating system,
do not run the X Window system unless it is necessary."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-17,LEVEL|1NS"
</report>

<report type:"WARNING">
  description : "8.3.2 Minimize use of the VM console"
  info        : "Grant access to the Virtual Machine console only when needed. Use custom roles to provide
fine grained permissions.

*Rationale*

The VM console enables you to connect to the console of a virtual machine, in effect seeing
what a monitor on a physical server would show. The VM console also provides power
management and removable device connectivity controls, which might potentially allow a
malicious user to bring down a virtual machine. In addition, it also has a performance
impact on the service console, especially if many VM console sessions are open
simultaneously.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://www.vmware.com/support/developer/PowerCLI/PowerCLI51/html/Invoke-VMScript.html\n"
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-3D47149A-947D-4608-88B3-E5811129EFA8.html\n"
  solution    : "By default the vCenter roles 'Virtual Machine Power User' and 'Virtual Machine
Administrator' have the 'Virtual Machine.Interaction.Console Interaction' privilege. Do not
allow unauthorized individuals to have these roles on a virtual machine or folder of virtual
machines.1. From the vSphere Client, navigate to Administration\Roles section of vCenter.
2. Create a custom role and choose edit to enable only the minimum needed effective
privileges.
3. Next, select an object in the inventory.
4. Click the Permissions tab to view the user and role pair assignments for that object.
5. Remove any default 'Admin' or 'Power User' roles and assign the new custom role
as needed."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1NS"
</report>

<report type:"WARNING">
  description : "8.3.3 Use secure protocols for virtual serial port access"
  info        : "Virtual serial ports allow virtual machines to communicate over the network. Doing so
allows you to redirect the virtual serial port connection to a TCP/IP connection on the ESXi
host. If virtual serial ports are needed be sure they are configured to use secure protocols.

*Rationale*

Serial ports are interfaces for connecting peripherals to the virtual machine. They are often
used on physical systems to provide a direct, low-level connection to the console of a
server. Serial ports allow for debug level access, which often does not have strong controls
like logging or privileges.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.wssdk.apiref.doc/vim.vm.device.VirtualSerialPort.URIBackingInfo.html\n"
  info        : "http://kb.vmware.com/kb/2004954\n"
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.wssdk.vsp.doc/virtual_serial_port_using_proxy_Chapter1.3.2.html\n"
  solution    : "Configuring Virtual Serial Port Communications with Secure Network Protocols-. ssl - the equivalent of TCP+SSL
. tcp+ssl - SSL over TCP over IPv4 or IPv6
. tcp4+ssl - SSL over TCP over IPv4
. tcp6+ssl - SSL over TCP over IPv6
. telnet over TCP with SSL. The virtual machine and remote system can negotiate and
use SSL if the remote system supports the telnet authentication option. If not, the
connection uses unencrypted text (plain text)
. telnets - telnet over SSL over TCP. In this case, SSL negotiation begins immediately
and you cannot use the telnet authentication option."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "LEVEL|1NS"
</report>

<report type:"WARNING">
  description : "8.3.4 Use templates to deploy VMs whenever possible"
  info        : "Use a hardened base operating system template image to create other, application-specific
templates and use the application-specific templates to deploy virtual machines.

*Rationale*

By capturing a hardened base operating system image (with no applications installed) in a
template, you can ensure that all your virtual machines are created with a known baseline
level of security. You can then use this template to create other, application-specific
templates, or you can use the application template to deploy virtual machines. Manual
installation of the OS and applications into a VM introduces the risk of misconfiguration
due to human or process error.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.vm_admin.doc/GUID-9062F225-E01B-42BA-8AFB-8EA4069068FE.html\n"
  solution    : "Provide templates for VM creation that contain hardened, patched, and properly configured
OS deployments. If possible, pre-deploy applications in templates as well, although care
should be taken that the application doesn't depend upon VM-specific information to be
deployed. In vSphere, you can convert a template to a virtual machine and back again
quickly, which makes updating templates quite easy."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-10,LEVEL|1NS"
</report>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.1 Control access to VMs through the dvfilter network APIs"
  info        : "Configure VMs protected by dvfilter network APIs correctly.

*Rationale*

A VM must be configured explicitly to accept access by the dvfilter network API. This
should be done only for VMs for which you want this to be done. An attacker might
compromise the VM by making use of this introspection channel."
  info        : "http://kb.vmware.com/kb/1714"
  info        : "http://kb.vmware.com/kb/1028151"
  solution    : "If a VM is supposed to be protected-. Configure the following in its VMX file- ethernet0.filter1.name = dv-
filter1 where ethernet0 is the network adapter interface of the virtual machine
that is to be protected, filter1 is the number of the filter that is being used, and dv-
filter1 is the name of the particular data path kernel module that is protecting the
VM.
. Ensure that the name of the data path kernel is set correctly.If a VM is not supposed to be protected-. Remove the following from its VMX file- ethernet0.filter1.name = dv-
filter1 where ethernet0 is the network adapter interface of the virtual machine
that is to be protected, filter1 is the number of the filter that is being used, and dv-
filter1 is the name of the particular data path kernel module that is protecting the
VM.

Impact-Incorrectly configuring this option can negatively impact functionality of tools that use
vmsafe API.Incorrectly configuring this option can prevent VMs from connecting to the network.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1NS,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[contains (audit:key,'ethernet') and contains (audit:key,'.filter') and contains (audit:key,'.name')]\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[contains (audit:key,'ethernet') and contains (audit:key,'.filter') and contains (audit:key,'.name')]\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"../../../audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - ethernetn.filtern.name : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - ethernetn.filtern.name : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "ethernet[0-9]+\\.filter[0-9]+\\.name :"
  expect      : "ethernet[0-9]+\\.filter[0-9]+\\.name : NOT configured"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.2 Control VMsafe Agent Address"
  info        : "Configure the vmsafe.agentAddress option in the virtual machine configuration file
correctly.

*Rationale*

The VMsafe CPU/memory API allows a security virtual machine to inspect and modify the
contents of the memory and CPU registers on other VMs, for the purpose of detecting and
preventing malware attacks. However, an attacker might compromise the VM by making
use of this introspection channel; therefore you should monitor for unauthorized usage of
this API. A VM must be configured explicitly to accept access by the VMsafe CPU/memory
API.This involves three parameters to perform the following-1. Enable the API
2. Set the IP address used by the security virtual appliance on the introspection
vSwitch
3. Set the port number for that IP address.If the VM is being protected by such a product, then make sure the latter two parameters
are set correctly. This should be done only for specific VMs for which you want this
protection."
  info        : "NOTE: Update AGENT_ADDRESS to the appropriate value for the local environment."
  info        : "http://kb.vmware.com/kb/1714\n"
  info        : "http://www.vmware.com/files/xls/hardeningguide-vsphere5-1-ga-release-public.xlsx\n"
  solution    : "If the VM is not being protected by a VMsafe CPU/memory product, then check virtual
machine configuration file and verify that vmsafe.agentAddress is not present.If it is being protected by a VMsafe CPU/Memory product then make sure this is set to the
correct value

Impact-Incorrectly configuring this option can negatively impact functionality of tools that use
VMsafe API.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-1,800-171|3.14.5,800-53|SI-3(10),CSF|DE.CM-4,LEVEL|1NS,NIAv2|GS17,SWIFT-CSCv1|6.1"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.agentAddress']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - vmsafe.agentAddress : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.agentAddress']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - vmsafe.agentAddress : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.agentAddress']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - vmsafe.agentAddress : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - vmsafe.agentAddress : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "vmsafe\.agentAddress : "
# Note: Variable @AGENT_ADDRESS@ replaced with "192\\.168\\.0\\.1" in field "expect".
  expect      : "vmsafe\.agentAddress : 192\\.168\\.0\\.1$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.3 Control VMsafe Agent Port"
  info        : "Configure the vmsafe.agentPort option in the virtual machine configuration file correctly.

*Rationale*

The VMsafe CPU/memory API allows a security virtual machine to inspect and modify the
contents of the memory and CPU registers on other VMs, for the purpose of detecting and
preventing malware attacks. However, an attacker might compromise the VM by making
use of this introspection channel; therefore you should monitor for unauthorized usage of
this API. A VM must be configured explicitly to accept access by the VMsafe CPU/memory
API.This involves three parameters to perform the following-1. Enable the API
2. Set the IP address used by the security virtual appliance on the introspection
vSwitch
3. Set the port number for that IP address.If the VM is being protected by such a product, then make sure the latter two parameters
are set correctly. This should be done only for specific VMs for which you want this
protection."
  info        : "NOTE: Update AGENT_PORT to the appropriate value for the local environment."
  info        : "http://kb.vmware.com/kb/17142\n"
  info        : "http://www.vmware.com/files/xls/hardeningguide-vsphere5-1-ga-release-public.xlsx\n"
  info        : "NOTE: Update AGENT_PORT with the appropriate value for the local environment."
  solution    : "If the VM is not being protected by a VMsafe CPU/memory product, then check virtual
machine configuration file and verify that vmsafe.agentPort is not present.If it is being protect by a VMsafe CPU/Memory product, make sure vmsafe.agentPort is set
to the correct value.

Impact-Incorrectly configuring this option can negatively impact functionality of tools that use VMsafe API.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-1,800-171|3.14.5,800-53|SI-3(10),CSF|DE.CM-4,LEVEL|1NS,NIAv2|GS17,SWIFT-CSCv1|6.1"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.agentPort']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - vmsafe.agentPort : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.agentPort']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - vmsafe.agentPort : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.agentPort']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - vmsafe.agentPort : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - vmsafe.agentPort : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "vmsafe\.agentPort : "
# Note: Variable @AGENT_PORT@ replaced with "10000" in field "expect".
  expect      : "vmsafe\.agentPort : 10000$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.4 Control VMsafe Agent Configuration"
  info        : "Configure the vmsafe.enable option in the virtual machine configuration file correctly.

*Rationale*

The VMsafe CPU/memory API allows a security virtual machine to inspect and modify the
contents of the memory and CPU registers on other VMs, for the purpose of detecting and
preventing malware attacks. However, an attacker might compromise the VM by making
use of this introspection channel; therefore you should monitor for unauthorized usage of
this API. A VM must be configured explicitly to accept access by the VMsafe CPU/memory
API.This involves three parameters to perform the following-1. Enable the API
2. Set the IP address used by the security virtual appliance on the introspection
vSwitch
3. Set the port number for that IP address.If the VM is being protected by such a product, then make sure the latter two parameters
are set correctly. This should be done only for specific VMs for which you want this
protection."
  info        : "http://kb.vmware.com/kb/1714\n"
  info        : "http://www.vmware.com/files/xls/hardeningguide-vsphere5-1-ga-release-public.xlsx\n"
  solution    : "If the VM is not being protected by a VMsafe CPU/memory product, then check virtual
machine configuration file and set vmsafe.enable to FALSE.

Impact-Incorrectly configuring this option can negatively impact functionality of tools that use vmsafe API.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-1,800-171|3.14.5,800-53|SI-3(10),CSF|DE.CM-4,LEVEL|1NS,NIAv2|GS17,SWIFT-CSCv1|6.1"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.enable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - vmsafe.enable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.enable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - vmsafe.enable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='vmsafe.enable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - vmsafe.enable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - vmsafe.enable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "vmsafe\.enable : "
  expect      : "vmsafe\.enable : FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.25 Disable VM Console Copy operations"
  info        : "Disable VM console copy and paste operations.

*Rationale*

By default, the ability to copy and paste text, graphics, and files is disabled, as is the ability
to drag and drop files. When this feature is enabled, you can copy and paste rich text and,
depending on the VMware product, graphics and files from your clipboard to the guest
operating system in a virtual machine. That is, as soon as the console window of a virtual
machine gains focus, nonprivileged users and processes running in the virtual machine can
access the clipboard on the computer where the console window is running."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vmtools.install.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html\n"
  solution    : "
To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'isolation.tools.copy.disable' -value $true

Impact-This is the default setting so functionality remains the same.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.copy.disable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.copy.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.copy.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.copy.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.copy.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.copy.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.copy.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.copy\.disable : "
  expect      : "isolation\.tools\.copy\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.26 Disable VM Console Drag and Drop operations"
  info        : "Disable VM Console Drag and Drop operations.

*Rationale*

By default, the ability to copy and paste text, graphics, and files is disabled, as is the ability
to drag and drop files. When this feature is enabled, you can copy and paste rich text and,
depending on the VMware product, graphics and files from your clipboard to the guest
operating system in a virtual machine. That is, as soon as the console window of a virtual
machine gains focus, nonprivileged users and processes running in the virtual machine can
access the clipboard on the computer where the console window is running."
  info        : "http://pubs.vmware.com/vsphere-50/topic/com.vmware.vmtools.install.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'isolation.tools.dnd.disable' -value $true

Impact-This is the default setting so functionality remains the same.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.dnd.disable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.dnd.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.dnd.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.dnd.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.dnd.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.dnd.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.dnd.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.dnd\.disable : "
  expect      : "isolation\.tools\.dnd\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.27 Disable VM Console and Paste GUI Options"
  info        : "Disable VM Console and Paste GUI Options.

*Rationale*

By default, the ability to copy and paste text, graphics, and files is disabled, as is the ability
to drag and drop files. When this feature is enabled, you can copy and paste rich text and,
depending on the VMware product, graphics and files from your clipboard to the guest
operating system in a virtual machine. That is, as soon as the console window of a virtual
machine gains focus, nonprivileged users and processes running in the virtual machine can
access the clipboard on the computer where the console window is running."
  info        : "http://pubs.vmware.com/vsphere-50/topic/com.vmware.vmtools.install.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'isolation.tools.setGUIOptions.enable' -value $false

Impact-This is the default setting so functionality remains the same.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.setGUIOptions.enable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.setGUIOptions.enable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.setGUIOptions.enable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.setGUIOptions.enable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.setGUIOptions.enable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.setGUIOptions.enable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.setGUIOptions.enable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.setGUIOptions\.enable : "
  expect      : "isolation\.tools\.setGUIOptions\.enable : FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.28 Disable VM Console Paste operations"
  info        : "Disable VM Console Paste operations.

*Rationale*

By default, the ability to copy and paste text, graphics, and files is disabled, as is the ability
to drag and drop files. When this feature is enabled, you can copy and paste rich text and,
depending on the VMware product, graphics and files from your clipboard to the guest
operating system in a virtual machine. That is, as soon as the console window of a virtual
machine gains focus, nonprivileged users and processes running in the virtual machine can
access the clipboard on the computer where the console window is running."
  info        : "http://pubs.vmware.com/vsphere-51/topic/com.vmware.vmtools.install.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'isolation.tools.paste.disable' -value $true

Impact-This is the default setting so functionality remains the same.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.paste.disable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.paste.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.paste.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.paste.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.paste.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.paste.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.paste.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.paste\.disable : "
  expect      : "isolation\.tools\.paste\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.5.1 Prevent virtual machines from taking over resources - CPU Share Level"
  info        : "Use limits, shares, and reservations to prevent virtual machines from taking over
resources.

*Rationale*

By default, all virtual machines on an ESXi host share the resources equally. By using the
resource management capabilities of ESXi, such as shares and limits, you can control the
server resources that a virtual machine consumes. You can use this mechanism to prevent a
denial of service that causes one virtual machine to consume so much of the host's
resources that other virtual machines on the same host cannot perform their intended
functions."
  info        : "NOTE: Update CPU_SHARE_LEVEL to the appropriate value for the local environment."
  info        : "http://pubs.vmware.com/vsphere-50/topic/com.vmware.ICbase/PDF/vsphere-esxi-vcenter-server-50-resource-management-guide.pdf\n"
  solution    : "Use shares or reservations to guarantee resources to critical VMs.
Use limits to constrain resource consumption by virtual machines that have a
greater risk of being exploited or attacked, or that run applications that are known
to have the potential to greatly consume resources."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-17,800-125A|HY-SR-8,800-125A|HY-SR-9,800-53|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),ITSG-33|SC-6,LEVEL|1NS"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:cpuAllocation/audit:shares/audit:level\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - CPU Share Level : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:cpuAllocation/audit:shares/audit:level\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - CPU Share Level : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:cpuAllocation/audit:shares/audit:level\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - CPU Share Level : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - CPU Share Level : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "CPU Share Level : "
# Note: Variable @CPU_SHARE_LEVEL@ replaced with "normal" in field "expect".
  expect      : "CPU Share Level : normal$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.5.1 Prevent virtual machines from taking over resources - Num Mem Shares"
  info        : "Use limits, shares, and reservations to prevent virtual machines from taking over
resources.

*Rationale*

By default, all virtual machines on an ESXi host share the resources equally. By using the
resource management capabilities of ESXi, such as shares and limits, you can control the
server resources that a virtual machine consumes. You can use this mechanism to prevent a
denial of service that causes one virtual machine to consume so much of the host's
resources that other virtual machines on the same host cannot perform their intended
functions."
  info        : "NOTE: Update NUM_MEM_SHARES to the appropriate value for the local environment."
  info        : "http://pubs.vmware.com/vsphere-50/topic/com.vmware.ICbase/PDF/vsphere-esxi-vcenter-server-50-resource-management-guide.pdf\n"
  solution    : ". Use shares or reservations to guarantee resources to critical VMs.
Use limits to constrain resource consumption by virtual machines that have a
greater risk of being exploited or attacked, or that run applications that are known
to have the potential to greatly consume resources."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-17,800-125A|HY-SR-6,800-125A|HY-SR-7,800-53|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),ITSG-33|SC-6,LEVEL|1NS"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:shares\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Num Mem Shares : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:shares\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Num Mem Shares : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:shares\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Num Mem Shares : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Num Mem Shares : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Num Mem Shares : "
# Note: Variable @NUM_MEM_SHARES@ replaced with "20480" in field "expect".
  expect      : "Num Mem Shares : 20480$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.5.1 Prevent virtual machines from taking over resources - Mem Share Level"
  info        : "Use limits, shares, and reservations to prevent virtual machines from taking over
resources.

*Rationale*

By default, all virtual machines on an ESXi host share the resources equally. By using the
resource management capabilities of ESXi, such as shares and limits, you can control the
server resources that a virtual machine consumes. You can use this mechanism to prevent a
denial of service that causes one virtual machine to consume so much of the host's
resources that other virtual machines on the same host cannot perform their intended
functions."
  info        : "NOTE: Update MEM_SHARE_LEVEL to the appropriate value for the local environment."
  info        : "http://pubs.vmware.com/vsphere-50/topic/com.vmware.ICbase/PDF/vsphere-esxi-vcenter-server-50-resource-management-guide.pdf\n"
  solution    : "Use shares or reservations to guarantee resources to critical VMs.
Use limits to constrain resource consumption by virtual machines that have a
greater risk of being exploited or attacked, or that run applications that are known
to have the potential to greatly consume resources."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-17,800-125A|HY-SR-6,800-125A|HY-SR-7,800-53|SC-5,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,LEVEL|1NS,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e,SWIFT-CSCv1|6.4"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:level\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Mem Share Level : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:level\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Mem Share Level : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:level\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Mem Share Level : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Mem Share Level : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Mem Share Level : "
# Note: Variable @MEM_SHARE_LEVEL@ replaced with "normal" in field "expect".
  expect      : "Mem Share Level : normal$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.6.1 Avoid using nonpersistent disks"
  info        : "Virtual Machine Disks are created as Dependent by default and are affected by snapshots.To ensure a virtual machine disk is not affected by snapshots the disk mode can be set to
Independent.Disks set to Independent mode can be Independent Persistent or Independent
Nonpersistent.Disks with Independent persistent mode have their data written permanently to the disk.Independent Nonpersistent disks lose any changes made to the disk when the system is
rebooted and can mask any trace of an attack on the system.

*Rationale*

The security issue with nonpersistent disk mode is that successful attackers, with a simple
shutdown or reboot, might undo or remove any traces that they were ever on the machine.
To safeguard against this risk production virtual machines should be configured as follows-1. Independent setting not enabled
2. Independent persistent
3. Independent nonpersistent with remote loggingWithout a persistent record of activity on a VM, administrators might never know whether
they have been attacked or hacked."
  info        : "https://pubs.vmware.com/vsphere-51/topic/com.vmware.wssdk.apiref.doc/vim.vm.device.VirtualDiskOption.DiskMode.html\n"
  info        : "https://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.vm_admin.doc/GUID-81629CAB-72FA-42F0-9F86-F8FD0DE39E57.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-#Alter the parameters for the following cmdlet to set the VM Disk Type-
Get-VM | Get-HardDisk | Set-HardDisk

Impact-Won't be able to make use of nonpersistent mode, which allows rollback to a known state when rebooting the VM.

Default Value-The default mode is the correct mode."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-53|AU-11,CIP|007-6-R4,CSF|PR.PT-1,ITSG-33|AU-11,LEVEL|1S,NESA|M5.2.3,NESA|T3.6.2,NIAv2|SM7,PCI-DSSv3.1|10.7,PCI-DSSv3.2|10.7"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualDisk']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual Disk Mode : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualDisk']/audit:backing/audit:diskMode\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual Disk Mode : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualDisk']/audit:backing/audit:diskMode\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - Virtual Disk Mode : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - Virtual Disk Mode : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Virtual Disk Mode : "
  expect      : "Virtual Disk Mode : persistent$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.7.1 Disable VMware Tools auto install"
  info        : "When installing VMware tools, it can sometimes require a reboot to finalize the installation.
If you choose the auto install option it will reboot the system without notice if one is
required.

*Rationale*

VMware Tools auto install can initiate an automatic reboot, disabling this option will
prevent tools from being installed automatically and prevent automatic machine reboots."
  info        : "https://pubs.vmware.com/vsphere-51/topic/com.vmware.vmtools.install.doc/GUID-65BCA561-5A03-4D17-A663-46A0C50CE6A7.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'isolation.tools.autoInstall.disable' -value $true

Impact-This option disables tools auto install via the hypervisor. It is recommended that VMware
tools installs and upgrades be handled through other means (For example- a devops tool
such as ansible, chef, puppet, or saltstack).

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.autoInstall.disable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.autoInstall.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.autoInstall.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.autoInstall.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.autoInstall.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.autoInstall.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.autoInstall.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.autoInstall\.disable : "
  expect      : "isolation\.tools\.autoInstall\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.7.2 Disable VIX messages from the VM"
  info        : "If you do not make use of custom VIX programming in your environment then you should
disable this feature to reduce the potential for vulnerabilities.

*Rationale*

The VIX API is a library for writing scripts and programs to manipulate virtual machines. If
you do not make use of custom VIX programming in your environment, then you should
disable certain features to reduce the potential for vulnerabilities. The ability to send
messages from the VM to the host is one of these features.Note- Disabling this feature does NOT adversely affect the functioning of VIX operations
that originate outside the guest, so certain VMware and 3rd party solutions that rely upon
this capability should continue to work. This is a deprecated interface. Ensure that any
deprecated interface is turned off for audit purposes."
  info        : "https://pubs.vmware.com/vsphere-51/topic/com.vmware.vddk.pg.doc/vddkTasks.8.7.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-
# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'isolation.tools.vixMessage.disable' -value $true

Impact-Guest will no longer be able to send messages via VIX API.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.vixMessage.disable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.vixMessage.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.vixMessage.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.vixMessage.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.vixMessage.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.vixMessage.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.vixMessage.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.vixMessage\.disable : "
  expect      : "isolation\.tools\.vixMessage\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.7.3 Do not send host information to guests"
  info        : "Configure VMware Tools to disable host info from being sent to guests.

*Rationale*

If set to TRUE a VM can obtain detailed information about the physical host. The default
value for the parameter is FALSE. This setting should not be TRUE unless a particular VM
requires this information for performance monitoring. An adversary potentially can use
this information to inform further attacks on the host."
  info        : "https://pubs.vmware.com/vsphere-51/topic/com.vmware.vsphere.security.doc/GUID-2CF880DA-2435-4201-9AFB-A16A11951A2D.html\n"
  solution    : "
To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'tools.guestlib.enableHostInfo' -value $false

Impact-Unable to retrieve performance information about the host from inside the guest, there are
times when this can be useful for troubleshooting.

Default Value-The prescribed state is the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-171|3.13.4,800-53|SC-4,ITSG-33|SC-4,LEVEL|1S"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.guestlib.enableHostInfo']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - tools.guestlib.enableHostInfo : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.guestlib.enableHostInfo']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - tools.guestlib.enableHostInfo : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.guestlib.enableHostInfo']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - tools.guestlib.enableHostInfo : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - tools.guestlib.enableHostInfo : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "tools\.guestlib\.enableHostInfo : "
  expect      : "tools\.guestlib\.enableHostInfo : FALSE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.7.4 Limit number of VM log files"
  info        : "Configure VM settings to prevent uncontrolled logging.

*Rationale*

You can use these settings to limit the total size and number of log files. Normally a new log
file is created only when a host is rebooted, so the file can grow to be quite large. You can
ensure that new log files are created more frequently by limiting the maximum size of the
log files. If you want to restrict the total size of logging data, VMware recommends saving
10 log files, each one limited to 1,000KB. Datastores are likely to be formatted with a block
size of 2MB or 4MB, so a size limit too far below this size would result in unnecessary
storage utilization. Each time an entry is written to the log, the size of the log is checked; if
it is over the limit, the next entry is written to a new log. If the maximum number of log files
already exists, when a new one is created, the oldest log file is deleted. A denial-of-service
attack that avoids these limits might be attempted by writing an enormous log entry. But
each log entry is limited to 4KB, so no log files are ever more than 4KB larger than the
configured limit. A second option is to disable logging for the virtual machine. Disabling
logging for a virtual machine makes troubleshooting challenging and support difficult. You
should not consider disabling logging unless the log file rotation approach proves
insufficient. Uncontrolled logging can lead to denial of service due to the datastore's being
filled."
  info        : "https://pubs.vmware.com/vsphere-51/topic/com.vmware.vmtools.install.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'log.keepOld' -value '10'

Impact-A more extreme strategy is to disable logging altogether for the virtual machine. Disabling
logging makes troubleshooting challenging and support difficult. Do not consider disabling
logging unless the log file rotation approach proves insufficient.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-20,800-53|AU-4,CSCv6|6.3,CSF|PR.DS-4,CSF|PR.PT-1,ITSG-33|AU-4,LEVEL|1S,NESA|T3.3.1,NESA|T3.6.2"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='log.keepOld']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - log.keepOld : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='log.keepOld']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - log.keepOld : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='log.keepOld']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - log.keepOld : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - log.keepOld : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "log\.keepOld : "
  expect      : "log\.keepOld : 10$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.7.5 Limit VM log file size"
  info        : "Configure VM settings to prevent uncontrolled logging.

*Rationale*

You can use these settings to limit the total size and number of log files. Normally a new log
file is created only when a host is rebooted, so the file can grow to be quite large. You can
ensure that new log files are created more frequently by limiting the maximum size of the
log files. If you want to restrict the total size of logging data, VMware recommends saving
10 log files, each one limited to 1,000KB. Datastores are likely to be formatted with a block
size of 2MB or 4MB, so a size limit too far below this size would result in unnecessary
storage utilization. Each time an entry is written to the log, the size of the log is checked; if
it is over the limit, the next entry is written to a new log. If the maximum number of log files
already exists, when a new one is created, the oldest log file is deleted. A denial-of-service
attack that avoids these limits might be attempted by writing an enormous log entry. But
each log entry is limited to 4KB, so no log files are ever more than 4KB larger than the
configured limit. A second option is to disable logging for the virtual machine. Disabling
logging for a virtual machine makes troubleshooting challenging and support difficult. You
should not consider disabling logging unless the log file rotation approach proves
insufficient. Uncontrolled logging can lead to denial of service due to the datastore's being
filled."
  info        : "http://kb.vmware.com/kb/8182749\n"
  solution    : "To implement the recommended configuration state, run the following PowerCLI
command-# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name 'log.rotateSize' -value '100000'

Impact-A more extreme strategy is to disable logging altogether for the virtual machine. Disabling
logging makes troubleshooting challenging and support difficult. Do not consider disabling
logging unless the log file rotation approach proves insufficient.

Default Value-The prescribed state is not the default state."
  see_also    : "https://workbench.cisecurity.org/files/902"
  reference   : "800-125A|HY-SR-20,800-53|AU-4,CSCv6|6.3,CSF|PR.DS-4,CSF|PR.PT-1,ITSG-33|AU-4,LEVEL|1S"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='log.rotateSize']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - log.rotateSize : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='log.rotateSize']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - log.rotateSize : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='log.rotateSize']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - log.rotateSize : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - log.rotateSize : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "log\.rotateSize : "
  expect      : "log\.rotateSize : 100000$"
</custom_item>

</check_type>
