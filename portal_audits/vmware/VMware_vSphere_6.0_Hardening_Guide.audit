#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.3 $
# $Date: 2020/04/22 $
#
# Description	: This .audit is designed to VM configurations from either a vCenter or vSphere server
# 			and validate their settings against the settings defined in the vSphere 6.0 Security Hardening Guide
#
#                               https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls
#
#<ui_metadata>
#<display_name>VMWare vSphere 6.0 Hardening Guide</display_name>
#<spec>
#  <type>VMWare</type>
#  <name>vSphere 6.0 Hardening Guide</name>
#  <version>1.0.0</version>
#  <link>https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls</link>
#</spec>
#<labels>vmware,vsphere,hardening</labels>
#<variables>
#  <variable>
#    <name>NTP_SERVER</name>
#    <default>0\.us\.pool\.ntp\.org</default>
#    <description>NTP server address</description>
#    <info>The name or IP address of the NTP server for your organization.</info>
#  </variable>
#  <variable>
#    <name>LOG_DIR</name>
#    <default>\\[\\] \/scratch\/log1</default>
#    <description>System log directory</description>
#    <info>The path to the system log directory.</info>
#  </variable>
#  <variable>
#    <name>LOG_HOST</name>
#    <default>192\.168\.0\.1</default>
#    <description>Remote syslog address</description>
#    <info>The IP address of the centralized syslog server for your organization.</info>
#  </variable>
#  <variable>
#    <name>SHELL_SESSION_TIMEOUT</name>
#    <default>(300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])</default>
#    <description>SSH session timeout</description>
#    <info>The number of minutes before an idle SSH session will be disconnected.</info>
#  </variable>
#  <variable>
#    <name>SHELL_TIMEOUT</name>
#    <default>(300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])</default>
#    <description>SSH service timeout</description>
#    <info>The number of minutes that can elapse before you must log in after the ESXi Shell is enabled. After the timeout period if you have not logged in the shell is disabled.</info>
#  </variable>
#  <variable>
#    <name>PASSWORD_POLICY</name>
#    <default>retry=3 min=8,8,8,7,6</default>
#    <description>Password Quality Control</description>
#    <info>Value of the Security.PasswordQualityControl parameter</info>
#  </variable>
#  <variable>
#    <name>AUDIT_EXCEPTION_USERS</name>
#    <default>root</default>
#    <description>ESXi : audit-exception-users</description>
#    <info>List of users who are exceptions to lockdown mode rules</info>
#  </variable>
#  <variable>
#    <name>PREF_DOM_CONTROLLER</name>
#    <default>DC_1</default>
#    <description>Preferred domain controllers</description>
#    <info>Preferred domain controllers</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"VMware">

<report type:"PASSED">
  description : "VMWare vCenter and vSphere 6.0 Hardening Guide"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<report type:"WARNING">
  description : "ESXi : apply-patches"
  info        : "Keep ESXi system properly patched.
By staying up to date on ESXi patches, vulnerabilities in the hypervisor can be mitigated. An educated attacker can exploit known vulnerabilities when attempting to attain access or elevate privileges on an ESXi host.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.update_manager.doc/GUID-EF6BEE4C-4583-4A8C-81B9-5B074CA2E272.html

https://www.vmware.com/support/policies/security_response

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "# VMware Update Manager PowerCLI Cmdlets can be used to check this feature"
  reference   : "800-53|SI-2"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : audit-exception-users"
  info        : "Audit the list of users who are on the Exception Users List and whether the have administrator privleges.
In vSphere 6.0 and later, you can add users to the Exception Users list from the vSphere Web Client. These users do not lose their permissions when the host enters lockdown mode. Usually you may want to add service accounts such as a backup agent to the Exception Users list. Verify that the list of users who are exempted from losing permissions is legitimate and as needed per your enviornment. Users who do not require special permissions should not be exempted from lockdown mode.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-6CD8C2E3-7925-4706-8271-F42F2BCFF95D.html
http://blogs.vmware.com/vsphere/2015/03/vsphere-6-0-lockdown-mode-exception-users.html"
  solution    : "From the vSphere web client, select host and click on \"Manage\" -> \"Settings\" -> \"System\" -> \"Security Profile\". Scroll down until \"Lockdown Mode\".  Click \"Edit\" and then click on \"Exception Users\". Add or delete users as per your site requirements."
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key=\'DCUI.Access\']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'DCUI.Access\']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'DCUI.Access\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>DCUI.Access : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "DCUI\.Access : "
# Note: Variable @AUDIT_EXCEPTION_USERS@ replaced with "root" in field "expect".
  expect      : "DCUI\.Access : root$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : config-ntp"
  info        : "Configure NTP time synchronization.
By ensuring that all systems use the same relative time source (including the relevant localization offset), and that the relative time source can be correlated to an agreed-upon time standard (such as Coordinated Universal TimeUTC), you can make it simpler to track and correlate an intruders actions when reviewing the relevant log files. Incorrect time settings can make it difficult to inspect and correlate log files to detect attacks, and can make auditing inaccurate.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-2553C86E-7981-4F79-B9FC-A6CECA52F6CC.html"
  solution    : "# Set the NTP Settings for all hosts -
$NTPServers = \"pool.ntp.org\", \"pool2.ntp.org\"Get-VMHost | Add-VmHostNtpServer $NTPServers"
  reference   : "800-171|3.3.7,800-53|AU-8(1),CSCv6|6.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.4,ITSG-33|AU-8(1),NESA|T3.6.7,NIAv2|NS44,NIAv2|NS45,NIAv2|NS46,NIAv2|NS47,PCI-DSSv3.1|10.4,PCI-DSSv3.2|10.4"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:dateTimeInfo/audit:ntpConfig/audit:server\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - NTP Server : <xsl:value-of select=\"audit:propSet/audit:val/audit:dateTimeInfo/audit:ntpConfig/audit:server\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>NTP Server : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "NTP Server : "
# Note: Variable @NTP_SERVER@ replaced with "0\\.us\\.pool\\.ntp\\.org" in field "expect".
  expect      : "NTP Server : 0\\.us\\.pool\\.ntp\\.org$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : config-persistent-logs"
  info        : "Configure persistent logging for all ESXi host.
ESXi can be configured to store log files on an in-memory file system.  This occurs when the host's \"/scratch\" directory is linked to \"/tmp/scratch\". When this is done only a single day's worth of logs are stored at any time. In addition log files will be reinitialized upon each reboot.  This presents a security risk as user activity logged on the host is only stored temporarily and will not persistent across reboots.  This can also complicate auditing and make it harder to monitor events and diagnose issues.  ESXi host logging should always be configured to a persistent datastore.

http://kb.vmware.com/kb/1033696

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-9F67DB52-F469-451F-B6C8-DAE8D95976E7.html"
  solution    : "# Set Syslog.global.logDir for each host -
Get-VMHost | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name Syslog.global.logDir -Value \"NewLocation\" }"
  reference   : "800-171|3.3.8,800-53|AU-9,CSF|PR.PT-1,ITSG-33|AU-9"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key=\'Syslog.global.logDir\']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'Syslog.global.logDir\']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'Syslog.global.logDir\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>Syslog.global.logDir : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Syslog\.global\.logDir : "
# Note: Variable @LOG_DIR@ replaced with "\\\\[\\\\] \\/scratch\\/log1" in field "expect".
  expect      : "Syslog\.global\.logDir : \\\\[\\\\] \\/scratch\\/log1$"
</custom_item>

<if>
  <condition type:"OR">
    <custom_item>
      type        : AUDIT_VCENTER
      description : "ESXi : config-snmp"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,\'snmp.receiver\') and contains (audit:key,\'.enabled\')]\">"
      xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,\'snmp.receiver\') and contains (audit:key,\'.enabled\')]\">"
      xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val/audit:OptionValue[audit:key=\'VirtualCenter.InstanceName\']/audit:value\"/> - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val/audit:OptionValue[audit:key=\'VirtualCenter.InstanceName\']/audit:value\"/> - snmp.receiver.X.enabled : NOT found<xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "snmp\.receiver\.([Xx]|[0-9]+)\.enabled : "
      not_expect  : "snmp\.receiver\.([Xx]|[0-9]+)\.enabled : True$"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type        : AUDIT_VCENTER
      description : "ESXi : config-snmp - 'snmp.receiver.X.community'"
      info        : "Ensure proper SNMP configuration.
If SNMP is not being used, it should remain disabled. If it is being used, the proper trap destination should be configured. If SNMP is not properly configured, monitoring information can be sent to a malicious host that can then use this information to plan an attack.  Note:  ESXi 5.1 and later supports SNMPv3 which provides stronger security than SNMPv1 or SNMPv2, including key authentication and encryption.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.monitoring.doc/GUID-8EF36D7D-59B6-4C74-B1AA-4A9D18AB6250.html
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-4309DE28-AFB6-4B2D-A8EA-A38D36A8C6E6.html
SNMP V3 configuration - http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.monitoring.doc/GUID-2E4B0F2A-11D8-4649-AC6C-99F89CE93026.html"
      solution    : "# Update the host SNMP Configuration (single host connection required) -
Get-VmHostSNMP | Set-VMHostSNMP -Enabled:$true -ReadOnlyCommunity 'secret'"
      reference   : "800-171|3.5.2,800-53|IA-5,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3,SWIFT-CSCv1|2.3"
      see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,\'snmp.receiver\') and contains (audit:key,\'.community\') and contains (audit:value,\'public\')]\">"
      xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,\'snmp.receiver\') and contains (audit:key,\'.community\') and contains (audit:value,\'public\')]\">"
      xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val/audit:OptionValue[audit:key=\'VirtualCenter.InstanceName\']/audit:value\"/> - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "snmp\.receiver\.[0-9]+\.community : "
      not_expect  : "snmp\.receiver\.[0-9]+\.community : [Pp][Uu][Bb][Ll][Ii][Cc]$"
    </custom_item>
  </then>

  <else>
    <custom_item>
      type        : AUDIT_VCENTER
      description : "ESXi : config-snmp - 'snmp.receiver.X.enabled"
      info        : "Ensure proper SNMP configuration.
If SNMP is not being used, it should remain disabled. If it is being used, the proper trap destination should be configured. If SNMP is not properly configured, monitoring information can be sent to a malicious host that can then use this information to plan an attack.  Note:  ESXi 5.1 and later supports SNMPv3 which provides stronger security than SNMPv1 or SNMPv2, including key authentication and encryption.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.monitoring.doc/GUID-8EF36D7D-59B6-4C74-B1AA-4A9D18AB6250.html
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-4309DE28-AFB6-4B2D-A8EA-A38D36A8C6E6.html
SNMP V3 configuration - http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.monitoring.doc/GUID-2E4B0F2A-11D8-4649-AC6C-99F89CE93026.html"
      solution    : "# Update the host SNMP Configuration (single host connection required) -
Get-VmHostSNMP | Set-VMHostSNMP -Enabled:$true -ReadOnlyCommunity 'secret'"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,\'snmp.receiver\') and contains (audit:key,\'.enabled\')]\">"
      xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val/audit:OptionValue[contains (audit:key,\'snmp.receiver\') and contains (audit:key,\'.enabled\')]\">"
      xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val/audit:OptionValue[audit:key=\'VirtualCenter.InstanceName\']/audit:value\"/> - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val/audit:OptionValue[audit:key=\'VirtualCenter.InstanceName\']/audit:value\"/> - snmp.receiver.X.enabled : NOT found<xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "snmp\.receiver\.([Xx]|[0-9]+)\.enabled : "
      not_expect  : "snmp\.receiver\.([Xx]|[0-9]+)\.enabled : True$"
    </custom_item>
  </else>
</if>

<report type:"WARNING">
  description : "ESXi : disable-mob"
  info        : "Disable Managed Object Browser (MOB).
The managed object browser (MOB) provides a way to explore the object model used by the VMkernel to manage the host; it enables configurations to be changed as well. This interface is meant to be used primarily for debugging the vSphere SDK. In Sphere 6.0 this is disabled by default

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-0EF83EA7-277C-400B-B697-04BDC9173EA3.html
NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Get-VMHost <host> | Get-AdvancedSetting -Name Config.HostAgent.plugins.solo.enableMob |Set-AdvancedSetting -value \"false\""
  reference   : "800-53|CM-7b."
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : enable-ad-auth"
  info        : "Use Active Directory for local user authentication.
Join ESXi hosts to an Active Directory (AD) domain to eliminate the need to create and maintain multiple local user accounts. Using AD for user authentication simplifies the ESXi host configuration, ensures password complexity and reuse policies are enforced and reduces the risk of security breaches and unauthorized access.  Note: if the AD group \"ESX Admins\" (default) exists then all users and groups that are assigned as members to this group will have full administrative access to all ESXi hosts the domain.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-4FD32125-4955-439D-B39F-C654CCB207DC.html"
  solution    : "# Join the ESXI Host to the Domain
Get-VMHost  | Get-VMHostAuthentication | Set-VMHostAuthentication -Domain $domain -User $username -Password $password -JoinDomain"
  reference   : "800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ActiveDirectoryPreferredDomainControllers\']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ActiveDirectoryPreferredDomainControllers\']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ActiveDirectoryPreferredDomainControllers\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>UserVars.ActiveDirectoryPreferredDomainControllers : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "UserVars\.ActiveDirectoryPreferredDomainControllers : "
# Note: Variable @PREF_DOM_CONTROLLER@ replaced with "DC_1" in field "expect".
  expect      : "UserVars\.ActiveDirectoryPreferredDomainControllers : DC_1"
</custom_item>

<report type:"WARNING">
  description : "ESXi : enable-auth-proxy"
  info        : "When adding ESXi hosts to Active Directory use the vSphere Authentication Proxy to protect passwords.
If you configure your host to join an Active Directory domain using Host Profiles the Active Directory credentials are saved in the host profile and are transmitted over the network.  To avoid having to save Active Directory credentials in the Host Profile and to avoid transmitting Active Directory credentials over the network  use the vSphere Authentication Proxy.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-084B74BD-40A5-4A4B-A82C-0C9912D580DC.html
NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "# Join the ESXI Host to the Domain -
Get-VMHost HOST1 | Get-VMHostAuthentication | Set-VMHostAuthentication -Domain domain.local -User Administrator -Password Passw0rd -JoinDomain"
  reference   : "800-53|IA-3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : enable-chap-auth"
  info        : "Enable bidirectional CHAP, also known as Mutual CHAP, authentication for iSCSI traffic.
vSphere allows for the use of bidirectional authentication of both the iSCSI target and host. Choosing not to enforce more stringent authentication can make sense if you create a dedicated network or VLAN to service all your iSCSI devices. By not authenticating both the iSCSI target and host, there is a potential for a MiTM attack in which an attacker might impersonate either side of the connection to steal data. Bidirectional authentication can mitigate this risk. If the iSCSI facility is isolated from general network traffic, it is less vulnerable to exploitation. http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.storage.doc/GUID-AC65D747-728F-4109-96DD-49B433E2F266.html
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-DFC745FB-CDD6-4828-8948-4D0E0561EEF8.html"
  solution    : "# Set the Chap settings for the Iscsi Adapter -
Get-VMHost | Get-VMHostHba | Where {$_.Type -eq \"Iscsi\"} | Set-VMHostHba # Use desired parameters here"
  reference   : "800-53|IA-3(1),CSF|PR.AC-1,ITSG-33|IA-3(1),NESA|T5.4.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"//audit:returnval/audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:storageDevice/audit:hostBusAdapter[contains (@xsi:type,\'InternetScsi\')]\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval/audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:storageDevice/audit:hostBusAdapter[contains (@xsi:type,\'InternetScsi\')]\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name=\'name\']/audit:val\"/> (<xsl:value-of select=\"audit:device\"/>) - chapAuthEnabled : <xsl:value-of select=\"audit:authenticationProperties/audit:chapAuthEnabled\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"//audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>No iSCSI devices found</xsl:text><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "chapAuthEnabled : "
  not_expect  : "chapAuthEnabled : False$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : enable-normal-lockdown-mode"
  info        : "Enable Normal Lockdown Mode to restrict access.
Enabling lockdown mode disables direct access to an ESXi host requiring the host be managed remotely from vCenter Server.  This is done to ensure the roles and access controls implemented in vCenter are always enforced and users cannot bypass them by logging into a host directly.   By forcing all interaction to occur through vCenter Server, the risk of someone inadvertently attaining elevated privileges or performing tasks that are not properly audited is greatly reduced.  Note:  Lockdown mode does not apply to  users who log in using authorized keys. When you use an authorized key file for root user authentication, root users are not prevented from accessing a host with SSH even when the host is in lockdown mode.

Note that users listed in the DCUI.Access list for each host are allowed to override lockdown mode and login to the DCUI.

By default the \"root\" user is the only user listed in the DCUI.Access list.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-88B24613-E8F9-40D2-B838-225F5FF480FF.html
http://kb.vmware.com/kb/1008077"
  solution    : "# Enable lockdown mode for each host -
Get-VMHost | Foreach { $_.EnterLockdownMode() }"
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:lockdownMode\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - Lockdown Mode : <xsl:value-of select=\"audit:propSet/audit:val/audit:lockdownMode\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>Lockdown Mode : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Lockdown Mode : "
  expect      : "Lockdown Mode : lockdownNormal$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : enable-remote-syslog"
  info        : "Configure remote logging for ESXi hosts.
Remote logging to a central log host provides a secure, centralized store for ESXi logs. By gathering host log files onto a central host you can more easily monitor all hosts with a single tool. You can also do aggregate analysis and searching to look for such things as coordinated attacks on multiple hosts. Logging to a secure, centralized log server helps prevent log tampering and also provides a long-term audit record. To facilitate remote logging VMware provides the vSphere Syslog Collector.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.vcenterhost.doc/GUID-61E7E2EA-F531-4665-9225-58BA899F55A5.html"
  solution    : "# Set Syslog.global.logHost for each host -
Get-VMHost | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name Syslog.global.logHost -Value \"NewLocation\" }"
  reference   : "800-171|3.3.8,800-53|AU-9(2),CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSF|PR.PT-1,ITSG-33|AU-9(2),NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key=\'Syslog.global.logHost\']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'Syslog.global.logHost\']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'Syslog.global.logHost\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>Syslog.global.logHost : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Syslog\.global\.logHost : "
# Note: Variable @LOG_HOST@ replaced with "192\\.168\\.0\\.1" in field "expect".
  expect      : "Syslog\.global\.logHost : 192\\.168\\.0\\.1$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : enable-strict-lockdown-mode"
  info        : "Enable Strict lockdown mode to restrict access.
Enabling lockdown mode disables direct access to an ESXi host requiring the host be managed remotely from vCenter Server.

This is done to ensure the roles and access controls implemented in vCenter are always enforced and users cannot bypass them by logging into a host directly.   By forcing all interaction to occur through vCenter Server, the risk of someone inadvertently attaining elevated privileges or performing tasks that are not properly audited is greatly reduced.

Strict lockdown mode stops the DCUI service. However, the ESXi Shell and SSH services are independent of lockdown mode. For lockdown mode to be an effective security measure, ensure that the ESXi Shell and SSH services are also disabled. Those services are disabled by default.

When a host is in lockdown mode, users on the Exception Users list can access the host from the ESXi Shell and through SSH if they have the Administrator role on the host and if these services are enabled. This access is possible even in strict lockdown mode. Leaving the ESXi Shell service and the SSH service disabled is the most secure option.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-88B24613-E8F9-40D2-B838-225F5FF480FF.html"
  solution    : "#Run this at the vCenter level or against an individual host -
#Create HostLockdownMode object
$level = New-Object VMware.Vim.HostLockdownMode
#Populate with level of lockdown:(lockdownDisabled,lockdownNormal,lockdownStrict)
$level = \"lockdownStrict\"
$esxihosts = get-vmhost
foreach ($esxihost in $esxihosts)
  {
$myhost = Get-VMHost $esxihost | Get-View
$lockdown = Get-View $myhost.ConfigManager.HostAccessManager
Write-Host \"\"
Write-Host \"Setting Lockdown mode to \" $level
$lockdown.ChangeLockdownMode($level)
$lockdown.UpdateViewData()
$lockdownstatus = $lockdown.LockdownMode
Write-Host \"Lockdown mode on $esxihost is set to $lockdownstatus\"
Write-Host \"\"
  }"
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:lockdownMode\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - Lockdown Mode : <xsl:value-of select=\"audit:propSet/audit:val/audit:lockdownMode\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>Lockdown Mode : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Lockdown Mode : "
  expect      : "Lockdown Mode : lockdownStrict$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : firewall-enabled"
  info        : "Configure the ESXi host firewall to restrict access to services running on the host .
Unrestricted access to services running on an ESXi host can expose a host to outside attacks and unauthorized access. Reduce the risk by configuring the ESXi firewall to only allow access from authorized networks.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-8912DD42-C6EA-4299-9B10-5F3AEA52C605.html"
  solution    : "From the vSphere web client, select the host and click \"Manage\" -> \"Settings\" -> \"System\" -> \"Security Profile\".

For each enabled services for both incoming and outgoing connections set a proper network/IP Range after deselecting \"Allow connections from any IP address\" checkbox."
  reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val/audit:firewall/audit:ruleset\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:enabled='true'\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:label\"/><xsl:text> : Enabled , ipAll : </xsl:text><xsl:value-of select=\"audit:allowedHosts/audit:allIp\"/><xsl:text>\n</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:label\"/><xsl:text> : Not Enabled , ipAll : </xsl:text><xsl:value-of select=\"audit:allowedHosts/audit:allIp\"/><xsl:text>\n</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "ipAll :"
  not_expect  : ": Enabled , ipAll : true"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : set-account-auto-unlock-time"
  info        : "Set the time after which a locked account is automatically unlocked.
Multiple account login failures for the same account could possibly be a threat vector trying to brute force the system or cause denial of service. Such attempts to brute force the system should be limited by locking out the account after reaching a threshold.

In case, you would want to auto unlock the account, i.e. unlock the account without administrative action, set the time for which the account remains locked. Setting a high duration for which account remains locked would deter and serverly slow down the brute force method of logging in.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-DC96FFDB-F5F2-43EC-8C73-05ACDAE6BE43.html"
  solution    : "From the vSphere Web Client select the host, click \"Manage\" -> \"Settings\" -> \"System\" -> \"Advanced Sytem Settings\". Enter \"Security.AccountUnlockTime\" in the filter. Click edit and set the value for this parameter to 900."
  reference   : "800-171|3.1.8,800-53|AC-7,CN-L3|7.1.2.7(f),CN-L3|7.1.3.1(c),CN-L3|8.1.4.1(b),ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Security.AccountUnlockTime']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Security.AccountUnlockTime']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Security.AccountUnlockTime']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Security.AccountUnlockTime : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Security\.AccountUnlockTime : "
  expect      : "Security\.AccountUnlockTime : 900"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : set-account-lockout"
  info        : "Set the count of maximum failed login attempts before the account is locked out.
Multiple account login failures for the same account could possibly be a threat vector trying to brute force the system or cause denial of service. Such attempts to brute force the system should be limited by locking out the account after reaching a threshold.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-DC96FFDB-F5F2-43EC-8C73-05ACDAE6BE43.html"
  solution    : "From the vSphere Web Client select the host, click \"Manage\" -> \"Settings\" -> \"System\" -> \"Advanced Sytem Settings\". Enter \"Security.AccountLockFailures\" in the filter. Click edit and set the value for this parameter to 3."
  reference   : "800-171|3.1.8,800-53|AC-7,CN-L3|8.1.4.1(b),ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Security.AccountLockFailures']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Security.AccountLockFailures']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Security.AccountLockFailures']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Security.AccountLockFailures : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Security\.AccountLockFailures : "
  expect      : "Security\.AccountLockFailures : 3"
</custom_item>

<report type:"WARNING">
  description : "ESXi : set-dcui-access"
  info        : "Set DCUI.Access to allow trusted users to override lockdown mode.
Lockdown mode disables direct host access requiring that admins manage hosts from vCenter Server.  However, if a host becomes isolated from vCenter Server, the admin is locked out and can no longer manage the host. If you are using normal lockdown mode, you can avoid becoming locked out of an ESXi host that is running in lockdown mode, by setting DCUI.Access to a list of highly trusted users who can override lockdown mode and access the DCUI. The DCUI is not running in strict lockdown mode.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-6779F098-48FE-4E22-B116-A8353D19FF56.html
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-88B24613-E8F9-40D2-B838-225F5FF480FF.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From the vSphere Web Client select the host, click \"Manage\" -> \"Settings\" -> \"System\" -> \"Advanced Sytem Settings\". Enter \"DCUI.Access\" in the filter. Enter comma separated user accounts who are authorized to access DCUI even in case of lockdown mode.

Caution: Do not remove root user."
  reference   : "800-53|AC-6"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : set-dcui-timeout"
  info        : "Audit DCUI timeout value.
DCUI is used for directly logging into ESXi host and carrying out host management tasks. The idle connections to DCUI must be terminated to avoid any unintended usage of the DCUI originating from a left over login session."
  solution    : "From the vSphere Web Client select the host, click \"Manage\" -> \"Settings\" -> \"System\" -> \"Advanced Sytem Settings\". Enter \"UserVars.DcuiTimeOut\" in the filter. Click edit and set the value for this parameter to 600 or more restrictive."
  reference   : "800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),ITSG-33|AC-12,NIAv2|NS49"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='UserVars.DcuiTimeOut']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='UserVars.DcuiTimeOut']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='UserVars.DcuiTimeOut']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>UserVars.DcuiTimeOut : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "UserVars\.DcuiTimeOut : "
  expect      : "UserVars\.DcuiTimeOut : 600"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : set-password-policies"
  info        : "Establish a password policy for password complexity.
ESXi uses the pam_passwdqc.so plug-in to set password strength and complexity.  It is important to use passwords that are not easily guessed and that are difficult for password generators to determine.   Password strength and complexity rules apply to all ESXi users, including root. They do not apply to Active Directory users when the ESX host is joined to a domain. Those password policies are enforced by AD.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-DC96FFDB-F5F2-43EC-8C73-05ACDAE6BE43.html"
  solution    : "# Set Security.PasswordQualityControl for each host -
#these values are an example.
Get-VMHost | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name Security.PasswordQualityControl -Value \"retry=3 min=8,8,8,7,6\" }"
  reference   : "800-53|IA-5(1),CSF|PR.AC-1,ITSG-33|IA-5(1),NESA|T5.2.3,SWIFT-CSCv1|4.1"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Security.PasswordQualityControl']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Security.PasswordQualityControl']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Security.PasswordQualityControl']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Security.PasswordQualityControl : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Security\.PasswordQualityControl : "
# Note: Variable @PASSWORD_POLICY@ replaced with "retry=3 min=8,8,8,7,6" in field "expect".
  expect      : "Security\.PasswordQualityControl : retry=3 min=8,8,8,7,6"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : set-shell-interactive-timeout"
  info        : "Set a timeout to automatically terminate idle ESXi Shell and SSH sessions.
If a user forgets to log out of their SSH session, the idle connection will remains open indefinitely, increasing the potential for someone to gain privileged access to the host.  The ESXiShellInteractiveTimeOut allows you to automatically terminate idle shell sessions.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-94F0C54F-05E3-4E16-8027-0280B9ED1009.html

http://kb.vmware.com/kb/2004746"
  solution    : "# Set UserVars.ESXiShellInteractiveTimeOut to 900 on all hosts -
Get-VMHost | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name UserVars.ESXiShellInteractiveTimeOut -Value 900 }"
  reference   : "800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),ITSG-33|AC-12,NIAv2|NS49"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ESXiShellInteractiveTimeOut\']\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ESXiShellInteractiveTimeOut\']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ESXiShellInteractiveTimeOut\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>UserVars.ESXiShellInteractiveTimeOut : NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "UserVars\.ESXiShellInteractiveTimeout : "
# Note: Variable @SHELL_SESSION_TIMEOUT@ replaced with "(300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])" in field "expect".
  expect      : "UserVars\.ESXiShellInteractiveTimeout : (300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : set-shell-timeout"
  info        : "Set a timeout to limit how long the ESXi Shell and SSH services are allowed to run.
When the ESXi Shell or SSH services are enabled on a host they will run indefinitely.  To avoid having these services left running set the ESXiShellTimeOut.  The ESXiShellTimeOut defines a window of time after which the ESXi Shell and SSH services will automatically be terminated.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-94F0C54F-05E3-4E16-8027-0280B9ED1009.html
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-B314F79B-2BDD-4D68-8096-F009B87ACB33.html

http://kb.vmware.com/kb/2004746"
  solution    : "# Set Remove UserVars.ESXiShellTimeOut to 900 on all hosts -
Get-VMHost | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name UserVars.ESXiShellTimeOut -Value 900 }"
  reference   : "800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),ITSG-33|AC-12,NIAv2|NS49"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ESXiShellTimeOut\']\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ESXiShellTimeOut\']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'UserVars.ESXiShellTimeOut\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>UserVars.ESXiShellTimeout : NOT Found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "UserVars\.ESXiShellTimeout : "
# Note: Variable @SHELL_TIMEOUT@ replaced with "(300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])" in field "expect".
  expect      : "UserVars\.ESXiShellTimeout : (300|[1-2][0-9][0-9]|[1-9][0-9]|[1-9])$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "ESXi : TransparentPageSharing-intra-enabled"
  info        : "Ensure default setting for intra-VM TPS is correct.
Acknowledgement of the recent academic research that leverages Transparent Page Sharing (TPS) to gain unauthorized access to data under certain highly controlled conditions and documents VMwares precautionary measure of restricting TPS to individual virtual machines by default in upcoming ESXi releases. At this time, VMware believes that the published information disclosure due to TPS between virtual machines is impractical in a real world deployment.

VMs that do not have the sched.mem.pshare.salt option set cannot share memory with any other VMs.
https://kb.vmware.com/kb/2080735
https://kb.vmware.com/kb/2097593
https://kb.vmware.com/kb/2091682"
  solution    : "$tps = 2
$VMHosts = Get-VMHost | Where {$_.ConnectionState -eq \"Connected\"}
foreach ($VMHost in $VMHosts) {
Set-VMHostAdvancedConfiguration -VMHost $VMHost -Name Mem.ShareForceSalting\" -Value $tps
}"
  reference   : "800-53|SI-16"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key=\'Mem.ShareForceSalting\']\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'Mem.ShareForceSalting\']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key=\'Mem.ShareForceSalting\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - <xsl:text>Mem.ShareForceSalting : NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Mem\.ShareForceSalting : "
  expect      : "Mem\.ShareForceSalting : 2$"
</custom_item>

<report type:"WARNING">
  description : "ESXi : verify-acceptance-level-accepted"
  info        : "Verify Image Profile and VIB Acceptance Levels.
Verify the ESXi Image Profile to only allow signed VIBs.  An unsigned VIB represents untested code installed on an ESXi host.  The ESXi Image profile supports four acceptance levels:
(1) VMwareCertified - VIBs created, tested and signed by VMware
(2) VMwareAccepted - VIBs created by a VMware partner but tested and signed by VMware
(3) PartnerSupported - VIBs created, tested and signed by a certified VMware partner
(4) CommunitySupported - VIBs that have not been tested by VMware or a VMware partner.  Community Supported VIBs are not supported and do not have a digital signature.  To protect the security and integrity of your ESXi hosts do not allow unsigned (CommunitySupported) VIBs to be installed on your hosts.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.install.doc/GUID-56600593-EC2E-4125-B1A0-065BDD16CF2D.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-751034F3-5337-4DB2-8272-8DAC0980EACA.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "# Set the Software AcceptanceLevel for each host
Foreach ($VMHost in Get-VMHost ) { $ESXCli = Get-EsxCli -VMHost $VMHost $ESXCli.software.acceptance.Set(\"VMwareCertified\")}"
  reference   : "800-53|SI-7"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<report type:"WARNING">
  description : "ESXi : verify-acceptance-level-certified"
  info        : "Verify Image Profile and VIB Acceptance Levels.
Verify the ESXi Image Profile to only allow signed VIBs.  An unsigned VIB represents untested code installed on an ESXi host.  The ESXi Image profile supports four acceptance levels:
(1) VMwareCertified - VIBs created, tested and signed by VMware
(2) VMwareAccepted - VIBs created by a VMware partner but tested and signed by VMware
(3) PartnerSupported - VIBs created, tested and signed by a certified VMware partner
(4) CommunitySupported - VIBs that have not been tested by VMware or a VMware partner.  Community Supported VIBs are not supported and do not have a digital signature.  To protect the security and integrity of your ESXi hosts do not allow unsigned (CommunitySupported) VIBs to be installed on your hosts.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.install.doc/GUID-56600593-EC2E-4125-B1A0-065BDD16CF2D.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-751034F3-5337-4DB2-8272-8DAC0980EACA.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "# Set the Software AcceptanceLevel for each host -
Foreach ($VMHost in Get-VMHost ) { $ESXCli = Get-EsxCli -VMHost $VMHost $ESXCli.software.acceptance.Set(\"VMwareCertified\")}"
  reference   : "800-53|SI-7"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<report type:"WARNING">
  description : "ESXi : verify-acceptance-level-supported"
  info        : "Verify Image Profile and VIB Acceptance Levels.
Verify the ESXi Image Profile to only allow signed VIBs.  An unsigned VIB represents untested code installed on an ESXi host.  The ESXi Image profile supports four acceptance levels:
(1) VMwareCertified - VIBs created, tested and signed by VMware
(2) VMwareAccepted - VIBs created by a VMware partner but tested and signed by VMware,
(3) PartnerSupported - VIBs created, tested and signed by a certified VMware partner
(4) CommunitySupported - VIBs that have not been tested by VMware or a VMware partner.  Community Supported VIBs are not supported and do not have a digital signature.  To protect the security and integrity of your ESXi hosts do not allow unsigned (CommunitySupported) VIBs to be installed on your hosts.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.install.doc/GUID-56600593-EC2E-4125-B1A0-065BDD16CF2D.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-751034F3-5337-4DB2-8272-8DAC0980EACA.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "# Set the Software AcceptanceLevel for each host
Foreach ($VMHost in Get-VMHost ) { $ESXCli = Get-EsxCli -VMHost $VMHost $ESXCli.software.acceptance.Set(\"VMwareCertified\")}"
  reference   : "800-53|SI-7"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_VCENTER
  description : "vCenter : verify-nfc-ssl"
  info        : "Enable SSL for Network File copy (NFC).
NFC (Network File Copy) is the name of the mechanism used to migrate or clone a VM between two ESXi hosts over the network.

***By default, NFC over SSL is enabled (ie: \"True\") within a vSphere cluster but the value of the setting is null.***

Clients check the value of the setting and default to not using SSL for performance reasons if the value is null. This behavior can be changed by ensuring the setting has been explicitly created and set to \"True\". This will force clients to use SSL.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-B58A5750-A15C-4051-BD87-49F3B5C762B5.html"
  solution    : "$vCenter = \"MyvCenterFQDN\"
$nfcset = get-advancedsetting -entity $vCenter -name config.nfc.useSSL | set-AdvancedSetting -value true -confirm:$false"
  reference   : "800-171|3.13.8,800-53|SC-8,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8,SWIFT-CSCv1|2.1,TBA-FIISB|29.1"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:val[@xsi:type='ArrayOfOptionValue']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:OptionValue[audit:key='config.nfc.useSSL']\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:OptionValue[audit:key='VirtualCenter.InstanceName']/audit:value\"/> - <xsl:value-of select=\"audit:OptionValue[audit:key='config.nfc.useSSL']/audit:key\"/> : <xsl:value-of select=\"audit:OptionValue[audit:key='config.nfc.useSSL']/audit:value\"/>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:OptionValue[audit:key='VirtualCenter.InstanceName']/audit:value\"/> - <xsl:text>config.nfc.useSSL : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "config\.nfc\.useSSL : "
  expect      : "config\.nfc\.useSSL : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-console-copy"
  info        : "Explicitly disable copy/paste operations.
Copy and paste operations are disabled by default. However, if you explicitly disable this feature audit controls can check that this setting is correct.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-367D02C1-B71F-4AC3-AA05-85033136A667.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.copy.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.copy.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.copy.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.copy.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.copy.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.copy.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.copy.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.copy.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.copy\.disable : "
  expect      : "isolation\.tools\.copy\.disable : (True|NOT found)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-console-drag-n-drop"
  info        : "Explicitly disable copy/paste operations.
Copy and paste operations are disabled by default however by explicitly disabling this feature it will enable audit controls to check that this setting is correct.

The default value is null. Setting this to true is just for audit.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-367D02C1-B71F-4AC3-AA05-85033136A667.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.dnd.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.dnd.disable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.dnd.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.dnd.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.dnd.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.dnd.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.dnd.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.dnd.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.dnd\.disable : "
  expect      : "isolation\.tools\.dnd\.disable : (True|NOT found)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-console-gui-options"
  info        : "Explicitly disable copy/paste operations.
Copy and paste operations are disabled by default however by explicitly disabling this feature it will enable audit controls to check that this setting is correct."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.setGUIOptions.enable\" -value $false"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.setGUIOptions.enable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.setGUIOptions.enable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.setGUIOptions.enable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.setGUIOptions.enable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.setGUIOptions.enable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.setGUIOptions.enable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.setGUIOptions.enable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.setGUIOptions\.enable : "
  expect      : "isolation\.tools\.setGUIOptions\.enable : (False|NOT found)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-console-paste"
  info        : "Explicitly disable copy/paste operations.
Copy and paste operations are disabled by default, however, if you explicitly disable this feature, audit controls can check that this setting is correct.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-367D02C1-B71F-4AC3-AA05-85033136A667.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.paste.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.paste.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.paste.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.paste.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.paste.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.paste.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.paste.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.paste.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.paste\.disable : "
  expect      : "isolation\.tools\.paste\.disable : (True|NOT found)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-disk-shrinking-shrink"
  info        : "Disable virtual disk shrinking.
Shrinking a virtual disk reclaims unused space in it. The shrinking process itself, which takes place on the host, reduces the size of the disk's files by the amount of disk space reclaimed in the wipe process. If there is empty space in the disk, this process reduces the amount of space the virtual disk occupies on the host drive. Normal users and processesthat is, users and processes without root or administrator privilegeswithin virtual machines have the capability to invoke this procedure. A non-root user cannot wipe the parts of the virtual disk that require root-level permissions. However, if this is done repeatedly, the virtual disk can become unavailable while this shrinking is being performed, effectively causing a denial of service. In most datacenter environments, disk shrinking is not done, so you should disable this feature. Repeated disk shrinking can make a virtual disk unavailable. Limited capability is available to non-administrative users in the guest.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-9610FE65-3A78-4982-8C28-5B34FEB264B6.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.diskShrink.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.diskShrink.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.diskShrink.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.diskShrink.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.diskShrink.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.diskShrink.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.diskShrink.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.diskShrink.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.diskShrink\.disable : "
  expect      : "isolation\.tools\.diskShrink\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-disk-shrinking-wiper"
  info        : "Disable virtual disk shrinking.
Shrinking a virtual disk reclaims unused space in it. VMware Tools reclaims all unused portions of disk partitions (such as deleted files) and prepares them for shrinking. Wiping takes place in the guest operating system.  If there is empty space in the disk, this process reduces the amount of space the virtual disk occupies on the host drive. Normal users and processesthat is, users and processes without root or administrator privilegeswithin virtual machines have the capability to invoke this procedure. A non-root user  cannot wipe the parts of the virtual disk that require root-level permissions.  However, if this is done repeatedly, the virtual disk can become unavailable while this shrinking is being performed, effectively causing a denial of service. In most datacenter environments, disk shrinking is not done, so you should disable this feature. Repeated disk shrinking can make a virtual disk unavailable. Limited capability is available to non-administrative users in the guest.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-9610FE65-3A78-4982-8C28-5B34FEB264B6.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.diskWiper.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.diskWiper.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.diskWiper.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.diskWiper.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.diskWiper.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.diskWiper.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.diskWiper.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.diskWiper.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.diskWiper\.disable : "
  expect      : "isolation\.tools\.diskWiper\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-hgfs"
  info        : "Disable HGFS file transfers.
Certain automated operations such as automated tools upgrades use a component in the hypervisor called \"Host Guest File System\" and an attacker could potentially use this to transfer files inside the guest OS

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-76EF6146-FA0E-467F-826F-C953815218C5.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.hgfsServerSet.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.hgfsServerSet.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.hgfsServerSet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.hgfsServerSet.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.hgfsServerSet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.hgfsServerSet.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.hgfsServerSet.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.hgfsServerSet.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.hgfsServerSet\.disable : "
  expect      : "isolation\.tools\.hgfsServerSet\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-independent-nonpersistent"
  info        : "Avoid using independent nonpersistent disks.
The security issue with nonpersistent disk mode is that successful attackers, with a simple shutdown or reboot, might undo or remove any traces that they were ever on the machine. To safeguard against this risk, production virtual machines should be set to use persistent disk mode; additionally, make sure that activity within the VM is logged remotely on a separate server, such as a syslog server or equivalent Windows-based event collector. Without a persistent record of activity on a VM, administrators might never know whether they have been attacked or hacked.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-1E583D6D-77C7-402E-9907-80B7F478D3FC.html"
  solution    : "#Alter the parameters for the following cmdlet to set the VM Disk Type:
Get-VM  | Get-HardDisk | Set-HardDisk"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'scsi\') and contains (audit:key,\'.mode\')]\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'scsi\') and contains (audit:key,\'.mode\')]\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - scsiX:Y.mode : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - scsiX:Y.mode : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "scsi([Xx]|[0-9]+):([Yy]|[0-9]+)\.mode :"
  not_expect  : "scsi([Xx]|[0-9]+):([Yy]|[0-9]+)\.mode : NOT found$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-autologon"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on both vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-60E83710-8295-41A2-9C9D-83DEBB6872C2.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.ghi.autologon.disable\" -value $true"
  reference   : "800-53|AC-14,ITSG-33|AC-14,NESA|T5.6.1"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.autologon.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.ghi.autologon.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.autologon.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.ghi.autologon.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.autologon.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.ghi.autologon.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.ghi.autologon.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.ghi\.autologon\.disable : "
  expect      : "isolation\.tools\.ghi\.autologon\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-biosbbs"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-60E83710-8295-41A2-9C9D-83DEBB6872C2.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.bios.bbs.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.bios.bbs.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.bios.bbs.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.bios.bbs.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.bios.bbs.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.bios.bbs.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.bios.bbs.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.bios.bbs.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.bios\.bbs\.disable : "
  expect      : "isolation\.bios\.bbs\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-getcreds"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-60E83710-8295-41A2-9C9D-83DEBB6872C2.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.getCreds.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.getCreds.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.getCreds.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.getCreds.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.getCreds.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.getCreds.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.getCreds.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.getCreds.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.getCreds\.disable : "
  expect      : "isolation\.tools\.getCreds\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-launchmenu"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-60E83710-8295-41A2-9C9D-83DEBB6872C2.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.ghi.launchmenu.change\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.launchmenu.change\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.ghi.launchmenu.change : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.launchmenu.change\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.ghi.launchmenu.change : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.launchmenu.change\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.ghi.launchmenu.change : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.ghi.launchmenu.change : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.ghi\.launchmenu\.change : "
  expect      : "isolation\.tools\.ghi\.launchmenu\.change : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-memsfss"
  info        : "Disable certain unexposed features.
Because VMware virtual machines are designed to work on both vSphere as well as hosted virtualization platforms such as Workstation and Fusion, there are some VMX parameters that dont apply when running on vSphere.  Although the functionality governed by these parameters is not exposed on ESX, explicitly disabling them will reduce the potential for vulnerabilities.  Disabling these features reduces the number of vectors through which a guest can attempt to influence the host, and thus may help prevent successful exploits.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-60E83710-8295-41A2-9C9D-83DEBB6872C2.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.memSchedFakeSampleStats.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.memSchedFakeSampleStats.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.memSchedFakeSampleStats.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.memSchedFakeSampleStats.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.memSchedFakeSampleStats.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.memSchedFakeSampleStats.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.memSchedFakeSampleStats.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.memSchedFakeSampleStats.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.memSchedFakeSampleStats\.disable : "
  expect      : "isolation\.tools\.memSchedFakeSampleStats\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-protocolhandler"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.ghi.protocolhandler.info.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.protocolhandler.info.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.ghi.protocolhandler.info.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.protocolhandler.info.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.ghi.protocolhandler.info.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.protocolhandler.info.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.ghi.protocolhandler.info.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.ghi.protocolhandler.info.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.ghi\.protocolhandler\.info\.disable : "
  expect      : "isolation\.tools\.ghi\.protocolhandler\.info\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-shellaction"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.ghi.host.shellAction.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.ghi.host.shellAction.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.ghi.host.shellAction.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.ghi.host.shellAction.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.ghi.host.shellAction.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.ghi.host.shellAction.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.ghi.host.shellAction.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.ghi.host.shellAction.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.ghi\.host\.shellAction\.disable : "
  expect      : "isolation\.ghi\.host\.shellAction\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-toporequest"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.dispTopoRequest.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.dispTopoRequest.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.dispTopoRequest.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.dispTopoRequest.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.dispTopoRequest.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.dispTopoRequest.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.dispTopoRequest.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.dispTopoRequest.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.dispTopoRequest\.disable : "
  expect      : "isolation\.tools\.dispTopoRequest\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-trashfolderstate"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.trashFolderState.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.trashFolderState.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.trashFolderState.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.trashFolderState.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.trashFolderState.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.trashFolderState.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.trashFolderState.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.trashFolderState.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.trashFolderState\.disable : "
  expect      : "isolation\.tools\.trashFolderState\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-trayicon"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.ghi.trayicon.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.trayicon.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.ghi.trayicon.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.trayicon.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.ghi.trayicon.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.ghi.trayicon.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.ghi.trayicon.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.ghi.trayicon.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.ghi\.trayicon\.disable : "
  expect      : "isolation\.tools\.ghi\.trayicon\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-unity"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unity.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unity.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unity.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unity.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unity.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unity\.disable : "
  expect      : "isolation\.tools\.unity\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-unity-interlock"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unityInterlockOperation.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unityInterlockOperation.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unityInterlockOperation.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unityInterlockOperation.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unityInterlockOperation.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unityInterlockOperation.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unityInterlockOperation.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unityInterlockOperation.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unityInterlockOperation\.disable : "
  expect      : "isolation\.tools\.unityInterlockOperation\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-unitypush"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unity.push.update.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.push.update.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unity.push.update.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.push.update.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unity.push.update.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.push.update.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unity.push.update.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unity.push.update.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unity\.push\.update\.disable : "
  expect      : "isolation\.tools\.unity\.push\.update\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-unity-taskbar"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unity.taskbar.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.taskbar.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unity.taskbar.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.taskbar.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unity.taskbar.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.taskbar.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unity.taskbar.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unity.taskbar.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unity\.taskbar\.disable : "
  expect      : "isolation\.tools\.unity\.taskbar\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-unity-unityactive"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unityActive.disable\" -value $True"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unityActive.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unityActive.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unityActive.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unityActive.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unityActive.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unityActive.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unityActive.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unityActive\.disable : "
  expect      : "isolation\.tools\.unityActive\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-unity-windowcontents"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unity.windowContents.disable\" -value $True"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.windowContents.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unity.windowContents.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.windowContents.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unity.windowContents.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.unity.windowContents.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.unity.windowContents.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.unity.windowContents.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unity\.windowContents\.disable : "
  expect      : "isolation\.tools\.unity\.windowContents\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-versionget"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.vmxDnDVersionGet.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.vmxDnDVersionGet.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.vmxDnDVersionGet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.vmxDnDVersionGet.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.vmxDnDVersionGet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.vmxDnDVersionGet.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.vmxDnDVersionGet.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.vmxDnDVersionGet.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.vmxDnDVersionGet\.disable : "
  expect      : "isolation\.tools\.vmxDnDVersionGet\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-unexposed-features-versionset"
  info        : "Disable certain unexposed features.
Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.guestDnDVersionSet.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.guestDnDVersionSet.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.guestDnDVersionSet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.guestDnDVersionSet.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.guestDnDVersionSet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.guestDnDVersionSet.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.guestDnDVersionSet.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.guestDnDVersionSet.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.guestDnDVersionSet\.disable : "
  expect      : "isolation\.tools\.guestDnDVersionSet\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-vix-messages"
  info        : "Disable VIX messages from the VM.
The VIX API is a library for writing scripts and programs to manipulate virtual machines. If you do not make use of custom VIX programming in your environment, then you should consider disabling certain features to reduce the potential for vulnerabilities.  The ability to send messages from the VM to the host is one of these features.  Note that disabling this feature does NOT adversely affect the functioning of VIX operations that originate outside the guest, so certain VMware and 3rd party solutions that rely upon this capability should continue to work. This is a deprecated interface. Enabling this setting is for Profile 1 only, to ensure that any deprecated interface is turned off for audit purposes."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.vixMessage.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.vixMessage.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.vixMessage.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.vixMessage.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.vixMessage.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.tools.vixMessage.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.tools.vixMessage.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.vixMessage.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.vixMessage\.disable : "
  expect      : "isolation\.tools\.vixMessage\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disable-VMtools-autoinstall"
  info        : "Disable tools auto install.
Tools auto install can initiate an automatic reboot, disabling this option will prevent tools from being installed automatically and prevents automatic machine reboots.

For Linux-based operating system, Open VM Tools is widely available as an distribution-based package. Consider using this method to manage your VM Tools installation. If you do this, you should disable VM Tools auto-install using this guideline."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.tools.autoInstall.disable\" -value $true"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.autoInstall.disable']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.autoInstall.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.autoInstall.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.autoInstall.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.autoInstall.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - isolation.tools.autoInstall.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - isolation.tools.autoInstall.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.autoInstall\.disable : "
  expect      : "isolation\.tools\.autoInstall\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disconnect-devices-floppy"
  info        : "Disconnect unauthorized devices.
Ensure that no device is connected to a virtual machine if it is not required. For example, serial and parallel ports are rarely used for virtual machines in a datacenter environment, and CD/DVD drives are usually connected only temporarily during software installation. For less commonly used devices that are not required, either the parameter should not be present or its value must be FALSE.  NOTE: The parameters listed are not sufficient to ensure that a device is usable; other required parameters specify how each device is instantiated.  Any enabled or connected device represents a potential attack channel.

When setting is set to FALSE, functionality is disabled, however the device may still show up withing the guest operation system.

http://pubs.vmware.com/vsphere-55/topic/com.vmware.vsphere.security.doc/GUID-822B2ED3-D8D2-4F57-8335-CA46E915A729.html"
  solution    : "# Remove all Floppy drives attached to VMs -
Get-VM | Get-FloppyDrive | Remove-FloppyDrive"
  reference   : "800-171|3.8.7,800-53|MP-7,CN-L3|8.5.4.1(c),CSF|PR.PT-2,ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,NESA|T1.4.1"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'floppy\') and contains (audit:key,\'.present\')]\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'floppy\') and contains (audit:key,\'.present\')]\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - floppyX.present : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - floppyX.present : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "floppy([Xx]|[0-9]+)\.present :"
  not_expect  : "floppy[a-zA-Z0-9]\.present : (False|NOT found)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disconnect-devices-parallel"
  info        : "Disconnect unauthorized devices.
Ensure that no device is connected to a virtual machine if it is not required. For example, serial and parallel ports are rarely used for virtual machines in a datacenter environment, and CD/DVD drives are usually connected only temporarily during software installation. For less commonly used devices that are not required, either the parameter should not be present or its value must be FALSE.  NOTE: The parameters listed are not sufficient to ensure that a device is usable; other required parameters specify how each device is instantiated.  Any enabled or connected device represents a potential attack channel.

When setting is set to FALSE, functionality is disabled, however the device may still show up withing the guest operation system.

http://pubs.vmware.com/vsphere-55/topic/com.vmware.vsphere.security.doc/GUID-822B2ED3-D8D2-4F57-8335-CA46E915A729.html"
  solution    : "# In this Example you will need to add the functions from this post: http://blogs.vmware.com/vipowershell/2012/05/working-with-vm-devices-in-powercli.html
# Remove all Parallel Ports attached to VMs
Get-VM | Get-ParallelPort | Remove-ParallelPort"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'parallel\') and contains (audit:key,\'.present\')]\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'parallel\') and contains (audit:key,\'.present\')]\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - parallelX.present : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - parallelX.present : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "parallel([Xx]|[0-9]+)\.present :"
  expect      : "parallel([Xx]|[0-9]+)\.present : (False|NOT found)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : disconnect-devices-serial"
  info        : "Disconnect unauthorized devices.
Ensure that no device is connected to a virtual machine if it is not required. For example, serial and parallel ports are rarely used for virtual machines in a datacenter environment, and CD/DVD drives are usually connected only temporarily during software installation. For less commonly used devices that are not required, either the parameter should not be present or its value must be FALSE.  NOTE: The parameters listed are not sufficient to ensure that a device is usable; other required parameters specify how each device is instantiated.  Any enabled or connected device represents a potential attack channel.

When setting is set to FALSE, functionality is disabled, however the device may still show up withing the guest operation system.

http://pubs.vmware.com/vsphere-55/topic/com.vmware.vsphere.security.doc/GUID-822B2ED3-D8D2-4F57-8335-CA46E915A729.html"
  solution    : "# In this Example you will need to add the functions from this post: http://blogs.vmware.com/vipowershell/2012/05/working-with-vm-devices-in-powercli.html
# Remove all Serial Ports attached to VMs
Get-VM | Get-SerialPort | Remove-SerialPort"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'serial\') and contains (audit:key,\'.present\')]\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'serial\') and contains (audit:key,\'.present\')]\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - serialX.present : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - serialX.present : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "serial([Xx]|[0-9]+)\.present :"
  expect      : "serial([Xx]|[0-9]+)\.present : (False|NOT found)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : limit-setinfo-size"
  info        : "Limit informational messages from the VM to the VMX file.
The configuration file containing these name-value pairs is limited to a size of 1MB. This 1MB capacity should be sufficient for most cases, but you can change this value if necessary. You might increase this value if large amounts of custom information are being stored in the configuration file. The default limit is 1MB;this limit is applied even when the sizeLimit parameter is not listed in the .vmx file.  Uncontrolled size for the VMX file can lead to denial of service if the datastore is filled.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.vm_admin.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-91BF834E-CB92-4014-8CF7-29CE40F3E8A3.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"tools.setInfo.sizeLimit\" -value 1048576"
  reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'tools.setInfo.sizeLimit\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - tools.setInfo.sizeLimit : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'tools.setInfo.sizeLimit\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - tools.setInfo.sizeLimit : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'tools.setInfo.sizeLimit\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - tools.setInfo.sizeLimit : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - tools.setInfo.sizeLimit : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "tools\.setInfo\.sizeLimit : "
  expect      : "tools\.setInfo\.sizeLimit : (104857[0-6]|10485[0-6][0-9]|1048[0-4][0-9][0-9]|104[0-7][0-9][0-9][0-9]|10[0-3][0-9][0-9][0-9][0-9]|[0-9][0-9][0-9][0-9][0-9][0-9]|[0-9][0-9][0-9][0-9][0-9]|[0-9][0-9][0-9][0-9]|[0-9][0-9][0-9]|[0-9][0-9]|[0-9])$"
</custom_item>

<report type:"WARNING">
  description : "VM : minimize-console-VNC-use"
  info        : "Control access to VM console via VNC protocol.
The VM console enables you to connect to the console of a virtual machine, in effect seeing what a monitor on a physical server would show. This console is also availabe via the VNC protocol. Setting up this access also involves setting up firewall rules on each ESXi server the virtual machine will run on.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"RemoteDisplay.vnc.enabled\" -value $false"
  reference   : "800-53|CM-7"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_VM
  description : "VM : prevent-device-interaction-connect"
  info        : "Prevent unauthorized removal, connection and modification of devices.
In a virtual machine, users and processes without root or administrator privileges can connect or disconnect devices, such as network adaptors and CD-ROM drives, and can modify device settings. Use the virtual machine settings editor or configuration editor to remove unneeded or unused hardware devices. If you want to use the device again, you can prevent a user or running process in the virtual machine from connecting, disconnecting, or modifying a device from within the guest operating system. By default, a rogue user with nonadministrator privileges in a virtual machine can:
1. Connect a disconnected CD-ROM drive and access sensitive information on the media left in the drive
2. Disconnect a network adaptor to isolate the virtual machine from its network, which is a denial of service
3. Modify settings on a device

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.vm_admin.doc/GUID-685722FA-9009-439C-9142-18A9E7C592EA.html
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-F88A5FED-552B-44F9-A168-C62D9306DBD6.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.device.connectable.disable\" -value $true"
  reference   : "800-171|3.1.7,800-53|AC-6(10),CSF|PR.AC-4"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.device.connectable.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.device.connectable.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.device.connectable.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.device.connectable.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.device.connectable.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.device.connectable.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.device.connectable.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.device\.connectable\.disable : "
  expect      : "isolation\.device\.connectable\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : prevent-device-interaction-edit"
  info        : "Prevent unauthorized removal, connection and modification of devices.
In a virtual machine, users and processes without root or administrator privileges can connect or disconnect devices, such as network adaptors and CD-ROM drives, and can modify device settings. Use the virtual machine settings editor or configuration editor to remove unneeded or unused hardware devices. If you want to use the device again, you can prevent a user or running process in the virtual machine from connecting, disconnecting, or modifying a device from within the guest operating system. By default, a rogue user with nonadministrator privileges in a virtual machine can:
1. Connect a disconnected CD-ROM drive and access sensitive information on the media left in the drive
2. Disconnect a network adaptor to isolate the virtual machine from its network, which is a denial of service
3. Modify settings on a device

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-F88A5FED-552B-44F9-A168-C62D9306DBD6.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"isolation.device.edit.disable\" -value $true"
  reference   : "800-171|3.1.7,800-53|AC-6(10),CSF|PR.AC-4"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.device.edit.disable\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.device.edit.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.device.edit.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.device.edit.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'isolation.device.edit.disable\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - isolation.device.edit.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - isolation.device.edit.disable : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.device\.edit\.disable : "
  expect      : "isolation\.device\.edit\.disable : True$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : restrict-host-info"
  info        : "Do not send host information to guests.
By enabling a VM to get detailed information about the physical host, an adversary could potentially use this information to inform further attacks on the host.

If set to True a VM can obtain detailed information about the physical host. *The default value for the parameter is False but is displayed as Null. Setting to False is purely for audit purposes.*

This setting should not be TRUE unless a particular VM requires this information for performance monitoring.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-2CF880DA-2435-4201-9AFB-A16A11951A2D.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"tools.guestlib.enableHostInfo\" -value $false"
  reference   : "800-171|3.13.4,800-53|SC-4,ITSG-33|SC-4"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'tools.guestlib.enableHostInfo\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - tools.guestlib.enableHostInfo : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'tools.guestlib.enableHostInfo\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - tools.guestlib.enableHostInfo : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'tools.guestlib.enableHostInfo\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - tools.guestlib.enableHostInfo : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - tools.guestlib.enableHostInfo : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "tools\.guestlib\.enableHostInfo : "
  expect      : "tools\.guestlib\.enableHostInfo : False$"
</custom_item>

<report type:"WARNING">
  description : "VM : TransparentPageSharing-inter-VM-Enabled"
  info        : "Check for enablement of salted VM's that are sharing memory pages.
When salting is enabled (Mem.ShareForceSalting=1 or 2) in order to share a page between two virtual machines both salt and the content of the page must be same. A salt value is a configurable vmx option for each virtual machine. You can manually specify the salt values in the virtual machine's vmx file with the new vmx option sched.mem.pshare.salt. If this option is not present in the virtual machine's vmx file, then the value of vc.uuid vmx option is taken as the default value. Since the vc.uuid is unique to each virtual machine, by default TPS happens only among the pages belonging to a particular virtual machine (Intra-VM).

If a group of virtual machines are considered trustworthy, it is possible to share pages among them by setting a common salt value for all those virtual machines (inter-VM).

https://kb.vmware.com/kb/2080735

https://kb.vmware.com/kb/2097593

https://kb.vmware.com/kb/2091682

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "# Add the setting to all VMs -
$ vmsaltvalue = \"<some unique value>\"
Get-VM | New-AdvancedSetting -Name \"sched.mem.pshare.salt\" -value $vmsaltvalue"
  reference   : "800-53|SI-16"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_VM
  description : "VM : verify-network-filter"
  info        : "Control access to VMs through the dvfilter network APIs.
An attacker might compromise a VM by making use the dvFilter API. Configure only those VMs to use the API that need this access.

This setting is considered an \"Audit Only\" guideline. If there is a value present, the admin should check it to ensure it is correct.
 http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-CD0783C9-1734-4B9A-B821-ED17A77B0206.html"
  solution    : "From the vSphere web client, select each VM and click \"Manage\" -> \"Settings\" -> \"VM Options\". Click \"Edit\". Go to \"VM Options\" tab and expand \"Advanced\". Click on \"Edit Configuration\". Click on \"Add Row\" and then add the desired configuration parameter with the desired value."
  reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'ethernet\') and contains (audit:key,\'.filter\') and contains (audit:key,\'.name\')]\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[contains (audit:key,\'ethernet\') and contains (audit:key,\'.filter\') and contains (audit:key,\'.name\')]\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"../../../audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - <xsl:value-of select=\"audit:key\"/> : <xsl:value-of select=\"audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - ethernetn.filtern.name : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - ethernetn.filtern.name : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "ethernet[0-9]+\.filter[0-9]+\.name :"
  expect      : "ethernet[0-9]+\.filter[0-9]+\.name : NOT found$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "VM : verify-PCI-Passthrough"
  info        : "Audit all uses of PCI or PCIe passthrough functionality.
Using the VMware DirectPath I/O feature to pass through a PCI or PCIe device to a virtual machine results in a potential security vulnerability.  The vulnerability can be triggered by buggy or malicious code running in privileged mode in the guest OS, such as a device driver.  Industry-standard hardware and firmware does not currently have sufficient error containment support to make it possible for ESXi to close the vulnerability fully.

There can be a valid business reason for a VM to have this configured. This is an audit-only guideline. You should be aware of what virtual machines are configured with direct passthrough of PCI and PCIe devices and ensure that their guest OS is monitored carefully for malicious or buggy drivers that could crash the host.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.powercli.ug.doc/GUID-0E922C7E-67DF-4A05-B4C0-013FC4EC60F4.html"
  solution    : "# Add the setting to all VMs -
Get-VM | New-AdvancedSetting -Name \"pciPassthru*.present\" -value \"\""
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'pciPassthru*.present\']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - pciPassthru*.present : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'pciPassthru*.present\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - pciPassthru*.present : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:extraConfig[audit:key=\'pciPassthru*.present\']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:ipAddress\"/>) - pciPassthru*.present : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineConfigInfo\']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type=\'VirtualMachineSummary\']/audit:guest/audit:toolsStatus\"/>) - pciPassthru*.present : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "pciPassthru.*\.present : "
  expect      : "pciPassthru.*\.present : NOT found$"
</custom_item>

<report type:"WARNING">
  description : "vNetwork : enable-bpdu-filter"
  info        : "Enable BPDU filter on the ESXi host to prevent being locked out of physical switch ports with Portfast and BPDU Guard enabled.
BPDU Guard and Portfast are commonly enabled on the physical switch to which the ESXi host is directly connected to reduce the STP convergence delay. If a BPDU packet is sent from a virtual machine on the ESXi host to the physical switch so configured, a cascading lockout of all the uplink interfaces from the ESXi host can occur. To prevent this type of lockout, BPDU Filter can be enabled on the ESXi host to drop any BPDU packets being sent to the physical switch. The caveat is that certain SSL VPN which use Windows bridging capability can legitimately generate BPDU packets. The administrator should verify that there are no legitimate BPDU packets generated by virtual machines on the ESXi host prior to enabling BPDU Filter.  If BPDU Filter is enabled in this situation, enabling Reject Forged Transmits on the virtual switch port group adds protection against Spanning Tree loops.

http://kb.vmware.com/kb/2017193

http://kb.vmware.com/kb/2047822

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-FA661AE0-C0B5-4522-951D-A3790DBE70B4.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From vSphere Web cClient, select the host and then click \"Manage\" -> \"Settings\" -> \"System\" -> \"Advanced System settings\". Filter for Net.BlockGuestBPDU to see the configured value. Click edit and set it to the desired value."
  reference   : "PCI-DSS|2.2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<report type:"WARNING">
  description : "vNetwork : limit-network-healthcheck"
  info        : "Enable VDS network healthcheck only if you need it.
Network Healthcheck is disabled by default. Once enabled, the healthcheck packets contain information on host#, vds# port#, which an attacker would find useful. It is recommended that network healthcheck be used for troubleshooting, and turned off when troubleshooting is finished.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-C590B7D3-4E28-4F2B-8A59-4CDB9C6F2DAA.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.networking.doc/GUID-4A6C1E1C-8577-4AE6-8459-EEB942779A82.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From the vSphere Web Client, select each VDS and go to \"Manage\" -> \"Settings\" -> Health check\". Click \"Edit\" and set \"VLAN and MTU Check\" and \"Teaming and Failover Check\" to \"Disabled\"."
  reference   : "PCI-DSS|2.2.2"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "vNetwork : reject-forged-transmit - 'vSwitch'"
  info        : "Ensure that the Forged Transmits policy is set to reject.
If the virtual machine operating system changes the MAC address, the operating system can send frames with an impersonated source MAC address at any time. This allows an operating system to stage malicious attacks on the devices in a network by impersonating a network adaptor authorized by the receiving network.

Forged transmissions is set to Accept by default.

This means the virtual switch does not compare the source and effective MAC addresses.

To protect against MAC address impersonation, all virtual switches should have forged transmissions set to Reject. Reject Forged Transmit can be set at the vSwitch and/or the Portgroup level. You can override switch level settings at the Portgroup level.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-7DC6486F-5400-44DF-8A62-6273798A2F80.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.networking.doc/GUID-891147DD-3E2E-45A1-9B50-7717C3443DD7.html"
  solution    : "From the vSphere Web Client select the host and click \"Manage\" -> \"Networking\" -> \"Virtual Switches\". For each virtual switch and for each port group within that virtual switch, click edit. Go to \"Security\" and set the \"Forged Transmits\" to \"Reject\"."
  reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name=\'name\']/audit:val\"/> (<xsl:value-of select=\"audit:name\"/>) - forgedTransmits = <xsl:value-of select=\"audit:spec/audit:policy/audit:security/audit:forgedTransmits\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/><xsl:text> - forgedTransmits = NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "forgedTransmits ="
  expect      : "forgedTransmits = False$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "vNetwork : reject-forged-transmit - 'PortGroup'"
  info        : "Ensure that the Forged Transmits policy is set to reject.
If the virtual machine operating system changes the MAC address, the operating system can send frames with an impersonated source MAC address at any time. This allows an operating system to stage malicious attacks on the devices in a network by impersonating a network adaptor authorized by the receiving network.

Forged transmissions is set to Accept by default.

This means the virtual switch does not compare the source and effective MAC addresses.

To protect against MAC address impersonation, all virtual switches should have forged transmissions set to Reject. Reject Forged Transmit can be set at the vSwitch and/or the Portgroup level. You can override switch level settings at the Portgroup level.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-7DC6486F-5400-44DF-8A62-6273798A2F80.html
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.networking.doc/GUID-891147DD-3E2E-45A1-9B50-7717C3443DD7.html"
  solution    : "From the vSphere Web Client select the host and click \"Manage\" -> \"Networking\" -> \"Virtual Switches\". For each virtual switch and for each port group within that virtual switch, click edit. Go to \"Security\" and set the \"Forged Transmits\" to \"Reject\"."
  reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name=\'name\']/audit:val\"/> (<xsl:value-of select=\"audit:spec/audit:name\"/>) - forgedTransmits = <xsl:value-of select=\"audit:computedPolicy/audit:security/audit:forgedTransmits\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/><xsl:text> - forgedTransmits = NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "forgedTransmits ="
  expect      : "forgedTransmits = False$"
</custom_item>

<report type:"WARNING">
  description : "vNetwork : reject-forged-transmit-dvportgroup"
  info        : "Ensure that the Forged Transmits policy is set to reject.
If the virtual machine operating system changes the MAC address, the operating system can send frames with an impersonated source MAC address at any time. This allows an operating system to stage malicious attacks on the devices in a network by impersonating a network adaptor authorized by the receiving network.

When the Forged transmits option is set to Accept, ESXi does not compare source and effective MAC addresses.

To protect against MAC impersonation, you can set the Forged transmits option to Reject. If you do, the host compares the source MAC address being transmitted by the guest operating system with the effective MAC address for its virtual machine adapter to see if they match. If the addresses do not match, the ESXi host drops the packet.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.networking.doc/GUID-891147DD-3E2E-45A1-9B50-7717C3443DD7.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-C590B7D3-4E28-4F2B-8A59-4CDB9C6F2DAA.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From vSphere Web Client, for each portgroup within each distributed switch go to \"Manage\" -> \"Settings\" -> \"Policies\" and click \"Edit\". Go to \"Security\" and set the \"Forged transmits\" policy to \"Reject\"."
  reference   : "PCI-DSS|2.2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "vNetwork : reject-mac-changes - 'vswitch'"
  info        : "Ensure that the MAC Address Changes policy is set to reject.
If the virtual machine operating system changes the MAC address, it can send frames with an impersonated source MAC address at any time. This allows it to stage malicious attacks on the devices in a network by impersonating a network adaptor authorized by the receiving network. This will prevent VMs from changing their effective MAC address. It will affect applications that require this functionality. An example of an application like this is Microsoft Clustering, which requires systems to effectively share a MAC address. This will also affect how a layer 2 bridge will operate. This will also affect applications that require a specific MAC address for licensing. An exception should be made for the port groups that these applications are connected to. Reject MAC Changes can be set at the vSwitch and/or the Portgroup level. You can override switch level settings at the Portgroup level.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-942BD3AA-731B-4A05-8196-66F2B4BF1ACB.html"
  solution    : "From the vSphere web client select the host and click \"Manage\" -> \"Networking\" -> \"Virtual Switches\". For each virtual switch and for each port group within that virtual switch, click edit. Go to \"Security\" and set the \"MAC address changes\" to \"Reject\"."
  reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name=\'name\']/audit:val\"/> (<xsl:value-of select=\"audit:name\"/>) - macChanges = <xsl:value-of select=\"audit:spec/audit:policy/audit:security/audit:macChanges\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/><xsl:text> - macChanges = NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "macChanges ="
  expect      : "macChanges = False$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "vNetwork : reject-mac-changes - 'portgroup'"
  info        : "Ensure that the MAC Address Changes policy is set to reject.
If the virtual machine operating system changes the MAC address, it can send frames with an impersonated source MAC address at any time. This allows it to stage malicious attacks on the devices in a network by impersonating a network adaptor authorized by the receiving network. This will prevent VMs from changing their effective MAC address. It will affect applications that require this functionality. An example of an application like this is Microsoft Clustering, which requires systems to effectively share a MAC address. This will also affect how a layer 2 bridge will operate. This will also affect applications that require a specific MAC address for licensing. An exception should be made for the port groups that these applications are connected to. Reject MAC Changes can be set at the vSwitch and/or the Portgroup level. You can override switch level settings at the Portgroup level.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-942BD3AA-731B-4A05-8196-66F2B4BF1ACB.html"
  solution    : "From the vSphere web client select the host and click \"Manage\" -> \"Networking\" -> \"Virtual Switches\". For each virtual switch and for each port group within that virtual switch, click edit. Go to \"Security\" and set the \"MAC address changes\" to \"Reject\"."
  reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name=\'name\']/audit:val\"/> (<xsl:value-of select=\"audit:spec/audit:name\"/>) - macChanges = <xsl:value-of select=\"audit:computedPolicy/audit:security/audit:macChanges\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/><xsl:text> - macChanges = NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "macChanges ="
  expect      : "macChanges = False$"
</custom_item>

<report type:"WARNING">
  description : "vNetwork : reject-mac-changes-dvportgroup"
  info        : "Ensure that the MAC Address Changes policy is set to reject.
If the virtual machine operating system changes the MAC address, it can send frames with an impersonated source MAC address at any time. This allows it to stage malicious attacks on the devices in a network by impersonating a network adaptor authorized by the receiving network. This will prevent VMs from changing their effective MAC address. It will affect applications that require this functionality. An example of an application like this is Microsoft Clustering, which requires systems to effectively share a MAC address. This will also affect how a layer 2 bridge will operate. This will also affect applications that require a specific MAC address for licensing. An exception should be made for the  dvPortgroups that these applications are connected to.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-C590B7D3-4E28-4F2B-8A59-4CDB9C6F2DAA.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From vSphere web client, for each portgroup within each distributed switch go to \"Manage\" -> \"Settings\" -> \"Policies\" and click \"Edit\". Go to \"Security\" and set the \"MAC address changes\" policy to \"Reject\"."
  reference   : "800-53|SC-7"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "vNetwork : reject-promiscuous-mode - 'vswitch'"
  info        : "Ensure that the Promiscuous Mode policy is set to reject.
When promiscuous mode is enabled for a virtual switch all virtual machines connected to the Portgroup have the potential of reading all packets across that network, meaning only the virtual machines connected to that Portgroup. Promiscuous mode is disabled by default on the ESXI Server, and this is the recommended setting. However, there might be a legitimate reason to enable it for debugging, monitoring or troubleshooting reasons. Security devices might require the ability to see all packets on a vSwitch.  An exception should be made for the Portgroups that these applications are connected to, in order to allow for full-time visibility to the traffic on that Portgroup. Promiscous mode can be set at the vSwitch and/or the Portgroup level. You can override switch level settings at the Portgroup level.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-92F3AB1F-B4C5-4F25-A010-8820D7250350.html"
  solution    : "From the vSphere Web Client select the host and click \"Manage\" -> \"Networking\" -> \"Virtual Switches\". For each virtual switch and for each port group within that virtual switch, click Edit. Go to \"Security\" and set the \"Promiscuous Mode\" to \"Reject\"."
  reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:vswitch\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name=\'name\']/audit:val\"/> (<xsl:value-of select=\"audit:name\"/>) - allowPromiscuous = <xsl:value-of select=\"audit:spec/audit:policy/audit:security/audit:allowPromiscuous\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/><xsl:text> - allowPromiscuous = NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "allowPromiscuous ="
  expect      : "allowPromiscuous = False$"
</custom_item>

<custom_item>
  type        : AUDIT_ESX
  description : "vNetwork : reject-promiscuous-mode - 'portgroup'"
  info        : "Ensure that the Promiscuous Mode policy is set to reject.
When promiscuous mode is enabled for a virtual switch all virtual machines connected to the Portgroup have the potential of reading all packets across that network, meaning only the virtual machines connected to that Portgroup. Promiscuous mode is disabled by default on the ESXI Server, and this is the recommended setting. However, there might be a legitimate reason to enable it for debugging, monitoring or troubleshooting reasons. Security devices might require the ability to see all packets on a vSwitch.  An exception should be made for the Portgroups that these applications are connected to, in order to allow for full-time visibility to the traffic on that Portgroup. Promiscous mode can be set at the vSwitch and/or the Portgroup level. You can override switch level settings at the Portgroup level.
http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-92F3AB1F-B4C5-4F25-A010-8820D7250350.html"
  solution    : "From the vSphere Web Client select the host and click \"Manage\" -> \"Networking\" -> \"Virtual Switches\". For each virtual switch and for each port group within that virtual switch, click Edit. Go to \"Security\" and set the \"Promiscuous Mode\" to \"Reject\"."
  reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type=\'HostConfigInfo\']/audit:network/audit:portgroup\">"
  xsl_stmt    : "<xsl:value-of select=\"../../../../audit:propSet[audit:name=\'name\']/audit:val\"/> (<xsl:value-of select=\"audit:spec/audit:name\"/>) - allowPromiscuous = <xsl:value-of select=\"audit:computedPolicy/audit:security/audit:allowPromiscuous\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/><xsl:text> - allowPromiscuous = NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "allowPromiscuous ="
  expect      : "allowPromiscuous = False$"
</custom_item>

<report type:"WARNING">
  description : "vNetwork : reject-promiscuous-mode-dvportgroup"
  info        : "Ensure that the Promiscuous Mode policy is set to reject.
When promiscuous mode is enabled for a dvPortgroup, all virtual machines connected to the dvPortgroup have the potential of reading all packets across that network, meaning only the virtual machines connected to that  dvPortgroup. Promiscuous mode is disabled by default on the ESXI Server, and this is the recommended setting. However, there might be a legitimate reason to enable it for debugging, monitoring or troubleshooting reasons. Security devices might require the ability to see all packets on a vSwitch.  An exception should be made for the dvPortgroups that these applications are connected to, in order to allow for full-time visibility to the traffic on that dvPortgroup.  Unlike standard vSwitches, dvSwitches only allow Promiscuous Mode at the dvPortgroup level

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-C590B7D3-4E28-4F2B-8A59-4CDB9C6F2DAA.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From vSphere web client, for each portgroup within each distributed switch go to \"Manage\" -> \"Settings\" -> \"Policies\" and click \"Edit\". Go to \"Security\" and set the \"Promiscuous Mode\" policy to \"Reject\"."
  reference   : "800-53|SC-7"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<report type:"WARNING">
  description : "vNetwork : restrict-netflow-usage"
  info        : "Ensure that VDS Netflow traffic is only being sent to authorized collector Ips.
The vSphere VDS can export Netflow information about traffic crossing the VDS. Netflow exports are not encrypted and can contain information about the virtual network making it easier for  a MITM attack to be executed successfully.  If Netflow export is required, verify that all VDS Netflow target IP's are correct.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-FA661AE0-C0B5-4522-951D-A3790DBE70B4.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.networking.doc/GUID-55FCEC92-74B9-4E5F-ACC0-4EA1C36F397A.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "# Disable Netfow for a VDPortgroup -
$DPortgroup = <name of portgroup>
Get-VDPortgroup $DPortGroup | Disable-PGNetflow"
  reference   : "PCI-DSS|2.2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<report type:"WARNING">
  description : "vNetwork : restrict-port-level-overrides"
  info        : "Restrict port-level configuration overrides on VDS .
Port-level configuration overrides are disabled by default. Once enabled, this allows for different security settings to be set from what is established at the Port-Group level. There are cases where particular VM's require unique configurations, but this should be monitored so it is only used when authorized.  If overrides are not monitored, anyone who gains access to a VM with a less secure VDS configuration could surreptiously exploit that broader access.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-FA661AE0-C0B5-4522-951D-A3790DBE70B4.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.networking.doc/GUID-DDF5CD98-454A-471D-9053-03ABB8FE86D1.html

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From vSphere Web Client, for each portgroup within each distributed switch go to \"Manage\" -> \"Settings\" -> \"Properties\". Click \"Edit\" and go to \"Advanced\". Disable all \"Override port policies\"."
  reference   : "PCI-DSS|2.2.3"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "vNetwork : verify-dvfilter-bind"
  info        : "Prevent unintended use of dvfilter network APIs.
If you are not using products that make use of the dvfilter network API, the host should not be configured to send network information to a VM. If the API is enabled, an attacker might attempt to connect a VM to it, thereby potentially providing access to the network of other VMs on the host.  If you are using a product that makes use of this API then verify that the host has been configured correctly.

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.security.doc/GUID-CD0783C9-1734-4B9A-B821-ED17A77B0206.html

http://pubs.vmware.com/vsphere-60/topic/com.vmware.vsphere.ext_solutions.doc/GUID-6013E15D-92CE-4970-953C-ACCB36ADA8AD.html"
  solution    : "# Set Remove Net.DVFilterBindIpAddress to null on all hosts -
Get-VMHost HOST1 | Foreach { Set-VMHostAdvancedConfiguration -VMHost $_ -Name Net.DVFilterBindIpAddress -Value \"\" }"
  reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
  see_also    : "https://www.vmware.com/content/dam/digitalmarketing/vmware/en/files/xls/vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Net.DVFilterBindIpAddress']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Net.DVFilterBindIpAddress']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Net.DVFilterBindIpAddress']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Net.DVFilterBindIpAddress : NOT found</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Net\.DVFilterBindIpAddress : "
  expect      : "Net\.DVFilterBindIpAddress : NOT found$"
</custom_item>

</check_type>
