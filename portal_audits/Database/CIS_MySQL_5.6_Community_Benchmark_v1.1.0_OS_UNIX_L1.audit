#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.8 $
# $Date: 2020/04/22 $
#
# Description : This audit is based on the Security Configuration Benchmark For MySQL 5.6 Community Editions
#             Version 1.1.0 - 08-15-2016
#             https://workbench.cisecurity.org/files/1623
#
# NOTE		:
#
#<ui_metadata>
#<display_name>CIS MySQL 5.6 Linux OS L1 v1.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>MySQL 5.6 Linux L1</name>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/files/1623</link>
#</spec>
#<labels>database,cis,mysql,mysql_5,mysql_5.6</labels>
#<benchmark_refs>LEVEL,CSCv6</benchmark_refs>
#<variables>
#  <variable>
#    <name>MYSQL_DATA</name>
#    <default>/var/lib/mysql/</default>
#    <description>MySQL Data Directory</description>
#    <info>This is your MySQL data directory.</info>
#  </variable>
#  <variable>
#    <name>MYSQL_USER</name>
#    <default>mysql</default>
#    <description>MySQL User Account</description>
#    <info>This is your MySQL user account.</info>
#  </variable>
#  <variable>
#    <name>MYSQL_LOG</name>
#    <default>/var/log/mysqld.log</default>
#    <description>MySQL Log File</description>
#    <info>This is your MySQL log file.</info>
#  </variable>
#  <variable>
#    <name>MYSQL_ERROR_LOG</name>
#    <default>/var/log/AUDITORACLE.err</default>
#    <description>MySQL Error Log File</description>
#    <info>This is your MySQL error log file.</info>
#  </variable>
#  <variable>
#    <name>MYSQL_QUERY_LOG</name>
#    <default>/var/log/AUDITORACLE-slow.log</default>
#    <description>MySQL Query Log File</description>
#    <info>This is your MySQL query log file.</info>
#  </variable>
#  <variable>
#    <name>MYSQL_RELAY_LOG</name>
#    <default>/var/log/relay.log</default>
#    <description>MySQL Replication Relay Log File</description>
#    <info>This is your MySQL replication relay log file.</info>
#  </variable>
#  <variable>
#    <name>MYSQL_GENERAL_LOG</name>
#    <default>/var/log/AUDITORACLE.log</default>
#    <description>MySQL General Log File</description>
#    <info>This is your MySQL general log file.</info>
#  </variable>
#  <variable>
#    <name>SSL_CERT_PATH</name>
#    <default>/PATH/TO/server-cert.pem</default>
#    <description>SSL Cert Path</description>
#    <info>This is the path to your server's SSL certificate.</info>
#  </variable>
#  <variable>
#    <name>PLUGIN_DIR_PATH</name>
#    <default>/var/lib/mysql/lib/plugin</default>
#    <description>Plugins Directory Path</description>
#    <info>This is the path to your server's plugins directory.</info>
#  </variable>
#  <variable>
#    <name>SYSCONFDIR</name>
#    <default>SYSCONFDIR/my.cnf</default>
#    <description>sysconfdir Path</description>
#    <info>This is the directory specified with the --sysconfdir option to configure when MySQL was built.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "MySQL 5.6 Community Edition is installed"
      rpm         : "mysql-server-5.6.0"
      operator    : "gte"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "MySQL 5.6 Community Edition is installed"
    </report>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "1.2 Use Dedicated Least Privileged Account for MySQL Daemon/Service"
      info          : "As with any service installed on a host, it can be provided with its own user context. Providing a dedicated user to the service provides the ability to precisely constrain the service within the larger host context."
      solution      : "Create a user which is only used for running MySQL and directly related processes. This user must not have administrative rights to the system."
      reference     : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also      : "https://workbench.cisecurity.org/files/1623"
      cmd           : "/bin/ps  -ef | /bin/egrep \"^mysql.*$\""
      expect        : ".+"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "1.4 Verify That the MYSQL_PWD Environment Variables Is Not In Use"
      info          : "MySQL can read a default database password from an environment variable called MYSQL_PWD."
      solution      : "Check which users and/or scripts are setting MYSQL_PWD and change them to use a more secure method."
      reference     : "800-171|3.5.10,800-53|IA-5(1),CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|CY6,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also      : "https://workbench.cisecurity.org/files/1623"
      cmd           : "/bin/egrep MYSQL_PWD /proc/*/environ | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'"
      expect        : "none"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.6 Verify That 'MYSQL_PWD' Is Not Set In Users' Profiles - .bashrc"
      info        : "MySQL can read a default database password from an environment variable called MYSQL_PWD."
      solution    : "Check which users and/or scripts are setting MYSQL_PWD and change them to use a more secure method."
      reference   : "800-171|3.5.10,800-53|IA-5(1),CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|CY6,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/1623"
      file        : "~/.bashrc"
      regex       : "^[\\s]*MYSQL_PWD"
      expect      : "^[\\s]*MYSQL_PWD"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.6 Verify That 'MYSQL_PWD' Is Not Set In Users' Profiles - .profile"
      info        : "MySQL can read a default database password from an environment variable called MYSQL_PWD."
      solution    : "Check which users and/or scripts are setting MYSQL_PWD and change them to use a more secure method."
      reference   : "800-171|3.5.10,800-53|IA-5(1),CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|CY6,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/1623"
      file        : "~/.profile"
      regex       : "^[\\s]*MYSQL_PWD"
      expect      : "^[\\s]*MYSQL_PWD"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.6 Verify That 'MYSQL_PWD' Is Not Set In Users' Profiles - .bash_profile"
      info        : "MySQL can read a default database password from an environment variable called MYSQL_PWD."
      solution    : "Check which users and/or scripts are setting MYSQL_PWD and change them to use a more secure method."
      reference   : "800-171|3.5.10,800-53|IA-5(1),CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|CY6,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/1623"
      file        : "~/.bash_profile"
      regex       : "^[\\s]*MYSQL_PWD"
      expect      : "^[\\s]*MYSQL_PWD"
    </custom_item>

    <report type:"WARNING">
      description : "2.3 Do Not Specify Passwords in Command Line"
      info        : "When a command is executed on the command line, for example mysql -u admin - ppassword, the password may be visible in the user's shell/command history or in the process list.

      NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Use -p without password and then enter the password when prompted, use a properly secured .my.cnf file, or store authentication information in encrypted format in .mylogin.cnf."
      reference   : "LEVEL|1NS"
      see_also    : "https://workbench.cisecurity.org/files/1623"
    </report>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "3.1 Ensure 'datadir' Has Appropriate Permissions"
      info        : "The data directory is the location of the MySQL databases."
      solution    : "Execute the following commands at a terminal prompt:
   chmod 700 <datadir>
   chown mysql:mysql <datadir>"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @MYSQL_DATA@ replaced with "/var/lib/mysql/" in field "file".
      file        : "/var/lib/mysql/"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "owner".
      owner       : "mysql" || "mysql"
      mask        : "077"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "group".
      group       : "mysql" || "mysql"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "3.2 Ensure 'log_bin_basename' Files Have Appropriate Permissions"
      info        : "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log, error log, slow query log, relay log, and general log. Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user."
      solution    : "Execute the following command for each log file location requiring corrected permissions:
   chmod 660 <log file>
   chown mysql:mysql <log file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @MYSQL_LOG@ replaced with "/var/log/mysqld.log" in field "file".
      file        : "/var/log/mysqld.log"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "owner".
      owner       : "mysql" || "mysql"
      mask        : "117"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "group".
      group       : "mysql" || "mysql"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "3.3 Ensure 'log_error' Has Appropriate Permissions"
      info        : "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log, error log, slow query log, relay log, and general log. Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user."
      solution    : "Execute the following command for each log file location requiring corrected permissions:
   chmod 660 <log file>
   chown mysql:mysql <log file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @MYSQL_ERROR_LOG@ replaced with "/var/log/AUDITORACLE.err" in field "file".
      file        : "/var/log/AUDITORACLE.err"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "owner".
      owner       : "mysql" || "mysql"
      mask        : "117"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "group".
      group       : "mysql" || "mysql"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "3.4 Ensure 'slow_query_log' Has Appropriate Permissions"
      info        : "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log, error log, slow query log, relay log, and general log. Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user."
      solution    : "Execute the following command for each log file location requiring corrected permissions:
   chmod 660 <log file>
   chown mysql:mysql <log file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @MYSQL_QUERY_LOG@ replaced with "/var/log/AUDITORACLE-slow.log" in field "file".
      file        : "/var/log/AUDITORACLE-slow.log"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "owner".
      owner       : "mysql" || "mysql"
      mask        : "117"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "group".
      group       : "mysql" || "mysql"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "3.5 Ensure 'relay_log_basename' Files Have Appropriate Permissions"
      info        : "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log, error log, slow query log, relay log, and general log. Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user."
      solution    : "Execute the following command for each log file location requiring corrected permissions:
   chmod 660 <log file>
   chown mysql:mysql <log file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @MYSQL_RELAY_LOG@ replaced with "/var/log/relay.log" in field "file".
      file        : "/var/log/relay.log"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "owner".
      owner       : "mysql" || "mysql"
      mask        : "117"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "group".
      group       : "mysql" || "mysql"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "3.6 Ensure 'general_log_file' Has Appropriate Permissions"
      info        : "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log, error log, slow query log, relay log, and general log. Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user."
      solution    : "Execute the following command for each log file location requiring corrected permissions:
   chmod 660 <log file>
   chown mysql:mysql <log file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @MYSQL_GENERAL_LOG@ replaced with "/var/log/AUDITORACLE.log" in field "file".
      file        : "/var/log/AUDITORACLE.log"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "owner".
      owner       : "mysql" || "mysql"
      mask        : "117"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "group".
      group       : "mysql" || "mysql"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "3.7 Ensure SSL Key Files Have Appropriate Permissions"
      info        : "When configured to use SSL/TLS, MySQL relies on key files, which are stored on the host's filesystem. These key files are subject to the host's permissions structure."
      solution    : "Execute the following commands at a terminal prompt to remediate this setting using the Value from the audit procedure:
   chown mysql:mysql <ssl_key Value>
   chmod 400 <ssl_key Value>"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @SSL_CERT_PATH@ replaced with "/PATH/TO/server-cert.pem" in field "file".
      file        : "/PATH/TO/server-cert.pem"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "owner".
      owner       : "mysql" || "mysql"
      mask        : "377"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "group".
      group       : "mysql" || "mysql"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "3.8 Ensure Plugin Directory Has Appropriate Permissions"
      info        : "The plugin directory is the location of the MySQL plugins. Plugins are storage engines or user defined functions (UDFs)."
      solution    : "To remediate this setting, execute the following commands at a terminal prompt using the plugin_dir Value from the audit procedure.
   chmod 775 <plugin_dir Value> (or use 755)
   chown mysql:mysql <plugin_dir Value>"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @PLUGIN_DIR_PATH@ replaced with "/var/lib/mysql/lib/plugin" in field "file".
      file        : "/var/lib/mysql/lib/plugin"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "owner".
      owner       : "mysql" || "mysql"
      mask        : "002"
# Note: Variable @MYSQL_USER@ replaced with "mysql" in field "group".
      group       : "mysql" || "mysql"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "/etc/my.cnf Exists"
          file        : "/etc/my.cnf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - /etc/my.cnf"
              file        : "/etc/my.cnf"
              regex       : "^[\\s]*skip-grant-tables[\\s]*="
              expect      : "^[\\s]*skip-grant-tables[\\s]*="
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - /etc/my.cnf"
              info        : "This option causes mysqld to start without using the privilege system."
              solution    : "Perform the following to establish the recommended state:
       - Open the MySQL configuration (e.g. my.cnf) file and set:
       skip-grant-tables = FALSE"
              reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
              see_also    : "https://workbench.cisecurity.org/files/1623"
              file        : "/etc/my.cnf"
              regex       : "^[\\s]*skip-grant-tables[\\s]*="
              expect      : "^[\\s]*skip-grant-tables[\\s]*=[\\s]*FALSE"
            </custom_item>
          </then>

          <else>
            <report type:"PASSED">
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - /etc/my.cnf"
              info        : "This option causes mysqld to start without using the privilege system."
              solution    : "Perform the following to establish the recommended state:
       - Open the MySQL configuration (e.g. my.cnf) file and set:
       skip-grant-tables = FALSE"
              reference   : "LEVEL|1S"
              see_also    : "https://workbench.cisecurity.org/files/1623"
            </report>
          </else>
        </if>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "/etc/mysql/my.cnf Exists"
          file        : "/etc/mysql/my.cnf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - /etc/mysql/my.cnf"
              file        : "/etc/mysql/my.cnf"
              regex       : "^[\\s]*skip-grant-tables[\\s]*="
              expect      : "^[\\s]*skip-grant-tables[\\s]*="
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - /etc/mysql/my.cnf"
              info        : "This option causes mysqld to start without using the privilege system."
              solution    : "Perform the following to establish the recommended state:
       - Open the MySQL configuration (e.g. my.cnf) file and set:
       skip-grant-tables = FALSE"
              reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
              see_also    : "https://workbench.cisecurity.org/files/1623"
              file        : "/etc/mysql/my.cnf"
              regex       : "^[\\s]*skip-grant-tables[\\s]*="
              expect      : "^[\\s]*skip-grant-tables[\\s]*=[\\s]*FALSE"
            </custom_item>
          </then>

          <else>
            <report type:"PASSED">
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - /etc/mysql/my.cnf"
              info        : "This option causes mysqld to start without using the privilege system."
              solution    : "Perform the following to establish the recommended state:
       - Open the MySQL configuration (e.g. my.cnf) file and set:
       skip-grant-tables = FALSE"
              reference   : "LEVEL|1S"
              see_also    : "https://workbench.cisecurity.org/files/1623"
            </report>
          </else>
        </if>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
          description : "SYSCONFDIR/my.cnf/my.cnf Exists"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
          file        : "SYSCONFDIR/my.cnf/my.cnf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - SYSCONFDIR/my.cnf/my.cnf"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
              file        : "SYSCONFDIR/my.cnf/my.cnf"
              regex       : "^[\\s]*skip-grant-tables[\\s]*="
              expect      : "^[\\s]*skip-grant-tables[\\s]*="
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - SYSCONFDIR/my.cnf\my.cnf"
              info        : "This option causes mysqld to start without using the privilege system."
              solution    : "Perform the following to establish the recommended state:
       - Open the MySQL configuration (e.g. my.cnf) file and set:
       skip-grant-tables = FALSE"
              reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
              see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
              file        : "SYSCONFDIR/my.cnf/my.cnf"
              regex       : "^[\\s]*skip-grant-tables[\\s]*="
              expect      : "^[\\s]*skip-grant-tables[\\s]*=[\\s]*FALSE"
            </custom_item>
          </then>

          <else>
            <report type:"PASSED">
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
              description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables' - SYSCONFDIR/my.cnf\my.cnf"
              info        : "This option causes mysqld to start without using the privilege system."
              solution    : "Perform the following to establish the recommended state:
       - Open the MySQL configuration (e.g. my.cnf) file and set:
       skip-grant-tables = FALSE"
              reference   : "LEVEL|1S"
              see_also    : "https://workbench.cisecurity.org/files/1623"
            </report>
          </else>
        </if>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
          description : "/etc/my.cnf Does not exist"
          file        : "/etc/my.cnf"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
          description : "/etc/mysql/my.cnf Does not exist"
          file        : "/etc/mysql/my.cnf"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
          description : "SYSCONFDIR/my.cnf/my.cnf Does not exist"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
          file        : "SYSCONFDIR/my.cnf/my.cnf"
        </custom_item>
      </condition>

      <then>
        <report type:"FAILED">
          description : "4.5 Ensure 'mysqld' Is Not Started with '--skip-grant-tables'"
          info        : "This option causes mysqld to start without using the privilege system."
          info        : "No MySQL configuration files were found."
          solution    : "Perform the following to establish the recommended state:
       - Open the MySQL configuration (e.g. my.cnf) file and set:
       skip-grant-tables = FALSE"
          reference   : "LEVEL|1S"
          see_also    : "https://workbench.cisecurity.org/files/1623"
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "/etc/my.cnf Exists"
          file        : "/etc/my.cnf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - /etc/my.cnf"
              file        : "/etc/my.cnf"
              regex       : "^[\\s]*log-raw[\\s]*="
              expect      : "^[\\s]*log-raw[\\s]*="
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - /etc/my.cnf"
              info        : "The log-raw MySQL option determines whether passwords are rewritten by the server so as not to appear in log files as plain text. If log-raw is enabled, then passwords are written to the various log files (general query log, slow query log, and binary log) in plain text."
              solution    : "Perform the following actions to remediate this setting:
       - Open the MySQL configuration file (my.cnf)
       - Find the log-raw entry and set it as follows

       log-raw = OFF"
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/1623"
              file        : "/etc/my.cnf"
              regex       : "^[\\s]*log-raw[\\s]*="
              expect      : "^[\\s]*log-raw[\\s]*=[\\s]*OFF"
            </custom_item>
          </then>

          <else>
            <report type:"FAILED">
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - /etc/my.cnf"
              info        : "The log-raw MySQL option determines whether passwords are rewritten by the server so as not to appear in log files as plain text. If log-raw is enabled, then passwords are written to the various log files (general query log, slow query log, and binary log) in plain text."
              solution    : "Perform the following actions to remediate this setting:
       - Open the MySQL configuration file (my.cnf)
       - Find the log-raw entry and set it as follows

       log-raw = OFF"
              reference   : "LEVEL|1S"
              see_also    : "https://workbench.cisecurity.org/files/1623"
            </report>
          </else>
        </if>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "/etc/mysql/my.cnf Exists"
          file        : "/etc/mysql/my.cnf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - /etc/mysql/my.cnf"
              file        : "/etc/mysql/my.cnf"
              regex       : "^[\\s]*log-raw[\\s]*="
              expect      : "^[\\s]*log-raw[\\s]*="
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - /etc/mysql/my.cnf"
              info        : "The log-raw MySQL option determines whether passwords are rewritten by the server so as not to appear in log files as plain text. If log-raw is enabled, then passwords are written to the various log files (general query log, slow query log, and binary log) in plain text."
              solution    : "Perform the following actions to remediate this setting:
       - Open the MySQL configuration file (my.cnf)
       - Find the log-raw entry and set it as follows

       log-raw = OFF"
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/1623"
              file        : "/etc/mysql/my.cnf"
              regex       : "^[\\s]*log-raw[\\s]*="
              expect      : "^[\\s]*log-raw[\\s]*=[\\s]*OFF"
            </custom_item>
          </then>

          <else>
            <report type:"FAILED">
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - /etc/mysql/my.cnf"
              info        : "The log-raw MySQL option determines whether passwords are rewritten by the server so as not to appear in log files as plain text. If log-raw is enabled, then passwords are written to the various log files (general query log, slow query log, and binary log) in plain text."
              solution    : "Perform the following actions to remediate this setting:
       - Open the MySQL configuration file (my.cnf)
       - Find the log-raw entry and set it as follows

       log-raw = OFF"
              reference   : "LEVEL|1S"
              see_also    : "https://workbench.cisecurity.org/files/1623"
            </report>
          </else>
        </if>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
          description : "SYSCONFDIR/my.cnf/my.cnf Exists"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
          file        : "SYSCONFDIR/my.cnf/my.cnf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - SYSCONFDIR/my.cnf/my.cnf"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
              file        : "SYSCONFDIR/my.cnf/my.cnf"
              regex       : "^[\\s]*log-raw[\\s]*="
              expect      : "^[\\s]*log-raw[\\s]*="
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - SYSCONFDIR/my.cnf\my.cnf"
              info        : "The log-raw MySQL option determines whether passwords are rewritten by the server so as not to appear in log files as plain text. If log-raw is enabled, then passwords are written to the various log files (general query log, slow query log, and binary log) in plain text."
              solution    : "Perform the following actions to remediate this setting:
       - Open the MySQL configuration file (my.cnf)
       - Find the log-raw entry and set it as follows

       log-raw = OFF"
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
              file        : "SYSCONFDIR/my.cnf/my.cnf"
              regex       : "^[\\s]*log-raw[\\s]*="
              expect      : "^[\\s]*log-raw[\\s]*=[\\s]*OFF"
            </custom_item>
          </then>

          <else>
            <report type:"FAILED">
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
              description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - SYSCONFDIR/my.cnf\my.cnf failed"
              info        : "The log-raw MySQL option determines whether passwords are rewritten by the server so as not to appear in log files as plain text. If log-raw is enabled, then passwords are written to the various log files (general query log, slow query log, and binary log) in plain text."
              solution    : "Perform the following actions to remediate this setting:
       - Open the MySQL configuration file (my.cnf)
       - Find the log-raw entry and set it as follows

       log-raw = OFF"
              reference   : "LEVEL|1S"
              see_also    : "https://workbench.cisecurity.org/files/1623"
            </report>
          </else>
        </if>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
          description : "/etc/my.cnf Does not exist"
          file        : "/etc/my.cnf"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
          description : "/etc/mysql/my.cnf Does not exist"
          file        : "/etc/mysql/my.cnf"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
          description : "SYSCONFDIR/my.cnf/my.cnf Does not exist"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
          file        : "SYSCONFDIR/my.cnf/my.cnf"
        </custom_item>
      </condition>

      <then>
        <report type:"FAILED">
          description : "6.5 Ensure 'log-raw' Is Set to 'OFF' - config files not found"
          info        : "The log-raw MySQL option determines whether passwords are rewritten by the server so as not to appear in log files as plain text. If log-raw is enabled, then passwords are written to the various log files (general query log, slow query log, and binary log) in plain text."
          info        : "No MySQL configuration files were found."
          solution    : "Perform the following actions to remediate this setting:
       - Open the MySQL configuration file (my.cnf)
       - Find the log-raw entry and set it as follows

       log-raw = OFF"
          reference   : "LEVEL|1S"
          see_also    : "https://workbench.cisecurity.org/files/1623"
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "/etc/my.cnf Exists"
          file        : "/etc/my.cnf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK_NOT
          description : "7.3 Ensure Passwords Are Not Stored in the Global Configuration - /etc/my.cnf"
          info        : "The [client] section of the MySQL configuration file allows setting a user and password to be used. Verify the password option is not used in the global configuration file (my.cnf)."
          solution    : "Use the mysql_config_editor to store authentication credentials in .mylogin.cnf in encrypted form. If not possible, use the user-specific options file, .my.cnf., and restricting file access permissions to the user identity."
          reference   : "800-171|3.5.10,800-53|IA-5(1),CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,LEVEL|2S,NESA|T5.2.3,NIAv2|CY6,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
          see_also    : "https://workbench.cisecurity.org/files/1623"
          file        : "/etc/my.cnf"
          regex       : "^[\\s]*password"
          expect      : "^[\\s]*password[\\s]*="
        </custom_item>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "/etc/mysql/my.cnf Exists"
          file        : "/etc/mysql/my.cnf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK_NOT
          description : "7.3 Ensure Passwords Are Not Stored in the Global Configuration - /etc/mysql/my.cnf"
          info        : "The [client] section of the MySQL configuration file allows setting a user and password to be used. Verify the password option is not used in the global configuration file (my.cnf)."
          solution    : "Use the mysql_config_editor to store authentication credentials in .mylogin.cnf in encrypted form. If not possible, use the user-specific options file, .my.cnf., and restricting file access permissions to the user identity."
          reference   : "800-171|3.5.10,800-53|IA-5(1),CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,LEVEL|2S,NESA|T5.2.3,NIAv2|CY6,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
          see_also    : "https://workbench.cisecurity.org/files/1623"
          file        : "/etc/mysql/my.cnf"
          regex       : "^[\\s]*password"
          expect      : "^[\\s]*password[\\s]*="
        </custom_item>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
          description : "SYSCONFDIR/my.cnf/my.cnf Exists"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
          file        : "SYSCONFDIR/my.cnf/my.cnf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK_NOT
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
          description : "7.3 Ensure Passwords Are Not Stored in the Global Configuration - SYSCONFDIR/my.cnf/my.cnf"
          info        : "The [client] section of the MySQL configuration file allows setting a user and password to be used. Verify the password option is not used in the global configuration file (my.cnf)."
          solution    : "Use the mysql_config_editor to store authentication credentials in .mylogin.cnf in encrypted form. If not possible, use the user-specific options file, .my.cnf., and restricting file access permissions to the user identity."
          reference   : "800-171|3.5.10,800-53|IA-5(1),CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,LEVEL|2S,NESA|T5.2.3,NIAv2|CY6,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
          see_also    : "https://workbench.cisecurity.org/files/1623"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
          file        : "SYSCONFDIR/my.cnf/my.cnf"
          regex       : "^[\\s]*password"
          expect      : "^[\\s]*password[\\s]*="
        </custom_item>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
          description : "/etc/my.cnf Does not exist"
          file        : "/etc/my.cnf"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
          description : "/etc/mysql/my.cnf Does not exist"
          file        : "/etc/mysql/my.cnf"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "description".
          description : "SYSCONFDIR/my.cnf/my.cnf Does not exist"
# Note: Variable @SYSCONFDIR@ replaced with "SYSCONFDIR/my.cnf" in field "file".
          file        : "SYSCONFDIR/my.cnf/my.cnf"
        </custom_item>
      </condition>

      <then>
        <report type:"FAILED">
          description : "7.3 Ensure Passwords Are Not Stored in the Global Configuration"
          info        : "The [client] section of the MySQL configuration file allows setting a user and password to be used. Verify the password option is not used in the global configuration file (my.cnf)."
          info        : "No MySQL configuration files were found."
          solution    : "Use the mysql_config_editor to store authentication credentials in .mylogin.cnf in encrypted form. If not possible, use the user-specific options file, .my.cnf., and restricting file access permissions to the user identity."
          reference   : "LEVEL|1S,LEVEL|2S"
          see_also    : "https://workbench.cisecurity.org/files/1623"
        </report>
      </then>
    </if>
  </then>

  <else>
    <report type:"WARNING">
      description : "MySQL 5.6 Community Edition is installed"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/1623"
    </report>
  </else>
</if>

</check_type>
