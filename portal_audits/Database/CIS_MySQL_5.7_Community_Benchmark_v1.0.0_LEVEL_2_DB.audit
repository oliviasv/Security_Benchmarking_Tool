#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.14 $
# $Date: 2020/04/22 $
#
# Description : This audit is based on the Security Configuration Benchmark For MySQL 5.7 Community Editions
#             Version 1.0.0 December 29, 2015
#             https://workbench.cisecurity.org/files/1617
#
# NOTE		:
#
#<ui_metadata>
#<display_name>CIS MySQL 5.7 Database L2 v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>MySQL 5.7 Database L2</name>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/1617</link>
#</spec>
#<labels>database,cis,mysql,mysql_5,mysql_5.7</labels>
#<benchmark_refs>LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"Database" db_type:"MySQL" version:"1">
<group_policy:"MySQL CIS 1.0.0">

<if>
  <condition type:"AND">
    <custom_item>
      type         : SQL_POLICY
      description  : "MySQL 5.7 is installed"
      sql_request  : "show variables like 'version' ;"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "version", regex:"5\.7"
      check_option : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type         : SQL_POLICY
      description  : "MySQL 5.7 Community Edition is installed"
      sql_request  : "show variables like 'license' ;"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "license", "GPL"
      check_option : CAN_NOT_BE_NULL
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "MySQL 5.7 Community Edition is installed"
    </report>

    <custom_item>
      type         : SQL_POLICY
      description  : "4.9 Ensure 'sql_mode' Contains 'STRICT_ALL_TABLES'"
      info         : "When data changing statements are made (i.e. INSERT, UPDATE), MySQL can handle invalid or missing values differently depending on whether strict SQL mode is enabled. When strict SQL mode is enabled, data may not be truncated or otherwise 'adjusted' to make the data changing statement work."
      solution     : "Perform the following actions to remediate this setting:
   1. Add STRICT_ALL_TABLES to the sql_mode in the server's configuration file"
      reference    : "800-53|SI-10(3),LEVEL|2S,NESA|T7.3.1"
      see_also     : "https://workbench.cisecurity.org/files/1617"
      sql_request  : "SHOW VARIABLES LIKE 'sql_mode';"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "sql_mode", regex:"STRICT_ALL_TABLES"
      check_option : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.3 Ensure 'process_priv' Is Not Set to 'Y' for Non-Administrative Users"
      info        : "The PROCESS privilege found in the mysql.user table determines whether a given user can see statement execution information for all sessions."
      solution    : "Perform the following steps to remediate this setting:
   1. Enumerate the non-administrative users found in the result set of the audit procedure
   2. For each user, issue the following SQL statement (replace '<user>' with the non- administrative user:

   REVOKE PROCESS ON *.* FROM '<user>';"
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|2S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/1617"
      sql_request : "select user, host from mysql.user where Process_priv = 'Y' ;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : regex:".+", "root"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "6.3 Ensure 'log_error_verbosity' Is Not Set to '1'"
      info        : "The log_error_verbosity system variable provides additional information to the MySQL log.  A value of 1 enables logging of error messages. A value of 2 enables logging of error and warning messages, and a value of 3 enables logging of error, warning and note messages."
      solution    : "Perform the following actions to remediate this setting:
-Open the MySQL configuration file (my.cnf)
-Ensure the following line is found in the mysqld section: log_error_verbosity = 2
-The value can be 2 or 3."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/1617"
      sql_request : "SHOW GLOBAL VARIABLES LIKE 'log_error_verbosity';"
      sql_types   : POLICY_VARCHAR, POLICY_INTEGER
      sql_expect  : "log_error_verbosity", "2" || "3"
    </custom_item>

    <report type:"WARNING">
      description : "6.4 Ensure Audit Logging Is Enabled"
      info        : "Audit logging is not really included in the Community Edition of MySQL - only the general log. Using the general log is possible, but not practical, because it grows quickly and has an adverse impact on server performance. Nevertheless, enabling audit logging is an important consideration for a production environment, and third-party tools do exist to help with this. Enable audit logging for
   - Interactive user sessions
   - Application sessions (optional)

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Acquire a third-party MySQL logging solution as available from a variety of sources including, but not necessarily limited to, the following:
   - The General Query Log
   - MySQL Enterprise Audit
   - MariaDB Audit Plugin for MySQL
   - McAfee MySQL Audit"
      reference   : "LEVEL|2NS"
      see_also    : "https://workbench.cisecurity.org/files/1617"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "7.3 Ensure Passwords Are Set for All MySQL Accounts"
      info        : "Blank passwords allow a user to login without using a password."
      solution    : "For each row returned from the audit procedure, set a password for the given user using the following statement (as an example):
   SET PASSWORD FOR <user>@'<host>' = '<clear password>'

   NOTE: Replace <user>, <host>, and <clear password> with appropriate values."
      reference   : "800-171|3.5.7,800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1S,LEVEL|2S,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also    : "https://workbench.cisecurity.org/files/1617"
      sql_request : "SELECT User,host FROM mysql.user WHERE authentication_string='';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "7.6 Ensure No Users Have Wildcard Hostnames"
      info        : "MySQL can make use of host wildcards when granting permissions to users on specific databases. For example, you may grant a given privilege to '<user>'@'%'."
      solution    : "Perform the following actions to remediate this setting:
   1. Enumerate all users returned after running the audit procedure
   2. Either ALTER the user's host to be specific or DROP the user"
      reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/1617"
      sql_request : "select user,host from mysql.user where host = '%' ;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "7.7 Ensure No Anonymous Accounts Exist"
      info        : "Anonymous accounts are users with empty usernames (''). Anonymous accounts have no passwords, so anyone can use them to connect to the MySQL server."
      solution    : "Perform the following actions to remediate this setting:
   1. Enumerate the anonymous users returned from executing the audit procedure
   2. For each anonymous user, DROP or assign them a name

   NOTE: As an alternative, you may execute the mysql_secure_installation utility."
      reference   : "800-53|AC-14,ITSG-33|AC-14,LEVEL|2S,NESA|T5.6.1"
      see_also    : "https://workbench.cisecurity.org/files/1617"
      sql_request : "SELECT user,host FROM mysql.user WHERE user = '';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL,NULL
    </custom_item>

    <custom_item>
      type         : SQL_POLICY
      description  : "9.3 Ensure 'master_info_repository' Is Set to 'TABLE'"
      info         : "The master_info_repository setting determines to where a slave logs master status and connection information. The options are FILE or TABLE. Note also that this setting is associated with the sync_master_info setting as well."
      solution     : "Perform the following actions to remediate this setting:
   1. Open the MySQL configuration file (my.cnf)
   2. Locate master_info_repository
   3. Set the master_info_repository value to TABLE

   NOTE: If master_info_repository does not exist, add it to the configuration file."
      reference    : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|2S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also     : "https://workbench.cisecurity.org/files/1617"
      sql_request  : "SHOW GLOBAL VARIABLES LIKE 'master_info_repository';"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "master_info_repository", "TABLE"
      check_option : CAN_NOT_BE_NULL
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "MySQL 5.7 Community Edition is installed"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/1617"
    </report>
  </else>
</if>

</group_policy>
</check_type>
