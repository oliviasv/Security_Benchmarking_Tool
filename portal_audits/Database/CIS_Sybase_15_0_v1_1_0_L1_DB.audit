#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.4 $
# $Date: 2020/04/22 $
#
# Description	: This .audit is designed against the CIS Security Configuration Benchmark For
# 			Sybase ASE 15.0 Version 1.1.0 December 31, 2011
#
# Ref			: https://workbench.cisecurity.org/files/1612
#
#<ui_metadata>
#<display_name>CIS Sybase 15.0 L1 DB v1.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Sybase 15.0 L1 DB</name>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/files/1612</link>
#</spec>
#<labels>database,cis,sybase</labels>
#</ui_metadata>

<check_type:"Database" db_type:"sybase" version:"1">
<group_policy:"CIS Sybase">

<custom_item>
  type        : SQL_POLICY
  description : "1.1 Select an appropriate authentication mechanism - PAM User Auth"
  info        : "Sybase ASE provides multiple means of authenticating users. These include Sybase
proprietary authentication (username and password), Kerberos, LDAP user authentication
(LDAPUA), secure LDAPUA and PAM user authentication (PAMUA). The Sybase LDAPUA
implementation interoperates with LDAP v3 compliant servers such as Active Directory,
iPlanet and OpenLDAP.

Rationale:

The most appropriate authentication mechanism depends on how Sybase is used within
your organization. It is recommended that the System Security Officer consult the Sybase
ASE 15.0 Administration Guide, Volume 1, Chapter 16 (External Authentication) for a
discussion of the advantages and disadvantages of each.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Set appropriate authentication mechanism in accordance with your organizations
security policy.

2. Ensure that the authentication mechanism is configured to not fallback to an
alternative mechanism unless your organizations security policy explicitly permits
this.

For LDAPUA this is accomplished by connecting to the ASE server as a user with the
sso_role and executing the following SQL statement:

exec sp_configure 'enable ldap user auth', 2

For PAMUA this is accomplished by connecting to the ASE server as a user with the
sso_role and executing the following SQL statement:

exec sp_configure 'enable pam user auth', 2"
  reference   : "800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,LEVEL|1NS,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'enable pam user auth'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "enable pam user auth","0","0","0","number","dynamic"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "1.1 Select an appropriate authentication mechanism - LDAP User Auth"
  info        : "Sybase ASE provides multiple means of authenticating users. These include Sybase
proprietary authentication (username and password), Kerberos, LDAP user authentication
(LDAPUA), secure LDAPUA and PAM user authentication (PAMUA). The Sybase LDAPUA
implementation interoperates with LDAP v3 compliant servers such as Active Directory,
iPlanet and OpenLDAP.

Rationale:

The most appropriate authentication mechanism depends on how Sybase is used within
your organization. It is recommended that the System Security Officer consult the Sybase
ASE 15.0 Administration Guide, Volume 1, Chapter 16 (External Authentication) for a
discussion of the advantages and disadvantages of each.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Set appropriate authentication mechanism in accordance with your organizations
security policy.

2. Ensure that the authentication mechanism is configured to not fallback to an
alternative mechanism unless your organizations security policy explicitly permits
this.

For LDAPUA this is accomplished by connecting to the ASE server as a user with the
sso_role and executing the following SQL statement:

exec sp_configure 'enable ldap user auth', 2

For PAMUA this is accomplished by connecting to the ASE server as a user with the
sso_role and executing the following SQL statement:

exec sp_configure 'enable pam user auth', 2"
  reference   : "800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,LEVEL|1NS,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'enable ldap user auth'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "enable ldap user auth","0","0","0","number","dynamic"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "1.1 Select an appropriate authentication mechanism - use security services"
  info        : "Sybase ASE provides multiple means of authenticating users. These include Sybase
proprietary authentication (username and password), Kerberos, LDAP user authentication
(LDAPUA), secure LDAPUA and PAM user authentication (PAMUA). The Sybase LDAPUA
implementation interoperates with LDAP v3 compliant servers such as Active Directory,
iPlanet and OpenLDAP.

Rationale:

The most appropriate authentication mechanism depends on how Sybase is used within
your organization. It is recommended that the System Security Officer consult the Sybase
ASE 15.0 Administration Guide, Volume 1, Chapter 16 (External Authentication) for a
discussion of the advantages and disadvantages of each.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Set appropriate authentication mechanism in accordance with your organizations
security policy.

2. Ensure that the authentication mechanism is configured to not fallback to an
alternative mechanism unless your organizations security policy explicitly permits
this.

For LDAPUA this is accomplished by connecting to the ASE server as a user with the
sso_role and executing the following SQL statement:

exec sp_configure 'enable ldap user auth', 2

For PAMUA this is accomplished by connecting to the ASE server as a user with the
sso_role and executing the following SQL statement:

exec sp_configure 'enable pam user auth', 2"
  reference   : "800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,LEVEL|1NS,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'use security services'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "use security services","0","0","0","number","dynamic"
  severity    : MEDIUM
</custom_item>

<if>
  <condition type:"OR">
    <custom_item>
      type        : SQL_POLICY
      description : "1.3 Store password hashes using SHA-256 only"
      info        : "Sybase ASE 15.0.2 supports storing encrypted passwords using both SHA-256 hashes and
the ASE proprietary algorithm or as SHA-256 hashes only. This setting is toggled via the
allow password downgrade password policy option.

The default install setting for new ASE 15.0.2 installations is to store encrypted passwords
as SHA-256 hashes only. ASE servers upgraded to 15.0.2 are set to also store encrypted
passwords using the ASE proprietary algorithm.

Support for the ASE proprietary algorithm facilitates downgrades to older versions of
Sybase ASE. If the System Administrator is certain that the ASE server will not be
downgraded to an earlier version then encrypted passwords should be stored as SHA-256
hashes only.

Note that this configuration setting is not present ASE 15.0 or 15.0.1.

Rationale:

The SHA-256 algorithm is considered more secure than the ASE proprietary algorithm."
      solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL
statement to prevent the storage of encrypted passwords with the ASE algorithm:

exec sp_passwordpolicy 'set', 'allow password downgrade', 0"
      sql_request : "exec sp_passwordpolicy 'list', 'allow password downgrade'"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : NULL, "new master database."
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "1.3 Store password hashes using SHA-256 only"
      info        : "Sybase ASE 15.0.2 supports storing encrypted passwords using both SHA-256 hashes and
the ASE proprietary algorithm or as SHA-256 hashes only. This setting is toggled via the
allow password downgrade password policy option.

The default install setting for new ASE 15.0.2 installations is to store encrypted passwords
as SHA-256 hashes only. ASE servers upgraded to 15.0.2 are set to also store encrypted
passwords using the ASE proprietary algorithm.

Support for the ASE proprietary algorithm facilitates downgrades to older versions of
Sybase ASE. If the System Administrator is certain that the ASE server will not be
downgraded to an earlier version then encrypted passwords should be stored as SHA-256
hashes only.

Note that this configuration setting is not present ASE 15.0 or 15.0.1.

Rationale:

The SHA-256 algorithm is considered more secure than the ASE proprietary algorithm."
      solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL
statement to prevent the storage of encrypted passwords with the ASE algorithm:

exec sp_passwordpolicy 'set', 'allow password downgrade', 0"
      sql_request : "exec sp_passwordpolicy 'list', 'allow password downgrade'"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : "0", regex:"Last Password downgrade was allowed on.*"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type        : SQL_POLICY
      description : "1.3 Store password hashes using SHA-256 only"
      info        : "Sybase ASE 15.0.2 supports storing encrypted passwords using both SHA-256 hashes and
the ASE proprietary algorithm or as SHA-256 hashes only. This setting is toggled via the
allow password downgrade password policy option.

The default install setting for new ASE 15.0.2 installations is to store encrypted passwords
as SHA-256 hashes only. ASE servers upgraded to 15.0.2 are set to also store encrypted
passwords using the ASE proprietary algorithm.

Support for the ASE proprietary algorithm facilitates downgrades to older versions of
Sybase ASE. If the System Administrator is certain that the ASE server will not be
downgraded to an earlier version then encrypted passwords should be stored as SHA-256
hashes only.

Note that this configuration setting is not present ASE 15.0 or 15.0.1.

Rationale:

The SHA-256 algorithm is considered more secure than the ASE proprietary algorithm."
      solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL
statement to prevent the storage of encrypted passwords with the ASE algorithm:

exec sp_passwordpolicy 'set', 'allow password downgrade', 0"
      reference   : "800-53|IA-5(1),CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/1612"
      sql_request : "exec sp_passwordpolicy 'list', 'allow password downgrade'"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : NULL || regex:".*", regex:".*"
    </custom_item>
  </then>

  <else>
    <custom_item>
      type        : SQL_POLICY
      description : "1.3 Store password hashes using SHA-256 only"
      info        : "Sybase ASE 15.0.2 supports storing encrypted passwords using both SHA-256 hashes and
the ASE proprietary algorithm or as SHA-256 hashes only. This setting is toggled via the
allow password downgrade password policy option.

The default install setting for new ASE 15.0.2 installations is to store encrypted passwords
as SHA-256 hashes only. ASE servers upgraded to 15.0.2 are set to also store encrypted
passwords using the ASE proprietary algorithm.

Support for the ASE proprietary algorithm facilitates downgrades to older versions of
Sybase ASE. If the System Administrator is certain that the ASE server will not be
downgraded to an earlier version then encrypted passwords should be stored as SHA-256
hashes only.

Note that this configuration setting is not present ASE 15.0 or 15.0.1.

Rationale:

The SHA-256 algorithm is considered more secure than the ASE proprietary algorithm."
      solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL
statement to prevent the storage of encrypted passwords with the ASE algorithm:

exec sp_passwordpolicy 'set', 'allow password downgrade', 0"
      reference   : "800-53|IA-5(1),CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/1612"
      sql_request : "exec sp_passwordpolicy 'list', 'allow password downgrade'"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : NULL,NULL
    </custom_item>
  </else>
</if>

<custom_item>
  type        : SQL_POLICY
  description : "1.4 Secure the sa account"
  info        : "The System Administrator account, sa, is extremely powerful, having the sa_role,
sso_role, oper_role and Sybase_ts_role by default. Furthermore, the password to the sa
account is blank on install.

Sybase recommends using the sa account only for initial database configuration such as
creating other users, devices and databases. It is then recommended that the sa account is
locked.

The following steps represent best practice handling of the sa account:

. Set a strong password on the sa account; although the sa account should ultimately
be locked, setting a strong password acts as a mitigating step while the database is
being configured or should it be accidently re-enabled. This may have severe
repercussions as the default password for the sa account is blank.
. Create separate user accounts and groups assigning the sa_role, sso_role,
oper_role and sybase_ts_role roles as necessary, following the principle of least
privilege.

. Remove the sa_role, sso_role, oper_role and the sybase_ts_role from the sa
account.
. Lock the sa account

Rationale:

The first attack an intruder is likely to launch against Sybase ASE will be to test whether the
sa account is enabled and whether it has a blank password. If both of these conditions are
true, the attacker has no additional work to do to fully compromise the database.
Furthermore, in many organizations auditing requirements mandate the user of non-
default accounts so that operations can be accurately tracked.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Connect to the ASE server as a user with the sa_role and execute the following SQL
statement to set a strong password on the sa account (where <StrongPassword>
should be substituted for a suitable password):

exec sp_password NULL, '<StrongPassword>'

2. Ensure the above statement returns Password correctly set.

3. Create separate user accounts and groups assigning the sa_role, sso_role,
oper_role and sybase_ts_role roles as necessary, following the principle of least
privilege.

4. Connect to the ASE server as a user with the sso_role and execute the following
SQL statements, ensuring they complete successfully, to strip the sa account of the
sso_role, oper_role and sybase_ts_role roles.

Note that it is essential that other accounts with at least the sa_role and the
sso_role have been created prior to carrying out this and the proceeding step.

revoke role sso_role from 'sa'

revoke role oper_role from 'sa'

revoke role sybase_ts_role from 'sa'

5. Connect to the ASE Server as user with the sa_role and executing the following
statement, ensuring it completes successfully, to strip the sa account of the
sa_role.

revoke role sa_role from 'sa'

6. Connect to the ASE server as a user with the sso_role and execute the following
SQL statement to lock the sa account:

exec sp_locklogin sa, 'lock'

7. Ensure the above statement returns Account locked."
  reference   : "800-171|3.1.1,800-53|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1S,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_displaylogin 'sa'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "1.5 Remove unused accounts and change default passwords"
  info        : "Many Sybase components that interact with ASE create user accounts with weak
passwords such as Sybase, SQL or the username itself.

It is recommended that default accounts are given passwords that conform to a strong
password policy. Furthermore, accounts that are not in use should be removed. Below is a
list of common accounts to inspect:

. probe
. sybmail
. jstask
. mon_user

Rationale:

Default passwords present an easy means of compromising a database, even for unskilled
attackers. Even if the targeted user account does not have access to powerful roles or
sensitive data, the attacker need only find a privilege escalation vulnerability to execute a
full compromise.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Connect to the ASE server as a user that has select permission on
master.dbo.syslogins (such as a user with the sso_role) and execute the
following SQL statement to retrieve a list of database usernames:

use master

select name from syslogins

2. Set strong passwords on these accounts via the sp_password stored procedure and
ensure all client components that make use of the account are updated to use the
new password."
  reference   : "800-171|3.1.1,800-53|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1S,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "select name from syslogins"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
  severity    : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "1.11 Conceal Sensitive Input to isql"
  info        : "The Open Server 15.0 and SDK 15.0 client components for Sybase ASE, ESD #13 and above,
support concealment of input during isql sessions via the --conceal command line option.

Rationale:

The --conceal option is useful when entering sensitive information, such as passwords in
environments where echoed console input may be visible to multiple parties.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. Specify the --conceal command line option as follows, where <Wildcard> is the
character string that triggers isql to prompt for concealed input (note that this
default to the string :? if no wildcard is supplied):

isql --conceal '<Wildcard>'

Complete this example by including a command (like sp_password) and
demonstrating how passwords are concealed."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/1612"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "2.2 Enable message integrity"
  info        : "Sybase ASE supports a means of signaling to the underlying security mechanism that message integrity is required via the msg integrity reqd configuration parameter.
The setting is disabled by default. It is recommended the message integrity is enabled. Note that enabling the use security services configuration parameter is a prerequisite for enabling message integrity.

Rationale:
Enabling message integrity prevents an attacker positioned between the client and the server from intercepting and modifying messages."
  solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL statement to enable message integrity.
exec sp_configure 'msg integrity reqd', 1"
  reference   : "800-171|3.13.8,800-53|SC-8(1),CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),LEVEL|1S,NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,SWIFT-CSCv1|2.1,TBA-FIISB|29.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'msg integrity reqd'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "msg integrity reqd", "0", "0","1", "1", "switch", "dynamic"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.3 Enable message confidentiality"
  info        : "Sybase ASE supports a means of signaling to the underlying security mechanism that
message confidentiality via encryption is required. This is accomplished through the msg
confidentiality reqd configuration parameter.


The setting is disabled by default. It is recommended the message confidentiality is
enabled. Note that enabling the use security services configuration parameter is a
prerequisite for enabling message confidentiality.

Rationale:

Enabling message confidentiality prevents an attacker positioned between a client and the
servers from being able to capture sensitive data."
  solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL
statement to enable message confidentiality.

exec sp_configure 'msg confidentiality reqd', 1"
  reference   : "800-171|3.13.8,800-53|SC-8(1),CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),LEVEL|1S,NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,SWIFT-CSCv1|2.1,TBA-FIISB|29.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'msg confidentiality reqd'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "msg confidentiality reqd", "0", "0","1", "1", "switch", "dynamic"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.4 Enable network password encryption"
  info        : "Sybase ASE 15.0.2 supports the use of asymmetric encryption to securely transmit
passwords from the client to the server using the RSA public key encryption algorithm.
This setting is enabled via the net password encryption reqd configuration parameter.
This feature does not depend on PKI, Kerberos, nor SSL.

There are three possible settings for the value of the net password encryption reqd
configuration parameter:


. 0  This setting allows the client to choose the encryption types, including no
encryption. This is the default settings.
. 1  This setting causes the server to permit either the older proprietary ASE
encryption or the RSA algorithm only.
. 2  This setting causes the server to permit only the RSA algorithm.

If all client applications within your organization support the RSA algorithm (i.e. they use
client libraries accompanying ASE 15.0.2 or are RSA algorithm aware) then it is
recommended that setting 2 is enabled, otherwise it is recommended that setting 1 is
enabled.

Note that this setting is not supported by ASE 15.0 or 15.0.1.

Rationale:

Enabling network password encryption prevents an attacker positioned between the client
and the server from sniffing the password during the login process. The RSA algorithm is
preferred over the proprietary ASE algorithm since RSA is a widely accepted and analyzed
algorithm."
  solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL
statement to set the network password encryption to 2:

exec sp_configure 'net password encryption reqd', 2"
  reference   : "800-171|3.13.8,800-53|SC-8(1),CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),LEVEL|1S,NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,SWIFT-CSCv1|2.1,TBA-FIISB|29.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'net password encryption reqd'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "net password encryption reqd", "0", "0","2", "2", "switch", "dynamic"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.5.1 Enable password encryption"
  info        : "When a local Sybase ASE server connects to a remote server, the user account password is
sent across the network encrypted or in plain text dependant on the net password
encryption setting for the server.

. On Sybase ASE 15.0, net password encryption is set to false by default.
. On Sybase ASE 15.0.1, net password encryption is set to false by default.
. On Sybase ASE 15.0.2, net password encryption is set to false by default (for any
new server added using sp_addserver and for sysservers entries with an
ASEnterprise class value during upgrade to this release).

The net password encryption should be set to true for each remote server.

Rationale:

An attacker that is able to sniff the traffic between two servers would be able to capture
passwords that are sent in plain text.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL
statement (where <ServerName> represents the name of the remote server for
which password encryption will be enabled):

exec sp_serveroption <ServerName>, 'net password encryption', true"
  reference   : "800-171|3.5.2,800-53|IA-5,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1S,NESA|T5.2.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_helpserver '%'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : regex:".+",regex:".+",regex:".*", regex:".*", regex:".*", regex:".*",regex:".*",regex:".*"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.1 Set an appropriate default database for all users"
  info        : "It is recommended that no users except those who have the sa_role or sso_role are
assigned a default database of master, since this database stores all system tables.

Rationale:

As a general best practice recommendation, all standard users should be associated with a
specific home database other than master.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Connect to the ASE server as a user that has select permission on syslogins (e.g a
user with the sa_role) and execute the following SQL statement to retrieve the list
of users that currently have a default database of master:

use master

select name, dbname from syslogins where dbname = 'master'

2. For each user that has a default database of master, that does not have the sa_role
and/or the sso_role (role membership can be determined via the
sp_displaylogin stored procedure), execute the following SQL statement to modify
their default database. <Login> should be substituted for the appropriate username
and <Database> for the new default database to be set.

exec sp_modifylogin <Login>, defdb, <Database>"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "select name, dbname from syslogins where dbname = 'master'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : regex:".*",regex:".*"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.2 Restrict use of set proxy"
  info        : "Sybase ASE supports proxy authorization, allowing Security Officers the ability to grant
selected logins the ability to assume the security context of another user via the set proxy
grant.

Rationale:

The set proxy grant potentially allows a user to impersonate any other login unless
restricted via the restrict role parameter.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. When using the set proxy command, always use the restrict role parameter."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1NS,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "sp_helprotect @permission_name = 'Set Proxy'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.3.1 Avoid use of grant all"
  info        : "When granting or revoking privileges to a database object, Sybase ASE allows the syntax
grant all to signify that all privileges applicable to the specified object should be granted
or revoked. It is recommended that use of grant all is avoided where possible.

Rationale:

Security best practice advocates the principle of least privilege, i.e. only the privileges that
are absolutely necessary should be granted to a user. In situations where all privileges are
not required, use of grant all violates this principle.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Use specific grant statements to assign the required privileges."
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_helprotect"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.4 Revoke default permissions for the public role"
  info        : "By default, the public role has select permission on many system tables, including the
syslogins table in the master database (though not on the password column).

Since all database users have the public role it is recommended that these permissions
are revoked from all databases.

This setting should be thoroughly tested on non-production servers before it is applied
since additional table privileges may need to be granted to specific users or groups once
public access is revoked.

Rationale:

Low privileged database users can glean useful information from system tables such as
account names and lockout status.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Connect to the ASE server as a user with the sa_role and execute the following SQL
statement for each database listed in sysdatabases (where <Database> should be
substituted for the appropriate database name). For the complete list of tables that
this command affects, see the description of the revoke command in the Sybase ASE
Reference Manual: Commands.

Note that the tables affected differ depending on whether the database is the master
database or not.

use <Database>

revoke default permissions on system tables"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_helprotect"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.5 Ensure updates to system tables are not permitted"
  info        : "Sybase ASE can protect system tables from direct or accidental alteration through SQL
queries via the allow updates to system tables configuration parameter.

This setting is enabled by default. It is recommended that this setting is re-enabled if it has
been disabled.

Rationale:

An attacker with sufficient privilege can re-enable direct updates to system tables, but this
configuration setting should protect against accidental alterations and will aid the audit
trail."
  solution    : "1. Connect to the ASE server as a user with the sso_role and execute the following
SQL statement:

exec sp_configure 'allow updates to system tables', 0"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'allow updates to system tables'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "allow updates to system tables", "0", "0","0", "0", "switch", "dynamic"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.5.1 Protect database object text in syscomments"
  info        : "The syscomments table contains the source code for business logic implementation such as
stored procedures. It also contains the text of views, triggers, default table constraints, and
procedures. By default the public role has select permission on this system table.

Sybase ASE supports a configuration parameter, select on syscomments.txt, that
restricts select permission to the object owner and users with the sa_role. It is
recommended that this configuration is enabled.

Rationale:

select permission should be restricted to the object owner and system administrators
only since stored procedures, triggers and views often contain sensitive information.
Furthermore, source code access is likely to facilitate the discovery of logic flaws that may
result in privilege escalation or information disclosure."
  solution    : "1. Connect to the database as a user with the sso_role and execute the following SQL
statement:

exec sp_configure 'select on syscomments.text', 0"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'select on syscomments.text'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "select on syscomments.text", "1", "0","0", "0", "switch", "dynamic"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.6.1 Ensure a strong system encryption password is set"
  info        : "It is the responsibility of the System Security Officer to set a strong system encryption
password. This password is used to generate a 128-bit key-encrypting key, which in turn is
used to encrypt column encryption keys (created by users with the create encryption
key privilege).

Rationale:

Setting a weak system encryption password facilitates the decryption of column encryption
keys and ultimately the data itself."
  solution    : "1. Connect to the ASE server as a user with the sso_role and execute the following
SQL statement to set a system encryption password (where <Password> should be
substituted for the strong system encryption password). Note that support for
encrypted columns must be enabled before the system encryption password can be
set.

exec sp_encryption system_encr_passwd, '<Password>'"
  reference   : "800-171|3.13.16,800-53|SC-28,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,ITSG-33|SC-28,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_encryption helpkey, system_encr_passwd"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : regex:".*","persistent",regex:".*",regex:".*"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2 Enabling resource limits"
  info        : "Sybase ASE provides a means of resource limiting via the allow resource limits
configuration parameter. This functionality is disabled by default. When it is enabled, the
server applies limits to user sessions.

It is recommended that this setting is enabled to mitigate against denial of service and data
mining attacks. This setting should be thoroughly tested on non-production servers to
ensure that it does not interfere with normal application behavior.

Rationale:

Resource limiting may be a useful defense against potential attacks aimed at denial of
service or data mining attacks (e.g. through SQL Injection)."
  solution    : "Connect to the ASE server as a user with the sa_role and execute the following SQL
statement to enable resource limits. Note that the ASE Server must be restarted for
this configuration to take effect.

exec sp_configure 'allow resource limits', 1"
  reference   : "800-53|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),ITSG-33|SC-6,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'allow resource limits'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "allow resource limits", "0", "#4", "1", "0", "switch", "static"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3 Enable auditing - sp_configure 'auditing'"
  info        : "Auditing is disabled by default in Sybase ASE. It should be enabled and at a minimum and
configured to audit the following events:

. All commands which require the sa_role
. All errors
. All logins to the database

In addition, audit settings should also be configured to detect significant departures from
typical business use such as execution of unused stored procedures as well as the creation
and modification of database objects. This may mean auditing GRANT, DROP and CREATE
actions as well.

Auditing settings should be thoroughly tested on non-production systems to ensure they
do not impact performance on database with heavy usage.

Rationale:

Auditing of security-related events is essential to ensure the security of the database and
the integrity of the data held within it."
  solution    : "1. Install the auditing functionality. This is a multistage process involving the
following steps:

. Creation of the auditing devices.
. Creation of the auditing database.
. Running the installsecurity (instsecu on Windows) script to populate
the database tables.
. Restarting the database.

For detailed information, see
. the Sybase ASE Configuration Guide for your platform (Windows or UNIX),
Chapter on Adding Optional Functionality to Adaptive Server,
. the Sybase ASE System Administration Guide chapter on Auditing.


2. Connect to the ASE server as a user with the sso_role and execute the following
SQL statement to enable auditing of security-related events, errors and login
attempts:

exec sp_configure 'auditing', 1

/* Enable auditing of all security-related events for all users */

exec sp_audit 'security', 'all', 'all', 'on'

/* Enable auditing of all errors for all users */

exec sp_audit 'errors', 'all', 'all', 'on'

/* Enable auditing of all logins for all users */

exec sp_audit 'login', 'all', 'all', 'on'


3. Configure additional auditing options as required."
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'auditing'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "auditing", "0", "0", "1", "1", "switch", "dynamic"
</custom_item>

<report type:"WARNING">
  description : "4.3 Enable auditing - auditing of security-related events"
  info        : "Auditing is disabled by default in Sybase ASE. It should be enabled and at a minimum and
configured to audit the following events:

. All commands which require the sa_role
. All errors
. All logins to the database

In addition, audit settings should also be configured to detect significant departures from
typical business use such as execution of unused stored procedures as well as the creation
and modification of database objects. This may mean auditing GRANT, DROP and CREATE
actions as well.

Auditing settings should be thoroughly tested on non-production systems to ensure they
do not impact performance on database with heavy usage.

Rationale:

Auditing of security-related events is essential to ensure the security of the database and
the integrity of the data held within it.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. Install the auditing functionality. This is a multistage process involving the
following steps:

. Creation of the auditing devices.
. Creation of the auditing database.
. Running the installsecurity (instsecu on Windows) script to populate
the database tables.
. Restarting the database.

For detailed information, see
. the Sybase ASE Configuration Guide for your platform (Windows or UNIX),
Chapter on Adding Optional Functionality to Adaptive Server,
. the Sybase ASE System Administration Guide chapter on Auditing.


2. Connect to the ASE server as a user with the sso_role and execute the following
SQL statement to enable auditing of security-related events, errors and login
attempts:

exec sp_configure 'auditing', 1

/* Enable auditing of all security-related events for all users */

exec sp_audit 'security', 'all', 'all', 'on'

/* Enable auditing of all errors for all users */

exec sp_audit 'errors', 'all', 'all', 'on'

/* Enable auditing of all logins for all users */

exec sp_audit 'login', 'all', 'all', 'on'


3. Configure additional auditing options as required."
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/1612"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "4.6 Review audit queue size"
  info        : "Sybase ASE allows the number of audit records held in memory to be set via the audit
queue size configuration parameter.

The default value is 100 audit records (approximately 42K of memory). If an attacker is
able to trigger a crash while an audit record is stored in memory but has not been written
to disk, the audit record will likely be lost (it may, however, be stored in a crash dump
depending on the system configuration).

It is recommended that this setting is reviewed; the default value of 100 is likely to be
sufficient for most organizations although depending on the nature of the data stored in the
database, this value could be reduced.

It should be noted that decreasing this value is likely to have an effect on performance,
especially on a system that is under heavy use and that generates a significant number of
audit events.

Rationale:

If this value is set high, an attacker may be able to cover their tracks by triggering a crash."
  solution    : "1. Connect to the ASE server as a user with the sso_role and execute the following
SQL statement to set the audit queue size to 100 (modify 100 as per your
organizations requirements):

sp_configure 'audit queue size', 100"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "sp_configure 'audit queue size'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "audit queue size", "100", "2", "100", "100", "number", "dynamic"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.8 Log successful and failed login attempt - failure"
  info        : "Sybase ASE can be configured to log successful and/or failed login attempts to the
Windows Event Log via the log audit logon failure and log audit logon success
configuration parameters.

It is recommended that both successful and failed login attempts are logged to the
Windows Event Log in addition to the standard Sybase audit trail.

Rationale:

Logging key events such as successful and failed login attempts to multiple places (i.e. the
Windows Event Log and the Sybase audit tables) means that there is less likelihood of an
attacker being able to cover their tracks in the event of a compromise."
  solution    : "1. Connect to the ASE server as a user with the sso_role and execute the following
SQL statements:

exec sp_configure 'log audit logon failure', 1

exec sp_configure 'log audit logon success', 1"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'log audit logon failure'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "log audit logon failure", "0", "0", "1", "1", "switch", "dynamic"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.8 Log successful and failed login attempt - success"
  info        : "Sybase ASE can be configured to log successful and/or failed login attempts to the
Windows Event Log via the log audit logon failure and log audit logon success
configuration parameters.

It is recommended that both successful and failed login attempts are logged to the
Windows Event Log in addition to the standard Sybase audit trail.

Rationale:

Logging key events such as successful and failed login attempts to multiple places (i.e. the
Windows Event Log and the Sybase audit tables) means that there is less likelihood of an
attacker being able to cover their tracks in the event of a compromise."
  solution    : "1. Connect to the ASE server as a user with the sso_role and execute the following
SQL statements:

exec sp_configure 'log audit logon failure', 1

exec sp_configure 'log audit logon success', 1"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'log audit logon success'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "log audit logon success", "0", "0", "1", "1", "switch", "dynamic"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1 Ensure Java is disabled"
  info        : "Sybase ASE supports Java extensively, incorporating the Sun Java Virtual Machine (JVM)
and offering full interoperability with Transact-SQL. Sybase implements part 1 of the SQLJ
standard, and extends the standard, for instance by permitting direct references to Java
methods and classes.

Java access in Sybase ASE cannot be configured on a per user basis; it is either available to
all users, or to none. It is disabled by default and it is recommended that it is not enabled
unless absolutely necessary. Note that only users with the sa_role can enable Java.

Rationale:

Java in ASE is a powerful target for an attacker since they can use it to interact with file
system and network resources. With Java disabled, the potential for gaining a foothold on
the host operating system and/or network is reduced."
  solution    : "1. Connect to the ASE server with a user that has the sa_role and execute the
following SQL statement:

exec sp_configure 'enable java', 0"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'enable java'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "enable java", "0", "0", "0", "0", "switch", "static"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.2 Ensure External File System Access is disabled - enable cis"
  info        : "Sybase ASE contains functionality for interacting with the file system through the creation
of 'proxy tables'. This functionality is implemented by the Component Integration Service
(CIS) and is accessed via standard Transact-SQL commands. It allows files and directories
to be created, deleted, written to and queried.

By default only users with the sa_role or the sso_role can create proxy tables that map to
files or directories. It is nonetheless recommended that external file system access is
disabled.

Rationale:

Though an attacker would need to have compromised an account with the sa_role or sso
role in order to create new proxy tables via External File System Access, this functionality,
if not in use, should be disabled as a defense in depth measure. This functionality could be
abused to modify operating system configuration files or create files that would allow an
attacker to run code in another process."
  solution    : "1. Connect to the ASE server with a user that has the sa_role and execute the
following SQL statement:

exec sp_configure 'enable cis', 0

2. If an error is returned indicating that the transaction coordinator must be disabled,
execute the following SQL statement to accomplish this, restart the server and
execute the above SQL statements again.

exec sp_configure 'enable xact coordination', 0

3. Restart the server.

4. Connect to the ASE server with a user that has the sa_role and execute the
following SQL statement:

exec sp_configure 'enable file access', 0"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'enable cis'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "enable cis", "1", "0", "0", "0", "switch", "static"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.2 Ensure External File System Access is disabled - enable file access"
  info        : "Sybase ASE contains functionality for interacting with the file system through the creation
of 'proxy tables'. This functionality is implemented by the Component Integration Service
(CIS) and is accessed via standard Transact-SQL commands. It allows files and directories
to be created, deleted, written to and queried.

By default only users with the sa_role or the sso_role can create proxy tables that map to
files or directories. It is nonetheless recommended that external file system access is
disabled.

Rationale:

Though an attacker would need to have compromised an account with the sa_role or sso
role in order to create new proxy tables via External File System Access, this functionality,
if not in use, should be disabled as a defense in depth measure. This functionality could be
abused to modify operating system configuration files or create files that would allow an
attacker to run code in another process."
  solution    : "1. Connect to the ASE server with a user that has the sa_role and execute the
following SQL statement:

exec sp_configure 'enable cis', 0

2. If an error is returned indicating that the transaction coordinator must be disabled,
execute the following SQL statement to accomplish this, restart the server and
execute the above SQL statements again.

exec sp_configure 'enable xact coordination', 0

3. Restart the server.

4. Connect to the ASE server with a user that has the sa_role and execute the
following SQL statement:

exec sp_configure 'enable file access', 0"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "exec sp_configure 'enable file access'"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : "enable file access", "0", "0", "0", "0", "switch", "dynamic"
</custom_item>

<report type:"WARNING">
  description : "6.1 Password protect database backups"
  info        : "The Sybase ASE server allows passwords to be set on database backups carried out by the
dump database command.

In addition to storing database backups in a folder with an appropriately restrictive ACL, a
password should be set as part of a defense-in-depth measure.

Rationale:

This setting acts as a potential mitigation in the event of an attacker compromising a server
containing database backups.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. When executing the dump database command ensure a strong password is set via
the passwd option (where <Database> should be substituted for the relevant
database name, <File> for the full path to the database dump to be written and
<Password> for a strong password used to protected the dump):

dump database <Database> to '<File>' with passwd = '<Password>'"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/1612"
</report>

<report type:"WARNING">
  description : "6.3 Install on a dedicated server"
  info        : "Sybase ASE server should be installed on a dedicated system that does not provide
additional services such as web or mail and does not operate as a Domain Controller.

Rationale:

Vulnerabilities in other services could lead to the compromise of the Sybase ASE server.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. Remove/disable other services."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/1612"
</report>

<report type:"WARNING">
  description : "6.4 Maintain an inventory of all ASE instances"
  info        : "It is recommended that an inventory is kept of all versions of Sybase ASE in your
organization including their corresponding patch levels.

Rationale:

Attacks will often target legacy servers that have not been kept up-to-date with patches.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. Ensure that when new ASE servers are installed they are added to the inventory."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/1612"
</report>

<report type:"WARNING">
  description : "6.5 Ensure ASE server names do not disclose sensitive information"
  info        : "When naming ASE server instances, ensure that no reference is made to version numbers
or other sensitive information.

Rationale:

Version or other sensitive information in the server name makes it easier for an attacker to
develop an attack strategy against the server.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. When configuring ASE instances, follow a naming convention that does not include
version numbers or other sensitive information."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/1612"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "6.6 Remove sample databases if installed"
  info        : "The Sybase ASE installer does not install sample databases by default. If they have been installed they should be removed.
Rationale:
Removal of sample databases is in accordance with the best practice principal of attack surface reduction.
Note: Nessus has not performed this check, and this check is only provided for informational purposes."
  solution    : "1. Connect to the ASE server as a user with the sa_role and execute the following SQL statements to determine which sample databases are present:
use master select name from sysdatabases where name = 'pubs2' or name = 'pubs3' or name = 'images' or name = 'jpubs' or name = 'interpubs'
2. Execute the following SQL statement for each database name returned in the query (where <Database> should be substituted for the appropriate database name):
drop database <Database>"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "select name from sysdatabases where name = 'pubs2' or name = 'pubs3' or name = 'images' or name = 'jpubs' or name = 'interpubs'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<report type:"WARNING">
  description : "6.7 Create separate partitions for programs and data"
  info        : "It is recommended that separate partitions are created for:

. Operating system and Sybase ASE program files
. Databases and transaction logs

Rationale:

Separate partitions provide greater protections via file permissions at the volume level as
well as allowing greater control over data storage usage and monitoring of the database.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. During the install process, configure the server to create system databases (e.g.
master) on a separate partition to the Sybase ASE and Windows application binaries
and configuration files.

2. Ensure that subsequent databases are also created on a separate partition."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/1612"
</report>

<report type:"WARNING">
  description : "6.9 Harden host operating system"
  info        : "The host operating system should be securely configured, disabling unnecessary services,
ensuring ACLs on resources such as files, directories and network shares as restrictive as
possible and ensuring it is up-to-date with relevant patches. A patching process should be
in place to ensure operating system patches are applied in a timely manner.

Rationale:

Although the database host is likely to be located on the Intranet it may have applications
connecting to it from DMZs and partner networks in addition to the threat of a malicious
user that has valid albeit low privileged domain credentials. Hardening the operating
system will serve the purposes of making it harder for an attacker to compromise the data
within the database via an operating system attack and also harder for an attacker to fully
compromise the host from the database itself.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "1. Follow the guidance in the relevant CIS benchmark for the host operating system."
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/1612"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "6.11 Keep up-to-date with Sybase security patches"
  info        : "Sybase ASE suffers from security vulnerabilities as any large software product invariably
does. Previous publicly documented vulnerabilities have allowed for low privileged users
to execute arbitrary code in the context of the operating system user that the ASE server is
running under.

Updates to Sybase ASE come in the following forms:

. Emergency Bug Fixes (EBFs) are released to correct the flawed component. The
accompanying documentation will typically state the severity of the issue (e.g.
Sybase views this as a mandatory correction that you should implement
immediately).


. Electronic Software Distribution packages (ESDs) are released periodically and
typically contain multiple EBFs and other non-security bug fixes packaged as a
single download, but no additional features. The most recent ESD for a given release
represents the most up-to-date stable version.


. Interim Releases (IRs) are minor releases that introduce new features and
enhancements, incorporating previous ESDs.


. Notification of upcoming patches and possible security threats from third party
components is often announced as an Urgent Notice. Urgent Notices may be
downloaded from the Sybase support site.


Occasionally details of vulnerabilities for which no patch exists may surface on security
mailing lists such as Bugtraq or Full Disclosure. It is therefore recommended that these
lists are regularly monitored. It may be preferable to set up keyword filters for Sybase
since these lists carry a high volume of traffic.


EBFs, ESDs and IRs should be installed in a timely manner subject to your organizations
patching policy and only after they have been fully tested on non-production servers.

Rationale:

It is important to keep up-to-date with patches to ensure the security and integrity of the
data within the database. Privilege escalation vulnerabilities could be used directly via low
privileged users or indirectly via application flaws such as SQL injection to compromise the
database and gain a foothold on the host operating system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Download and install the latest EBFs/ESD/IR from the Sybase download site."
  reference   : "800-171|3.14.1,800-53|SI-2,CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.4.4(e),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,LEVEL|1S,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|PR9,NIAv2|SS14b,SWIFT-CSCv1|2.2"
  see_also    : "https://workbench.cisecurity.org/files/1612"
  sql_request : "select @@version"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
  severity    : MEDIUM
</custom_item>

</group_policy>
</check_type>
