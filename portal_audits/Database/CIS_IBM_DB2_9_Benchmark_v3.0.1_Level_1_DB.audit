#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.6 $
# $Date: 2020/04/22 $
#
# description : This document implements the security configuration as recommended by the
#               CIS IBM DB2 9 Benchmark v3.0.1.
#
#               https://workbench.cisecurity.org/files/1654
#
#<ui_metadata>
#<display_name>CIS IBM DB2 9 Benchmark v3.0.1 Level 1 DB</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS IBM DB2 9 Benchmark Level 1 Database</name>
#  <version>3.0.1</version>
#  <link>https://workbench.cisecurity.org/files/1654</link>
#</spec>
#<labels>database,cis,db2,db2_v9</labels>
#<benchmark_refs>LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>DB2_OWNER</name>
#    <default>db2inst1</default>
#    <description>DB2 Owner Username</description>
#    <info>The user name for the DB2 instance being audited.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Database" db_type:"DB2" version:"1">
<group_policy:"CIS IBM DB2 9 Benchmark v3.0.1 audit">

<custom_item>
  type        : SQL_POLICY
  description : "1.3 Leverage the least privilege principle"
  info        : "The DB2 database instance will execute under the context of a given security principle. It is recommended that this service have the least privileges possible. Furthermore, it is advisable to have the DB2 service executed using the DB2 instance owner and monitor such accounts for unauthorized access to the sensitive data.

Leveraging a least privilege account for the DB2 service will reduce an attacker's ability to compromise the host operating system should the DB2 service process become compromised.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Ensure that all accounts have the absolute minimal privilege granted to perform their tasks."
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select distinct authid from sysibmadm.privileges where lower(authid) not like 'sysrole_%';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.1 Enable audit buffer"
  info        : "DB2 can be configured to use an audit buffer. It is recommended that the audit buffer size be set to at least 1000.

Increasing the audit buffer size to greater than 0 will allocate space for the audit records generated by the audit facility. At scheduled intervals, or when the audit buffer is full, the db2auditd audit daemon empties the audit buffer to disk, writing the audit records asynchronously."
  solution    : "Perform the following to establish an audit buffer:
1. Attach to the DB2 instance:
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using audit_buf_sz 1000
Default Value:
The default value for audit_buz_sz is zero (0)."
  reference   : "CSCv6|6.3,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'audit_buf_sz';"
  sql_types   : POLICY_INTEGER
  sql_expect  : [1000..MAX]
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.3 Require explicit authorization for cataloging"
  info        : "DB2 can be configured to allow users that do not possess the SYSADM authority to catalog and uncatalog databases and nodes. It is recommended that the catalog_noauth parameter be set to NO.

Cataloging a database is the process of registering a database from a remote client to allow remote call and access. Setting catalog-noauth to YES bypasses all permission checks and allows anyone to catalog and uncatalog databases."
  solution    : "Perform the following to require explicit authorization to catalog and uncatalog databases and nodes.
1. Attach to the DB2 instance:
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using catalog_noauth no
Default Value:
The default value for CATALOG_NOAUTH is NO."
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'catalog_noauth';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "no"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.4 Disable data links support"
  info        : "Datalinks enables the database to support the Data Links Manager to manage unstructured data, such as images, large files, and other unstructured files on the host. It is recommended that data links support be disabled.

Disable datalinks if there is no use for them because this will reduce the attack surface for the DB2 service."
  solution    : "1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using datalinks no
Default Value:
The default value for datalinks is NO."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'datalinks';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL || "no"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.5 Secure default database location - DFTDBPATH set to INSTANCE_HOME"
  info        : "The dftdbpath parameter contains the default file path used to create DB2 databases. It is recommended that this parameter is set to a directory owned by the DB2 Administrator.

Securing the default database path will ensure that the confidentiality, integrity, and availability of data contained in the DB2 service is preserved.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using dftdbpath"
  reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),LEVEL|1S,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,SWIFT-CSCv1|5.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'dftdbpath';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "ManualReviewRequired"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.7 Set diagnostic logging to capture errors and warnings"
  info        : "The diaglevel parameter specifies the type of diagnostic errors that will be recorded in the db2diag.log file. It is recommended that the diaglevel parameter be set to at least 3.

The recommended diaglevel setting is 3, but any value greater than 3 is also acceptable. A value of at least 3 will allow the DB2 instance to capture all errors and warnings that occur on the system."
  solution    : "1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using diaglevel 3
Default Value:
The default value for diaglevel is 3."
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'diaglevel';"
  sql_types   : POLICY_INTEGER
  sql_expect  : [3..4]
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.9 Require instance name for discovery requests"
  info        : "The discover parameter determines what kind of discovery requests, if any, the DB2 server will fulfill. It is recommended that the DB2 server only fulfill requests from clients that know the given instance name (discover parameter value of known).

Discovery capabilities may be used by a malicious entity to derive the names of and target DB2 instances. In this configuration, the client has to specify a known instance name to be able to detect the instance."
  solution    : "The recommended value is KNOWN. Note: this requires a DB2 restart.
1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using discover known
3. Restart the DB2 instance.
db2 => db2stop
db2 => db2start
Impact:
The implementation of this recommendation results in a brief downtime. It is advisable to ensure that the setting is implemented during an approved maintenance window.
Default Value:
The default value for discover is SEARCH."
  reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'discover';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "known"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.10 Disable instance discoverability"
  info        : "The discover_inst parameter specifies whether the instance can be discovered in the network. It is recommended that instances not be discoverable.

Discovery capabilities may be used by a malicious entity to derive the names of and target DB2 instances."
  solution    : "1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using discover_inst disable
Default Value:
The default value for discover_inst is ENABLE."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'discover_inst';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "disable"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.11 Authenticate federated users at the instance level"
  info        : "The fed_noauth parameter determines whether federated authentication will be bypassed at the instance. It is recommended that this parameter be set to no.

Setting fed_noauth to no will ensure that authentication is checked at the instance level. This will prevent any federated authentication from bypassing the client and the server."
  solution    : "1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using fed_noauth no
Default Value:
The default value for FED_NOAUTH is NO."
  reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'fed_noauth';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "no"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.12 Enable instance health monitoring"
  info        : "The health_mon parameter allows you to specify whether you want to monitor the health of the instance, the databases, and the corresponding database objects. It is recommended that the health_mon parameter be set to on.

Enabling instance health monitoring will assist in ensuring instance data availability and integrity."
  solution    : "1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using health_mon on
Default Value:
The default value for HEALTH_MON is ON."
  reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'health_mon';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "on"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.13 Retain fenced model processes"
  info        : "The keepfenced parameter indicates whether or not external user-defined functions or stored procedures will reuse a DB2 process after each subsequent call. It is recommended that this parameter be set to NO.

All routines that were executed by the DB2 should be terminated when the instance is stopped."
  solution    : "Note: this procedure will require a DB2 restart.
1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using keepfenced no
3. Restart the DB2 instance.
db2 => db2stop
db2 => db2start
Default Value:
The default value for KEEPFENCED is YES."
  reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'keepfenced';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "no"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.14 Set maximum connection limits - MAX_COORDAGENTS"
  info        : "The max_connections parameter indicates the maximum number of client connections allowed per database partition. It is recommended that this parameter be set equal to the max_coordagents parameter. The max_coordagents parameter equals the maximum number of agents needed to perform connections to the database or attachments to the instance.
NOTE: Ensure that dependent parameters, such as maxappls, are set less than the max_coordagents parameter. This would ensure that the lock limit is not reached, which would result in lock escalation issues.

By default, DB2 allows an unlimited number of users to access the DB2 instance. In addition to giving access to the DB2 instance to authorized users only, it is recommended to set a limit to the number of users allowed to access a DB2 instance. This helps prevent denial of service conditions should an authorized process malfunction and attempt a large number of simultaneous connections."
  solution    : "The default value for max_coordagents is AUTOMATIC. Allowable range is 1 to 64,000, or -1 for unlimited. The recommended value is 100. The following command will set max_coordagents to 100, as well as set max_connections to AUTOMATIC which is also recommended.
1. Attach to the DB2 instance
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using max_coordagents 100 AUTOMATIC

3. If maxappls is NOT less than max_coordagents, then adjust the value of maxappls accordingly:
db2 => update database configuration using maxappls <a number less then max_coordagents>
Default Value:
The default value for max_connections is AUTOMATIC. The default value for max_coordagents is AUTOMATIC. The default value for maxappls is AUTOMATIC."
  reference   : "800-53|AC-10,ITSG-33|AC-10,LEVEL|1S,NESA|T5.5.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'max_coordagents';"
  sql_types   : POLICY_INTEGER
  sql_expect  : [1..100]
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.14 Set maximum connection limits - MAX_CONNECTIONS"
  info        : "The max_connections parameter indicates the maximum number of client connections allowed per database partition. It is recommended that this parameter be set equal to the max_coordagents parameter. The max_coordagents parameter equals the maximum number of agents needed to perform connections to the database or attachments to the instance.
NOTE: Ensure that dependent parameters, such as maxappls, are set less than the max_coordagents parameter. This would ensure that the lock limit is not reached, which would result in lock escalation issues.

By default, DB2 allows an unlimited number of users to access the DB2 instance. In addition to giving access to the DB2 instance to authorized users only, it is recommended to set a limit to the number of users allowed to access a DB2 instance. This helps prevent denial of service conditions should an authorized process malfunction and attempt a large number of simultaneous connections."
  solution    : "The default value for max_coordagents is AUTOMATIC. Allowable range is 1 to 64,000, or -1 for unlimited. The recommended value is 100. The following command will set max_coordagents to 100, as well as set max_connections to AUTOMATIC which is also recommended.
1. Attach to the DB2 instance
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using max_coordagents 100 AUTOMATIC

3. If maxappls is NOT less than max_coordagents, then adjust the value of maxappls accordingly:
db2 => update database configuration using maxappls <a number less then max_coordagents>
Default Value:
The default value for max_connections is AUTOMATIC. The default value for max_coordagents is AUTOMATIC. The default value for maxappls is AUTOMATIC."
  reference   : "800-53|AC-10,ITSG-33|AC-10,LEVEL|1S,NESA|T5.5.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'max_connections';"
  sql_types   : POLICY_INTEGER
  sql_expect  : [1..100]
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.15 Set administrative notification level"
  info        : "The notifylevel parameter specifies the type of administration notification messages that are written to the administration notification log. It is recommended that this parameter be set greater than or equal to 3. A setting of 3, which includes settings 1 and 2, will log all fatal errors, failing services, system integrity, as well as system health.

The system should be monitoring all Health Monitor alarms, warnings, and attentions. This may give an indication of any malicious usage on the DB2 instance."
  solution    : "1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using notifylevel 3
Default Value:
The default value for the notifylevel parameter is 3."
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'notifylevel';"
  sql_types   : POLICY_INTEGER
  sql_expect  : 3
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1.16 Enable server-based authentication"
  info        : "The srvcon_auth parameter specifies how and where authentication is to take for incoming connections to the server. It is recommended that this parameter is not set to CLIENT.

This parameter will take precedence over and override the authentication level. Authentication should be set on the server side."
  solution    : "The recommended value is SERVER. Note: this will require a DB2 restart.
1. Attach to the DB2 instance.
db2 => attach to $DB2INSTANCE
2. Run the following command from the DB2 command window:
db2 => update database manager configuration using srvcon_auth server
3. Restart the DB2 instance.
db2 => db2stop
db2 => db2start
Impact:
The implementation of this recommendation results in a brief downtime. It is advisable to ensure that the setting is implemented during an approved maintenance window.
Default Value:
The default value for SRVCON_AUTH is NULL."
  reference   : "800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,LEVEL|1S,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbmcfg where lower(name) = 'srvcon_auth';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "server"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.2.4 Secure permissions for the primary archive log location"
  info        : "The logarchmeth1 parameter specifies the type of media and the location used as the primary destination of archived logs. It is recommended that the directory used for the archived logs be set to full access for DB2 administrator accounts and read and execute for all other accounts.

Restricting access to the contents of the primary archive log directory will help ensure that the confidentiality, integrity, and availability of archive logs are protected.
Although there are many ways to ensure that your primary logs will be archived, we recommend using the value of DISK as part of the logarchmeth1 parameter. This will properly ensure that the primary logs are archived. A value of OFF is not acceptable."
  solution    : "For Windows and Linux:
1. Attach to the DB2 instance.
2. Run the following command from the DB2 command window to change the primary archive log directory, if necessary:
db2 => update database configuration using logarchmeth1 <valid directory>

Additional steps for Windows (assuming that the logarchmeth1 parameter includes DISK):
1. Connect to the DB2 host
2. Right-click on the primary archive log directory
3. Choose Properties
4. Select the Security tab
5. Grant all DB2 administrator accounts the Full Control authority
6. Grant all other accounts read and execute privileges only (revoke all other privileges)

Additional steps for Linux (assuming that the logarchmeth1 parameter includes DISK):
1. Connect to the DB2 host
2. Change to the primary archive log directory
3. Change the permissions for the directory
OS => chmod -R 755
Default Value:
The default value for LOGARCHMETH1 is OFF.
The default permissions for the directory are read and write access."
  reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),LEVEL|1S,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,SWIFT-CSCv1|5.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbcfg where lower(name) = 'logarchmeth1' and lower(value) != 'off';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:".+"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.2.5 Secure permissions for the secondary archive log location"
  info        : "The logarchmeth2 parameter specifies the type of media and the location used as the secondary destination for archived logs. It is recommended that the directory used for the archived log be set to full access for DB2 administrator accounts and read and execute only for all other accounts.
Rationale:
Restricting access to the contents of the secondary archive log directory will help ensure that the confidentiality, integrity, and availability of archive logs are protected.
Although there are many ways to ensure that your logs will be archived, we recommend using the value of DISK as part of the logarchmeth2 parameter. This will properly ensure that the logs are archived. A finding of OFF is not acceptable."
  solution    : "For Windows and Linux:
1. Attach to the DB2 instance.
2. Run the following command from the DB2 command window to change the secondary archive log directory, if necessary:
db2 => update database configuration using logarchmeth2

Additional steps for Windows (assuming that the logarchmeth2 parameter includes DISK):
1. Connect to the DB2 host
2. Right-click on the secondary archive log directory
3. Choose Properties
4. Select the Security tab
5. Grant all DB2 administrator accounts the Full Control authority
6. Grant all other accounts read and execute privileges only (revoke all other privileges)

Additional steps for Linux (assuming that the logarchmeth2 parameter includes DISK):
1. Connect to the DB2 host
2. Change to the secondary archive log directory
3. Change the permissions for the directory
OS => chmod -R 755
Default Value:
The default value for LOGARCHMETH2 is OFF.
The default value for the directory is read and write access."
  reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),LEVEL|1S,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,SWIFT-CSCv1|5.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbcfg where lower(name) = 'logarchmeth2' and lower(value) != 'off';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:".+"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.2.6 Secure permissions for the tertiary archive log location"
  info        : "The failarchpath parameter specifies the type of media and the location used as the tertiary destination for archived logs. It is recommended that the directory used for the archived logs be set to full access for DB2 administrator accounts and read and execute only for all other accounts.
Rationale:
Restricting access to the contents of the tertiary archive log directory will help ensure that the confidentiality, integrity, and availability of archive logs are protected.
Although there are many ways to ensure that your logs will be archived, we recommend using the value of DISK as part of the failarchpath parameter. This will properly ensure that the logs are archived. A finding of OFF is not acceptable."
  solution    : "For Windows and Linux:
1. Attach to the DB2 instance.
2. Run the following command from the DB2 command window to change the tertiary archive log directory, if necessary:
db2 => update database configuration using failarchpath

Additional steps for Windows (assuming that the failarchpath parameter includes DISK):
1. Connect to the DB2 host
2. Right-click on the tertiary archive log directory
3. Choose Properties
4. Select the Security tab
5. Grant all DB2 administrator accounts the Full Control authority
6. Grant all other accounts read and execute privileges only (revoke all other privileges)

Additional steps for Linux (assuming that the failarchpath parameter includes DISK):
1. Connect to the DB2 host
2. Change to the tertiary archive log directory
3. Change the permissions for the directory
OS => chmod ?R 755
Default Value:
The default value for FAILARCHPATH is null."
  reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),LEVEL|1S,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,SWIFT-CSCv1|5.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbcfg where lower(name) = 'failarchpath';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:".+"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.2.7 Secure permissions for the log mirror location"
  info        : "The mirrorlogpath parameter specifies the type of media and the location used to store the mirror copy of the logs. It is recommended that the directory used for the mirror copy of the logs be set to full access for DB2 administrator accounts and read and execute only for all other accounts.

A mirror log path should not be empty and it should be a valid path. The mirror log path stores a second copy of the active log files. Access to the directory pointed to by that path should be restricted through permissions to help ensure that the confidentiality, integrity, and availability of the mirror logs are protected."
  solution    : "For Windows and Linux:
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window to change the mirror log directory, if necessary:
db2 => update database configuration using mirrorlogpath

Additional steps for Windows:
1. Connect to the DB2 host
2. Right-click on the primary archive log directory
3. Choose Properties
4. Select the Security tab
5. Grant all DB2 administrator accounts the Full Control authority
6. Grant all other accounts read and execute privileges only (revoke all other privileges)

Additional steps for Linux:
1. Connect to the DB2 host
2. Change to the mirror log directory
3. Change the permissions for the directory
OS => chmod -R 755
Default Value:
The default value for mirrorlogpath is null."
  reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),LEVEL|1S,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,SWIFT-CSCv1|5.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbcfg where lower(name) = 'mirrorlogpath';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:".+"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2 Review security rule exemptions"
  info        : "LBAC rule exemptions provide very powerful access. Do not grant them without careful consideration. It is recommended that all security rule exemptions are reviewed against users and their required access.

LBAC rule exemptions allow a particular rule within a particular security policy to not be enforced when trying to access data protected by that security policy.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Review all users that have LBAC rule exemptions for qualification according to needs of the business."
  reference   : "800-171|3.1.5,800-53|AC-16,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CSF|PR.AC-4,ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16,LEVEL|1NS,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee, secpolicyid, accessrulename from syscat.securitypolicyexemptions;"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3 Review security label components"
  info        : "A security label component represents any criteria that you use to decide if a user should have access to a given set of data. It is recommended that all security label components are reviewed.

A security label component should be implemented to provide different levels of access to different sensitive data.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Review all users and ensure those security label components are defined properly."
  reference   : "800-171|3.1.5,800-53|AC-16,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CSF|PR.AC-4,ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16,LEVEL|1NS,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select compname, remarks from syscat.securitylabelcomponents;"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.4 Review security label policies"
  info        : "A security policy defines the criteria in an organization based on the label components, rules, and rule exemptions. It is recommended that all policies are reviewed.

A security policy defines all access to the table and the columns based on the user?s login.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Review all security label policies and ensure that they are set up properly."
  reference   : "800-171|3.1.5,800-53|AC-16,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CSF|PR.AC-4,ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16,LEVEL|1NS,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select secpolicyname, remarks from syscat.securitypolicies;"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.5 Review security labels"
  info        : "A security label defines the criteria of access to the protected data. It is recommended that all security labels are reviewed.

A security label must be properly set up on tables with sensitive data.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Review all security labels and ensure that they are set up properly."
  reference   : "800-171|3.1.5,800-53|AC-16,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CSF|PR.AC-4,ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16,LEVEL|1NS,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select seclabelname, remarks from syscat.securitylabels;"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "5.1 Enable backup redundancy"
  info        : "Backup redundancy ensures that multiple instances of database backups exist.

Maintaining redundant copies of database backups will increase business continuity capabilities should a DB2 service failure coincide with a corrupt backup.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Define a process to replicate your backups onto multiple locations."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/1654"
</report>

<report type:"WARNING">
  description : "5.2 Protect backups"
  info        : "Backups of your database should be stored securely in a location with full access for administrators, read and execute access for group, and no access for users.

Backups may contain sensitive data that attackers can use to retrieve valuable information about the organization.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Define a security policy for all backups that specifies the privileges they should be assigned."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/1654"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "5.3 Enable automatic database maintenance"
  info        : "Enable automatic database maintenance on your DB2 instance. It is recommended that the DB2 Automatic Maintenance tool be used to ensure that the instance is performing optimally.

A well-maintained DB2 instance will provide access to the data and reduce database outages."
  solution    : "1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => update database configuration using auto_maint on
Default Value:
The default value for AUTO_MAINT is ON."
  reference   : "800-171|3.3.4,800-53|AU-5,CN-L3|7.1.3.3(e),CSCv6|3.1,CSF|PR.PT-1,ITSG-33|AU-5,LEVEL|1S,NESA|T3.6.2,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select lower(value) from sysibmadm.dbcfg where lower(name) = 'auto_maint';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "ON"
</custom_item>

<report type:"WARNING">
  description : "5.4 Schedule Runstat and Reorg"
  info        : "runstat and reorg are two DB2 utilities that maintain the database data. It is recommended that these utilities be executed when possible.
Rationale:
All statistics on tables and data should be monitored on a regular basis. A well-performing instance will require less system resources and provide better availability to users.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Run the runstat and/or the reorg utility whenever a maintenance window permits such action."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/1654"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "6.1 Restrict Access to SYSCAT.AUDITPOLICIES"
  info        : "The SYSCAT.AUDITPOLICIES view contains all audit policies for a database. It is recommended that the PUBLIC role be restricted from accessing this view.

This view contains sensitive information about the auditing security for this database. Access to the audit policies may aid in avoiding detection."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.AUDITPOLICIES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'AUDITPOLICIES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.2 Restrict Access to SYSCAT.AUDITUSE"
  info        : "The SYSCAT.AUDITUSE view contains database audit policy for all non-database objects, such as authority, groups, roles, and users. It is recommended that the PUBLIC role be restricted from accessing this view.

This view contains sensitive information about on the types of objects are being audited. Access to the audit usage may aid in avoiding detection."
  solution    : "Revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.AUDITUSE FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'AUDITUSE' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.3 Restrict Access to SYSCAT.DBAUTH"
  info        : "The SYSCAT.DBAUTH view contains information on authorities granted to users or groups of users. It is recommended that the PUBLIC role be restricted from accessing this view.

This view contains all the grants in the database and may be used as an attack vector."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.DBAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'DBAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.4 Restrict Access to SYSCAT.COLAUTH"
  info        : "The SYSCAT.COLAUTH view contains the column privileges granted to the user or groups of users. It is recommended that the PUBLIC role be restricted from accessing this view.

This view contains all the grants in the database and may be used as an attack vector."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.COLAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'COLAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.5 Restrict Access to SYSCAT.EVENTS"
  info        : "The SYSCAT.EVENTSview contains all events that the database is currently monitoring. It is recommended that the PUBLIC role be restricted from accessing this view.

The types of events that the database is monitoring should not be made readily available to the public."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.EVENTS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'EVENTS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.6 Restrict Access to SYSCAT.EVENTTABLES"
  info        : "The SYSCAT.EVENTTABLES view contains the name of the destination table that will receive the monitoring events. It is recommended that the PUBLIC role be restricted from accessing this view.

Public should not have access to see the target name of the event monitoring table."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.EVENTTABLES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'EVENTTABLES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.7 Restrict Access to SYSCAT.ROUTINES"
  info        : "The SYSCAT.ROUTINES view contains all user-defined routines, functions, and stored procedures in the database. It is recommended that the PUBLIC role be restricted from accessing this view.

User-defined functions and routines should not be exposed to the public for exploits."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.ROUTINES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'ROUTINES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.8 Restrict Access to SYSCAT.INDEXAUTH"
  info        : "The SYSCAT.INDEXAUTH view contains a list of users or groups that have CONTROL access on an index. It is recommended that the PUBLIC role be restricted from accessing this view.

The list of all users with access to an index should not be exposed to the public."
  solution    : "Revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.INDEXAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'INDEXAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.9 Restrict Access to SYSCAT.PACKAGEAUTH"
  info        : "The SYSCAT.PACKAGEAUTH view contains a list of users or groups that has EXECUTE privilege on a package. It is recommended that the PUBLIC role be restricted from accessing this view.

The list of all users with access to a package should not be exposed to the public."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.PACKAGEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'PACKAGEAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.10 Restrict Access to SYSCAT.PACKAGES"
  info        : "The SYSCAT.PACKAGES view contains all packages created in the database instance. It is recommended that the PUBLIC role be restricted from accessing this view.

The names of packages created in the database can be used as an entry point if a vulnerable package exists."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.PACKAGES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'PACKAGES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.11 Restrict Access to SYSCAT.PASSTHRUAUTH"
  info        : "The SYSCAT.PASSTHRUAUTH view contains the names of user or group that have pass-through authorization to query the data source. It is recommended that the PUBLIC role be restricted from accessing this view.

The ability to see which accounts have the pass-through privilege could allow an attacker to exploit these accounts to access another data source."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.PASSTHRUAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'PASSTHRUAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.12 Restrict Access to SYSCAT.SECURITYLABELACCESS"
  info        : "The SYSCAT.SECURITYLABELACCESS view contains all accounts in the database that have a security label privilege. It is recommended that the PUBLIC role be restricted from accessing this view.

The ability to see which accounts have the pass-through privilege could allow an attacker to exploit these accounts to access another data source."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SECURITYLABELACCESS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYLABELACCESS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.13 Restrict Access to SYSCAT.SECURITYLABELCOMPONENTELEMENTS"
  info        : "The SYSCAT.SECURITYLABELCOMPONENTELEMENTS view contains the element value for a security label component. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not be able to view all the elements of a security component and/or the database security policy."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SECURITYLABELCOMPONENTELEMENTS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYLABELCOMPONENTELEMENTS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.14 Restrict Access to SYSCAT.SECURITYLABELCOMPONENTS"
  info        : "The SYSCAT.SECURITYLABELCOMPONENTS view contains the components of a security label. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not be able to view all the security components and/or the database security policy."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SECURITYLABELCOMPONENTS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYLABELCOMPONENTS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.15 Restrict Access to SYSCAT.SECURITYLABELS"
  info        : "The SYSCAT.SECURITYLABELS view contains all security labels within the database. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not be able to view all the security components and/or the database security policy."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT SYSCAT.SECURITYLABELS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYLABELS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.16 Restrict Access to SYSCAT.SECURITYPOLICIES"
  info        : "The SYSCAT.SECURITYPOLICIES view contains all database security policies. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not be able to view all the database security policies."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT SYSCAT.SECURITYPOLICIES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYPOLICIES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.17 Restrict Access to SYSCAT.SECURITYPOLICYCOMPONENTRULES"
  info        : "The SYSCAT.SECURITYPOLICYCOMPONENTRULES view contains the access rights for a security label component. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not be able to view all the access rules of the database security policies."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SECURITYPOLICYCOMPONENTRULES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYPOLICYCOMPONENTRULES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.18 Restrict Access to SYSCAT.SECURITYPOLICYEXEMPTIONS"
  info        : "The SYSCAT.SECURITYPOLICYEXEMPTIONS contains the exemption on a security policy that was granted to a database account. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not be able to view all the exemption rules to the database security policies."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SECURITYPOLICYEXEMPTIONS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYPOLICYEXEMPTIONS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.19 Restrict Access to SYSCAT.SURROGATEAUTHIDS"
  info        : "The SYSCAT.SURROGATEAUTHIDS contains all accounts that have been granted SETSESSIONUSER privilege on a user or to PUBLIC. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not be able to view all the surrogate accounts with SETSESSIONUSER privilege."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SURROGATEAUTHIDS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SURROGATEAUTHIDS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.20 Restrict Access to SYSCAT.ROLEAUTH"
  info        : "The SYSCAT.ROLEAUTH contains information on all roles and their respective grantees. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to see the grants of the roles because this could be used as a point of exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.ROLEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'ROLEAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.21 Restrict Access to SYSCAT.ROLES"
  info        : "The SYSCAT.ROLES contains all roles available in the database. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to see all the roles because this could be used as a point of exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.ROLES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'ROLES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.22 Restrict Access to SYSCAT.ROUTINEAUTH"
  info        : "The SYSCAT.ROUTINEAUTH contains a list of all users that have EXECUTE privilege on a routine (function, method, or procedure). It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to see all the grants of routines to users or groups because this could be used as a point of exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.ROUTINEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'ROUTINEAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.23 Restrict Access to SYSCAT.SCHEMAAUTH"
  info        : "The SYSCAT.SCHEMAAUTH contains a list of all users that have one or more privileges or access to a particular schema. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to see all the grants of schemas to users or groups because this could be used as a point of exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SCHEMAAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SCHEMAAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.24 Restrict Access to SYSCAT.SCHEMATA"
  info        : "The SYSCAT.SCHEMATA contains all schema names in the database. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to see all the created schemas in the database because this could be used as a point of exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SCHEMATA FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SCHEMATA' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.25 Restrict Access to SYSCAT.SEQUENCEAUTH"
  info        : "The SYSCAT.SEQUENCEAUTH contains users and/or groups that have access to one or more privileges on a sequence. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to see all the granted access of a sequence in the database because this could be used as a point of exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.SEQUENCEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SEQUENCEAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.26 Restrict Access to SYSCAT.STATEMENTS"
  info        : "The SYSCAT.STATEMENTS contains all SQL statements of a compiled package. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to the source code or the SQL statements of a database package. This could lead to an exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.STATEMENTS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'STATEMENTS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.27 Restrict Access to SYSCAT.PROCEDURES"
  info        : "The SYSCAT.PROCEDURES contains all stored procedures in the database. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to the source code or the SQL statements of a database package. This could lead to an exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.PROCEDURES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'PROCEDURES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.28 Restrict Access to SYSCAT.TABAUTH"
  info        : "The SYSCAT.TABAUTH contains users or groups that have been granted one or more privileges on a table or view. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to the grants of views and tables in a database. This could lead to an exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.TABAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'TABAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.29 Restrict Access to SYSCAT.TBSPACEAUTH"
  info        : "The SYSCAT.TBSPACEAUTH contains users or groups that has been granted the USE privilege on a particular table space in the database. It is recommended that the PUBLIC role be restricted from accessing this view.

PUBLIC should not have access to the grants of the tablespaces in a database. This could lead to an exploit."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SELECT ON SYSCAT.TBSPACEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee FROM sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'TBSPACEAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.30 Restrict Access to Tablespaces"
  info        : "A tablespace is where the data is physically stored. It is recommended that tablespace usage be restricted to authorized users.

Grant the USE of tablespace privilege to only authorized users. Restrict the privilege from PUBLIC, where applicable, as a malicious user can cause a denial of service at the tablespace level by overloading it with corrupted data."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE USE OF TABLESPACE [$tablespace_name] FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "SELECT grantee, tbspace FROM sysibm.systbspaceauth where grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.31 Restrict Access to SYSCAT.MODULEAUTH"
  info        : "The SYSCAT.MODULEAUTH view contains all granted privileges on a module for users, groups, or roles and is read only.

Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.MODULEAUTH view from PUBLIC to reduce risk to the organization's data."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => revoke select on syscat.moduleauth from public"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'MODULEAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.32 Restrict Access to SYSCAT.VARIABLEAUTH"
  info        : "The SYSCAT.VARIABLEAUTH view contains the granted privileges on a global variable for users, groups, or roles and is read only.

Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.VARIABLEAUTH view from PUBLIC to reduce risk to the organization's data."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => revoke select on syscat.variableauth from public"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'VARIABLEAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.33 Restrict Access to SYSCAT.WORKLOADAUTH"
  info        : "The SYSCAT.WORKLOADAUTH catalog represents the users, groups, or roles that have been granted the USAGE privilege on a workload.

Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.WORKLOADAUTH from PUBLIC to reduce risk to the organization's data."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => db2 => revoke select on syscat.workloadauth from public"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'WORKLOADAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.34 Restrict Access to SYSCAT.XSROBJECTAUTH"
  info        : "The SYSCAT.XSROBJECTAUTH view contains granted USAGE privileges on a particular XSR object for users, groups, or roles and is read only.

Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.XSROBJECTAUTH view from PUBLIC to reduce risk to the organization's data."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => revoke select on syscat.xsrmoduleauth from public"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'XSROBJECTAUTH' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.35 Restrict Access to SYSIBMADM.OBJECTOWNERS"
  info        : "The SYSIBMADM.OBJECTOWNERS administrative view shows the complete object ownership information for each authorization ID for USER owning a system catalog defined object from the connected database.

Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBMADM.OBJECTOWNERS view from PUBLIC to reduce risk to the organization's data."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => revoke select on SYSIBMADM.OBJECTOWNERS from public"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSIBMADM' and ttname = 'OBJECTOWNERS' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.36 Restrict Access to SYSIBMADM.PRIVILEGES"
  info        : "The SYSIBMADM.PRIVILEGES administrative view displays all explicit privileges for all authorization IDs in the currently connected databases' system catalogs. PRIVILEGES schema is SYSIBMADM.

Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for catalog views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on SYSIBMADM.PRIVILEGES from PUBLIC to reduce risk to the organization's data."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => revoke select on SYSIBMADM.PRIVILEGES from public"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSIBMADM' and ttname = 'PRIVILEGES' and grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.5 Secure the security administrator role"
  info        : "The SECADM (security administrator) role grants the authority to create, alter (where applicable), and drop roles, trusted contexts, audit policies, security label components, security policies, and security labels. It is also the authority required to grant and revoke roles, security labels and exemptions, and the SETSESSIONUSER privilege. SECADM authority has no inherent privilege to access data stored in tables. It is recommended that the SECADM role be granted to authorized users only.

If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the DB2 instance will be at increased risk.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE SECADM ON DATABASE FROM USER <username>"
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where securityadmauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.6 Secure the database administration role"
  info        : "The DBADM (database administration) role grants the authority to a user to perform administrative tasks on a specific database. It is recommended that the dbadm role be granted to authorized users only.

If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the database will be at increased risk.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 db2 => REVOKE SECADM ON DATABASE FROM USER <username>"
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where dbadmauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.7 Secure the create table role"
  info        : "The CREATETAB (create table) role grants the authority to a user to create tables within a specific database. It is recommended that the createtab role be granted to authorized users only.

Review all users that have access to this authority to avoid the addition of unnecessary and/or inappropriate users.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE CREATETAB ON DATABASE FROM USER <username>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where createtabauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.8 Secure the bind application role"
  info        : "The BINDADD (bind application) role grants the authority to a user to create packages on a specific database. It is recommended that the bindadd role be granted to authorized users only.

If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the database will be at increased risk.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE BINDADD ON DATABASE FROM USER <username>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where bindaddauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.9 Secure the connect role"
  info        : "The CONNECT role grants the authority to a user to connect to a specific database. It is recommended that the CONNECT role be granted to authorized users only.

Review all users that have access to this authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE CONNECT ON DATABASE FROM USER <username>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where connectauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.10 Secure the NOFENCE role"
  info        : "The NOFENCE role grants the authority to a user to create user-defined functions or procedures that are not fenced in the memory block of the database. It is recommended that the NOFENCE role be granted to authorized users only.

Review all users that have access to this authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE CREATE_NOT_FENCED_ROUTINE ON DATABASE FROM USER <username>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where nofenceauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.11 Secure the implicit schema role"
  info        : "The IMPLSCHEMA (implicit schema) role grants the authority to a user to create objects without specifying a schema that already exists. It is recommended that the IMPLSCHEMA role be granted to authorized users only.

Review all users that have access to this authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE IMPLICIT_SCHEMA ON DATABASE FROM USER <username>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where implschemaauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.12 Secure the load role"
  info        : "The LOAD role grants the authority to a user to load data into tables. It is recommended that the LOAD role be granted to authorized users only.

Review all users that have access to this authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where loadauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.13 Secure the external routine role"
  info        : "The EXTERNALROUTINE role grants the authority to a user to create user-defined functions and procedures in a specific database. It is recommended that the EXTERNALROUTINE role be granted to authorized users only.

Review all users that have access to this authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE CREATE_EXTERNAL_ROUTINE ON DATABASE FROM USER <username>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where externalroutineauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.14 Secure the QUIESCECONNECT role"
  info        : "The QUIESCECONNECT role grants the authority to a user to access a database even in the quiesced state. It is recommended that the QUIESCECONNECT role be granted to authorized users only.

Review all users that have access to this authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2INSTANCE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => REVOKE QUIESCE_CONNECT ON DATABASE FROM USER <username>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where quiesceconnectauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.15 Secure the SQLADM authority"
  info        : "The SQLADM authority is required to monitor, tune, and alter SQL statements.

The SQLADM authority can CREATE, SET, FLUSH, DROP EVENT MONITORS and perform RUNSTATS and REORG INDEXES and TABLES. SQLADM can be granted to users, groups, or roles or PUBLIC. SQLADM authority is a subset of the DBADM authority and can be granted by the SECADM authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke SQLADM authority from any unauthorized users.
REVOKE SQLADM ON DATABASE FROM USER <username>"
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where sqladmauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.16 Secure the DATAACCESS authority"
  info        : "The DATAACCESS authority grants the authority to access data. It allows the grantee to leverage DML level commands, i.e., SELECT, INSERT, UPDATE, DELETE, LOAD, and EXECUTE any package or routine.

The DATAACCESS authority gives the grantee read access and also control over manipulating the data. DATAACCESS can be granted to users, groups, or roles, but not PUBLIC. DATAACCESS authority is a subset of the DBADM authority and can be granted by the SECADM authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke DATAACCESS authority from any unauthorized users.
REVOKE DATAACCESS ON DATABASE FROM USER <username>"
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where dataaccessauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.17 Secure the ACCESSCTRL authority"
  info        : "The ACCESSCTRL authority is the authority required to grant and revoke privileges on objects within a specific database. Some of these privileges include BINDADD, CONNECT, CREATETAB, CREATE\_EXTERNAL\_ROUTINE, LOAD, and QUIESCE\_CONNECT. It has no inherent privilege to access data stored in tables, except the catalog tables and views.

The ACCESSCTRL authority gives the grantee access control to a specified database. With this authority, the grantee can grant/revoke privileges to other users. ACCESSCTRL can be granted to users, groups, or roles, but not PUBLIC. ACCESSCTRL authority can only be granted by the SECADM authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke ACCESSCTRL authority from any unauthorized users.
REVOKE ACCESSCTRL ON DATABASE FROM USER <username>"
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where accessctrlauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.18 Secure the WLMADM authority"
  info        : "The WLMADM authority manages workload objects for a database. Holders of DBADM authority implicitly also hold WLMADM authority.

The WLMADM authority enables creating, altering, dropping, commenting, granting, and revoking access to workload objects for a database.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke any user who should NOT have WLMADM authority:
REVOKE WLMADM ON DATABASE FROM USER <username>"
  reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
  see_also    : "https://workbench.cisecurity.org/files/1654"
# Note: Variable @DB2_OWNER@ replaced with "db2inst1" in field "sql_request".
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where wlmadmauth = 'Y' and lower(grantee) != lower('db2inst1');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "8.3 Remove unused schemas"
  info        : "A schema is a logical grouping of database objects. It is recommended that unused schemas be removed from the database.

Unused schemas can be left unmonitored and may be subjected to abuse, so they should be removed.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Perform the following commands to remove unused schemas:
1. Connect to the DB2 instance.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window:
db2 => drop scheme  restrict
3. Remove the unused schemas."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1NS,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select schemaname from syscat.schemata where schemaname not in ('NULLID', 'SQLJ', 'SYSCAT', 'SYSFUN', 'SYSIBM', 'SYSIBMADM', 'SYSIBMINTERNAL', 'SYSIBMTS', 'SYSPROC', 'SYSPUBLIC', 'SYSSTAT', 'SYSTOOLS');"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "8.4 Review system tablespaces for user data"
  info        : "System tablespaces store all system object data within that database. It is recommended that system tablespaces are used to store system data only and not user data.

Do not install any user data in the following system tablespaces: SYSCATSPACE and SYSTOOLSPACE.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Drop, migrate, or otherwise remove all user data objects (tables, schemas, etc.) from within the system tablespaces. Also, revoke write access for the system tablespaces for all users. Note that these actions may cause loss of data and functionality for users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Review unused users and user objects that are stored in the system tablespaces. Perform the appropriate actions to remediate the identified issues."
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1NS,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select tabschema,tabname,tbspace from syscat.tables where tabschema not in ('ADMINISTRATOR','SYSIBM','SYSTOOLS') and tbspace in ('SYSCATSPACE','SYSTOOLSPACE','SYSTOOLSTMPSPACE','TEMPSPACE');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "9.1 Review the roles"
  info        : "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

Reviewing the roles within a database helps minimize the possibility of unwanted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To remove a role from the database:
1. Attach to a DB2 Instance:
db2 => attach to $DB2INSTANCE
2. Connect to DB2 database:
db2 => connect to $DBNAME
3. Run the following:
db2 => drop role <role name>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select rolename from syscat.roleauth where grantortype <> 'S' group by rolename;"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "9.2 Review the role members"
  info        : "Having roles that have been granted specific privileges, then assigning users to the roles, is usually considered the best way to grant application access. Because granting privileges to individual users can be more difficult to track and maintain against unauthorized access, users should be assigned to organization-defined database roles according to the needs of the business. As users leave the organization or change responsibilities within the organization, the appropriate roles for them change as well, so role membership needs to be reviewed and verified periodically.

Users who have excessive privileges not needed to do their jobs pose an unnecessary risk to the organization as an insider threat.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To remove a member from a particular role:
1. Attach to a DB2 Instance:
db2 => attach to $DB2INSTANCE
2. Connect to DB2 database:
db2 => connect to $DBNAME
3. Run the following:
db2 => revoke role <role name> from <role member>"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select rolename,grantee from syscat.roleauth where grantortype <> 'S' group by rolename, grantee;"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "9.4 Review roles granted to PUBLIC"
  info        : "Granting to PUBLIC increases the risk of unauthorized entry into the database. Because PUBLIC is accessible by any database user, it is important to understand the exposure it has on all database objects. It would make sense to grant role membership to PUBLIC if all users required all the privileges granted through that role.

As any role granted to PUBLIC can potentially allow the compromise of database availability, confidentiality, or integrity, these roles should be restricted according to the needs of the business.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To remove PUBLIC from a particular role:
1. Attach to a DB2 Instance:
db2 => attach to $DB2INSTANCE
2. Connect to DB2 database:
db2 => connect to $DBNAME
3. Run the following:
db2 => revoke role <role name> from PUBLIC"
  reference   : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also    : "https://workbench.cisecurity.org/files/1654"
  sql_request : "select grantee, rolename from syscat.roleauth where grantee = 'PUBLIC';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
  severity    : MEDIUM
</custom_item>

</group_policy>
</check_type>
