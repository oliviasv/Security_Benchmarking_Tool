#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2020/05/19 $
#
# Description : This document implements the security configuration as recommended by the
#               DISA Oracle Database 11.2g v1r18 STIG.
#
#<ui_metadata>
#<display_name>DISA STIG Oracle 11.2g v1r18 Database</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>Oracle 11.2g Database</name>
#  <version>1.18.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip</link>
#</spec>
#<labels>database,disa,oracle,oracle_11.2g,stig</labels>
#<benchmark_refs>CAT,CCI,Rule-ID,STIG-ID,Vuln-ID,Group-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>SESSIONS_PER_USER</name>
#    <default>10|[1-9]</default>
#    <description>Allowed Sessions per User</description>
#    <info>The organization's limit on session per user.</info>
#  </variable>
#  <variable>
#    <name>JOB_QUEUE_PROC</name>
#    <default>10</default>
#    <description>job_queue_processes</description>
#    <info>The appropriate number of job_queue_processes for the local environment.</info>
#  </variable>
#  <variable>
#    <name>MAX_JOB_SLAVE_PROC</name>
#    <default>999</default>
#    <description>max_job_slave_procs</description>
#    <info>The appropriate number of max_job_slave_processes for the local environment.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Database" db_type:"Oracle" version:"1">
<group_policy:"DISA STIG Oracle 11.2g v1r15 - Database">

<if>
  <condition type:"AND">
    <custom_item>
      type        : SQL_POLICY
      description : "Oracle version is = 11.2"
      sql_request : "SELECT banner FROM v$version WHERE banner LIKE 'Oracle%';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : regex: " 11\.2\.[0-9]+\.[0-9]+"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_STIG_Oracle_Database_11.2g_v1r18_DB.audit from DISA Oracle Database 11.2g v1r18 STIG"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-017100 - The DBMS must protect the integrity of publicly available information and applications."
      info        : "The purpose of this control is to ensure organizations explicitly address the protection needs for public information and applications with such protection likely being implemented as part of other security controls.

Databases designed to contain publicly available information, though not concerned with confidentiality, must still maintain the integrity of the data they house. If data available to the public is not protected from unauthorized modification, then it cannot be trusted by those accessing it.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Apply appropriate controls to protect the integrity of publicly available information.
- - - - -
If the appropriate controls include placing the data in a read-only tablespace, proceed as follows.

After we figure out the tablespace the data object is stored in:
$ sqlplus connect as sysdba
SQL> SELECT table_name, tablespace_name from dba_tables where upper(table_name) like &tablename_from_developer;

Once we get the name of the tablespace where all of the important data is stored, alter the tablespace to be read-only.
SQL> ALTER TABLESPACE &tablespace_where_data_is READ ONLY;

For better performance while accessing data in a read-only tablespace, you can issue a query that accesses all of the blocks of the tables in the tablespace just before making it read-only. A simple query, such as SELECT COUNT (*), executed against each table ensures that the data blocks in the tablespace can be subsequently accessed most efficiently. This eliminates the need for the database to check the status of the transactions that most recently modified the blocks.  You can issue the ALTER TABLESPACE...READ ONLY statement while the database is processing transactions. After the statement is issued, the tablespace is put into a transitional read-only state. No transactions are allowed to make further changes (using DML statements) to the tablespace. If a transaction attempts further changes, it is terminated and rolled back. However, transactions that already made changes and that attempt no further changes are allowed to commit or roll back.  If a transaction started before the statement remains active, but rolls back to a savepoint, rolling back its changes to the tablespace, then the statement no longer waits for this active transaction."
      reference   : "CAT|II,CCI|CCI-001149,Rule-ID|SV-66349r1_rule,STIG-ID|O112-C2-017100,Vuln-ID|V-52133"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-017600 - The DBMS must terminate user sessions upon user logout or any other organization or policy-defined session termination events, such as idle time limit exceeded - SESSIONS_PER_USER"
      info        : "This requirement focuses on communications protection at the application session, versus network packet, level.

Session IDs are tokens generated by web applications to uniquely identify an application user's session.   Applications will make application decisions and execute business logic based on the session ID. Unique session identifiers or IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Unique session IDs help to reduce predictability of said identifiers. Unique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attackers are unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions. When a user logs out, or when any other session termination event occurs, the application must terminate the user session to minimize the potential for an attacker to hijack that particular user session.

Database sessions must be terminated when no longer in use in order to prevent session hijacking."
      solution    : "Configure DBMS settings to terminate sessions upon user logout.  Configure DBMS settings to terminate sessions upon the occurrence of any organization or policy-defined session termination event.
- - - - -
To configure specific session termination processes we need to define the organization or policy-defined session termination event.  Below are some examples.

Oracle has several ways to disconnect idle sessions, both from within SQL*Plus via resources profiles (connect_time, idle_time) and with the SQL*net expire time parameter.

You can use profiles to set the connect time and idle time with 'alter profile' statements:

alter profile senior_claim_analyst limit
   connect_time 180000
   sessions_per_user 2
   ldle_time 1800;

Profiles comprise a named set of resource limits. By default, when you create users, they are given the default profile, which provides unlimited use of all resources.

The syntax to create a profile follows:

CREATE PROFILE  LIMIT resource_parameters|password_parameters;
Resource_parameters:
 [SESSIONS_PER_USER n|UNLIMITED|DEFAULT]
 [CPU_PER_SESSION   n|UNLIMITED|DEFAULT]
 [CPU_PER_CALL      n|UNLIMITED|DEFAULT]
 [CONNECT_TIME      n|UNLIMITED|DEFAULT]
 [IDLE_TIME         n|UNLIMITED|DEFAULT]

By setting resource limits, you can prevent users from performing operations that will tie up the system and prevent other users from performing operations. You can use resource limits for security, to ensure that users log off the system, so as not to leave the session connected for long periods of time.

The system resource limits can be enforced at the session-level, the call level, or both. The session-level is calculated from the time the user logs in to the database until the user exits. The call level applies to each SQL command issued. Session-level limits are enforced for each connection. When a session-level limit is exceeded, only the last SQL command issued is rolled back; no further work can be performed until a commit, rollback, or exit is performed.

Using SQLNET.EXPIRE_TIME

The sqlnet.expire_time parameter is used to set a time interval, in minutes, to determine how often a probe should be sent verifying that client/server connections are active. If you need to ensure that connections are not left open indefinitely (or up to the time set by operating system-specific parameters), you should set a value that is greater than 0. This protects the system from connections left open due to an abnormal client termination.

When the probe detects a terminated connection or a connection no longer in use, it signals an error, causing the server process to exit. This setting is intended for use on the database server side of the connection, which usually handles multiple connections at any one time. Limitations on using this terminated (dead) connection detection feature are:

sqlnet.expire_time cannot be used on bequeathed connections.

The SQL*Net expire_time probe packet will generate additional network traffic that may downgrade the network's performance, depending on the number of connections.

Depending on the operating system that is in use, additional server processing may need to be performed to distinguish the connection probe from other events that occur. This overhead for detection of probe events can result in downgraded network performance.

Turning-on expire_time

To set up these advanced features, simply edit your sqlnet.ora file.  If you are a beginner, follow this procedure:

Start the Oracle Network Manager GUI.

In the GUI navigator pane, expand the icons Local > Profile.

From the list on the right hand pane, select General.

Click on the Advanced tab.

Next, enter the values for the fields or options you want to set.

When you are finished, choose File > Save Network Configuration to write your changes to the sqlnet.ora file.

(Note: This assumes that a single sqlnet.ora file, in the default location, is in use.  Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

The sqlnet.ora inbound_connect_timeout parameter

The sqlnet.ora inbound_connect_timeout parameter is used to limit the time, set in seconds, for a client to connect with the database server and provide the required authentication information.

Also see sqlnet.inbound_connect_timeout tips.

To limit consumption of Oracle resources by unauthorized users and enable an audit trail, you should set time-limit values for the sqlnet.inbound_connect_timeout parameter in wall-clock seconds. (This parameter does not have default values.)  Failure resulting from sqlnet.inbound_connect_timeout will throw an ORA-03136 inbound connection timed out error."
      reference   : "800-53|AC-10,CAT|II,CCI|CCI-001185,ITSG-33|AC-10,NESA|T5.5.1,Rule-ID|SV-66351r2_rule,STIG-ID|O112-C2-017600,Vuln-ID|V-52135"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select profile, limit from DBA_PROFILES where resource_name = 'SESSIONS_PER_USER';"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : regex:".*","^(DEFAULT|[1-2])$"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-017600 - The DBMS must terminate user sessions upon user logout or any other organization or policy-defined session termination events, such as idle time limit exceeded - CONNECT_TIME"
      info        : "This requirement focuses on communications protection at the application session, versus network packet, level.

Session IDs are tokens generated by web applications to uniquely identify an application user's session.   Applications will make application decisions and execute business logic based on the session ID. Unique session identifiers or IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Unique session IDs help to reduce predictability of said identifiers. Unique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attackers are unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions. When a user logs out, or when any other session termination event occurs, the application must terminate the user session to minimize the potential for an attacker to hijack that particular user session.

Database sessions must be terminated when no longer in use in order to prevent session hijacking."
      solution    : "Configure DBMS settings to terminate sessions upon user logout.  Configure DBMS settings to terminate sessions upon the occurrence of any organization or policy-defined session termination event.
- - - - -
To configure specific session termination processes we need to define the organization or policy-defined session termination event.  Below are some examples.

Oracle has several ways to disconnect idle sessions, both from within SQL*Plus via resources profiles (connect_time, idle_time) and with the SQL*net expire time parameter.

You can use profiles to set the connect time and idle time with 'alter profile' statements:

alter profile senior_claim_analyst limit
   connect_time 180000
   sessions_per_user 2
   ldle_time 1800;

Profiles comprise a named set of resource limits. By default, when you create users, they are given the default profile, which provides unlimited use of all resources.

The syntax to create a profile follows:

CREATE PROFILE  LIMIT resource_parameters|password_parameters;
Resource_parameters:
 [SESSIONS_PER_USER n|UNLIMITED|DEFAULT]
 [CPU_PER_SESSION   n|UNLIMITED|DEFAULT]
 [CPU_PER_CALL      n|UNLIMITED|DEFAULT]
 [CONNECT_TIME      n|UNLIMITED|DEFAULT]
 [IDLE_TIME         n|UNLIMITED|DEFAULT]

By setting resource limits, you can prevent users from performing operations that will tie up the system and prevent other users from performing operations. You can use resource limits for security, to ensure that users log off the system, so as not to leave the session connected for long periods of time.

The system resource limits can be enforced at the session-level, the call level, or both. The session-level is calculated from the time the user logs in to the database until the user exits. The call level applies to each SQL command issued. Session-level limits are enforced for each connection. When a session-level limit is exceeded, only the last SQL command issued is rolled back; no further work can be performed until a commit, rollback, or exit is performed.

Using SQLNET.EXPIRE_TIME

The sqlnet.expire_time parameter is used to set a time interval, in minutes, to determine how often a probe should be sent verifying that client/server connections are active. If you need to ensure that connections are not left open indefinitely (or up to the time set by operating system-specific parameters), you should set a value that is greater than 0. This protects the system from connections left open due to an abnormal client termination.

When the probe detects a terminated connection or a connection no longer in use, it signals an error, causing the server process to exit. This setting is intended for use on the database server side of the connection, which usually handles multiple connections at any one time. Limitations on using this terminated (dead) connection detection feature are:

sqlnet.expire_time cannot be used on bequeathed connections.

The SQL*Net expire_time probe packet will generate additional network traffic that may downgrade the network's performance, depending on the number of connections.

Depending on the operating system that is in use, additional server processing may need to be performed to distinguish the connection probe from other events that occur. This overhead for detection of probe events can result in downgraded network performance.

Turning-on expire_time

To set up these advanced features, simply edit your sqlnet.ora file.  If you are a beginner, follow this procedure:

Start the Oracle Network Manager GUI.

In the GUI navigator pane, expand the icons Local > Profile.

From the list on the right hand pane, select General.

Click on the Advanced tab.

Next, enter the values for the fields or options you want to set.

When you are finished, choose File > Save Network Configuration to write your changes to the sqlnet.ora file.

(Note: This assumes that a single sqlnet.ora file, in the default location, is in use.  Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

The sqlnet.ora inbound_connect_timeout parameter

The sqlnet.ora inbound_connect_timeout parameter is used to limit the time, set in seconds, for a client to connect with the database server and provide the required authentication information.

Also see sqlnet.inbound_connect_timeout tips.

To limit consumption of Oracle resources by unauthorized users and enable an audit trail, you should set time-limit values for the sqlnet.inbound_connect_timeout parameter in wall-clock seconds. (This parameter does not have default values.)  Failure resulting from sqlnet.inbound_connect_timeout will throw an ORA-03136 inbound connection timed out error."
      reference   : "800-171|3.1.11,800-53|AC-12,CAT|II,CCI|CCI-001185,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8,Rule-ID|SV-66351r2_rule,STIG-ID|O112-C2-017600,Vuln-ID|V-52135"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select profile, limit from DBA_PROFILES where resource_name = 'CONNECT_TIME';"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : regex:".*","^(DEFAULT|180000|1[0-7][0-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9]|[1-9])$"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-017600 - The DBMS must terminate user sessions upon user logout or any other organization or policy-defined session termination events, such as idle time limit exceeded - IDLE_TIME"
      info        : "This requirement focuses on communications protection at the application session, versus network packet, level.

Session IDs are tokens generated by web applications to uniquely identify an application user's session.   Applications will make application decisions and execute business logic based on the session ID. Unique session identifiers or IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Unique session IDs help to reduce predictability of said identifiers. Unique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attackers are unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions. When a user logs out, or when any other session termination event occurs, the application must terminate the user session to minimize the potential for an attacker to hijack that particular user session.

Database sessions must be terminated when no longer in use in order to prevent session hijacking."
      solution    : "Configure DBMS settings to terminate sessions upon user logout.  Configure DBMS settings to terminate sessions upon the occurrence of any organization or policy-defined session termination event.
- - - - -
To configure specific session termination processes we need to define the organization or policy-defined session termination event.  Below are some examples.

Oracle has several ways to disconnect idle sessions, both from within SQL*Plus via resources profiles (connect_time, idle_time) and with the SQL*net expire time parameter.

You can use profiles to set the connect time and idle time with 'alter profile' statements:

alter profile senior_claim_analyst limit
   connect_time 180000
   sessions_per_user 2
   ldle_time 1800;

Profiles comprise a named set of resource limits. By default, when you create users, they are given the default profile, which provides unlimited use of all resources.

The syntax to create a profile follows:

CREATE PROFILE  LIMIT resource_parameters|password_parameters;
Resource_parameters:
 [SESSIONS_PER_USER n|UNLIMITED|DEFAULT]
 [CPU_PER_SESSION   n|UNLIMITED|DEFAULT]
 [CPU_PER_CALL      n|UNLIMITED|DEFAULT]
 [CONNECT_TIME      n|UNLIMITED|DEFAULT]
 [IDLE_TIME         n|UNLIMITED|DEFAULT]

By setting resource limits, you can prevent users from performing operations that will tie up the system and prevent other users from performing operations. You can use resource limits for security, to ensure that users log off the system, so as not to leave the session connected for long periods of time.

The system resource limits can be enforced at the session-level, the call level, or both. The session-level is calculated from the time the user logs in to the database until the user exits. The call level applies to each SQL command issued. Session-level limits are enforced for each connection. When a session-level limit is exceeded, only the last SQL command issued is rolled back; no further work can be performed until a commit, rollback, or exit is performed.

Using SQLNET.EXPIRE_TIME

The sqlnet.expire_time parameter is used to set a time interval, in minutes, to determine how often a probe should be sent verifying that client/server connections are active. If you need to ensure that connections are not left open indefinitely (or up to the time set by operating system-specific parameters), you should set a value that is greater than 0. This protects the system from connections left open due to an abnormal client termination.

When the probe detects a terminated connection or a connection no longer in use, it signals an error, causing the server process to exit. This setting is intended for use on the database server side of the connection, which usually handles multiple connections at any one time. Limitations on using this terminated (dead) connection detection feature are:

sqlnet.expire_time cannot be used on bequeathed connections.

The SQL*Net expire_time probe packet will generate additional network traffic that may downgrade the network's performance, depending on the number of connections.

Depending on the operating system that is in use, additional server processing may need to be performed to distinguish the connection probe from other events that occur. This overhead for detection of probe events can result in downgraded network performance.

Turning-on expire_time

To set up these advanced features, simply edit your sqlnet.ora file.  If you are a beginner, follow this procedure:

Start the Oracle Network Manager GUI.

In the GUI navigator pane, expand the icons Local > Profile.

From the list on the right hand pane, select General.

Click on the Advanced tab.

Next, enter the values for the fields or options you want to set.

When you are finished, choose File > Save Network Configuration to write your changes to the sqlnet.ora file.

(Note: This assumes that a single sqlnet.ora file, in the default location, is in use.  Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

The sqlnet.ora inbound_connect_timeout parameter

The sqlnet.ora inbound_connect_timeout parameter is used to limit the time, set in seconds, for a client to connect with the database server and provide the required authentication information.

Also see sqlnet.inbound_connect_timeout tips.

To limit consumption of Oracle resources by unauthorized users and enable an audit trail, you should set time-limit values for the sqlnet.inbound_connect_timeout parameter in wall-clock seconds. (This parameter does not have default values.)  Failure resulting from sqlnet.inbound_connect_timeout will throw an ORA-03136 inbound connection timed out error."
      reference   : "800-171|3.1.11,800-53|AC-12,CAT|II,CCI|CCI-001185,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8,Rule-ID|SV-66351r2_rule,STIG-ID|O112-C2-017600,Vuln-ID|V-52135"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select profile, limit from DBA_PROFILES where resource_name = 'IDLE_TIME';"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : regex:".*","^(DEFAULT|1[0-5]|[1-9])$"
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-017700 - The DBMS must provide a logout functionality to allow the user to manually terminate the session."
      info        : "Manually terminating an application session allows users to immediately depart the physical vicinity of the system they are logged into without the risk of subsequent system users reactivating or continuing their application session. Users who log into applications must have the ability to manually terminate their application session.

Without an observable manual logout capability provided by the application, the user will have no means of manually terminating their application session. Their session could remain active until which time the inactivity period expires and the application automatically logs the user out. This increases the likelihood that the next subsequent user of the system could pick up on the previous user's session and continue utilizing the application as the previous user.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Code applications to close database sessions when the user logs out or closes the application."
      reference   : "CAT|II,CCI|CCI-001186,Rule-ID|SV-66353r2_rule,STIG-ID|O112-C2-017700,Vuln-ID|V-52137"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-018200 - The DBMS must preserve any organization-defined system state information in the event of a system failure."
      info        : "Failure in a known state can address safety or security in accordance with the mission/business needs of the organization. Failure in a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system.

Preserving information system state information helps to facilitate system restart and return to the operational mode of the organization with less disruption of mission/business processes."
      solution    : "Configure DBMS settings to preserve all required system state information in the event of a system failure.

If the database is not in archive log mode, issue the following commands to put the database in archive log mode. The database must be normally shutdown and restarted before it can be placed in archive log mode.

$ sqlplus connect as sysdba -- stop and dismount database and shutdown instance.
SQL> shutdown immediate;

Database closed.
Database dismounted.
ORACLE instance shut down.

SQL> startup mount;	-- Restart instance.

ORACLE instance started.
Total System Global Area 1653518336 bytes
Fixed Size 2228904 bytes
Variable Size 1325403480 bytes
Database Buffers 318767104 bytes
Redo Buffers 7118848 bytes
Database mounted.

SQL> alter database archivelog;	-- Enable ArchiveLog
Database altered.

SQL> alter database open; -- Re-open database
Database altered.

Issue the following command to see the new status:
SQL> select log_mode from v$database;

LOG_MODE
------------
ARCHIVELOG

SQL> archive log list;

Database log mode Archive Mode
Automatic archival Enabled
Archive destination USE_DB_RECOVERY_FILE_DEST
Oldest online log sequence 294
Next log sequence to archive 296
Current log sequence 296

The database is now in archive log mode, and transactions are either being recorded to transport to another database or being re-applied if the database becomes corrupt and needs to be restored from the last backup. Use the redo logs to replay transactions not captured in the backup."
      reference   : "800-53|SC-24,CAT|II,CCI|CCI-001665,ITSG-33|SC-24,Rule-ID|SV-66357r3_rule,STIG-ID|O112-C2-018200,Vuln-ID|V-52141"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT LOG_MODE, V$INSTANCE.ARCHIVER, DESTINATION FROM V$INSTANCE,V$DATABASE,V$ARCHIVE_DEST WHERE ROWNUM<2;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "ARCHIVELOG", "STARTED", regex:".*"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-018300 - The DBMS must take needed steps to protect data at rest and ensure confidentiality and integrity of application data - encrypted columns"
      info        : "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information. Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.

User-generated data and application specific configuration data both need to be protected. Configurations and/or rule sets for firewalls, gateways, intrusion detection/prevention systems, and filtering routers and authenticator content are examples of system information likely requiring protection. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.

If the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification."
      solution    : "Apply appropriate controls to protect the confidentiality and integrity of data at rest in the database.

If no site-specific precautions are in place, use Oracle Advanced Security Option to encrypt data at rest.

If ASO is not an option, use site-specific procedures to secure data at rest."
      reference   : "800-171|3.13.16,800-53|SC-28(1),CAT|II,CCI|CCI-001199,CSCv6|13.2,CSF|PR.DS-1,ITSG-33|SC-28(1),Rule-ID|SV-66359r2_rule,STIG-ID|O112-C2-018300,TBA-FIISB|28.1,Vuln-ID|V-52143"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select owner, table_name, column_name from dba_encrypted_columns;"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : NULL,NULL,NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-018300 - The DBMS must take needed steps to protect data at rest and ensure confidentiality and integrity of application data - encrypted tablespace"
      info        : "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information. Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.

User-generated data and application specific configuration data both need to be protected. Configurations and/or rule sets for firewalls, gateways, intrusion detection/prevention systems, and filtering routers and authenticator content are examples of system information likely requiring protection. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.

If the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification."
      solution    : "Apply appropriate controls to protect the confidentiality and integrity of data at rest in the database.

If no site-specific precautions are in place, use Oracle Advanced Security Option to encrypt data at rest.

If ASO is not an option, use site-specific procedures to secure data at rest."
      reference   : "800-171|3.13.16,800-53|SC-28(1),CAT|II,CCI|CCI-001199,CSCv6|13.2,CSF|PR.DS-1,ITSG-33|SC-28(1),Rule-ID|SV-66359r2_rule,STIG-ID|O112-C2-018300,TBA-FIISB|28.1,Vuln-ID|V-52143"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select tablespace_name from dba_tablespaces where encrypted='YES';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-018300 - The DBMS must take needed steps to protect data at rest and ensure confidentiality and integrity of application data - tablespace encryption algorithm"
      info        : "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information. Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.

User-generated data and application specific configuration data both need to be protected. Configurations and/or rule sets for firewalls, gateways, intrusion detection/prevention systems, and filtering routers and authenticator content are examples of system information likely requiring protection. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.

If the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification."
      solution    : "Apply appropriate controls to protect the confidentiality and integrity of data at rest in the database.

If no site-specific precautions are in place, use Oracle Advanced Security Option to encrypt data at rest.

If ASO is not an option, use site-specific procedures to secure data at rest."
      reference   : "800-171|3.13.16,800-53|SC-28(1),CAT|II,CCI|CCI-001199,CSCv6|13.2,CSF|PR.DS-1,ITSG-33|SC-28(1),Rule-ID|SV-66359r2_rule,STIG-ID|O112-C2-018300,TBA-FIISB|28.1,Vuln-ID|V-52143"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT a.owner 'Owner',  a.table_name 'Table Name',  e.encryptionalg 'Algorithm' FROM dba_tables a,  v$encrypted_tablespaces e  WHERE a.tablespace_name in (select t.name from v$tablespace t, v$encrypted_tablespaces e where t.ts# = e.ts#);"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-018400 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information at rest - encrypted columns"
      info        : "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices. If the data is not encrypted, it is subject to compromise and unauthorized disclosure."
      solution    : "Configure DBMS to use cryptographic mechanisms to prevent unauthorized disclosure of information at rest.

Deploy Oracle Advanced Security option, a locally developed encryption system, or a third-party product to encrypt data at rest.

If ASO is not an option, use site-specific procedures to secure data at rest."
      reference   : "800-171|3.13.16,800-53|SC-28(1),CAT|II,CCI|CCI-001200,CSCv6|13.2,CSF|PR.DS-1,ITSG-33|SC-28(1),Rule-ID|SV-66361r3_rule,STIG-ID|O112-C2-018400,TBA-FIISB|28.1,Vuln-ID|V-52145"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select owner, table_name, column_name from dba_encrypted_columns;"
      sql_types   : POLICY_VARCHAR,POLICY_VARCHAR,POLICY_VARCHAR
      sql_expect  : NULL,NULL,NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-018400 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information at rest - encrypted tablespace"
      info        : "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices. If the data is not encrypted, it is subject to compromise and unauthorized disclosure."
      solution    : "Configure DBMS to use cryptographic mechanisms to prevent unauthorized disclosure of information at rest.

Deploy Oracle Advanced Security option, a locally developed encryption system, or a third-party product to encrypt data at rest.

If ASO is not an option, use site-specific procedures to secure data at rest."
      reference   : "800-171|3.13.16,800-53|SC-28(1),CAT|II,CCI|CCI-001200,CSCv6|13.2,CSF|PR.DS-1,ITSG-33|SC-28(1),Rule-ID|SV-66361r3_rule,STIG-ID|O112-C2-018400,TBA-FIISB|28.1,Vuln-ID|V-52145"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select tablespace_name from dba_tablespaces where encrypted='YES';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-018400 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information at rest - tablespace encryption algorithm"
      info        : "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices. If the data is not encrypted, it is subject to compromise and unauthorized disclosure."
      solution    : "Configure DBMS to use cryptographic mechanisms to prevent unauthorized disclosure of information at rest.

Deploy Oracle Advanced Security option, a locally developed encryption system, or a third-party product to encrypt data at rest.

If ASO is not an option, use site-specific procedures to secure data at rest."
      reference   : "800-171|3.13.16,800-53|SC-28(1),CAT|II,CCI|CCI-001200,CSCv6|13.2,CSF|PR.DS-1,ITSG-33|SC-28(1),Rule-ID|SV-66361r3_rule,STIG-ID|O112-C2-018400,TBA-FIISB|28.1,Vuln-ID|V-52145"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT a.owner 'Owner',  a.table_name 'Table Name',  e.encryptionalg 'Algorithm' FROM dba_tables a,  v$encrypted_tablespaces e  WHERE a.tablespace_name in (select t.name from v$tablespace t, v$encrypted_tablespaces e where t.ts# = e.ts#);"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-018500 - The DBMS must isolate security functions from non-security functions by means of separate security domains."
      info        : "Security functions are defined as 'the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based'.

Developers and implementers can increase the assurance in security functions by employing well-defined security policy models, structured, disciplined, and rigorous hardware and software development techniques, and sound system/security engineering principles.

Database Management Systems typically separate security functionality from non-security functionality via separate databases or schemas. Database objects or code implementing security functionality should not be commingled with objects or code implementing application logic. When security and non-security functionality is commingled, users who have access to non-security functionality may be able to access security functionality.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Locate security-related database objects and code in a separate database, schema, or other separate security domain from database objects and code implementing application logic.  (This is the default behavior for Oracle.)  Review any site-specific applications security modules built into the database:   determine what schema they are located in and take appropriate action."
      reference   : "CAT|II,CCI|CCI-001084,Rule-ID|SV-66363r1_rule,STIG-ID|O112-C2-018500,Vuln-ID|V-52147"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-018600 - The DBMS must automatically terminate emergency accounts after an organization-defined time period for each type of account."
      info        : "Emergency application accounts are typically created due to an unforeseen operational event or could ostensibly be used in the event of a vendor support visit where a support representative requires a temporary unique account in order to perform diagnostic testing or conduct some other support-related activity. When these types of accounts are created, there is a risk that the temporary account may remain in place and active after the support representative has left.

In the event emergency application accounts are required, the application must ensure accounts that are designated as temporary in nature shall automatically terminate these accounts after an organization-defined time period.  Such a process and capability greatly reduces the risk that accounts will be misused, hijacked, or application data compromised.

Note: User authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

If it is possible for any temporary emergency accounts to be created and managed by Oracle, then the DBMS or application must provide or utilize a mechanism to automatically terminate such accounts after an organization-defined time period.

Emergency database accounts must be automatically terminated after an organization-defined time period in order to mitigate the risk of the account being misused.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create a profile specifically for emergency or temporary accounts.  When creating the accounts, assign them to this profile.  Configure DBMS, OS, and/or enterprise-level authentication/access mechanisms, or implement custom code, to terminate  accounts with this profile after an organization-defined time period."
      reference   : "CAT|II,CCI|CCI-001682,Rule-ID|SV-66365r2_rule,STIG-ID|O112-C2-018600,Vuln-ID|V-52149"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-007900 - The DBMS must produce audit records containing sufficient information to establish the identity of any user/subject or process associated with the event."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

Database software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly who performed a given action.  If user identification information is not recorded and stored with the audit record, the record itself is of very limited use."
      solution    : "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the identity of any user/subject or process associated with the event. If preferred, use a third-party or custom tool.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-001487,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66367r2_rule,STIG-ID|O112-C2-007900,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52151"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "audit_trail", "OS" || "DB" ||"XML" || "XML,EXTENDED"
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-018800 - The DBMS must employ automated mechanisms to alert security personnel of inappropriate or unusual activities with security implications."
      info        : "Applications will typically utilize logging mechanisms for maintaining a historical log of activity that occurs within the application. This information can then be used for diagnostic purposes, forensics purposes, or other purposes relevant to ensuring the availability and integrity of the application.

While it is important to log events identified as being critical and relevant to security, it is equally important to notify the appropriate personnel in a timely manner, so they are able to respond to events as they occur.

Solutions that include a manual notification procedure do not offer the reliability and speed of an automated notification solution. Applications must employ automated mechanisms to alert security personnel of inappropriate or unusual activities that have security implications. If this capability is not built directly into the application, the application must be able to integrate with existing security infrastructure that provides this capability.

Database management systems that do not automatically alert security personnel of unusual activities run the risk of security incidents going unnoticed for long periods of time. This can allow security breaches to be ongoing and more serious.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure database to automatically alert security personnel of inappropriate or unusual activities with security implications.

Oracle provides this capability with the Audit Vault.  Install and configure Oracle Audit Vault if it is available.

If Audit Vault is not available, implement custom code or deploy a third-party product to satisfy this requirement."
      reference   : "CAT|II,CCI|CCI-001274,Rule-ID|SV-66369r1_rule,STIG-ID|O112-C2-018800,Vuln-ID|V-52153"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-008000 - The DBMS must include organization-defined additional, more detailed information in the audit records for audit events identified by type, location, or subject."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

In addition, the application must have the capability to include organization-defined additional, more detailed information in the audit records for audit events. These events may be identified by type, location, or subject.

An example of detailed information the organization may require in audit records is full-text recording of privileged commands or the individual identities of group account users.

Some organizations may determine that more detailed information is required for specific database event types.  If this information is not available, it could negatively impact forensic investigations into user actions or other malicious events."
      solution    : "Either configure the DBMS's auditing to audit organization-defined auditable events; or if preferred, use a third-party or custom tool. The tool must provide the minimum capability to audit the required events.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

If the organization-defined additional audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation, at the location above.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000135,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66371r2_rule,STIG-ID|O112-C2-008000,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52155"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-018900 - The DBMS must prevent unauthorized and unintended information transfer via shared system resources."
      info        : "The purpose of this control is to prevent information, including encrypted representations of information, produced by the actions of a prior user/role (or the actions of a process acting on behalf of a prior user/role) from being available to any current user/role (or current process) that obtains access to a shared system resource (e.g., registers, main memory, secondary storage) after the resource has been released back to the information system. Control of information in shared resources is also referred to as object reuse.

Data used for the development and testing of applications often involves copying data from production.  It is important that specific procedures exist for this process, so copies of sensitive data are not misplaced or left in a temporary location without the proper controls.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create and document a process for moving data from production to development/test systems, and follow the process.

Modify any code used for moving data from production to development/test systems to ensure copies of production data are not left in non-secured locations.

Moving data is only a part of the challenge of protecting the data.  When the data is moved, it should also be changed so sensitive information is not made available in development environments.

With the Oracle Data Masking Pack for Oracle Enterprise Manager, organizations can comply with data privacy and protection mandates that restrict the use of actual customer data. With Oracle Data Masking Pack, sensitive information such as credit card or social security numbers can be replaced with realistic values, allowing production data to be safely used for development, testing, or sharing with out-source or off-shore partners for other nonproduction purposes.  When used in conjunction with Oracle Enterprise Manager, it is easy to develop a secure process which is capable of obfuscating the data during the movement process.

If the Oracle Data Masking Pack and Enterprise Manager are not available, develop site-specific procedures to manage and obfuscate sensitive data."
      reference   : "CAT|II,CCI|CCI-001090,Rule-ID|SV-66373r1_rule,STIG-ID|O112-C2-018900,Vuln-ID|V-52157"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-008200 - The DBMS itself, or the logging or alerting mechanism the application utilizes, must provide a warning when allocated audit record storage volume reaches an organization-defined percentage of maximum audit record storage capacity."
      info        : "It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Audit processing failures include:  software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded.

If audit log capacity were to be exceeded, then events subsequently occurring would not be recorded. Organizations shall define a maximum allowable percentage of storage capacity serving as an alarming threshold (e.g., application has exceeded 80% of log storage capacity allocated) at which time the application or the logging mechanism the application utilizes will provide a warning to the appropriate personnel.

A failure of database auditing will result in either the database continuing to function without auditing or in a complete halt to database operations. When audit processing fails, appropriate personnel must be alerted immediately to avoid further downtime or unaudited transactions.  This can be an alert provided by the database, a log repository, or the OS when a designated log directory is nearing capacity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Modify DBMS, OS, or third-party logging application settings to alert appropriate personnel when a specific percentage of log storage capacity is reached.

For ease of management, it is recommended that the audit tables be kept in a dedicated tablespace.

If Oracle Enterprise Manager is in use, the capability to issue such an alert is built in and configurable via the console so an email can be sent to a designated administrator.

If Enterprise Manager is unavailable, the following script can be used to monitor storage space; this can be combined with additional code to email the appropriate administrator so they can take action.

sqlplus connect as sysdba

SQL> set pagesize 300
SQL> set linesize 120
SQL> column sumb format 9,999,999,999,999
SQL> column extents format 999999
SQL> column bytes format 9,999,999,999,999
SQL> column largest format 9,999,999,999,999
SQL> column Tot_Size format 9,999,999,999,999
SQL> column Tot_Free format 9,999,999,999,999
SQL> column Pct_Free format 9,999,999,999,999
SQL> column Chunks_Free format 9,999,999,999,999
SQL> column Max_Free format 9,999,999,999,999
SQL> set echo off
SQL> spool TSINFO.txt
SQL> PROMPT  SPACE AVAILABLE IN TABLESPACES
SQL> select a.tablespace_name,sum(a.tots) Tot_Size,
SQL> sum(a.sumb) Tot_Free,
SQL> sum(a.sumb)*100/sum(a.tots) Pct_Free,
SQL> sum(a.largest) Max_Free,sum(a.chunks) Chunks_Free
SQL> from
SQL> (
SQL> select tablespace_name,0 tots,sum(bytes) sumb,
SQL> max(bytes) largest,count(*) chunks
SQL> from dba_free_space a
SQL> group by tablespace_name
SQL> union
SQL> select tablespace_name,sum(bytes) tots,0,0,0 from
SQL> dba_data_files
SQL> group by tablespace_name) a
SQL> group by a.tablespace_name;

 Sample Output

SPACE AVAILABLE IN TABLESPACES

 TABLESPACE_NAME                     TOT_SIZE     TOT_FREE     PCT_FREE     MAX_FREE     CHUNKS_FREE
 ------------------------------      ------------ ------------ ------------ ------------ ------------
DES2                                 41,943,040   30,935,040       74       30,935,040        1
DES2_I                               31,457,280   23,396,352       74       23,396,352        1
RBS                                  60,817,408   57,085,952       94       52,426,752       16
SYSTEM                               94,371,840    5,386,240        6        5,013,504        3
TEMP                                    563,200      561,152      100          133,120        5
TOOLS                               120,586,240   89,407,488       74       78,190,592       12
USERS                                 1,048,576       26,624        3           26,624        1"
      reference   : "CAT|II,CCI|CCI-000143,CCI|CCI-001855,Rule-ID|SV-66375r2_rule,STIG-ID|O112-C2-008200,Vuln-ID|V-52159"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-008300 - The DBMS must provide a real-time alert when organization-defined audit failure events occur."
      info        : "It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Audit processing failures include:  software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded.

If audit log capacity were to be exceeded, then events subsequently occurring would not be recorded. Organizations shall define a maximum allowable percentage of storage capacity serving as an alarming threshold (e.g., application has exceeded 80% of log storage capacity allocated) at which time the application or the logging mechanism the application utilizes will provide a warning to the appropriate personnel.

A failure of database auditing will result in either the database continuing to function without auditing or in a complete halt to database operations. When audit processing fails, appropriate personnel must be alerted immediately to avoid further downtime or unaudited transactions.  This can be an alert provided by the database, a log repository, or the OS when a designated log directory is nearing capacity.

If Oracle Enterprise Manager is in use, the capability to issue such an alert is built in and configurable via the console so an alert can be sent to a designated administrator.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure logging software to send a real-time alert to appropriate personnel when auditing fails for any reason.

(Oracle recommends the use of Oracle Enterprise Manager.)"
      reference   : "CAT|II,CCI|CCI-000144,Rule-ID|SV-66379r2_rule,STIG-ID|O112-C2-008300,Vuln-ID|V-52163"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-019500 - The DBMS must check the validity of data inputs."
      info        : "Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid user input is one of the primary methods employed when attempting to compromise an application.

All applications need to validate the data users attempt to input to the application for processing. Rules for checking the valid syntax and semantics of information system inputs (e.g., character set, length, numerical range, acceptable values) are in place to verify inputs match specified definitions for format and content. Inputs passed to interpreters are prescreened to prevent the content from being unintentionally interpreted as commands.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Modify database code to properly validate data before it is put into the database or acted upon by the database.

Modify database to contain field definitions for each field in the database.

Modify database to contain constraints on database columns and tables that require them for data validity.

Review the application schemas implemented on the system.  Check the DDL for the tables that are created for the applications to see if constraints have been enabled.

- - - - -

Enabling Constraints Upon Definition
The following CREATE TABLE and ALTER TABLE statements both define and enable integrity constraints:
CREATE TABLE emp (
    empno NUMBER(5) CONSTRAINT emp.pk PRIMARY KEY,   . . . ) ;
ALTER TABLE emp
    ADD CONSTRAINT emp.pk PRIMARY KEY (empno);

An ALTER TABLE statement that defines and attempts to enable an integrity constraint can fail because existing rows of the table violate the integrity constraint. In this case, the statement is rolled back, and the constraint definition is not stored and not enabled.

When you enable a UNIQUE or PRIMARY KEY constraint, an associated index is created."
      reference   : "CAT|II,CCI|CCI-001310,Rule-ID|SV-66381r2_rule,STIG-ID|O112-C2-019500,Vuln-ID|V-52165"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-008500 - The DBMS must alert designated organizational officials in the event of an audit processing failure."
      info        : "It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Audit processing failures include: software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded.

A failure of database auditing will result in either the database continuing to function without auditing or in a complete halt to database operations. When audit processing fails, appropriate personnel must be alerted immediately to avoid further downtime or unaudited transactions.

If Oracle Enterprise Manager is in use, the capability to issue such an alert is built in and configurable via the console so an alert can be sent to a designated administrator.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Modify OS or third-party logging application settings to alert designated organizational personnel when auditing fails for any reason.

If Oracle Enterprise Manager is in use, the capability to issue such an alert is built in and configurable via the console so an alert can be sent to a designated administrator."
      reference   : "CAT|II,CCI|CCI-000139,Rule-ID|SV-66383r2_rule,STIG-ID|O112-C2-008500,Vuln-ID|V-52167"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-019600 - The DBMS must verify there have not been unauthorized changes to the DBMS software and information."
      info        : "Organizations are required to employ integrity verification applications on information systems to look for evidence of information tampering, errors, and omissions. The organization is also required to employ good software engineering practices with regard to commercial off-the-shelf integrity mechanisms (e.g., parity checks, cyclical redundancy checks, and cryptographic hashes), and to use tools to automatically monitor the integrity of the information system and the applications it hosts.

The DBMS opens data files and reads configuration files at system startup, system shutdown, and during abort recovery efforts. If the DBMS does not verify the trustworthiness of these files, it is vulnerable to malicious alterations of its configuration or unauthorized replacement of data.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Utilize a DBMS, OS, or third-party product to perform file verification of DBMS system file integrity at startup and shutdown.

(Using Oracle Configuration Manager with Enterprise Manager, configured to perform this verification, is one possible way of satisfying this requirement.)"
      reference   : "CAT|II,CCI|CCI-001297,Rule-ID|SV-66385r1_rule,STIG-ID|O112-C2-019600,Vuln-ID|V-52169"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-008900 - The system must provide the capability to automatically process audit records for events of interest based upon selectable event criteria."
      info        : "Before a security review, information systems and/or applications with an audit reduction capability may remove many audit records known to have little security significance.

This is generally accomplished by removing records generated by specified classes of events, such as records generated by nightly backups.

An audit reduction capability provides support for near real-time audit review and analysis based on policy requirements regarding what must be audited on the system and after-the-fact investigations of security incidents. It is important to recognize audit reduction does not alter original audit records.

Audit reduction and reporting tools do not alter original audit records.

To leverage the complete capability of audit reduction, the application must possess the ability to specify and automatically process certain event criteria that are selectable in nature. In other words, a system administrator (SA) may be performing a manual review of audit data to identify a particular problem. The SA has determined that backup activity and network connections from a particular host comprise the bulk of the events. However, these events are not related to the activity being investigated. The application must be able to automatically process these audit records for audit reduction purposes rather than making the administrator manually process them.

The lack of audit reduction and reporting in a database can require the DBA, or others responsible for reviewing audit logs, to sort through large amounts of data in order to find relevant records. This can cause important audit records to be missed.

Oracle offers the choice of storing audit data internally in database tables, or in external files.  The WHERE clause in the SELECT statement provides the necessary functionality for a table-based audit.  For an audit based on external files (or for a table-based audit trail archived to external files) Oracle Database does not provide tools for retrieving and managing the data once written.  Therefore, an external tool is needed.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Utilize a tool, application or service that provides the ability to automatically process audit records for events based on selectable event criteria."
      reference   : "CAT|II,CCI|CCI-000158,Rule-ID|SV-66387r2_rule,STIG-ID|O112-C2-008900,Vuln-ID|V-52171"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-019800 - The DBMS must identify potentially security-relevant error conditions."
      info        : "The structure and content of error messages need to be carefully considered by the organization and development team. The extent to which the application is able to identify and handle error conditions is guided by organizational policy and operational requirements.

Database logs can be monitored for specific security-related errors. Any error that can have a negative effect on database security should be quickly identified and forwarded to the appropriate personnel.  If security-relevant error conditions are not identified by the DBMS, they may be overlooked by the personnel responsible for addressing them.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS to monitor for security-related error conditions.

Configure DBMS to alert appropriate personnel when security-related error conditions are found.

This can be accomplished by using Oracle Audit Vault and/or Oracle Enterprise Manager. If neither of these products is deployed then develop a site-specific solution.

- - - - -

Notes to assist in developing a site-specific solution:

The AUD$ table has a column called RETURNCODE.  That column provides the return code, so, for example, if the security-related condition is someone trying to select data from a table that is not there, it would show up in the AUD$ table as an ORA-00942 - table or view does not exist.  Since the RETURNCODE column is only numeric, only the 00942 would be stored. If the query for the information returned a row, the process would then need to form and send an email message.

Oracle recommends the use of Oracle Audit Vault to fill this requirement without creating a custom solution.   It is possible to set up notifications and alerts in Enterprise Manager as well, and if either of these alternatives is not available, a custom solution will be necessary."
      reference   : "CAT|II,CCI|CCI-001311,Rule-ID|SV-66389r1_rule,STIG-ID|O112-C2-019800,Vuln-ID|V-52173"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-009000 - Attempts to bypass access controls must be audited."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

Detection of suspicious activity, including access attempts and successful access from unexpected places, during unexpected times, or other unusual indicators can support decisions to apply countermeasures to deter an attack. Without detection, malicious activity may proceed without hindrance.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure auditing to capture the events listed below where available in the DBMS:
- Unsuccessful login attempts
- Account locking events
- Account disabling from a specific source location
- Failed database object attempts or attempts to access objects that do not exist
- Other activities that may produce unexpected failures or trigger DBMS lockdown actions

- - - - -

Oracle provides the $ORACLE_HOME/rdbms/admin/secconf.sql script.  If any of the site-specific requirements are not met with this script, check the Oracle(R) Database SQL Language Reference, 11g Release 2 (11.2), part number E41084-02, for additional audit options.  The secconf.sql script has many options already deployed, but there are additional options that can be invoked."
      reference   : "CAT|II,CCI|CCI-000158,Rule-ID|SV-66391r1_rule,STIG-ID|O112-C2-009000,Vuln-ID|V-52175"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-019900 - The DBMS must only generate error messages that provide information necessary for corrective actions without revealing organization-defined sensitive or potentially harmful information in error logs and administrative messages that could be exploited."
      info        : "Any application providing too much information in error logs and in administrative messages to the screen risks compromising the data and security of the application and system. The structure and content of error messages needs to be carefully considered by the organization and development team.

The extent to which the application is able to identify and handle error conditions is guided by organizational policy and operational requirements. Sensitive information includes account numbers, social security numbers, and credit card numbers.

Databases can inadvertently provide a wealth of information to an attacker through improperly handled error messages. In addition to sensitive business or personal information, database errors can provide host names, IP addresses, user names, and other system information not required for troubleshooting but very useful to someone targeting the system.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS and custom database and application code not to divulge sensitive information or information useful for system identification in error information."
      reference   : "CAT|II,CCI|CCI-001312,Rule-ID|SV-66393r2_rule,STIG-ID|O112-C2-019900,Vuln-ID|V-52177"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-009300 - The DBMS must protect audit information from any type of unauthorized access - 'DBA_TAB_PRIVS'"
      info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.

Additionally, applications with user interfaces to audit records must not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity."
      solution    : "Add controls and modify permissions to protect database audit log data from unauthorized access, whether stored in the database itself or at the OS level.

Revoke access to the AUD$ table to anyone who should not have access to it."
      reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000162,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-66395r2_rule,STIG-ID|O112-C2-009300,SWIFT-CSCv1|5.1,Vuln-ID|V-52179"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT TABLE_NAME, GRANTEE, PRIVILEGE FROM DBA_TAB_PRIVS where table_name = 'AUD$';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-009300 - The DBMS must protect audit information from any type of unauthorized access - 'DBA_COL_PRIVS'"
      info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.

Additionally, applications with user interfaces to audit records must not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity."
      solution    : "Add controls and modify permissions to protect database audit log data from unauthorized access, whether stored in the database itself or at the OS level.

Revoke access to the AUD$ table to anyone who should not have access to it."
      reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000162,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-66395r2_rule,STIG-ID|O112-C2-009300,SWIFT-CSCv1|5.1,Vuln-ID|V-52179"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT TABLE_NAME, COLUMN_NAME, GRANTEE, PRIVILEGE FROM DBA_COL_PRIVS where table_name = 'AUD$';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-020000 - The DBMS must restrict error messages, so only authorized personnel may view them."
      info        : "If the application provides too much information in error logs and administrative messages to the screen, this could lead to compromise. The structure and content of error messages need to be carefully considered by the organization and development team. The extent to which the information system is able to identify and handle error conditions is guided by organizational policy and operational requirements.

Some default DBMS error messages can contain information that could aid an attacker in, among others things, identifying the database type, host address, or state of the database. Custom errors may contain sensitive customer information. It is important that error messages are displayed only to those who are authorized to view them.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "i)  For each end-user-facing application that displays DBMS-generated error messages, configure or recode it to suppress these messages.

(If the application is coded in Oracle PL/SQL, the EXCEPTION block can be used to suppress or divert error messages.  Most other programming languages provide comparable facilities, such as TRY ... CATCH.)

ii)  For each unauthorized user of each tool, remove the ability to access it.  For each tool where access to DBMS error messages is not required and can be configured, suppress the messages.  For each role/user that needs access to the error messages, or needs a tool where the messages cannot be suppressed, document the need in the system security plan."
      reference   : "CAT|II,CCI|CCI-001314,Rule-ID|SV-66397r2_rule,STIG-ID|O112-C2-020000,Vuln-ID|V-52181"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-020300 - The DBMS must support taking organization-defined list of least disruptive actions to terminate suspicious events."
      info        : "System availability is a key tenet of system security. Organizations need to have the flexibility to be able to define the automated actions taken in response to an identified incident. This includes being able to define a least disruptive action the application takes to terminate suspicious events. A least disruptive action may include initiating a request for human response rather than blocking traffic or disrupting system operation.

In order to preserve availability, it is important for the DBMS to terminate suspicious events with the least disruptive action possible.  If suspicious events are not terminated, an attacker may gain entry into the system; however, if the system overreacts to a suspicious event and takes an overly disruptive action, a Denial of Service (DoS) may occur.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "If the list does not exist, create it.

For any event type defined in the list where no means of detecting the event exists, either create the means of detection or modify the list.

For each event type where an automatic countermeasure is defined but its implementation differs from its description in the list, either modify the countermeasure or amend the list.

If any administrators/operators are unfamiliar with the list or the notification mechanism, train them.

If any administrators/operators are not equipped to follow the instructions in the list, provide them with the means to do so.

Ensure the list is incorporated into, or referenced by, the System Security Plan.

Note that Oracle Audit Vault and Oracle Database Vault are optional products that can be of considerable use in implementing active protection measures of this kind."
      reference   : "CAT|II,CCI|CCI-001670,Rule-ID|SV-66399r1_rule,STIG-ID|O112-C2-020300,Vuln-ID|V-52183"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-009400 - The DBMS must protect audit information from unauthorized modification - 'DBA_TAB_PRIVS'"
      info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized modification.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions and limiting log data locations.

Applications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make access decisions regarding the modification of audit data.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Modification of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database."
      solution    : "Add controls and modify permissions to protect database audit log data from unauthorized modification, whether stored in the database itself or at the OS level.
- - - - -
Revoke access to the AUD$ table to anyone who you do not want to have access to the AUD$ table.

In the check we looked for all users who had access to the AUD$ table. To fix this, use the REVOKE command to revoke access to users who should not have access to the audit data.

REVOKE statement

Use the REVOKE statement to remove permissions from a specific user or from all users to perform actions on database objects.
The following types of permissions can be revoked:
    Delete data from a specific table.
    Insert data into a specific table.
    Create a foreign key reference to the named table or to a subset of columns from a table.
    Select data from a table, view, or a subset of columns in a table.
    Create a trigger on a table.
    Update data in a table or in a subset of columns in a table.
    Run a specified routine (function or procedure).

If a user named FRED had access to the AUD$ table and you want to revoke that access, use the following command. The syntax that you use for the REVOKE statement for tables is as follows:

REVOKE privilege-type ON [ TABLE ] { table-Name | view-Name } FROM grantees


SQL>REVOKE SELECT ON TABLE AUD$ FROM FRED;

Revoking a privilege without specifying a column list revokes the privilege for all of the columns in the table.
Syntax for routines

table-privileges include

  DELETE |
  INSERT |
  REFERENCES [column list] |
  SELECT [column list] |
  TRIGGER |
  UPDATE [column list]

column list

  ( column-identifier {, column-identifier}* )

Use the ALL PRIVILEGES privilege type to revoke all of the permissions from the user for the specified table. You can also revoke one or more table privileges by specifying a privilege-list.

Use the DELETE privilege type to revoke permission to delete rows from the specified table.

Use the INSERT privilege type to revoke permission to insert rows into the specified table.

Use the REFERENCES privilege type to revoke permission to create a foreign key reference to the specified table. If a column list is specified with the REFERENCES privilege, the permission is revoked on only the foreign key reference to the specified columns.

Use the SELECT privilege type to revoke permission to perform SELECT statements on a table or view. If a column list is specified with the SELECT privilege, the permission is revoked on only those columns. If no column list is specified, then the privilege is valid on all of the columns in the table.

Use the TRIGGER privilege type to revoke permission to create a trigger on the specified table.

Use the UPDATE privilege type to revoke permission to use the UPDATE statement on the specified table. If a column list is specified, the permission is revoked only on the specified columns.
grantees

  { authorization ID | PUBLIC } [,{ authorization ID | PUBLIC } ] *

You can revoke the privileges from specific users or from all users. Use the keyword PUBLIC to specify all users. The privileges revoked from PUBLIC and from individual users are independent privileges. For example, a SELECT privilege on table t is granted to both PUBLIC and to the authorization ID harry. The SELECT privilege is later revoked from the authorization ID 'Harry', but the authorization ID 'Harry' can access the table through the PUBLIC privilege.

Restriction: You cannot revoke the privileges of the owner of an object.
routine-designator

  {
   qualified-name [ signature ]
  }

Cascading object dependencies

For views, triggers, and constraints, if the privilege on which the object depends on is revoked, the object is automatically dropped. Derby does not try to determine if you have other privileges that can replace the privileges that are being revoked. For more information, see 'SQL standard authorization' in the Java DB Developer's Guide.
Limitations

The following limitations apply to the REVOKE statement:

Table-level privileges
    All of the table-level privilege types for a specified grantee and table ID are stored in one row in the SYSTABLEPERMS system table. For example, when user2 is granted the SELECT and DELETE privileges on table user1.t1, a row is added to the SYSTABLEPERMS table. The GRANTEE field contains user2 and the TABLEID contains user1.t1. The SELECTPRIV and DELETEPRIV fields are set to Y. The remaining privilege type fields are set to N.

    When a grantee creates an object that relies on one of the privilege types, the Derby engine tracks the dependency of the object on the specific row in the SYSTABLEPERMS table. For example, user2 creates the view v1 by using the statement SELECT * FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1). The dependency manager knows only that the view is dependent on a privilege type in that specific row but does not track exactly which privilege type the view is dependent on.

    When a REVOKE statement for a table-level privilege is issued for a grantee and table ID, all of the objects that are dependent on the grantee and table ID are dropped. For example, if user1 revokes the DELETE privilege on table t1 from user2, the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the DELETE privilege for GRANTEE(user2), TABLEID(user1.t1).

Column-level privileges
    Only one type of privilege for a specified grantee and table ID are stored in one row in the SYSCOLPERMS system table. For example, when user2 is granted the SELECT privilege on table user1.t1 for columns c12 and c13, a row is added to the SYSCOLPERMS. The GRANTEE field contains user2, the TABLEID contains user1.t1, the TYPE field contains S, and the COLUMNS field contains c12, c13.

    When a grantee creates an object that relies on the privilege type and the subset of columns in a table ID, the Derby engine tracks the dependency of the object on the specific row in the SYSCOLPERMS table. For example, user2 creates the view v1 by using the statement SELECT c11 FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S). The dependency manager knows that the view is dependent on the SELECT privilege type but does not track exactly which columns the view is dependent on.

    When a REVOKE statement for a column-level privilege is issued for a grantee, table ID, and type, all of the objects that are dependent on the grantee, table ID, and type are dropped. For example, if user1 revokes the SELECT privilege on column c12 on table user1.t1 from user2, the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the column c12 for GRANTEE(user2), TABLEID(user1.t1), TYPE(S).

Revoke examples
To revoke the SELECT privilege on table t from the authorization IDs 'Maria' and 'Harry', use the following syntax:

SQL>REVOKE SELECT ON TABLE t FROM maria,harry

To revoke the UPDATE and TRIGGER privileges on table t from the authorization IDs 'Anita' and 'Zhi', use the following syntax:

SQL>REVOKE UPDATE, TRIGGER ON TABLE t FROM anita,zhi

To revoke the SELECT privilege on table s.v from all users, use the following syntax:

SQL>REVOKE SELECT ON TABLE s.v FROM PUBLIC

To revoke the UPDATE privilege on columns c1 and c2 of table s.v from all users, use the following syntax:

SQL>REVOKE UPDATE (c1,c2) ON TABLE s.v FROM PUBLIC

To revoke the EXECUTE privilege on procedure p from the authorization ID 'George', use the following syntax:
SQL>REVOKE EXECUTE ON PROCEDURE p FROM george RESTRICT"
      reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000163,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-66401r1_rule,STIG-ID|O112-C2-009400,SWIFT-CSCv1|5.1,Vuln-ID|V-52185"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT TABLE_NAME, GRANTEE, PRIVILEGE FROM DBA_TAB_PRIVS where table_name = 'AUD$';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-009400 - The DBMS must protect audit information from unauthorized modification - 'DBA_COL_PRIVS'"
      info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized modification.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions and limiting log data locations.

Applications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make access decisions regarding the modification of audit data.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Modification of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database."
      solution    : "Add controls and modify permissions to protect database audit log data from unauthorized modification, whether stored in the database itself or at the OS level.
- - - - -
Revoke access to the AUD$ table to anyone who you do not want to have access to the AUD$ table.

In the check we looked for all users who had access to the AUD$ table. To fix this, use the REVOKE command to revoke access to users who should not have access to the audit data.

REVOKE statement

Use the REVOKE statement to remove permissions from a specific user or from all users to perform actions on database objects.
The following types of permissions can be revoked:
    Delete data from a specific table.
    Insert data into a specific table.
    Create a foreign key reference to the named table or to a subset of columns from a table.
    Select data from a table, view, or a subset of columns in a table.
    Create a trigger on a table.
    Update data in a table or in a subset of columns in a table.
    Run a specified routine (function or procedure).

If a user named FRED had access to the AUD$ table and you want to revoke that access, use the following command. The syntax that you use for the REVOKE statement for tables is as follows:

REVOKE privilege-type ON [ TABLE ] { table-Name | view-Name } FROM grantees


SQL>REVOKE SELECT ON TABLE AUD$ FROM FRED;

Revoking a privilege without specifying a column list revokes the privilege for all of the columns in the table.
Syntax for routines

table-privileges include

  DELETE |
  INSERT |
  REFERENCES [column list] |
  SELECT [column list] |
  TRIGGER |
  UPDATE [column list]

column list

  ( column-identifier {, column-identifier}* )

Use the ALL PRIVILEGES privilege type to revoke all of the permissions from the user for the specified table. You can also revoke one or more table privileges by specifying a privilege-list.

Use the DELETE privilege type to revoke permission to delete rows from the specified table.

Use the INSERT privilege type to revoke permission to insert rows into the specified table.

Use the REFERENCES privilege type to revoke permission to create a foreign key reference to the specified table. If a column list is specified with the REFERENCES privilege, the permission is revoked on only the foreign key reference to the specified columns.

Use the SELECT privilege type to revoke permission to perform SELECT statements on a table or view. If a column list is specified with the SELECT privilege, the permission is revoked on only those columns. If no column list is specified, then the privilege is valid on all of the columns in the table.

Use the TRIGGER privilege type to revoke permission to create a trigger on the specified table.

Use the UPDATE privilege type to revoke permission to use the UPDATE statement on the specified table. If a column list is specified, the permission is revoked only on the specified columns.
grantees

  { authorization ID | PUBLIC } [,{ authorization ID | PUBLIC } ] *

You can revoke the privileges from specific users or from all users. Use the keyword PUBLIC to specify all users. The privileges revoked from PUBLIC and from individual users are independent privileges. For example, a SELECT privilege on table t is granted to both PUBLIC and to the authorization ID harry. The SELECT privilege is later revoked from the authorization ID 'Harry', but the authorization ID 'Harry' can access the table through the PUBLIC privilege.

Restriction: You cannot revoke the privileges of the owner of an object.
routine-designator

  {
   qualified-name [ signature ]
  }

Cascading object dependencies

For views, triggers, and constraints, if the privilege on which the object depends on is revoked, the object is automatically dropped. Derby does not try to determine if you have other privileges that can replace the privileges that are being revoked. For more information, see 'SQL standard authorization' in the Java DB Developer's Guide.
Limitations

The following limitations apply to the REVOKE statement:

Table-level privileges
    All of the table-level privilege types for a specified grantee and table ID are stored in one row in the SYSTABLEPERMS system table. For example, when user2 is granted the SELECT and DELETE privileges on table user1.t1, a row is added to the SYSTABLEPERMS table. The GRANTEE field contains user2 and the TABLEID contains user1.t1. The SELECTPRIV and DELETEPRIV fields are set to Y. The remaining privilege type fields are set to N.

    When a grantee creates an object that relies on one of the privilege types, the Derby engine tracks the dependency of the object on the specific row in the SYSTABLEPERMS table. For example, user2 creates the view v1 by using the statement SELECT * FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1). The dependency manager knows only that the view is dependent on a privilege type in that specific row but does not track exactly which privilege type the view is dependent on.

    When a REVOKE statement for a table-level privilege is issued for a grantee and table ID, all of the objects that are dependent on the grantee and table ID are dropped. For example, if user1 revokes the DELETE privilege on table t1 from user2, the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the DELETE privilege for GRANTEE(user2), TABLEID(user1.t1).

Column-level privileges
    Only one type of privilege for a specified grantee and table ID are stored in one row in the SYSCOLPERMS system table. For example, when user2 is granted the SELECT privilege on table user1.t1 for columns c12 and c13, a row is added to the SYSCOLPERMS. The GRANTEE field contains user2, the TABLEID contains user1.t1, the TYPE field contains S, and the COLUMNS field contains c12, c13.

    When a grantee creates an object that relies on the privilege type and the subset of columns in a table ID, the Derby engine tracks the dependency of the object on the specific row in the SYSCOLPERMS table. For example, user2 creates the view v1 by using the statement SELECT c11 FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S). The dependency manager knows that the view is dependent on the SELECT privilege type but does not track exactly which columns the view is dependent on.

    When a REVOKE statement for a column-level privilege is issued for a grantee, table ID, and type, all of the objects that are dependent on the grantee, table ID, and type are dropped. For example, if user1 revokes the SELECT privilege on column c12 on table user1.t1 from user2, the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the column c12 for GRANTEE(user2), TABLEID(user1.t1), TYPE(S).

Revoke examples
To revoke the SELECT privilege on table t from the authorization IDs 'Maria' and 'Harry', use the following syntax:

SQL>REVOKE SELECT ON TABLE t FROM maria,harry

To revoke the UPDATE and TRIGGER privileges on table t from the authorization IDs 'Anita' and 'Zhi', use the following syntax:

SQL>REVOKE UPDATE, TRIGGER ON TABLE t FROM anita,zhi

To revoke the SELECT privilege on table s.v from all users, use the following syntax:

SQL>REVOKE SELECT ON TABLE s.v FROM PUBLIC

To revoke the UPDATE privilege on columns c1 and c2 of table s.v from all users, use the following syntax:

SQL>REVOKE UPDATE (c1,c2) ON TABLE s.v FROM PUBLIC

To revoke the EXECUTE privilege on procedure p from the authorization ID 'George', use the following syntax:
SQL>REVOKE EXECUTE ON PROCEDURE p FROM george RESTRICT"
      reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000163,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-66401r1_rule,STIG-ID|O112-C2-009400,SWIFT-CSCv1|5.1,Vuln-ID|V-52185"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT TABLE_NAME, COLUMN_NAME, GRANTEE, PRIVILEGE FROM DBA_COL_PRIVS where table_name = 'AUD$';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-020400 - The DBMS must notify appropriate individuals when accounts are created."
      info        : "Once an attacker establishes initial access to a system, they often attempt to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply create a new account.

Notification of account creation is one method and best practice for mitigating this risk. A comprehensive account management process will ensure an audit trail which documents the creation of application user accounts and notifies administrators and/or application owners exist. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where accounts are directly managed by Oracle.

Notwithstanding how accounts are normally managed, the DBMS must support the requirement to notify appropriate individuals upon account creation within Oracle.  Indeed, in a configuration where accounts are managed externally, the creation of an account within Oracle may indicate hostile activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Working with the DBA and site management, determine the appropriate individuals (by job role) to be notified.

If Oracle Audit Vault is available, configure it to  notify the appropriate individuals when accounts are created.

If Oracle Audit Vault is not available, configure the Oracle DBMS's auditing feature to record account-creation activity.  Create and deploy a mechanism, such as a frequently-run job, to monitor the audit table or file for these records and notify the appropriate individuals."
      reference   : "CAT|II,CCI|CCI-001683,Rule-ID|SV-66403r2_rule,STIG-ID|O112-C2-020400,Vuln-ID|V-52187"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-009500 - The DBMS must protect audit information from unauthorized deletion."
      info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.

To ensure the veracity of audit data the information system and/or the application must protect audit information from unauthorized deletion. This requirement can be achieved through multiple methods which will depend upon system architecture and design.

Some commonly employed methods include:  ensuring log files enjoy the proper file system permissions utilizing file system protections; restricting access; and backing up log data to ensure log data is retained.

Applications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights the user enjoys in order make access decisions regarding the deletion of audit data.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Deletion of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database."
      solution    : "Add controls and modify permissions to protect database audit log data from unauthorized deletion, whether stored in the database itself or at the OS level.
- - - - -
Revoke access to the AUD$ table to anyone who you do not want to have access to the AUD$ table.

In the check we looked for all users who had access to the AUD$ table. To fix this, use the REVOKE command to revoke access to users who should not have access to the audit data.

REVOKE statement

Use the REVOKE statement to remove permissions from a specific user or from all users to perform actions on database objects.
The following types of permissions can be revoked:

    Delete data from a specific table.
    Insert data into a specific table.
    Create a foreign key reference to the named table or to a subset of columns from a table.
    Select data from a table, view, or a subset of columns in a table.
    Create a trigger on a table.
    Update data in a table or in a subset of columns in a table.
    Run a specified routine (function or procedure).

If a user named FRED had access to the AUD$ table and you want to revoke that access use the following command. The syntax that you use for the REVOKE statement for tables is as follows:

REVOKE privilege-type ON [ TABLE ] { table-Name | view-Name } FROM grantees


SQL>REVOKE SELECT ON TABLE AUD$ FROM FRED;

Revoking a privilege without specifying a column list revokes the privilege for all of the columns in the table.
Syntax for routines

table-privileges include

  DELETE |
  INSERT |
  REFERENCES [column list] |
  SELECT [column list] |
  TRIGGER |
  UPDATE [column list]

column list

  ( column-identifier {, column-identifier}* )

Use the ALL PRIVILEGES privilege type to revoke all of the permissions from the user for the specified table. You can also revoke one or more table privileges by specifying a privilege-list.

Use the DELETE privilege type to revoke permission to delete rows from the specified table.

Use the INSERT privilege type to revoke permission to insert rows into the specified table.

Use the REFERENCES privilege type to revoke permission to create a foreign key reference to the specified table. If a column list is specified with the REFERENCES privilege, the permission is revoked on only the foreign key reference to the specified columns.

Use the SELECT privilege type to revoke permission to perform SELECT statements on a table or view. If a column list is specified with the SELECT privilege, the permission is revoked on only those columns. If no column list is specified, then the privilege is valid on all of the columns in the table.

Use the TRIGGER privilege type to revoke permission to create a trigger on the specified table.

Use the UPDATE privilege type to revoke permission to use the UPDATE statement on the specified table. If a column list is specified, the permission is revoked only on the specified columns.
grantees

  { authorization ID | PUBLIC } [,{ authorization ID | PUBLIC } ] *

You can revoke the privileges from specific users or from all users. Use the keyword PUBLIC to specify all users. The privileges revoked from PUBLIC and from individual users are independent privileges. For example, a SELECT privilege on table t is granted to both PUBLIC and to the authorization ID harry. The SELECT privilege is later revoked from the authorization ID 'Harry', but the authorization ID 'Harry' can access the table through the PUBLIC privilege.

Restriction: You cannot revoke the privileges of the owner of an object.
routine-designator

  {
   qualified-name [ signature ]
  }

Cascading object dependencies

For views, triggers, and constraints, if the privilege on which the object depends on is revoked, the object is automatically dropped. Derby does not try to determine if you have other privileges that can replace the privileges that are being revoked. For more information, see 'SQL standard authorization' in the Java DB Developer's Guide.
Limitations

The following limitations apply to the REVOKE statement:

Table-level privileges
    All of the table-level privilege types for a specified grantee and table ID are stored in one row in the SYSTABLEPERMS system table. For example, when user2 is granted the SELECT and DELETE privileges on table user1.t1, a row is added to the SYSTABLEPERMS table. The GRANTEE field contains user2 and the TABLEID contains user1.t1. The SELECTPRIV and DELETEPRIV fields are set to Y. The remaining privilege type fields are set to N.

    When a grantee creates an object that relies on one of the privilege types, the Derby engine tracks the dependency of the object on the specific row in the SYSTABLEPERMS table. For example, user2 creates the view v1 by using the statement SELECT * FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1). The dependency manager knows only that the view is dependent on a privilege type in that specific row but does not track exactly which privilege type the view is dependent on.

    When a REVOKE statement for a table-level privilege is issued for a grantee and table ID, all of the objects that are dependent on the grantee and table ID are dropped. For example, if user1 revokes the DELETE privilege on table t1 from user2, the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the DELETE privilege for GRANTEE(user2), TABLEID(user1.t1).

Column-level privileges
    Only one type of privilege for a specified grantee and table ID are stored in one row in the SYSCOLPERMS system table. For example, when user2 is granted the SELECT privilege on table user1.t1 for columns c12 and c13, a row is added to the SYSCOLPERMS. The GRANTEE field contains user2, the TABLEID contains user1.t1, the TYPE field contains S, and the COLUMNS field contains c12, c13.

    When a grantee creates an object that relies on the privilege type and the subset of columns in a table ID, the Derby engine tracks the dependency of the object on the specific row in the SYSCOLPERMS table. For example, user2 creates the view v1 by using the statement SELECT c11 FROM user1.t; the dependency manager tracks the dependency of view v1 on the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S). The dependency manager knows that the view is dependent on the SELECT privilege type but does not track exactly which columns the view is dependent on.

    When a REVOKE statement for a column-level privilege is issued for a grantee, table ID, and type, all of the objects that are dependent on the grantee, table ID, and type are dropped. For example, if user1 revokes the SELECT privilege on column c12 on table user1.t1 from user2, the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the column c12 for GRANTEE(user2), TABLEID(user1.t1), TYPE(S).

Revoke examples
To revoke the SELECT privilege on table t from the authorization IDs 'Maria' and 'Harry', use the following syntax:

SQL>REVOKE SELECT ON TABLE t FROM maria,harry

To revoke the UPDATE and TRIGGER privileges on table t from the authorization IDs 'Anita' and 'Zhi', use the following syntax:

SQL>REVOKE UPDATE, TRIGGER ON TABLE t FROM anita,zhi

To revoke the SELECT privilege on table s.v from all users, use the following syntax:

SQL>REVOKE SELECT ON TABLE s.v FROM PUBLIC

To revoke the UPDATE privilege on columns c1 and c2 of table s.v from all users, use the following syntax:

SQL>REVOKE UPDATE (c1,c2) ON TABLE s.v FROM PUBLIC

To revoke the EXECUTE privilege on procedure p from the authorization ID 'George', use the following syntax:
SQL>REVOKE EXECUTE ON PROCEDURE p FROM george RESTRICT"
      reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000164,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-66405r1_rule,STIG-ID|O112-C2-009500,SWIFT-CSCv1|5.1,Vuln-ID|V-52189"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT TABLE_NAME, GRANTEE, PRIVILEGE FROM DBA_TAB_PRIVS where table_name = 'AUD$';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-020500 - The DBMS must notify appropriate individuals when accounts are modified."
      info        : "Once an attacker establishes initial access to a system, they often attempt to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to modify an existing account for later use.

Notification of account creation is one method and best practice for mitigating this risk. A comprehensive account management process will ensure an audit trail which documents the creation of application user accounts and notifies administrators and/or application owners that they exist. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. This requirement applies to cases where accounts are directly managed by Oracle.

Notwithstanding how accounts are normally managed, the DBMS must support the requirement to notify appropriate individuals upon account modification within Oracle.  Indeed, in a configuration where accounts are managed externally, the manipulation of an account within Oracle may indicate hostile activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Working with the DBA and site management, determine the appropriate individuals (by job role) to be notified.

If Oracle Audit Vault is available, configure it to  notify the appropriate individuals when accounts are modified.

If Oracle Audit Vault is not available, configure the Oracle DBMS's auditing feature to record account-modification activity.  Create and deploy a mechanism, such as a frequently-run job, to monitor the audit table or file for these records and notify the appropriate individuals."
      reference   : "CAT|II,CCI|CCI-001684,Rule-ID|SV-66407r2_rule,STIG-ID|O112-C2-020500,Vuln-ID|V-52191"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-009600 - The DBMS must protect audit tools from unauthorized access."
      info        : "Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data.

Depending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. It is, therefore, imperative that access to audit tools be controlled and protected from unauthorized access.

Applications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the access to audit tools.

Audit tools include, but are not limited to, OS-provided audit tools, vendor-provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records.

If an attacker were to gain access to audit tools, he could analyze audit logs for system weaknesses or weaknesses in the auditing itself.  An attacker could also manipulate logs to hide evidence of malicious activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Add or modify access controls and permissions to tools used to view or modify audit log data. Tools must be accessible by authorized personnel only."
      reference   : "CAT|II,CCI|CCI-001493,Rule-ID|SV-66409r1_rule,STIG-ID|O112-C2-009600,Vuln-ID|V-52193"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-020600 - The DBMS must notify appropriate individuals when account disabling actions are taken."
      info        : "When application accounts are disabled, user accessibility is affected. Accounts are utilized for identifying individual application users or for identifying the application processes themselves.

In order to detect and respond to events that affect user accessibility and application processing, applications must audit account disabling actions and, as required, notify the appropriate individuals so they can investigate the event. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where accounts are directly managed by Oracle.

Notwithstanding how accounts are normally managed, the DBMS must support the requirement to notify appropriate individuals upon the disabling of an account within Oracle.  Indeed, in a configuration where accounts are managed externally, the manipulation of an account within Oracle may indicate hostile activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Working with the DBA and site management, determine the appropriate individuals (by job role) to be notified.

If Oracle Audit Vault is available, configure it to notify the appropriate individuals when accounts are disabled.

If Oracle Audit Vault is not available, configure the Oracle DBMS's auditing feature to record account-disabling activity.  Create and deploy a mechanism, such as a frequently-run job, to monitor the audit table or file for these records and notify the appropriate individuals."
      reference   : "CAT|II,CCI|CCI-001685,Rule-ID|SV-66411r3_rule,STIG-ID|O112-C2-020600,Vuln-ID|V-52195"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-009700 - The DBMS must protect audit tools from unauthorized modification."
      info        : "Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data.

Depending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data.

If the tools are compromised it could provide attackers with the capability to manipulate log data. It is, therefore, imperative that audit tools be controlled and protected from unauthorized modification.

Audit tools include, but are not limited to, OS provided audit tools, vendor provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records.

If an attacker were to gain access to audit tools he could analyze audit logs for system weaknesses or weaknesses in the auditing itself. An attacker could also manipulate logs to hide evidence of malicious activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Add or modify access controls and permissions to tools used to view or modify audit log data. Tools must be modifiable by authorized personnel only."
      reference   : "CAT|II,CCI|CCI-001494,Rule-ID|SV-66413r1_rule,STIG-ID|O112-C2-009700,Vuln-ID|V-52197"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-020700 - The DBMS must notify appropriate individuals when accounts are terminated."
      info        : "When application accounts are terminated, user accessibility is affected.  Accounts are utilized for identifying individual application users or for identifying the application processes themselves.

In order to detect and respond to events that affect user accessibility and application processing, applications must notify the appropriate individuals when an account is terminated so they can investigate the event. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and provides logging that can be used for forensic purposes.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where accounts are directly managed by Oracle.

Notwithstanding how accounts are normally managed, the DBMS must support the requirement to notify appropriate individuals upon account termination within Oracle.  Indeed, in a configuration where accounts are managed externally, the manipulation of an account within Oracle may indicate hostile activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Working with the DBA and site management, determine the appropriate individuals (by job role) to be notified.

If Oracle Audit Vault is available, configure it to notify the appropriate individuals when accounts are terminated.

If Oracle Audit Vault is not available, configure the Oracle DBMS's auditing feature to record account-termination activity.  Create and deploy a mechanism, such as a frequently-run job, to monitor the audit table or file for these records and notify the appropriate individuals."
      reference   : "CAT|II,CCI|CCI-001686,Rule-ID|SV-66415r3_rule,STIG-ID|O112-C2-020700,Vuln-ID|V-52199"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-009800 - The DBMS must protect audit tools from unauthorized deletion."
      info        : "Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data.

Depending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data.

It is, therefore, imperative that access to audit tools be controlled and protected from unauthorized access.

Applications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the access to audit tools.

Audit tools include, but are not limited to, OS-provided audit tools, vendor-provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records.

If an attacker were to gain access to audit tools, he could analyze audit logs for system weaknesses or weaknesses in the auditing itself.  An attacker could also manipulate logs to hide evidence of malicious activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Add or modify access controls and permissions to tools used to view or modify audit log data. Only authorized personnel must be able to delete these tools."
      reference   : "CAT|II,CCI|CCI-001495,Rule-ID|SV-66417r1_rule,STIG-ID|O112-C2-009800,Vuln-ID|V-52201"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-003300 - The DBMS must implement separation of duties through assigned information access authorizations - User Account Privileges"
      info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

Additionally, the person or entity accountable for monitoring the activity must be separate as well. To meet this requirement, applications, when applicable, shall be divided where functionality is based on roles and duties. Examples of separation of duties include: (i) mission functions and distinct information system support functions are divided among different individuals/roles; (ii) different individuals perform information system support functions (e.g., system management, systems programming, configuration management, quality assurance and testing, network security); (iii) security personnel who administer access control functions do not administer audit functions; and (iv) different administrator accounts for different roles.

Privileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment."
      solution    : "Define DBMS user roles based on privilege and job function requirements.

Assign the required privileges to the role and assign the role to authorized DBMS user accounts.

Revoke any privileges directly assigned to DBMS user accounts and assign them to a role the DBMS user already has assigned."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|III,CCI|CCI-000037,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66419r3_rule,STIG-ID|O112-C3-003300,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52203"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS where GRANTEE = 'DBA' ORDER BY PRIVILEGE;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-003300 - The DBMS must implement separation of duties through assigned information access authorizations - User Role Assignments"
      info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

Additionally, the person or entity accountable for monitoring the activity must be separate as well. To meet this requirement, applications, when applicable, shall be divided where functionality is based on roles and duties. Examples of separation of duties include: (i) mission functions and distinct information system support functions are divided among different individuals/roles; (ii) different individuals perform information system support functions (e.g., system management, systems programming, configuration management, quality assurance and testing, network security); (iii) security personnel who administer access control functions do not administer audit functions; and (iv) different administrator accounts for different roles.

Privileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment."
      solution    : "Define DBMS user roles based on privilege and job function requirements.

Assign the required privileges to the role and assign the role to authorized DBMS user accounts.

Revoke any privileges directly assigned to DBMS user accounts and assign them to a role the DBMS user already has assigned."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-53|AC-3(7),800-53|AC-5,CAT|III,CCI|CCI-000037,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),ISO/IEC-27001|A.6.1.2,ITSG-33|AC-5,NESA|T5.1.1,Rule-ID|SV-66419r3_rule,STIG-ID|O112-C3-003300,SWIFT-CSCv1|5.1,Vuln-ID|V-52203"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT USERNAME, GRANTED_ROLE FROM USER_ROLE_PRIVS;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-003300 - The DBMS must implement separation of duties through assigned information access authorizations - Role Privileges"
      info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

Additionally, the person or entity accountable for monitoring the activity must be separate as well. To meet this requirement, applications, when applicable, shall be divided where functionality is based on roles and duties. Examples of separation of duties include: (i) mission functions and distinct information system support functions are divided among different individuals/roles; (ii) different individuals perform information system support functions (e.g., system management, systems programming, configuration management, quality assurance and testing, network security); (iii) security personnel who administer access control functions do not administer audit functions; and (iv) different administrator accounts for different roles.

Privileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment."
      solution    : "Define DBMS user roles based on privilege and job function requirements.

Assign the required privileges to the role and assign the role to authorized DBMS user accounts.

Revoke any privileges directly assigned to DBMS user accounts and assign them to a role the DBMS user already has assigned."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-53|AC-3(7),800-53|AC-5,CAT|III,CCI|CCI-000037,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),ISO/IEC-27001|A.6.1.2,ITSG-33|AC-5,NESA|T5.1.1,Rule-ID|SV-66419r3_rule,STIG-ID|O112-C3-003300,SWIFT-CSCv1|5.1,Vuln-ID|V-52203"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT ROLE, PRIVILEGE FROM ROLE_SYS_PRIVS;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-003300 - The DBMS must implement separation of duties through assigned information access authorizations - Objects with SELECT Privilege"
      info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

Additionally, the person or entity accountable for monitoring the activity must be separate as well. To meet this requirement, applications, when applicable, shall be divided where functionality is based on roles and duties. Examples of separation of duties include: (i) mission functions and distinct information system support functions are divided among different individuals/roles; (ii) different individuals perform information system support functions (e.g., system management, systems programming, configuration management, quality assurance and testing, network security); (iii) security personnel who administer access control functions do not administer audit functions; and (iv) different administrator accounts for different roles.

Privileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment."
      solution    : "Define DBMS user roles based on privilege and job function requirements.

Assign the required privileges to the role and assign the role to authorized DBMS user accounts.

Revoke any privileges directly assigned to DBMS user accounts and assign them to a role the DBMS user already has assigned."
      reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|III,CCI|CCI-000037,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),Rule-ID|SV-66419r3_rule,STIG-ID|O112-C3-003300,Vuln-ID|V-52203"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT table_name, grantee, MAX(DECODE(privilege, 'SELECT', 'SELECT')) AS select_priv FROM dba_tab_privs WHERE grantee IN ( SELECT role FROM dba_roles) GROUP BY table_name, grantee;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : regex:".+", regex:".+", NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-003300 - The DBMS must implement separation of duties through assigned information access authorizations - Objects with DELETE Privilege"
      info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

Additionally, the person or entity accountable for monitoring the activity must be separate as well. To meet this requirement, applications, when applicable, shall be divided where functionality is based on roles and duties. Examples of separation of duties include: (i) mission functions and distinct information system support functions are divided among different individuals/roles; (ii) different individuals perform information system support functions (e.g., system management, systems programming, configuration management, quality assurance and testing, network security); (iii) security personnel who administer access control functions do not administer audit functions; and (iv) different administrator accounts for different roles.

Privileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment."
      solution    : "Define DBMS user roles based on privilege and job function requirements.

Assign the required privileges to the role and assign the role to authorized DBMS user accounts.

Revoke any privileges directly assigned to DBMS user accounts and assign them to a role the DBMS user already has assigned."
      reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|III,CCI|CCI-000037,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),Rule-ID|SV-66419r3_rule,STIG-ID|O112-C3-003300,Vuln-ID|V-52203"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT table_name, grantee, MAX(DECODE(privilege, 'DELETE', 'DELETE')) AS delete_priv FROM dba_tab_privs WHERE grantee IN ( SELECT role FROM dba_roles) GROUP BY table_name, grantee;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : regex:".+", regex:".+", NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-003300 - The DBMS must implement separation of duties through assigned information access authorizations - Objects with UPDATE Privilege"
      info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

Additionally, the person or entity accountable for monitoring the activity must be separate as well. To meet this requirement, applications, when applicable, shall be divided where functionality is based on roles and duties. Examples of separation of duties include: (i) mission functions and distinct information system support functions are divided among different individuals/roles; (ii) different individuals perform information system support functions (e.g., system management, systems programming, configuration management, quality assurance and testing, network security); (iii) security personnel who administer access control functions do not administer audit functions; and (iv) different administrator accounts for different roles.

Privileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment."
      solution    : "Define DBMS user roles based on privilege and job function requirements.

Assign the required privileges to the role and assign the role to authorized DBMS user accounts.

Revoke any privileges directly assigned to DBMS user accounts and assign them to a role the DBMS user already has assigned."
      reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|III,CCI|CCI-000037,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),Rule-ID|SV-66419r3_rule,STIG-ID|O112-C3-003300,Vuln-ID|V-52203"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT table_name, grantee, MAX(DECODE(privilege, 'UPDATE', 'UPDATE')) AS update_priv FROM dba_tab_privs WHERE grantee IN ( SELECT role FROM dba_roles) GROUP BY table_name, grantee;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : regex:".+", regex:".+", NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-003300 - The DBMS must implement separation of duties through assigned information access authorizations - Objects with INSERT Privilege"
      info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

Additionally, the person or entity accountable for monitoring the activity must be separate as well. To meet this requirement, applications, when applicable, shall be divided where functionality is based on roles and duties. Examples of separation of duties include: (i) mission functions and distinct information system support functions are divided among different individuals/roles; (ii) different individuals perform information system support functions (e.g., system management, systems programming, configuration management, quality assurance and testing, network security); (iii) security personnel who administer access control functions do not administer audit functions; and (iv) different administrator accounts for different roles.

Privileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment."
      solution    : "Define DBMS user roles based on privilege and job function requirements.

Assign the required privileges to the role and assign the role to authorized DBMS user accounts.

Revoke any privileges directly assigned to DBMS user accounts and assign them to a role the DBMS user already has assigned."
      reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|III,CCI|CCI-000037,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),Rule-ID|SV-66419r3_rule,STIG-ID|O112-C3-003300,Vuln-ID|V-52203"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT table_name, grantee, MAX(DECODE(privilege, 'INSERT', 'INSERT')) AS insert_priv FROM dba_tab_privs WHERE grantee IN ( SELECT role FROM dba_roles) GROUP BY table_name, grantee;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : regex:".+", regex:".+", NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-010000 - The DBMS must support the requirement to back up audit data and records onto a different system or media than the system being audited on an organization-defined frequency."
      info        : "Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto media separate from the system being audited on an organizational-defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Utilize DBMS features or other software that supports the ability to back up audit data and records onto a system or media different from the system being audited on an organization-defined frequency.

EITHER use Oracle features (such as Backup or Data Pump) to perform backups of the audit data specifically, OR grant appropriate permissions to permit a third-party tool to do so."
      reference   : "CAT|II,CCI|CCI-001348,Rule-ID|SV-66421r1_rule,STIG-ID|O112-C2-010000,Vuln-ID|V-52205"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C3-008700 - The DBMS must provide an audit log reduction capability."
      info        : "Audit reduction is used to reduce the volume of audit records in order to facilitate manual review.  Before a security review, information systems and/or applications with an audit reduction capability may remove many audit records known to have little security significance.

This is generally accomplished by removing records generated by specified classes of events, such as records generated by nightly backups. Audit reduction does not alter original audit records.

An audit reduction capability provides support for near real-time audit review and analysis requirements and after-the-fact investigations of security incidents.

The lack of audit reduction in a database can require the DBA, or others responsible for reviewing audit logs, to sort through large amounts of data in order to find relevant records. This can cause important audit records to be missed.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Deploy software capable of performing audit table reduction."
      reference   : "CAT|III,CCI|CCI-000156,Rule-ID|SV-66425r1_rule,STIG-ID|O112-C3-008700,Vuln-ID|V-52209"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Check audit_trail is DB or DB, EXTENDED"
          sql_request : "SELECT name, value FROM SYS.V$PARAMETER WHERE NAME = 'audit_trail';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "audit_trail", "DB" || "DB, EXTENDED"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-010100 - The DBMS must protect audit data records and integrity by using cryptographic mechanisms."
          info        : "Protection of audit records and audit data is of critical importance. Cryptographic mechanisms are the industry-established standard used to protect the integrity of audit data. An example of a cryptographic mechanism is the computation and application of a cryptographic-signed hash using asymmetric cryptography.

Non-repudiation protects individuals against later claims by an author of not having performed a particular action, a sender of not having transmitted a message, a receiver of not having received a message, or a signatory of not having signed a document."
          solution    : "Configure Oracle to use cryptographic mechanisms to protect audit data records and integrity.

- - - - -

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it is necessary to shut down and restart the Oracle database.

- - - - -

For file-based auditing (OS, XML or XML,EXTENDED), implement operating system/file system encryption for the audit file.

- - - - -

Caution: Do not attempt to encrypt Oracle internal objects such as SYSTEM, SYSAUX, UNDO, or TEMP tablespaces.  Oracle does not support this with TDE.  When moving AUD$ to a new tablespace, be aware that associated LOB objects will also need to be moved. Finally, when upgrading, the AUD$ table and LOBs will need to be moved back to the SYSTEM tablespace or the upgrade will fail.

For table-based auditing (DB or DB,EXTENDED), proceed as follows.

- - - - -

Next we create an encrypted tablespace. Before you can encrypt or decrypt tablespaces, you must generate or set a master encryption key. The tablespace master encryption key is stored in an external security module and is used to encrypt the TDE tablespace encryption keys.

Check to ensure that the ENCRYPTION_WALLET_LOCATION (or WALLET_LOCATION) parameter in the sqlnet.ora file points to the correct software wallet location. (Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.) For example:

ENCRYPTION_WALLET_LOCATION=
(SOURCE=(METHOD=FILE)(METHOD_DATA=
(DIRECTORY=/app/wallet)))

Oracle Database 11g Release 2 (11.2) uses the same master encryption key for both TDE column encryption and TDE tablespace encryption. When you issue the ALTER SYSTEM SET ENCRYPTION KEY command, a unified master encryption key is created for both TDE column encryption and TDE tablespace encryption.

Resetting the Tablespace Master Encryption Key

Oracle Database 11g Release 2 (11.2) uses a unified master encryption key for both TDE column encryption and TDE tablespace encryption. When you reset (rekey) the master encryption key for TDE column encryption, the master encryption key for TDE tablespace encryption also gets reset. The ALTER SYSTEM SET ENCRYPTION KEY command resets the tablespace master encryption key. Before you can create an encrypted tablespace, the Oracle wallet containing the tablespace master encryption key must be open. The wallet must also be open before you can access data in an encrypted tablespace. The security administrator needs to open the Oracle wallet after starting the Oracle instance. A restart of the Oracle instance requires the security administrator to open the wallet again. The security administrator also needs to open the wallet before performing database recovery operations. This is because background processes may require access to encrypted redo and undo logs. When performing database recovery, the wallet must be opened before opening the database. This is illustrated in the following statements:

SQL> STARTUP MOUNT;
SQL> ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY 'password';
SQL> ALTER DATABASE OPEN;

You can also choose to use auto login wallets, if your environment does not require the extra security provided by a wallet that needs to be explicitly opened. However, this is not the recommended practice.

Creating an Encrypted Tablespace

The CREATE TABLESPACE command enables you to create an encrypted tablespace. The permanent_tablespace_clause enables you to choose the encryption algorithm and the key length for encryption. The ENCRYPT keyword in the storage_clause encrypts the tablespace. The following syntax illustrates this:

CREATE
[ BIGFILE | SMALLFILE ]
{ permanent_tablespace_clause
| temporary_tablespace_clause
| undo_tablespace_clause
} ;

Where, permanent_tablespace_clause=TABLESPACE , ENCRYPTION [USING algorithm] storage_clause
Where, storage_clause=[ENCRYPT] where:
The encryption algorithm can have one of the following values:

3DES168
AES128
AES192
AES256

The key lengths are included in the names of the algorithms themselves. If no encryption algorithm is specified, the default encryption algorithm is used. The default encryption algorithm is AES128.
Note: The ENCRYPTION keyword in the permanent_tablespace_clause is used to specify the encryption algorithm. The ENCRYPT keyword in the storage_clause actually encrypts the tablespace. For security reasons, a tablespace cannot be encrypted with the NO SALT option.


Commands to create Encrypted Tablespace

CREATE TABLESPACE securespace
DATAFILE '/home/user/oradata/secure01.dbf'
SIZE 150M
ENCRYPTION USING '3DES168'
DEFAULT STORAGE(ENCRYPT);

This creates a tablespace called securespace2 using an algorithm of 3DES168.

You cannot encrypt an existing tablespace. However, you can import data into an encrypted tablespace using the Oracle Data Pump utility. You can also use SQL commands like CREATE TABLE...AS SELECT...or ALTER TABLE...MOVE... to move data into an encrypted tablespace. The CREATE TABLE...AS SELECT... command enables you to create a table from an existing table. The ALTER TABLE...MOVE... command enables you to move a table into the encrypted tablespace.

Then we move the sys.aud$ from system tablespace to securespace tablespace.

SQL> exec DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_LOCATION(audit_trail_type => DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD, audit_trail_location_value => 'securespace');

PL/SQL procedure successfully completed.

Then check the tablespace the table is stored in.

SQL> SELECT table_name, tablespace_name FROM dba_tables WHERE table_name ='AUD$';

TABLE_NAME TABLESPACE_NAME
------------------------------ ------------------------------
AUD$ SECURESPACE"
          reference   : "800-171|3.3.8,800-53|AU-9(3),CAT|II,CCI|CCI-001350,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(3),NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-66427r3_rule,STIG-ID|O112-C2-010100,TBA-FIISB|37.3.3,Vuln-ID|V-52211"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT tablespace_name, encrypted FROM dba_tablespaces WHERE tablespace_name = (SELECT tablespace_name FROM dba_tables WHERE table_name ='AUD$');"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", "YES"
        </custom_item>
      </then>

      <else>
        <report type:"WARNING">
          description : "O112-C2-010100 - The DBMS must protect audit data records and integrity by using cryptographic mechanisms."
          info        : "Protection of audit records and audit data is of critical importance. Cryptographic mechanisms are the industry-established standard used to protect the integrity of audit data. An example of a cryptographic mechanism is the computation and application of a cryptographic-signed hash using asymmetric cryptography.

Non-repudiation protects individuals against later claims by an author of not having performed a particular action, a sender of not having transmitted a message, a receiver of not having received a message, or a signatory of not having signed a document.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
          solution    : "Configure Oracle to use cryptographic mechanisms to protect audit data records and integrity.

- - - - -

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it is necessary to shut down and restart the Oracle database.

- - - - -

For file-based auditing (OS, XML or XML,EXTENDED), implement operating system/file system encryption for the audit file.

- - - - -

Caution: Do not attempt to encrypt Oracle internal objects such as SYSTEM, SYSAUX, UNDO, or TEMP tablespaces.  Oracle does not support this with TDE.  When moving AUD$ to a new tablespace, be aware that associated LOB objects will also need to be moved. Finally, when upgrading, the AUD$ table and LOBs will need to be moved back to the SYSTEM tablespace or the upgrade will fail.

For table-based auditing (DB or DB,EXTENDED), proceed as follows.

- - - - -

Next we create an encrypted tablespace. Before you can encrypt or decrypt tablespaces, you must generate or set a master encryption key. The tablespace master encryption key is stored in an external security module and is used to encrypt the TDE tablespace encryption keys.

Check to ensure that the ENCRYPTION_WALLET_LOCATION (or WALLET_LOCATION) parameter in the sqlnet.ora file points to the correct software wallet location. (Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.) For example:

ENCRYPTION_WALLET_LOCATION=
(SOURCE=(METHOD=FILE)(METHOD_DATA=
(DIRECTORY=/app/wallet)))

Oracle Database 11g Release 2 (11.2) uses the same master encryption key for both TDE column encryption and TDE tablespace encryption. When you issue the ALTER SYSTEM SET ENCRYPTION KEY command, a unified master encryption key is created for both TDE column encryption and TDE tablespace encryption.

Resetting the Tablespace Master Encryption Key

Oracle Database 11g Release 2 (11.2) uses a unified master encryption key for both TDE column encryption and TDE tablespace encryption. When you reset (rekey) the master encryption key for TDE column encryption, the master encryption key for TDE tablespace encryption also gets reset. The ALTER SYSTEM SET ENCRYPTION KEY command resets the tablespace master encryption key. Before you can create an encrypted tablespace, the Oracle wallet containing the tablespace master encryption key must be open. The wallet must also be open before you can access data in an encrypted tablespace. The security administrator needs to open the Oracle wallet after starting the Oracle instance. A restart of the Oracle instance requires the security administrator to open the wallet again. The security administrator also needs to open the wallet before performing database recovery operations. This is because background processes may require access to encrypted redo and undo logs. When performing database recovery, the wallet must be opened before opening the database. This is illustrated in the following statements:

SQL> STARTUP MOUNT;
SQL> ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY 'password';
SQL> ALTER DATABASE OPEN;

You can also choose to use auto login wallets, if your environment does not require the extra security provided by a wallet that needs to be explicitly opened. However, this is not the recommended practice.

Creating an Encrypted Tablespace

The CREATE TABLESPACE command enables you to create an encrypted tablespace. The permanent_tablespace_clause enables you to choose the encryption algorithm and the key length for encryption. The ENCRYPT keyword in the storage_clause encrypts the tablespace. The following syntax illustrates this:

CREATE
[ BIGFILE | SMALLFILE ]
{ permanent_tablespace_clause
| temporary_tablespace_clause
| undo_tablespace_clause
} ;

Where, permanent_tablespace_clause=TABLESPACE , ENCRYPTION [USING algorithm] storage_clause
Where, storage_clause=[ENCRYPT] where:
The encryption algorithm can have one of the following values:

3DES168
AES128
AES192
AES256

The key lengths are included in the names of the algorithms themselves. If no encryption algorithm is specified, the default encryption algorithm is used. The default encryption algorithm is AES128.
Note: The ENCRYPTION keyword in the permanent_tablespace_clause is used to specify the encryption algorithm. The ENCRYPT keyword in the storage_clause actually encrypts the tablespace. For security reasons, a tablespace cannot be encrypted with the NO SALT option.


Commands to create Encrypted Tablespace

CREATE TABLESPACE securespace
DATAFILE '/home/user/oradata/secure01.dbf'
SIZE 150M
ENCRYPTION USING '3DES168'
DEFAULT STORAGE(ENCRYPT);

This creates a tablespace called securespace2 using an algorithm of 3DES168.

You cannot encrypt an existing tablespace. However, you can import data into an encrypted tablespace using the Oracle Data Pump utility. You can also use SQL commands like CREATE TABLE...AS SELECT...or ALTER TABLE...MOVE... to move data into an encrypted tablespace. The CREATE TABLE...AS SELECT... command enables you to create a table from an existing table. The ALTER TABLE...MOVE... command enables you to move a table into the encrypted tablespace.

Then we move the sys.aud$ from system tablespace to securespace tablespace.

SQL> exec DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_LOCATION(audit_trail_type => DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD, audit_trail_location_value => 'securespace');

PL/SQL procedure successfully completed.

Then check the tablespace the table is stored in.

SQL> SELECT table_name, tablespace_name FROM dba_tables WHERE table_name ='AUD$';

TABLE_NAME TABLESPACE_NAME
------------------------------ ------------------------------
AUD$ SECURESPACE"
          reference   : "800-171|3.3.8,800-53|AU-9(3),CAT|II,CCI|CCI-001350,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(3),NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-66427r3_rule,STIG-ID|O112-C2-010100,TBA-FIISB|37.3.3,Vuln-ID|V-52211"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
        </report>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-C3-008800 - The DBMS must provide a report generation capability for audit reduction data."
      info        : "In support of Audit Review, Analysis, and Reporting requirements, audit reduction is a technique used to reduce the volume of audit records in order to facilitate a manual review.

Before a security review is conducted, information systems and/or applications with an audit reduction capability may remove many audit records known to have little security significance. This is generally accomplished by removing records generated by specified classes of events, such as records generated by nightly backups.

In order to identify and report on what (repetitive) data has been removed via the use of audit reduction, the application must provide a capability to generate reports containing what values were removed by the audit reduction.

Audit reduction does not alter original audit records. An audit reduction capability provides support for near real-time audit review and analysis based on policy-based requirements and after-the-fact investigations of security incidents.

Reporting tools employing audit reduction methods must not alter the original audit data. An example of a tool employing audit reduction methods is the Windows Event Viewer tool which is used to view and analyze audit logs on Windows systems.

The lack of reporting tools for audit reduction can require the DBA, or others responsible for reviewing audit logs, to sort through large amounts of data in order to find relevant records.  This can cause important audit records to be missed.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Deploy software capable of performing audit table reduction and of reporting on the excluded audit data."
      reference   : "CAT|III,CCI|CCI-000157,Rule-ID|SV-66429r1_rule,STIG-ID|O112-C3-008800,Vuln-ID|V-52213"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-010200 - The DBMS must protect the audit records generated, as a result of remote access to privileged accounts, and the execution of privileged functions."
      info        : "Protection of audit records and audit data is of critical importance. Care must be taken to ensure privileged users cannot circumvent audit protections put in place.

Auditing might not be reliable when performed by an information system which the user being audited has privileged access to.

The privileged user could inhibit auditing or directly modify audit records. To prevent this from occurring, privileged access shall be further defined between audit-related privileges and other privileges, thus limiting the users with audit-related privileges.

Reducing the risk of audit compromises by privileged users can also be achieved, for example, by performing audit activity on a separate information system where the user in question has limited access or by using storage media that cannot be modified (e.g., write-once recording devices).

If an attacker were to gain access to audit tools he could analyze audit logs for system weaknesses or weaknesses in the auditing itself.  An attacker could also manipulate logs to hide evidence of malicious activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Add controls and modify permissions to protect database audit log records from modification, deletion, spurious creation, or unauthorized viewing."
      reference   : "CAT|II,CCI|CCI-001352,Rule-ID|SV-66431r2_rule,STIG-ID|O112-C2-010200,Vuln-ID|V-52215"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-019200 - The DBMS must restrict the ability of users to launch Denial of Service (DoS) attacks against other information systems or networks - SEC_PROTOCOL_ERROR_TRACE_ACTION"
      info        : "When it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks.

While it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that extent, a variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks.

For example, boundary protection devices can filter certain types of packets to protect devices from being directly affected by  DoS attacks. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.

Applications and application developers must take the steps needed to ensure users cannot use these applications to launch DoS attacks against other systems and networks. An example would be designing applications to include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application.

The methods employed to counter this risk will be dependent upon the potential application layer methods that can be used to exploit it.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered."
      solution    : "Configure DBMS settings to restrict functionality that could be used to initiate DoS attacks.


Securing the Network Connection:
Protecting the network and its traffic from inappropriate access or modification is the essence of network security. You should consider all paths the data travels, and assess the threats on each path and node. Then, take steps to lessen or eliminate those threats and the consequences of a security breach. In addition, monitor and audit to detect either increased threat levels or penetration attempts.

The following practices improve network security:


1. Disable the Default Listener.
All listeners have a unique name instead of the name LISTENER and have startup protection.

LISTENER=(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST=)(PORT = 0)))

This configuration prevents the default listener from starting.


2. Prevent online administration by requiring the administrator to have the write privilege on the listener.ora file on the server.
a. Add or alter this line in the listener.ora file:

ADMIN_RESTRICTIONS_LISTENER=ON

b. Use RELOAD to reload the configuration.


3. Set Protection against crafted network packets on database level.

SEC_PROTOCOL_ERROR_TRACE_ACTION specifies the action that the database should take when bad packets are received from a possibly malicious client.

SEC_PROTOCOL_ERROR_TRACE_ACTION = { NONE | TRACE | LOG | ALERT } (TRACE is the default)

NONE: The database server ignores the bad packets and does not generate any trace files or log messages. (Not recommended)

TRACE: A detailed trace file is generated when bad packets are received, which can be used to debug any problems in client/server communication.

LOG: A minimal log message is printed in the alert logfile and in the server trace file. A minimal amount of disk space is used.

ALERT: An alert message is sent to a DBA or monitoring console.

SEC_PROTOCOL_ERROR_FURTHER_ACTION specifies the further execution of a server process when receiving bad packets from a possibly malicious client.

SEC_PROTOCOL_ERROR_FURTHER_ACTION = { CONTINUE | (DELAY,integer) | (DROP,integer) } (DROP,3 is the default)

CONTINUE: The server process continues execution. The database server may be subject to a Denial of Service (DoS) if bad packets continue to be sent by a malicious client. (Not recommended)

(DELAY, integer) :The client experiences a delay of integer seconds before the server process accepts the next request from the same client connection. Malicious clients are prevented from excessive consumption of server resources while legitimate clients experience degradation in performance but can continue to function.

(DROP, integer) : The server forcefully terminates the client connection after integer bad packets. The server protects itself at the expense of the client (for example, a client transaction may be lost). The client may reconnect and attempt the same operation.

SEC_MAX_FAILED_LOGIN_ATTEMPTS specifies the number of authentication attempts that can be made by a client on a connection to the server process. After the specified number of failure attempts, the connection will be automatically dropped by the server process.

SEC_MAX_FAILED_LOGIN_ATTEMPTS = n (3 is the default) Values range from 1 to unlimited. (A value of 1 to 3 is recommended)

For more information about the parameters in listener.ora, see https://docs.oracle.com/cd/E11882_01/network.112/e10835/listener.htm#NETRF008


4. Do not set the listener password.

Ensure that the password has not been set in the listener.ora file. The local operating system authentication will secure the listener administration. The remote listener administration is disabled when the password has not been set. This prevents brute force attacks of the listener password.

The listener password has been deprecated in this release. It will not be supported in the next release of Oracle Database.


5. When a host computer has multiple IP addresses associated with multiple network interface controller (NIC) cards, configure the listener to the specific IP address.

You can restrict the listener to listen on a specific IP address. Oracle recommends that you specify the specific IP addresses on these types of computers, rather than allowing the listener to listen on all IP addresses. Restricting the listener to specific IP addresses helps to prevent an intruder from stealing a TCP end point from under the listener process.


6. Restrict the privileges of the listener, so that it cannot read or write files in the database or the Oracle server address space.

The default configuration for external procedures does not require a network listener to work with Oracle Database and the extproc agent. The extproc agent is spawned directly by Oracle Database and eliminates the risks that the extproc agent might be spawned by Oracle Listener unexpectedly. This default configuration is recommended for maximum security. For more information about securing external procedures see
https://docs.oracle.com/cd/E11882_01/network.112/e41945/advcfg.htm#NETAG888
However, the extproc agent can be configured to be spawned by a listener. In that case (not recommended) the listener should have restricted privileges.


7. Use a firewall, IAW DoD network policy and guidance.

Appropriately placed and configured firewalls can prevent outside access to your databases.


8. Prevent unauthorized administration of the Oracle listener.

Local administration of the listener is secure by default through the local operating system. Therefore configuring a password is neither required nor recommended for secure local administration. However, a password can be configured for the listener to provide security for administrative operations, such as starting or stopping the listener, viewing a list of supported services, or saving changes to the Listener Control configuration.

By default, Oracle Net Listener permits only local administration for security reasons. As a policy, the listener can be administered only by the user who started it. This is enforced through local operating system authentication. For example, if user1 starts the listener, then only user1 can administer it. Any other user trying to administer the listener gets an error. The super user is the only exception.

Oracle recommends that you perform listener administration in the default mode (secure by means of local operating system authentication), and access the system remotely using a remote logon. Oracle Enterprise Manager Cloud Control can also be used for remote administration.


9. Encrypt network traffic.  (Mandatory for sensitive data and optional for non-sensitive, as covered in other STIG requirements.)

Where applicable, use Oracle network data encryption to encrypt network traffic among clients, databases, and application servers.


10. Set Connect Rate to organization defined limit. (Also required by O112-C2-019100/SRG-APP-000245-DB-000132)

The connection rate limiter feature in Oracle Net Listener enables a database administrator to limit the number of new connections handled by the listener. When this feature is enabled, Oracle Net Listener imposes a user-specified maximum limit on the number of new connections handled by the listener every second.

CONNECTION_RATE_LISTENER=10
LISTENER=
(ADDRESS_LIST=
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1521)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1522)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1526))
)


11. Setup Valid Node Checking.
(See also O112-BP-025600.)

Valid node checking is a security feature that protects DBMS instances from malevolent or errant Oracle Net connections over TCP/IP, without the need for a firewall or IP address filtering at the operating system-level. The feature is controlled by the three parameters; tcp.validnode_checking, tcp.invited_nodes, and tcp.excluded_nodes.

Modify the sqlnet.ora file manually
TCP.VALIDNODE_CHECKING=yes
(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

If this parameter is set to yes, then incoming connections are allowed only if they originate from a node that conforms to the list specified by TCP.INVITED_NODES or TCP.EXCLUDED_NODES parameters.

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes (no is the default).

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes.

Modify the listener.ora file manually

TCP.EXCLUDED_NODES Syntax:
TCP.EXCLUDED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.EXCLUDED_NODES=(finance.us.example.com, mktg.us.example.com, 192.0.2.25, 172.30.*, 2001:DB8:200C:417A/32)

TCP.INVITED_NODES Syntax:
TCP.INVITED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.INVITED_NODES=(sales.us.example.com, hr.us.example.com, 192.0.*, 2001:DB8:200C:433B/32)

Usage Notes:

Use TCP.INVITED_NODES to specify which clients are allowed access to the database. This list takes precedence over the TCP.EXCLUDED_NODES parameter if both lists are present. These parameters can use wildcards for IPv4 addresses and CIDR notation for IPv4 and IPv6 addresses.


12. Apply Listener Security Patches.
(See also O112-C1-011100/SRG-APP-000133-DB-000205.)

Critical Patch Updates are cumulative. Therefore, the latest patch will contain all previous security patches for the Listener.


13. Ensure that listener logging is turned on.

Listener logging is on by default. If logging is not on, configure logging for all listeners in order to capture Listener commands and brute force password attacks.


14. Monitor the listener logfile.

The logfile may contain TNS-01169, TNS-01189, TNS-01190, or TNS-12508 errors, which may signify attacks or inappropriate activity. Monitor the logfile and generate an alert whenever these errors are encountered."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53|SC-5,CAT|III,CCI|CCI-001094,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,ITSG-33|SC-5,NESA|T3.3.1,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|GS10c,NIAv2|GS8e,NIAv2|SM8,Rule-ID|SV-66433r6_rule,STIG-ID|O112-C3-019200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52217"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SHOW PARAMETER SEC_PROTOCOL_ERROR_TRACE_ACTION;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "sec_protocol_error_trace_action", "string", "TRACE" || "LOG" ||"ALERT"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-019200 - The DBMS must restrict the ability of users to launch Denial of Service (DoS) attacks against other information systems or networks - SEC_PROTOCOL_ERROR_FURTHER_ACTION"
      info        : "When it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks.

While it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that extent, a variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks.

For example, boundary protection devices can filter certain types of packets to protect devices from being directly affected by  DoS attacks. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.

Applications and application developers must take the steps needed to ensure users cannot use these applications to launch DoS attacks against other systems and networks. An example would be designing applications to include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application.

The methods employed to counter this risk will be dependent upon the potential application layer methods that can be used to exploit it.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered."
      solution    : "Configure DBMS settings to restrict functionality that could be used to initiate DoS attacks.


Securing the Network Connection:
Protecting the network and its traffic from inappropriate access or modification is the essence of network security. You should consider all paths the data travels, and assess the threats on each path and node. Then, take steps to lessen or eliminate those threats and the consequences of a security breach. In addition, monitor and audit to detect either increased threat levels or penetration attempts.

The following practices improve network security:


1. Disable the Default Listener.
All listeners have a unique name instead of the name LISTENER and have startup protection.

LISTENER=(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST=)(PORT = 0)))

This configuration prevents the default listener from starting.


2. Prevent online administration by requiring the administrator to have the write privilege on the listener.ora file on the server.
a. Add or alter this line in the listener.ora file:

ADMIN_RESTRICTIONS_LISTENER=ON

b. Use RELOAD to reload the configuration.


3. Set Protection against crafted network packets on database level.

SEC_PROTOCOL_ERROR_TRACE_ACTION specifies the action that the database should take when bad packets are received from a possibly malicious client.

SEC_PROTOCOL_ERROR_TRACE_ACTION = { NONE | TRACE | LOG | ALERT } (TRACE is the default)

NONE: The database server ignores the bad packets and does not generate any trace files or log messages. (Not recommended)

TRACE: A detailed trace file is generated when bad packets are received, which can be used to debug any problems in client/server communication.

LOG: A minimal log message is printed in the alert logfile and in the server trace file. A minimal amount of disk space is used.

ALERT: An alert message is sent to a DBA or monitoring console.

SEC_PROTOCOL_ERROR_FURTHER_ACTION specifies the further execution of a server process when receiving bad packets from a possibly malicious client.

SEC_PROTOCOL_ERROR_FURTHER_ACTION = { CONTINUE | (DELAY,integer) | (DROP,integer) } (DROP,3 is the default)

CONTINUE: The server process continues execution. The database server may be subject to a Denial of Service (DoS) if bad packets continue to be sent by a malicious client. (Not recommended)

(DELAY, integer) :The client experiences a delay of integer seconds before the server process accepts the next request from the same client connection. Malicious clients are prevented from excessive consumption of server resources while legitimate clients experience degradation in performance but can continue to function.

(DROP, integer) : The server forcefully terminates the client connection after integer bad packets. The server protects itself at the expense of the client (for example, a client transaction may be lost). The client may reconnect and attempt the same operation.

SEC_MAX_FAILED_LOGIN_ATTEMPTS specifies the number of authentication attempts that can be made by a client on a connection to the server process. After the specified number of failure attempts, the connection will be automatically dropped by the server process.

SEC_MAX_FAILED_LOGIN_ATTEMPTS = n (3 is the default) Values range from 1 to unlimited. (A value of 1 to 3 is recommended)

For more information about the parameters in listener.ora, see https://docs.oracle.com/cd/E11882_01/network.112/e10835/listener.htm#NETRF008


4. Do not set the listener password.

Ensure that the password has not been set in the listener.ora file. The local operating system authentication will secure the listener administration. The remote listener administration is disabled when the password has not been set. This prevents brute force attacks of the listener password.

The listener password has been deprecated in this release. It will not be supported in the next release of Oracle Database.


5. When a host computer has multiple IP addresses associated with multiple network interface controller (NIC) cards, configure the listener to the specific IP address.

You can restrict the listener to listen on a specific IP address. Oracle recommends that you specify the specific IP addresses on these types of computers, rather than allowing the listener to listen on all IP addresses. Restricting the listener to specific IP addresses helps to prevent an intruder from stealing a TCP end point from under the listener process.


6. Restrict the privileges of the listener, so that it cannot read or write files in the database or the Oracle server address space.

The default configuration for external procedures does not require a network listener to work with Oracle Database and the extproc agent. The extproc agent is spawned directly by Oracle Database and eliminates the risks that the extproc agent might be spawned by Oracle Listener unexpectedly. This default configuration is recommended for maximum security. For more information about securing external procedures see
https://docs.oracle.com/cd/E11882_01/network.112/e41945/advcfg.htm#NETAG888
However, the extproc agent can be configured to be spawned by a listener. In that case (not recommended) the listener should have restricted privileges.


7. Use a firewall, IAW DoD network policy and guidance.

Appropriately placed and configured firewalls can prevent outside access to your databases.


8. Prevent unauthorized administration of the Oracle listener.

Local administration of the listener is secure by default through the local operating system. Therefore configuring a password is neither required nor recommended for secure local administration. However, a password can be configured for the listener to provide security for administrative operations, such as starting or stopping the listener, viewing a list of supported services, or saving changes to the Listener Control configuration.

By default, Oracle Net Listener permits only local administration for security reasons. As a policy, the listener can be administered only by the user who started it. This is enforced through local operating system authentication. For example, if user1 starts the listener, then only user1 can administer it. Any other user trying to administer the listener gets an error. The super user is the only exception.

Oracle recommends that you perform listener administration in the default mode (secure by means of local operating system authentication), and access the system remotely using a remote logon. Oracle Enterprise Manager Cloud Control can also be used for remote administration.


9. Encrypt network traffic.  (Mandatory for sensitive data and optional for non-sensitive, as covered in other STIG requirements.)

Where applicable, use Oracle network data encryption to encrypt network traffic among clients, databases, and application servers.


10. Set Connect Rate to organization defined limit. (Also required by O112-C2-019100/SRG-APP-000245-DB-000132)

The connection rate limiter feature in Oracle Net Listener enables a database administrator to limit the number of new connections handled by the listener. When this feature is enabled, Oracle Net Listener imposes a user-specified maximum limit on the number of new connections handled by the listener every second.

CONNECTION_RATE_LISTENER=10
LISTENER=
(ADDRESS_LIST=
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1521)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1522)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1526))
)


11. Setup Valid Node Checking.
(See also O112-BP-025600.)

Valid node checking is a security feature that protects DBMS instances from malevolent or errant Oracle Net connections over TCP/IP, without the need for a firewall or IP address filtering at the operating system-level. The feature is controlled by the three parameters; tcp.validnode_checking, tcp.invited_nodes, and tcp.excluded_nodes.

Modify the sqlnet.ora file manually
TCP.VALIDNODE_CHECKING=yes
(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

If this parameter is set to yes, then incoming connections are allowed only if they originate from a node that conforms to the list specified by TCP.INVITED_NODES or TCP.EXCLUDED_NODES parameters.

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes (no is the default).

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes.

Modify the listener.ora file manually

TCP.EXCLUDED_NODES Syntax:
TCP.EXCLUDED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.EXCLUDED_NODES=(finance.us.example.com, mktg.us.example.com, 192.0.2.25, 172.30.*, 2001:DB8:200C:417A/32)

TCP.INVITED_NODES Syntax:
TCP.INVITED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.INVITED_NODES=(sales.us.example.com, hr.us.example.com, 192.0.*, 2001:DB8:200C:433B/32)

Usage Notes:

Use TCP.INVITED_NODES to specify which clients are allowed access to the database. This list takes precedence over the TCP.EXCLUDED_NODES parameter if both lists are present. These parameters can use wildcards for IPv4 addresses and CIDR notation for IPv4 and IPv6 addresses.


12. Apply Listener Security Patches.
(See also O112-C1-011100/SRG-APP-000133-DB-000205.)

Critical Patch Updates are cumulative. Therefore, the latest patch will contain all previous security patches for the Listener.


13. Ensure that listener logging is turned on.

Listener logging is on by default. If logging is not on, configure logging for all listeners in order to capture Listener commands and brute force password attacks.


14. Monitor the listener logfile.

The logfile may contain TNS-01169, TNS-01189, TNS-01190, or TNS-12508 errors, which may signify attacks or inappropriate activity. Monitor the logfile and generate an alert whenever these errors are encountered."
      reference   : "800-53|SC-5,CAT|III,CCI|CCI-001094,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e,Rule-ID|SV-66433r6_rule,STIG-ID|O112-C3-019200,Vuln-ID|V-52217"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name, UPPER(value) FROM v$parameter WHERE name = 'SEC_PROTOCOL_ERROR_FURTHER_ACTION';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "SEC_PROTOCOL_ERROR_FURTHER_ACTION", regex:"\(DROP,[0-9]+\)" || regex:"\(DELAY,[0-9]+\)"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-019200 - The DBMS must restrict the ability of users to launch Denial of Service (DoS) attacks against other information systems or networks - SEC_MAX_FAILED_LOGIN_ATTEMPTS"
      info        : "When it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks.

While it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that extent, a variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks.

For example, boundary protection devices can filter certain types of packets to protect devices from being directly affected by  DoS attacks. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.

Applications and application developers must take the steps needed to ensure users cannot use these applications to launch DoS attacks against other systems and networks. An example would be designing applications to include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application.

The methods employed to counter this risk will be dependent upon the potential application layer methods that can be used to exploit it.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered."
      solution    : "Configure DBMS settings to restrict functionality that could be used to initiate DoS attacks.


Securing the Network Connection:
Protecting the network and its traffic from inappropriate access or modification is the essence of network security. You should consider all paths the data travels, and assess the threats on each path and node. Then, take steps to lessen or eliminate those threats and the consequences of a security breach. In addition, monitor and audit to detect either increased threat levels or penetration attempts.

The following practices improve network security:


1. Disable the Default Listener.
All listeners have a unique name instead of the name LISTENER and have startup protection.

LISTENER=(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST=)(PORT = 0)))

This configuration prevents the default listener from starting.


2. Prevent online administration by requiring the administrator to have the write privilege on the listener.ora file on the server.
a. Add or alter this line in the listener.ora file:

ADMIN_RESTRICTIONS_LISTENER=ON

b. Use RELOAD to reload the configuration.


3. Set Protection against crafted network packets on database level.

SEC_PROTOCOL_ERROR_TRACE_ACTION specifies the action that the database should take when bad packets are received from a possibly malicious client.

SEC_PROTOCOL_ERROR_TRACE_ACTION = { NONE | TRACE | LOG | ALERT } (TRACE is the default)

NONE: The database server ignores the bad packets and does not generate any trace files or log messages. (Not recommended)

TRACE: A detailed trace file is generated when bad packets are received, which can be used to debug any problems in client/server communication.

LOG: A minimal log message is printed in the alert logfile and in the server trace file. A minimal amount of disk space is used.

ALERT: An alert message is sent to a DBA or monitoring console.

SEC_PROTOCOL_ERROR_FURTHER_ACTION specifies the further execution of a server process when receiving bad packets from a possibly malicious client.

SEC_PROTOCOL_ERROR_FURTHER_ACTION = { CONTINUE | (DELAY,integer) | (DROP,integer) } (DROP,3 is the default)

CONTINUE: The server process continues execution. The database server may be subject to a Denial of Service (DoS) if bad packets continue to be sent by a malicious client. (Not recommended)

(DELAY, integer) :The client experiences a delay of integer seconds before the server process accepts the next request from the same client connection. Malicious clients are prevented from excessive consumption of server resources while legitimate clients experience degradation in performance but can continue to function.

(DROP, integer) : The server forcefully terminates the client connection after integer bad packets. The server protects itself at the expense of the client (for example, a client transaction may be lost). The client may reconnect and attempt the same operation.

SEC_MAX_FAILED_LOGIN_ATTEMPTS specifies the number of authentication attempts that can be made by a client on a connection to the server process. After the specified number of failure attempts, the connection will be automatically dropped by the server process.

SEC_MAX_FAILED_LOGIN_ATTEMPTS = n (3 is the default) Values range from 1 to unlimited. (A value of 1 to 3 is recommended)

For more information about the parameters in listener.ora, see https://docs.oracle.com/cd/E11882_01/network.112/e10835/listener.htm#NETRF008


4. Do not set the listener password.

Ensure that the password has not been set in the listener.ora file. The local operating system authentication will secure the listener administration. The remote listener administration is disabled when the password has not been set. This prevents brute force attacks of the listener password.

The listener password has been deprecated in this release. It will not be supported in the next release of Oracle Database.


5. When a host computer has multiple IP addresses associated with multiple network interface controller (NIC) cards, configure the listener to the specific IP address.

You can restrict the listener to listen on a specific IP address. Oracle recommends that you specify the specific IP addresses on these types of computers, rather than allowing the listener to listen on all IP addresses. Restricting the listener to specific IP addresses helps to prevent an intruder from stealing a TCP end point from under the listener process.


6. Restrict the privileges of the listener, so that it cannot read or write files in the database or the Oracle server address space.

The default configuration for external procedures does not require a network listener to work with Oracle Database and the extproc agent. The extproc agent is spawned directly by Oracle Database and eliminates the risks that the extproc agent might be spawned by Oracle Listener unexpectedly. This default configuration is recommended for maximum security. For more information about securing external procedures see
https://docs.oracle.com/cd/E11882_01/network.112/e41945/advcfg.htm#NETAG888
However, the extproc agent can be configured to be spawned by a listener. In that case (not recommended) the listener should have restricted privileges.


7. Use a firewall, IAW DoD network policy and guidance.

Appropriately placed and configured firewalls can prevent outside access to your databases.


8. Prevent unauthorized administration of the Oracle listener.

Local administration of the listener is secure by default through the local operating system. Therefore configuring a password is neither required nor recommended for secure local administration. However, a password can be configured for the listener to provide security for administrative operations, such as starting or stopping the listener, viewing a list of supported services, or saving changes to the Listener Control configuration.

By default, Oracle Net Listener permits only local administration for security reasons. As a policy, the listener can be administered only by the user who started it. This is enforced through local operating system authentication. For example, if user1 starts the listener, then only user1 can administer it. Any other user trying to administer the listener gets an error. The super user is the only exception.

Oracle recommends that you perform listener administration in the default mode (secure by means of local operating system authentication), and access the system remotely using a remote logon. Oracle Enterprise Manager Cloud Control can also be used for remote administration.


9. Encrypt network traffic.  (Mandatory for sensitive data and optional for non-sensitive, as covered in other STIG requirements.)

Where applicable, use Oracle network data encryption to encrypt network traffic among clients, databases, and application servers.


10. Set Connect Rate to organization defined limit. (Also required by O112-C2-019100/SRG-APP-000245-DB-000132)

The connection rate limiter feature in Oracle Net Listener enables a database administrator to limit the number of new connections handled by the listener. When this feature is enabled, Oracle Net Listener imposes a user-specified maximum limit on the number of new connections handled by the listener every second.

CONNECTION_RATE_LISTENER=10
LISTENER=
(ADDRESS_LIST=
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1521)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1522)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1526))
)


11. Setup Valid Node Checking.
(See also O112-BP-025600.)

Valid node checking is a security feature that protects DBMS instances from malevolent or errant Oracle Net connections over TCP/IP, without the need for a firewall or IP address filtering at the operating system-level. The feature is controlled by the three parameters; tcp.validnode_checking, tcp.invited_nodes, and tcp.excluded_nodes.

Modify the sqlnet.ora file manually
TCP.VALIDNODE_CHECKING=yes
(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

If this parameter is set to yes, then incoming connections are allowed only if they originate from a node that conforms to the list specified by TCP.INVITED_NODES or TCP.EXCLUDED_NODES parameters.

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes (no is the default).

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes.

Modify the listener.ora file manually

TCP.EXCLUDED_NODES Syntax:
TCP.EXCLUDED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.EXCLUDED_NODES=(finance.us.example.com, mktg.us.example.com, 192.0.2.25, 172.30.*, 2001:DB8:200C:417A/32)

TCP.INVITED_NODES Syntax:
TCP.INVITED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.INVITED_NODES=(sales.us.example.com, hr.us.example.com, 192.0.*, 2001:DB8:200C:433B/32)

Usage Notes:

Use TCP.INVITED_NODES to specify which clients are allowed access to the database. This list takes precedence over the TCP.EXCLUDED_NODES parameter if both lists are present. These parameters can use wildcards for IPv4 addresses and CIDR notation for IPv4 and IPv6 addresses.


12. Apply Listener Security Patches.
(See also O112-C1-011100/SRG-APP-000133-DB-000205.)

Critical Patch Updates are cumulative. Therefore, the latest patch will contain all previous security patches for the Listener.


13. Ensure that listener logging is turned on.

Listener logging is on by default. If logging is not on, configure logging for all listeners in order to capture Listener commands and brute force password attacks.


14. Monitor the listener logfile.

The logfile may contain TNS-01169, TNS-01189, TNS-01190, or TNS-12508 errors, which may signify attacks or inappropriate activity. Monitor the logfile and generate an alert whenever these errors are encountered."
      reference   : "800-171|3.1.8,800-53|AC-7,800-53|SC-5,CAT|III,CCI|CCI-001094,CN-L3|8.1.4.1(b),CSCv6|16.7,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|AC-7,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|AM24,NIAv2|GS10c,NIAv2|GS8e,Rule-ID|SV-66433r6_rule,STIG-ID|O112-C3-019200,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,Vuln-ID|V-52217"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name, UPPER(value) FROM v$parameter WHERE name = 'SEC_MAX_FAILED_LOGIN_ATTEMPTS';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "SEC_MAX_FAILED_LOGIN_ATTEMPTS", regex:"[1-3]"
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-010300 - The DBMS must support enforcement of logical access restrictions associated with changes to the DBMS configuration and to the database itself."
      info        : "When dealing with access restrictions pertaining to change control, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system.

Accordingly, only qualified and authorized individuals must be allowed to obtain access to application components for the purposes of initiating changes, including upgrades and modifications.

Modifications to the DBMS settings, the database files, database configuration files, or the underlying database application files themselves could have catastrophic consequences to the database.  Modification to DBMS settings could include turning off access controls to the database, the halting of archiving, the halting of auditing, and any number of other malicious actions.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure the DBMS to allow implementation of logical access restrictions aimed at protecting the DBMS from unauthorized changes to its configuration and to the database itself.

- - - - -

When the Oracle Database is installed on a Unix-like operating system, the required umask is 022, and the file permissions are set so that any modifications to the startup files can only be performed by the owner of the software, a member of the group DBA  or the root user. Changing the umask has caused problems when patching the environment.  If changes are to be made, they should be reverted to the status they were in before the modification for patching and upgrades."
      reference   : "CAT|II,CCI|CCI-000345,Rule-ID|SV-66435r1_rule,STIG-ID|O112-C2-010300,Vuln-ID|V-52219"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C3-019300 - The DBMS must manage resources to limit the effects of information flooding types of Denial of Service (DoS) incidents."
      info        : "In the case of application DoS incidents, care must be taken when designing the application to ensure the application makes the best use of system resources. SQL queries have the potential to consume large amounts of CPU cycles if they are not tuned for optimal performance. Web services containing complex calculations requiring large amounts of time to complete can bog down if too many requests for the service are encountered within a short period of time.

The methods employed to meet this requirement will vary depending upon the technology the application utilizes. However, a variety of technologies exist to limit, or in some cases, eliminate the effects of application-related DoS incidents. Employing increased capacity and bandwidth combined with specialized application layer protection devices and service redundancy may reduce the susceptibility to some DoS problems.

Databases are particularly susceptible to SQL-related DoS issues. Databases that do not protect against resource-intensive SQL queries may experience dramatic slowdowns from malicious attacks or accidental DoS incidents related to SQL queries.  What constitutes a resource-intensive query has to be determined locally, taking into account the purpose of the database and the needs of the various classes of user.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure Oracle profile(s) to set resource limits appropriate to each class of user.

SESSIONS_PER_USER
Specify the number of concurrent sessions to which you want to limit the user.

CPU_PER_SESSION
Specify the CPU time limit for a session, expressed in hundredth of seconds.

CPU_PER_CALL
Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.

CONNECT_TIME
Specify the total elapsed time limit for a session, expressed in minutes.

IDLE_TIME
Specify the permitted periods of continuous inactive time during a session, expressed in minutes. Long-running queries and other operations are not subject to this limit.

LOGICAL_READS_PER_SESSION
Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.

LOGICAL_READS_PER_CALL
Specify the permitted number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).

PRIVATE_SGA
Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA). Refer to size_clause for information on that clause.

COMPOSITE_LIMIT
(This limit applies only when using shared server architecture. The private space for a session in the SGA includes private SQL and PL/SQL areas, but not shared SQL and PL/SQL areas.) Specify the total resource cost for a session, expressed in service units. Oracle Database calculates the total service units as a weighted sum of CPU_PER_SESSION, CONNECT_TIME, LOGICAL_READS_PER_SESSION, and PRIVATE_SGA."
      reference   : "800-53|SC-5,CAT|III,CCI|CCI-001095,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e,Rule-ID|SV-66437r2_rule,STIG-ID|O112-C3-019300,Vuln-ID|V-52221"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select a.username, a.profile, b.resource_name, b.resource_type, b.limit from dba_users a, dba_profiles b where a.profile = b.profile and resource_type='KERNEL' order by a.profile;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL, NULL, NULL
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011000 - Database objects must be owned by accounts authorized for ownership."
      info        : "Within the database, object ownership implies full privileges to the owned object including the privilege to assign access to the owned objects to other subjects. Unmanaged or uncontrolled ownership of objects can lead to unauthorized object grants and alterations, and unauthorized modifications to data.

If critical tables or other objects rely on unauthorized owner accounts, these objects can be lost when an account is removed.

It may be the case that there are accounts that are authorized to own synonyms, but no other objects. If this is so, it should be documented."
      solution    : "Update system documentation to include list of accounts authorized for object ownership.

Re-assign ownership of authorized objects to authorized object owner accounts."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-001499,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66439r3_rule,STIG-ID|O112-C2-011000,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52223"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT owner, object_type, count(*) FROM dba_objects GROUP BY owner, object_type ORDER BY owner, object_type;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL,NULL
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'SESSIONS_PER_USER' Is Equal to '1'"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'SESSIONS_PER_USER';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "SESSIONS_PER_USER", "1"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - SESSIONS_PER_USER"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-53|AC-10,CAT|III,CCI|CCI-001096,ITSG-33|AC-10,NESA|T5.5.1,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'SESSIONS_PER_USER';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "SESSIONS_PER_USER", regex:"^(1|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - SESSIONS_PER_USER"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-53|AC-10,CAT|III,CCI|CCI-001096,ITSG-33|AC-10,NESA|T5.5.1,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'SESSIONS_PER_USER';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "SESSIONS_PER_USER", "1"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'IDLE_TIME' Is Less than or Equal to '100'"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'IDLE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "IDLE_TIME", regex:"(100|[1-9][0-9]|[0-9])"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - IDLE_TIME"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-171|3.1.11,800-53|AC-12,CAT|III,CCI|CCI-001096,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'IDLE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "IDLE_TIME", regex:"^(100|[1-9][0-9]|[0-9]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - IDLE_TIME"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-171|3.1.11,800-53|AC-12,CAT|III,CCI|CCI-001096,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'IDLE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "IDLE_TIME", regex:"^(100|[1-9][0-9]|[0-9])$"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'CPU_PER_SESSION' Is Less than or Equal to '100'"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'CPU_PER_SESSION';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "CPU_PER_SESSION", regex:"(100|[1-9][0-9]|[0-9])"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - CPU_PER_SESSION"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-53|SC-6,CAT|III,CCI|CCI-001096,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),ITSG-33|SC-6,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'CPU_PER_SESSION';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "CPU_PER_SESSION", regex:"^(100|[1-9][0-9]|[0-9]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - CPU_PER_SESSION"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-53|SC-6,CAT|III,CCI|CCI-001096,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),ITSG-33|SC-6,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'CPU_PER_SESSION';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "CPU_PER_SESSION", regex:"^(100|[1-9][0-9]|[0-9])$"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'CPU_PER_CALL' Is Less than or Equal to '100'"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'CPU_PER_CALL';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "CPU_PER_CALL", regex:"(100|[1-9][0-9]|[0-9])"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - CPU_PER_CALL"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-53|SC-6,CAT|III,CCI|CCI-001096,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),ITSG-33|SC-6,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'CPU_PER_CALL';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "CPU_PER_CALL", regex:"^(100|[1-9][0-9]|[0-9]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - CPU_PER_CALL"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-53|SC-6,CAT|III,CCI|CCI-001096,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),ITSG-33|SC-6,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'CPU_PER_CALL';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "CPU_PER_CALL", regex:"^(100|[1-9][0-9]|[0-9])$"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'CONNECT_TIME' Is Less than or Equal to '600'"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'CONNECT_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "CONNECT_TIME", regex:"(600|[1-5][0-9][0-9]|[1-9][0-9]|[0-9])"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - CONNECT_TIME"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-171|3.1.11,800-53|AC-12,CAT|III,CCI|CCI-001096,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'CONNECT_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "CONNECT_TIME", regex:"^(600|[1-5][0-9][0-9]|[1-9][0-9]|[0-9]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C3-019400 - The DBMS must limit the use of resources by priority and not impede the host from servicing processes designated as a higher-priority - CONNECT_TIME"
          info        : "Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

The DBMS is often running queries for multiple users. If lower-priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher-priority processes."
          solution    : "Implement measures to restrict the usage of resources by priority.
- - - - -
To implement security at the user level, assign users a profile that limits their resources:

Example

$ sqlplus connect as sysdba

CREATE PROFILE app_user LIMIT
SESSIONS_PER_USER    1
IDLE_TIME           30
CPU_PER_SESSION    100
CPU_PER_CALL       100
CONNECT_TIME       600
IDLE_TIME          100;
CONNECT_TIME 600;


QoS Management Support for Oracle RAC Enterprise Edition

Oracle Database Quality of Service (QoS) Management allows system administrators to directly measure application service levels hosted on Oracle RAC Enterprise Edition databases. Using a policy-based architecture, QoS Management correlates accurate run-time performance and resource metrics based on user-defined workload classes. QoS Management then presents them in an integrated Enterprise Manager dashboard to review real-time performance of consolidated applications.  In conjunction with Cluster Health Monitor (CHM), QoS Management's memory guard detects nodes that are at risk of failure due to the overcommitment of memory. QoS Management responds by automatically preventing new connections thus preserving existing workloads, and restores connectivity once sufficient memory is available again.

Enable Oracle QoS Management at the Database Level
1. Log in to Oracle Enterprise Manager Database Control as the database administrator. If not selected, click the Database tab.

2. Go to the Availability page.

3. Under the heading Services, select Enable/Disable Quality Of Service Management. Enter the Cluster and Database credentials, then click Login.

The Enable/Disable QoS Management screen is displayed.

4. You are prompted to enter a password for the APPQOSSYS user. Choose a password and enter it in the Password and Confirm Password fields, click OK.
     When you provide a password, the following actions take place:
     The APPQOSSYS account, which enables the Oracle Database QoS Management server to connect to the database, is unlocked and the new password is set.

     The credentials are written to an Oracle Wallet stored in the Oracle Cluster Repository to enable Oracle Database QoS Management to log in to the database.

  APPQOS_PLAN is set as the active Oracle Database Resource Manager plan so that Oracle Database QoS Management can adjust CPU access for Performance
     Classes.  By default, the APPQOS_PLAN is replaced during the Oracle Scheduler maintenance window. Oracle recommends that you use the APPQOS_PLAN as the plan during those daily windows because this plan incorporates the consumer groups from the DEFAULT_MAINTENANCE_PLAN plan."
          reference   : "800-171|3.1.11,800-53|AC-12,CAT|III,CCI|CCI-001096,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8,Rule-ID|SV-66441r1_rule,STIG-ID|O112-C3-019400,Vuln-ID|V-52225"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT a.username,  a.profile,  b.resource_name,  b.limit FROM dba_users a,  dba_profiles b WHERE b.resource_type IS NOT NULL AND a.profile = b.profile AND b.resource_name = 'CONNECT_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", regex:".+", "CONNECT_TIME", regex:"^(600|[1-5][0-9][0-9]|[1-9][0-9]|[0-9])$"
        </custom_item>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-C2-011400 - The DBMS must enforce requirements for remote connections to the information system."
      info        : "Applications that provide remote access to information systems must be able to enforce remote access policy requirements or work in conjunction with enterprise tools designed to enforce policy requirements. Examples of policy requirements include, but are not limited to, authorizing remote access to the information system, limiting access based on authentication credentials, and monitoring for unauthorized access.

If databases allowing remote connections do not enforce requirements for remote access, an attacker may gain access to the database and may, through the database, gain access to other components of the information system.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS settings to ensure access control and auditing requirements for remote connections are enforced by the DBMS."
      reference   : "CAT|II,CCI|CCI-000066,Rule-ID|SV-66445r2_rule,STIG-ID|O112-C2-011400,Vuln-ID|V-52229"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011500 - Default demonstration and sample databases, database objects, and applications must be removed - 'BI User'"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system."
      solution    : "Remove any demonstration and sample databases, database applications, objects, and files from the DBMS.

To remove an account and all objects owned by that account (using BI as an example):
DROP USER BI CASCADE;

To remove objects without removing their owner, use the appropriate DROP statement (DROP TABLE, DROP VIEW, etc.)."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66447r3_rule,STIG-ID|O112-C2-011500,SWIFT-CSCv1|2.3,Vuln-ID|V-52231"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT DISTINCT(username) FROM dba_users WHERE username = 'BI';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011500 - Default demonstration and sample databases, database objects, and applications must be removed - 'HR User'"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system."
      solution    : "Remove any demonstration and sample databases, database applications, objects, and files from the DBMS.

To remove an account and all objects owned by that account (using BI as an example):
DROP USER BI CASCADE;

To remove objects without removing their owner, use the appropriate DROP statement (DROP TABLE, DROP VIEW, etc.)."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66447r3_rule,STIG-ID|O112-C2-011500,SWIFT-CSCv1|2.3,Vuln-ID|V-52231"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT DISTINCT(username) FROM dba_users WHERE username = 'HR';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011500 - Default demonstration and sample databases, database objects, and applications must be removed - 'OE User'"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system."
      solution    : "Remove any demonstration and sample databases, database applications, objects, and files from the DBMS.

To remove an account and all objects owned by that account (using BI as an example):
DROP USER BI CASCADE;

To remove objects without removing their owner, use the appropriate DROP statement (DROP TABLE, DROP VIEW, etc.)."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66447r3_rule,STIG-ID|O112-C2-011500,SWIFT-CSCv1|2.3,Vuln-ID|V-52231"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT DISTINCT(username) FROM dba_users WHERE username = 'OE';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011500 - Default demonstration and sample databases, database objects, and applications must be removed - 'PM User'"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system."
      solution    : "Remove any demonstration and sample databases, database applications, objects, and files from the DBMS.

To remove an account and all objects owned by that account (using BI as an example):
DROP USER BI CASCADE;

To remove objects without removing their owner, use the appropriate DROP statement (DROP TABLE, DROP VIEW, etc.)."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66447r3_rule,STIG-ID|O112-C2-011500,SWIFT-CSCv1|2.3,Vuln-ID|V-52231"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT DISTINCT(username) FROM dba_users WHERE username = 'PM';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011500 - Default demonstration and sample databases, database objects, and applications must be removed - 'IX User'"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system."
      solution    : "Remove any demonstration and sample databases, database applications, objects, and files from the DBMS.

To remove an account and all objects owned by that account (using BI as an example):
DROP USER BI CASCADE;

To remove objects without removing their owner, use the appropriate DROP statement (DROP TABLE, DROP VIEW, etc.)."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66447r3_rule,STIG-ID|O112-C2-011500,SWIFT-CSCv1|2.3,Vuln-ID|V-52231"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT DISTINCT(username) FROM dba_users WHERE username = 'IX';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011500 - Default demonstration and sample databases, database objects, and applications must be removed - 'SH User'"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system."
      solution    : "Remove any demonstration and sample databases, database applications, objects, and files from the DBMS.

To remove an account and all objects owned by that account (using BI as an example):
DROP USER BI CASCADE;

To remove objects without removing their owner, use the appropriate DROP statement (DROP TABLE, DROP VIEW, etc.)."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66447r3_rule,STIG-ID|O112-C2-011500,SWIFT-CSCv1|2.3,Vuln-ID|V-52231"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT DISTINCT(username) FROM dba_users WHERE username = 'SH';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011500 - Default demonstration and sample databases, database objects, and applications must be removed - 'SCOTT User'"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system."
      solution    : "Remove any demonstration and sample databases, database applications, objects, and files from the DBMS.

To remove an account and all objects owned by that account (using BI as an example):
DROP USER BI CASCADE;

To remove objects without removing their owner, use the appropriate DROP statement (DROP TABLE, DROP VIEW, etc.)."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66447r3_rule,STIG-ID|O112-C2-011500,SWIFT-CSCv1|2.3,Vuln-ID|V-52231"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT DISTINCT(username) FROM dba_users WHERE username = 'SCOTT';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011600 - Unused database components, DBMS software, and database objects must be removed."
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system.

Unused and unnecessary DBMS components increase the attack vector for the DBMS by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "If any components are required for operation of applications that will be accessing the DBMS, include them in the system documentation.

You cannot remove components, either via Database Configuration Assistant (DBCA) or manually once the database has been created.

You can, however, use DBCA to create a database and remove components during the creation process, before you create the database.

When using DBCA to create a custom database, select Database Template = Custom/Database Components.
Components that can be selected or de-selected are:

Oracle Text,
Oracle OLAP,
Oracle Spatial,
Oracle Label Security,
Sample Schemas,
Enterprise Manager Repository,
Oracle Warehouse Builder,
Oracle Database Vault"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66449r3_rule,STIG-ID|O112-C2-011600,SWIFT-CSCv1|2.3,Vuln-ID|V-52233"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT comp_id, comp_name, version, status from dba_registry where comp_id not in ('CATALOG','CATPROC');"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL, NULL
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011700 - Unused database components that are integrated in the DBMS and cannot be uninstalled must be disabled."
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Unused, unnecessary DBMS components increase the attack surface of the DBMS by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "In the system documentation list the integrated components required for operation of applications that will be accessing the DBMS.

For Oracle Database 11g Release 2, only the following components can be enabled/disabled:

Oracle Data Mining (dm)
Oracle Database Vault (dv)
Oracle OLAP (olap)
Oracle Label Security (lbac)
Oracle Database Extensions for .NET (ode_net_2)
Oracle Partitioning (partitioning)
Real Application Testing (rat)

Use the chopt utility (an Oracle-supplied operating system command that resides in the <Oracle Home path>/bin directory) to disable each option that should not be available.  The command format is

            chopt <enable|disable> <option>

where <option> is any of the abbreviatons in parentheses in the list above.  For example, to disable Real Application Testing, issue the following command at an OS prompt:

            chopt disable rat

Restart the Oracle service.

(See My Oracle Support Document 948061.1 for more on the chopt command.)"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66451r3_rule,STIG-ID|O112-C2-011700,SWIFT-CSCv1|2.3,Vuln-ID|V-52235"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT parameter, value from v$option where parameter in ('Data Mining','Oracle Database Vault','OLAP','Oracle Label Security','Oracle Database Extensions for .NET','Partitioning','Real Application Testing');"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-011800 - Use of external executables must be  authorized."
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

DBMS's may spawn additional external processes to execute procedures that are defined in the DBMS, but stored in external host files (external procedures). The spawned process used to execute the external procedure may operate within a different OS security context than the DBMS and provide unauthorized access to the host system."
      solution    : "Disable use of or remove any external application executable object definitions that are not authorized.

Disable access to operating system commands from within the DBMS, or document the need for this capability."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66453r4_rule,STIG-ID|O112-C2-011800,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52237"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT owner, object_name, subobject_name FROM dba_objects WHERE owner NOT IN ( 'ANONYMOUS', 'APEX_040200', 'APEX_PUBLIC_USER', 'APPQOSSYS', 'BI', 'CTXSYS', 'DBSNMP', 'DBVAULTMGR', 'DBVAULTOWNER', 'DIP', 'DVF', 'DVSYS', 'EXFSYS', 'FLOWS_FILES', 'HR', 'IX', 'LBACSYS', 'MDDATA', 'MDSYS', 'MGMT_VIEW', 'OE', 'OLAPSYS', 'ORACLE_OCM', 'ORDDATA', 'ORDPLUGINS', 'ORDSYS', 'OUTLN', 'OWBSYS', 'OWBSYS_AUDIT', 'PM', 'SCOTT', 'SH', 'SI_INFORMTN_SCHEMA', 'SPATIAL_CSW_ADMIN_USR', 'SPATIAL_WFS_ADMIN_USR', 'SYS', 'SYSMAN', 'SYSTEM', 'WMSYS', 'XDB', 'XS$NULL','AUDSYS','GSMADMIN_INTERNAL','OJVMSYS','PUBLIC' ) ORDER BY 1, 2, 3;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-012000 - Recovery procedures and technical system features must exist to ensure recovery is done in a secure and verifiable manner."
      info        : "Application recovery and reconstitution constitutes executing an information system contingency plan comprised of activities that restore essential missions and business functions.

Database management systems and transaction-based processing systems are examples of information systems that are transaction-based. Transaction rollback and transaction journaling are examples of mechanisms supporting transaction recovery.

A DBMS may be vulnerable to use of compromised data or other critical files during recovery. Use of compromised files could introduce maliciously altered application code, relaxed security settings or loss of data integrity. Where available, DBMS mechanisms to ensure use of only trusted files can help protect the database from this type of compromise during DBMS recovery.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement DBMS recovery procedures and employ technical system features to specify trusted files during DBMS recovery.  Test the solution and review the site-specific criteria to ensure that the backup and recovery process uses trusted files.

Ensure circumstances that can inhibit a trusted recovery are documented and appropriate mitigating procedures have been put in place.

Oracle recommends using RMAN Backup and encrypting backup files.  With encrypted files stored on a mount point with limited access, the integrity of the files can be trusted.

- - - - -

Notes on Oracle Backup and Recovery Solutions

When implementing a backup and recovery strategy, you have the following solutions available:

--  Recovery Manager (RMAN)
Recovery Manager is fully integrated with the Oracle database to perform a range of backup and recovery activities, including maintaining an RMAN repository of historical data about backups. You can access RMAN through the command line or through Oracle Enterprise Manager.

--  User-managed backup and recovery
In this solution, you perform backup and recovery with a mixture of host operating system commands and SQL*Plus recovery commands. You are responsible for determining all aspects of when and how backups and recovery are done.

--  Media management
If you do not want to use RMAN with an encrypted backup, consider configuring RMAN to make backups to a media manager.  On most platforms, to back up to and restore from sequential media such as tape, you
must integrate a media manager with your Oracle database. You can use Oracle Secure Backup, which supports both database and file system backups to tape, as your media manager. See Oracle Secure Backup Administrator's Guide to learn how to set up RMAN for use specifically with Oracle Secure Backup.

These solutions are supported by Oracle and are fully documented, but RMAN is the preferred solution for database backup and recovery. RMAN provides a common interface for backup tasks across different host operating systems, and offers several backup techniques not available through user-managed methods.

--  Incremental backups:
An incremental backup stores only blocks changed since a previous backup.  Thus, they provide more compact backups and faster recovery, thereby reducing the need to apply redo during data file media recovery. If you enable block change tracking, then you can improve performance by avoiding full scans of every input data file. You use the BACKUP INCREMENTAL command to perform incremental backups.

--  Block media recovery
You can repair a data file with only a small number of corrupt data blocks without taking it offline or restoring it from backup. You use the RECOVER BLOCK command to perform block media recovery.

--  Binary compression
A binary compression mechanism integrated into Oracle Database reduces the size of backups.

--  Encrypted backups
--  RMAN uses backup encryption capabilities integrated into Oracle Database to store backup sets in an encrypted format. To create encrypted backups on disk, the database must use the Advanced Security Option. To create encrypted backups directly on tape, RMAN must use the Oracle Secure Backup SBT interface but does not require the Advanced Security Option.

--  Automated database duplication
Easily creates a copy of your database, supporting various storage configurations, including direct duplication between ASM databases.

--  Cross-platform data conversion
Whether you use RMAN or user-managed methods, you can supplement physical backups with logical backups of schema objects made with Data Pump Export utility. You can later use Data Pump Import to re-create data after restore and recovery.  Logical backups are mostly beyond the scope of the backup and recovery documentation."
      reference   : "CAT|II,CCI|CCI-000553,Rule-ID|SV-66457r1_rule,STIG-ID|O112-C2-012000,Vuln-ID|V-52241"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-012200 - Oracle must back up user-level information per a defined frequency."
      info        : "Information system backup is a critical step in maintaining data assurance and availability.

User-level information is data generated by information system and/or application users. In order to assure availability of this data in the event of a system failure, DoD organizations are required to ensure user-generated data is backed up at a defined frequency. This includes data stored on file systems, within databases or within any other storage media.

Applications performing backups must be capable of backing up user-level information per the DoD-defined frequency.

Databases that do not backup information regularly risk the loss of that information in the event of a system failure. Most databases contain functionality to allow regular backups; it is important that this functionality is enabled and configured correctly to prevent data loss.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure the Oracle DBMS to back up user-level data on a defined frequency."
      reference   : "CAT|II,CCI|CCI-000535,Rule-ID|SV-66461r2_rule,STIG-ID|O112-C2-012200,Vuln-ID|V-52245"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-012300 - Database backup procedures must be defined, documented, and implemented."
      info        : "Information system backup is a critical step in maintaining data assurance and availability.

User-level information is data generated by information system and/or application users. In order to assure availability of this data in the event of a system failure, DoD organizations are required to ensure user-generated data is backed up at a defined frequency. This includes data stored on file systems, within databases or within any other storage media.

Applications performing backups must be capable of backing up user-level information per the DoD-defined frequency.

Database backups provide the required means to restore databases after compromise or loss. Backups help reduce the vulnerability to unauthorized access or hardware loss.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document, and implement database backup procedures."
      reference   : "CAT|II,CCI|CCI-000535,Rule-ID|SV-66463r1_rule,STIG-ID|O112-C2-012300,Vuln-ID|V-52247"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-012400 - Database recovery procedures must be developed, documented, implemented, and periodically tested."
      info        : "Information system backup is a critical step in maintaining data assurance and availability.

User-level information is data generated by information system and/or application users. In order to assure availability of this data in the event of a system failure, DoD organizations are required to ensure user-generated data is backed up at a defined frequency.  This includes data stored on file systems, within databases or within any other storage media.

Applications performing backups must be capable of backing up user-level information per the DoD-defined frequency.

Problems with backup procedures or backup media may not be discovered until after a recovery is needed. Testing and verification of procedures provides the opportunity to discover oversights, conflicts, or other issues in the backup procedures or use of media designed to be used.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document, and implement testing and verification procedures for database backup and recovery. Include requirements for documenting database backup and recovery testing and verification activities in the procedures."
      reference   : "CAT|II,CCI|CCI-000535,Rule-ID|SV-66465r1_rule,STIG-ID|O112-C2-012400,Vuln-ID|V-52249"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-012500 - DBMS backup and restoration files must be protected from unauthorized access."
      info        : "Information system backup is a critical step in maintaining data assurance and availability.

User-level information is data generated by information system and/or application users. In order to assure availability of this data in the event of a system failure, DoD organizations are required to ensure user-generated data is backed up at a defined frequency. This includes data stored on file systems, within databases or within any other storage media.

Applications performing backups must be capable of backing up user-level information per the DoD-defined frequency.

Lost or compromised DBMS backup and restoration files may lead to not only the loss of data, but also the unauthorized access to sensitive data. Backup files need the same protections against unauthorized access when stored on backup media as when online and actively in use by the database system. In addition, the backup media needs to be protected against physical loss. Most DBMS's maintain online copies of critical control files to provide transparent or easy recovery from hard disk loss or other interruptions to database operation.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement protection for backup and restoration files. Document personnel and the level of access authorized for each to the backup and restoration files in the system documentation."
      reference   : "CAT|II,CCI|CCI-000535,Rule-ID|SV-66467r1_rule,STIG-ID|O112-C2-012500,Vuln-ID|V-52251"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-012600 - DBMS must conduct  backups of system-level information per organization-defined frequency that is consistent with recovery time and recovery point objectives."
      info        : "Information system backup is a critical step in maintaining data assurance and availability.

System-level information includes:  system-state information, operating system and application software, and licenses.

Backups shall be consistent with organizational recovery time and recovery point objectives.

Databases that do not back up information regularly risk the loss of that information in the event of a system failure. Most databases contain functionality to allow regular backups; it is important that this functionality is enabled and configured correctly to prevent data loss.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Utilize DBMS, OS or third-party product(s), to meet the requirement of backing up system data according to the organization-defined frequency."
      reference   : "CAT|II,CCI|CCI-000537,Rule-ID|SV-66469r1_rule,STIG-ID|O112-C2-012600,Vuln-ID|V-52253"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-013300 - The DBMS must ensure users are authenticated with an individual authenticator prior to using a group authenticator."
      info        : "To assure individual accountability and prevent unauthorized access, application users (and any processes acting on behalf of users) must be individually identified and authenticated.

A group authenticator is a generic account used by multiple individuals. Use of a group authenticator alone does not uniquely identify individual users. An example of a group authenticator is the UNIX OS 'root' user account, a Windows 'administrator' account, an 'SA' account, or a 'helpdesk' account.

For example, the UNIX and Windows operating systems offer a 'switch user' capability allowing users to authenticate with their individual credentials and, when needed, 'switch' to the administrator role. This method provides for unique individual authentication prior to using a group authenticator.

Some applications may not have the need to provide a group authenticator; this is considered a matter of application design. In those instances where the application design includes the use of a group authenticator, this requirement will apply.

There may also be instances when specific user actions need to be performed on the information system without unique user identification or authentication. An example of this type of access is a web server which contains publicly releasable information. These types of accesses are allowed but must be explicitly identified and documented by the organization.

When group accounts are utilized without another means of identifying individual users, users may deny having performed a particular action.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require individual authentication prior to authentication for group account access.

If appropriate, install Oracle Access Manager to provide multifactor authentication of applications front-ending Oracle Databases and using group accounts.  After installation, use x509 Authentication modules provided out of the box."
      reference   : "CAT|II,CCI|CCI-000770,Rule-ID|SV-66479r1_rule,STIG-ID|O112-C2-013300,Vuln-ID|V-52263"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-013800 - The DBMS must disable user accounts after 35 days of inactivity."
      info        : "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

To meet password policy requirements, passwords need to be changed at specific policy-based intervals.

If the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements.

Unused or expired DBMS accounts provide a means for undetected, unauthorized access to the database.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
      solution    : "For accounts managed by Oracle, determine if it is practical and acceptable to require a password change every 35 days or fewer, rather than the standard 60 days (as specified in SRG-APP-000174-DB-000080).  If it is, issue the statement:

ALTER PROFILE PPPPPP LIMIT PASSWORD_LIFE_TIME 35;
(See the Oracle-provided $ORACLE_HOME/rdbms/admin/secconf.sql script for examples.)

If password changes every 35 days or fewer are unacceptable or impractical, implement an alternative method, such as a stored procedure run daily, to disable accounts inactive for more than 35 days."
      reference   : "800-171|3.5.10,800-171|3.5.7,800-171|3.5.8,800-171|3.5.9,800-53|IA-5(1),CAT|II,CCI|CCI-000017,CCI|CCI-000795,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,Rule-ID|SV-66485r2_rule,STIG-ID|O112-C2-013800,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2,Vuln-ID|V-52269"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT profile, resource_name, limit FROM dba_profiles WHERE resource_name = 'PASSWORD_LIFE_TIME';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : regex:".+","PASSWORD_LIFE_TIME", regex:"([1-9]|[1-2][0-9]|3[0-5])"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-013900 - The DBMS must support organizational requirements to enforce minimum password length."
      info        : "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

To meet password policy requirements, passwords need to be changed at specific policy-based intervals.

If the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements.

Weak passwords are a primary target for attack to gain unauthorized access to databases and other systems. Where username/password is used for identification and authentication to the database, requiring the use of strong passwords can help prevent simple and more sophisticated methods for guessing at passwords.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  Develop, test and implement a password verification function that enforces DoD requirements.

(Oracle supplies a sample function called verify_function_11G, in the script file
<oracle_home>/RDBMS/ADMIN/utlpwdmg.sql.  This can be used as the starting point for a customized function.)"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CAT|II,CCI|CCI-000205,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,Rule-ID|SV-66487r1_rule,STIG-ID|O112-C2-013900,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-52271"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT PROFILE, RESOURCE_NAME, RESOURCE_TYPE, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' ORDER BY PROFILE;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "Manual Review Required", "Manual Review Required", "Manual Review Required", "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'PASSWORD_REUSE_MAX' Is Greater than or Equal to '5'"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'PASSWORD_REUSE_MAX';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_REUSE_MAX", regex:"^([5-9]|[1-9][0-9]+)$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-014000 - The DBMS must support organizational requirements to prohibit password reuse for the organization-defined number of generations - PASSWORD_REUSE_MAX >= 5"
          info        : "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

To meet password policy requirements, passwords need to be changed at specific policy-based intervals.

If the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements.

Password reuse restrictions protect against bypass of password expiration requirements and help protect accounts from password guessing attempts.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  For each profile, set the PASSWORD_REUSE_MAX to enforce the DoD-defined minimum number of password changes before a password may be repeated (5 or greater).

PASSWORD_REUSE_MAX is effective if and only if PASSWORD_REUSE_TIME is specified, so ensure also that it has a meaningful value.  Since the minimum password lifetime is 1 day, the smallest meaningful value is the same as the PASSWORD_REUSE_MAX value.

Using PPPPPP as an example, the statement to do this is:
ALTER PROFILE PPPPPP LIMIT PASSWORD_REUSE_MAX 5 PASSWORD_REUSE_TIME 5;"
          reference   : "800-171|3.5.8,800-53|IA-5(1),CAT|II,CCI|CCI-000200,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM22c,PCI-DSSv3.1|8.2.5,PCI-DSSv3.2|8.2.5,Rule-ID|SV-66489r2_rule,STIG-ID|O112-C2-014000,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3,Vuln-ID|V-52273"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_REUSE_MAX';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_REUSE_MAX", regex:"^([5-9]|[1-9][0-9]+|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-014000 - The DBMS must support organizational requirements to prohibit password reuse for the organization-defined number of generations - PASSWORD_REUSE_MAX >= 5"
          info        : "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

To meet password policy requirements, passwords need to be changed at specific policy-based intervals.

If the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements.

Password reuse restrictions protect against bypass of password expiration requirements and help protect accounts from password guessing attempts.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  For each profile, set the PASSWORD_REUSE_MAX to enforce the DoD-defined minimum number of password changes before a password may be repeated (5 or greater).

PASSWORD_REUSE_MAX is effective if and only if PASSWORD_REUSE_TIME is specified, so ensure also that it has a meaningful value.  Since the minimum password lifetime is 1 day, the smallest meaningful value is the same as the PASSWORD_REUSE_MAX value.

Using PPPPPP as an example, the statement to do this is:
ALTER PROFILE PPPPPP LIMIT PASSWORD_REUSE_MAX 5 PASSWORD_REUSE_TIME 5;"
          reference   : "800-171|3.5.8,800-53|IA-5(1),CAT|II,CCI|CCI-000200,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM22c,PCI-DSSv3.1|8.2.5,PCI-DSSv3.2|8.2.5,Rule-ID|SV-66489r2_rule,STIG-ID|O112-C2-014000,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3,Vuln-ID|V-52273"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_REUSE_MAX';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", "PASSWORD_REUSE_MAX", regex:"^([5-9]|[1-9][0-9]+)$"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'PASSWORD_REUSE_TIME' Is Greater than or Equal to '5'"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'PASSWORD_REUSE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_REUSE_TIME", regex:"^([5-9]|[1-9][0-9]+)$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-014000 - The DBMS must support organizational requirements to prohibit password reuse for the organization-defined number of generations - PASSWORD_REUSE_TIME >= 5"
          info        : "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

To meet password policy requirements, passwords need to be changed at specific policy-based intervals.

If the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements.

Password reuse restrictions protect against bypass of password expiration requirements and help protect accounts from password guessing attempts.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  For each profile, set the PASSWORD_REUSE_MAX to enforce the DoD-defined minimum number of password changes before a password may be repeated (5 or greater).

PASSWORD_REUSE_MAX is effective if and only if PASSWORD_REUSE_TIME is specified, so ensure also that it has a meaningful value.  Since the minimum password lifetime is 1 day, the smallest meaningful value is the same as the PASSWORD_REUSE_MAX value.

Using PPPPPP as an example, the statement to do this is:
ALTER PROFILE PPPPPP LIMIT PASSWORD_REUSE_MAX 5 PASSWORD_REUSE_TIME 5;"
          reference   : "800-171|3.5.8,800-53|IA-5(1),CAT|II,CCI|CCI-000200,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM22c,PCI-DSSv3.1|8.2.5,PCI-DSSv3.2|8.2.5,Rule-ID|SV-66489r2_rule,STIG-ID|O112-C2-014000,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3,Vuln-ID|V-52273"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_REUSE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_REUSE_TIME", regex:"^([5-9]|[1-9][0-9]+|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-014000 - The DBMS must support organizational requirements to prohibit password reuse for the organization-defined number of generations - PASSWORD_REUSE_TIME >= 5"
          info        : "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

To meet password policy requirements, passwords need to be changed at specific policy-based intervals.

If the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements.

Password reuse restrictions protect against bypass of password expiration requirements and help protect accounts from password guessing attempts.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  For each profile, set the PASSWORD_REUSE_MAX to enforce the DoD-defined minimum number of password changes before a password may be repeated (5 or greater).

PASSWORD_REUSE_MAX is effective if and only if PASSWORD_REUSE_TIME is specified, so ensure also that it has a meaningful value.  Since the minimum password lifetime is 1 day, the smallest meaningful value is the same as the PASSWORD_REUSE_MAX value.

Using PPPPPP as an example, the statement to do this is:
ALTER PROFILE PPPPPP LIMIT PASSWORD_REUSE_MAX 5 PASSWORD_REUSE_TIME 5;"
          reference   : "800-171|3.5.8,800-53|IA-5(1),CAT|II,CCI|CCI-000200,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM22c,PCI-DSSv3.1|8.2.5,PCI-DSSv3.2|8.2.5,Rule-ID|SV-66489r2_rule,STIG-ID|O112-C2-014000,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3,Vuln-ID|V-52273"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_REUSE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex:".+", "PASSWORD_REUSE_TIME", regex:"^([5-9]|[1-9][0-9]+)$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-014100 - The DBMS must support organizational requirements to enforce password complexity by the number of upper-case characters used."
      info        : "Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised.

Use of a complex password helps to increase the time and resources required to compromise the password.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
      solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  Develop, test and implement a password verification function that enforces DoD requirements.

(Oracle supplies a sample function called verify_function_11G, in the script file
<oracle_home>/RDBMS/ADMIN/utlpwdmg.sql.  This can be used as the starting point for a customized function.)"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CAT|II,CCI|CCI-000192,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,Rule-ID|SV-66491r1_rule,STIG-ID|O112-C2-014100,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-52275"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-014200 - The DBMS must support organizational requirements to enforce password complexity by the number of lower-case characters used."
      info        : "Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised.

Use of a complex password helps to increase the time and resources required to compromise the password.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
      solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  Develop, test and implement a password verification function that enforces DoD requirements.

(Oracle supplies a sample function called verify_function_11G, in the script file
<oracle_home>/RDBMS/ADMIN/utlpwdmg.sql.  This can be used as the starting point for a customized function.)"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CAT|II,CCI|CCI-000193,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,Rule-ID|SV-66493r1_rule,STIG-ID|O112-C2-014200,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-52277"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-014300 - The DBMS must support organizational requirements to enforce password complexity by the number of numeric characters used."
      info        : "Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised.

Use of a complex password helps to increase the time and resources required to compromise the password.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
      solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  Develop, test and implement a password verification function that enforces DoD requirements.

(Oracle supplies a sample function called verify_function_11G, in the script file
<oracle_home>/RDBMS/ADMIN/utlpwdmg.sql.  This can be used as the starting point for a customized function.)"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CAT|II,CCI|CCI-000194,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,Rule-ID|SV-66495r1_rule,STIG-ID|O112-C2-014300,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-52279"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-014400 - The DBMS must support organizational requirements to enforce password complexity by the number of special characters used."
      info        : "Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised.

Use of a complex password helps to increase the time and resources required to compromise the password.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
      solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If any user accounts are managed by Oracle:  Develop, test and implement a password verification function that enforces DoD requirements.

(Oracle supplies a sample function called verify_function_11G, in the script file
<oracle_home>/RDBMS/ADMIN/utlpwdmg.sql.  This can be used as the starting point for a customized function.)"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CAT|II,CCI|CCI-001619,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,Rule-ID|SV-66497r1_rule,STIG-ID|O112-C2-014400,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-52281"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-014500 - The DBMS must support organizational requirements to enforce the number of characters that get changed when passwords are changed."
      info        : "Passwords need to be changed at specific policy-based intervals.

If the information system or application allows the user to consecutively reuse extensive portions of their password when they change their password, the end result is a password that has not had enough elements changed to meet the policy requirements.

Changing passwords frequently can thwart password-guessing attempts or re-establish protection of a compromised DBMS account. Minor changes to passwords may not accomplish this since password guessing may be able to continue to build on previous guesses, or the new password may be easily guessed using the old password.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
      solution    : "If any user accounts are managed by Oracle:  Develop, test and implement a password verification function that enforces DoD requirements.

(Oracle supplies a sample function called verify_function_11G, in the script file
<oracle_home>/RDBMS/ADMIN/utlpwdmg.sql.  This can be used as the starting point for a customized function.)"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CAT|II,CCI|CCI-000195,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,Rule-ID|SV-66499r2_rule,STIG-ID|O112-C2-014500,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-52283"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-014900 - Procedures for establishing temporary passwords that meet DoD password requirements for new accounts must be defined, documented, and implemented."
      info        : "Password maximum lifetime is  the maximum period of time, (typically in days) a user's password may be in effect before the user is forced to change it.

Passwords need to be changed at specific policy-based intervals as per policy. Any password, no matter how complex, can eventually be cracked.

One method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised.

New accounts authenticated by passwords that are created without a password or with an easily guessed password are vulnerable to unauthorized access. Procedures for creating new accounts with passwords should include the required assignment of a temporary password to be modified by the user upon first use.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  With respect to Oracle, this requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement procedures for assigning temporary passwords to user accounts.

Procedures should include instructions to meet current DoD password length and complexity requirements and provide a secure method to relay the temporary password to the user."
      reference   : "CAT|II,CCI|CCI-000199,Rule-ID|SV-66503r1_rule,STIG-ID|O112-C2-014900,Vuln-ID|V-52287"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Check password maximum lifetime restrictions"
          sql_request : "SELECT COUNT(p1.profile) FROM dba_profiles p1, dba_profiles p2, dba_profiles p3, dba_profiles p4 WHERE p1.profile=p2.profile AND p3.profile='DEFAULT' AND p4.profile='DEFAULT' AND p1.resource_name='PASSWORD_LIFE_TIME' AND p2.resource_name='PASSWORD_GRACE_TIME' AND p3.resource_name='PASSWORD_LIFE_TIME' AND p4.resource_name='PASSWORD_GRACE_TIME' AND  TO_CHAR(DECODE(p2.limit, 'UNLIMITED', '999', 'DEFAULT', DECODE(p4.limit, 'UNLIMITED', '999', p4.limit), p2.limit) + DECODE(p1.limit, 'UNLIMITED', '999', 'DEFAULT', DECODE(p3.limit, 'UNLIMITED', '999', p3.limit), p1.limit))>35;"
          sql_types   : POLICY_VARCHAR
          sql_expect  : 0
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-015200 - The DBMS must enforce password maximum lifetime restrictions."
          info        : "Password maximum lifetime is the maximum period of time, (typically in days) a user's password may be in effect before the user is forced to change it.

Passwords need to be changed at specific policy-based intervals as per policy. Any password, no matter how complex, can eventually be cracked.

One method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised.

The 'PASSWORD_LIFE_TIME' parameter defines the number of days a password remains valid. This can, but must not be, set to 'UNLIMITED'. Further, the 'PASSWORD_GRACE_TIME' parameter, if set to 'UNLIMITED', can nullify the 'PASSWORD_LIFE_TIME'. 'PASSWORD_GRACE_TIME' must be set to '0' days (or another small integer).

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible. Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. With respect to Oracle, this requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "For user accounts managed by Oracle: Modify DBMS settings to force users to periodically change their passwords. For example, using PPPPPP to stand for a profile name:
ALTER PROFILE PPPPPP LIMIT PASSWORD_LIFE_TIME 35 PASSWORD_GRACE_TIME 0;
Do this for each profile applied to user accounts.

(Note that although the DoD requirement is for a password change every 60 days, using a value of '35' facilitates the use of 'PASSWORD_LIFE_TIME' as a means of locking accounts inactive for 35 days, as required by SRG-APP-000025-DB-000004. But if '35' is not a practical or acceptable limit for password lifetime, set it to the standard DoD value of '60', and use another method to satisfy SRG-APP-000025-DB-000004.)

Where a password lifetime longer than '60' is needed, document the reasons and obtain ISSO approval."
          reference   : "800-171|3.5.10,800-171|3.5.7,800-171|3.5.8,800-171|3.5.9,800-53|IA-5(1),CAT|II,CCI|CCI-000199,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,Rule-ID|SV-66507r3_rule,STIG-ID|O112-C2-015200,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2,Vuln-ID|V-52291"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT p1.profile, CASE p1.limit WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE CASE p2.limit WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE CASE p3.limit WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE CASE p4.limit WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE TO_CHAR(DECODE(p1.limit, 'DEFAULT', p3.limit, p1.limit) + DECODE(p2.limit, 'DEFAULT', p4.limit, p2.limit)) END END END END effective_life_time FROM dba_profiles p1, dba_profiles p2, dba_profiles p3, dba_profiles p4 WHERE p1.profile=p2.profile AND p3.profile='DEFAULT' AND p4.profile='DEFAULT' AND p1.resource_name='PASSWORD_LIFE_TIME' AND p2.resource_name='PASSWORD_GRACE_TIME' AND p3.resource_name='PASSWORD_LIFE_TIME' AND p4.resource_name='PASSWORD_GRACE_TIME' order by 1;"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : regex: ".*", regex: ".*"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-015200 - The DBMS must enforce password maximum lifetime restrictions."
          info        : "Password maximum lifetime is the maximum period of time, (typically in days) a user's password may be in effect before the user is forced to change it.

Passwords need to be changed at specific policy-based intervals as per policy. Any password, no matter how complex, can eventually be cracked.

One method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised.

The 'PASSWORD_LIFE_TIME' parameter defines the number of days a password remains valid. This can, but must not be, set to 'UNLIMITED'. Further, the 'PASSWORD_GRACE_TIME' parameter, if set to 'UNLIMITED', can nullify the 'PASSWORD_LIFE_TIME'. 'PASSWORD_GRACE_TIME' must be set to '0' days (or another small integer).

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible. Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. With respect to Oracle, this requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "For user accounts managed by Oracle: Modify DBMS settings to force users to periodically change their passwords. For example, using PPPPPP to stand for a profile name:
ALTER PROFILE PPPPPP LIMIT PASSWORD_LIFE_TIME 35 PASSWORD_GRACE_TIME 0;
Do this for each profile applied to user accounts.

(Note that although the DoD requirement is for a password change every 60 days, using a value of '35' facilitates the use of 'PASSWORD_LIFE_TIME' as a means of locking accounts inactive for 35 days, as required by SRG-APP-000025-DB-000004. But if '35' is not a practical or acceptable limit for password lifetime, set it to the standard DoD value of '60', and use another method to satisfy SRG-APP-000025-DB-000004.)

Where a password lifetime longer than '60' is needed, document the reasons and obtain ISSO approval."
          reference   : "800-171|3.5.10,800-171|3.5.7,800-171|3.5.8,800-171|3.5.9,800-53|IA-5(1),CAT|II,CCI|CCI-000199,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,Rule-ID|SV-66507r3_rule,STIG-ID|O112-C2-015200,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2,Vuln-ID|V-52291"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT p1.profile, CASE p1.limit WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE CASE p2.limit WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE CASE p3.limit WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE CASE p4.limit WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE TO_CHAR(DECODE(p1.limit, 'DEFAULT', p3.limit, p1.limit) + DECODE(p2.limit, 'DEFAULT', p4.limit, p2.limit)) END END END END effective_life_time FROM dba_profiles p1, dba_profiles p2, dba_profiles p3, dba_profiles p4 WHERE p1.profile=p2.profile AND p3.profile='DEFAULT' AND p4.profile='DEFAULT' AND p1.resource_name='PASSWORD_LIFE_TIME' AND p2.resource_name='PASSWORD_GRACE_TIME' AND p3.resource_name='PASSWORD_LIFE_TIME' AND p4.resource_name='PASSWORD_GRACE_TIME' order by 1;"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "", "35 or less"
        </custom_item>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-C2-016000 - The DBMS must employ cryptographic mechanisms to protect the integrity and confidentiality of non-local maintenance and diagnostic communications."
      info        : "Non-local maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network.

The act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data.

When applications provide a remote management capability inherent to the application, the application needs to ensure the communication channels used to remotely access the system are adequately protected.  If the communication channel is not adequately protected authentication information, application data, and configuration information could be compromised.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS to utilize cryptographic mechanisms to protect the integrity and confidentiality of non-local maintenance and diagnostic communications."
      reference   : "CAT|II,CCI|CCI-000888,Rule-ID|SV-66515r1_rule,STIG-ID|O112-C2-016000,Vuln-ID|V-52299"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-016100 - The DBMS must employ strong identification and authentication techniques when establishing non-local maintenance and diagnostic sessions."
      info        : "Non-local maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network.

The act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data.

When applications provide a remote management capability inherent to the application, the application needs to ensure the identification and authentication techniques used to remotely access the system are strong enough to protect the system. If the communication channel is not adequately protected, authentication information, application data, and configuration information could be compromised.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS settings to use strong identification and authentication techniques for non-local maintenance and diagnostic sessions."
      reference   : "CAT|II,CCI|CCI-000877,Rule-ID|SV-66517r1_rule,STIG-ID|O112-C2-016100,Vuln-ID|V-52301"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-016300 - Databases employed to write data to portable digital media must use cryptographic mechanisms to protect and restrict access to information on portable digital media."
      info        : "When data is written to portable digital media, such as thumb drives, floppy diskettes, compact disks, magnetic tape, etc., there is risk of data loss.

An organizational assessment of risk guides the selection of media and associated information contained on that media requiring restricted access.

Organizations need to document in policy and procedures the media requiring restricted access, individuals authorized to access the media, and the specific measures taken to restrict access. Fewer protection measures are needed for media containing information determined by the organization to be in the public domain, to be publicly releasable, or to have limited or no adverse impact if accessed by other than authorized personnel.

In these situations, it is assumed the physical access controls where the media resides provide adequate protection. The decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies, and law.

The selection of the cryptographic mechanisms used is based upon maintaining the confidentiality and integrity of the information.

The strength of mechanisms is commensurate with the classification and sensitivity of the information.

When the organization has determined the risk warrants it, data written to portable digital media must be encrypted. When information written to digital media is not encrypted, it can be compromised.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Reconfigure processes that write to portable digital media so that they use cryptographic mechanisms to restrict access and protect the information."
      reference   : "CAT|II,CCI|CCI-001009,Rule-ID|SV-66519r2_rule,STIG-ID|O112-C2-016300,Vuln-ID|V-52303"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-016400 - The DBMS must support organizational requirements to encrypt information stored in the database, and information extracted or derived from the database and stored on digital media - Stored data encrypted"
      info        : "When data is written to digital media, such as hard drives, mobile computers, external/removable hard drives, personal digital assistants, flash/thumb drives, etc., there is risk of data loss and/or compromise.

An organizational assessment of risk guides the selection of media and associated information contained on that media requiring restricted access. Organizations need to document in policy and procedures the media requiring restricted access, individuals authorized to access the media, and the specific measures taken to restrict access.

Fewer protection measures are needed for media containing information determined by the organization to be in the public domain, to be publicly releasable, or to have limited or no adverse impact if accessed by other than authorized personnel. In these situations, it is assumed the physical access controls where the media resides provide adequate protection.

As part of a defense-in-depth strategy, the organization considers routinely encrypting information at rest on selected secondary storage devices. The decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies, and law. The selection of the cryptographic mechanisms used is based upon maintaining the confidentiality and integrity of the information.

The strength of mechanisms is commensurate with the classification and sensitivity of the information.

Information at rest, when not encrypted, is open to compromise from attackers who have gained unauthorized access to the data files.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Deploy Oracle 11.2.0.4 with the January 2014 CPU patch. Configure cryptographic functions to use FIPS 140-2-compliant algorithms and hashing functions.

Configure the DBMS to encrypt data at rest according to the requirements of the organization.

The strength requirements are dependent upon data classification.

For unclassified data, where cryptography is required:
AES 128 for encryption
SHA 256 for hashing

NSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows:

AES 128 for Secret
AES 256 for Top Secret
SHA 256 for Secret
SHA 384 for Top Secret

National Security System is defined as:
(OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications).

There is more information on this topic in the Oracle Database 11.2g Advanced Security Administrator's Guide, which may be found at http://docs.oracle.com/cd/E11882_01/network.112/e40393.pdf

Because of changes in Oracle's licensing policy, it is no longer necessary to purchase Oracle Advanced Security to use network encryption and advanced authentication.

FIPS 140-2 can be downloaded from http://csrc.nist.gov/publications/PubsFIPS.html#140-2"
      reference   : "CAT|II,CCI|CCI-001019,Rule-ID|SV-66521r4_rule,STIG-ID|O112-C2-016400,Vuln-ID|V-52305"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-016400 - The DBMS must support organizational requirements to encrypt information stored in the database, and information extracted or derived from the database and stored on digital media - Version"
      info        : "When data is written to digital media, such as hard drives, mobile computers, external/removable hard drives, personal digital assistants, flash/thumb drives, etc., there is risk of data loss and/or compromise.

An organizational assessment of risk guides the selection of media and associated information contained on that media requiring restricted access. Organizations need to document in policy and procedures the media requiring restricted access, individuals authorized to access the media, and the specific measures taken to restrict access.

Fewer protection measures are needed for media containing information determined by the organization to be in the public domain, to be publicly releasable, or to have limited or no adverse impact if accessed by other than authorized personnel. In these situations, it is assumed the physical access controls where the media resides provide adequate protection.

As part of a defense-in-depth strategy, the organization considers routinely encrypting information at rest on selected secondary storage devices. The decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies, and law. The selection of the cryptographic mechanisms used is based upon maintaining the confidentiality and integrity of the information.

The strength of mechanisms is commensurate with the classification and sensitivity of the information.

Information at rest, when not encrypted, is open to compromise from attackers who have gained unauthorized access to the data files."
      solution    : "Deploy Oracle 11.2.0.4 with the January 2014 CPU patch. Configure cryptographic functions to use FIPS 140-2-compliant algorithms and hashing functions.

Configure the DBMS to encrypt data at rest according to the requirements of the organization.

The strength requirements are dependent upon data classification.

For unclassified data, where cryptography is required:
AES 128 for encryption
SHA 256 for hashing

NSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows:

AES 128 for Secret
AES 256 for Top Secret
SHA 256 for Secret
SHA 384 for Top Secret

National Security System is defined as:
(OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications).

There is more information on this topic in the Oracle Database 11.2g Advanced Security Administrator's Guide, which may be found at http://docs.oracle.com/cd/E11882_01/network.112/e40393.pdf

Because of changes in Oracle's licensing policy, it is no longer necessary to purchase Oracle Advanced Security to use network encryption and advanced authentication.

FIPS 140-2 can be downloaded from http://csrc.nist.gov/publications/PubsFIPS.html#140-2"
      reference   : "800-53|MP-4(1),CAT|II,CCI|CCI-001019,ITSG-33|MP-4(1),NESA|M5.2.3,NESA|T1.4.1,Rule-ID|SV-66521r4_rule,STIG-ID|O112-C2-016400,Vuln-ID|V-52305"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT banner FROM v$version WHERE banner LIKE 'Oracle%';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : regex:"Oracle Database 11.*11.2.0.[4-9].0 - .*"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-016400 - The DBMS must support organizational requirements to encrypt information stored in the database, and information extracted or derived from the database and stored on digital media - Patches"
      info        : "When data is written to digital media, such as hard drives, mobile computers, external/removable hard drives, personal digital assistants, flash/thumb drives, etc., there is risk of data loss and/or compromise.

An organizational assessment of risk guides the selection of media and associated information contained on that media requiring restricted access. Organizations need to document in policy and procedures the media requiring restricted access, individuals authorized to access the media, and the specific measures taken to restrict access.

Fewer protection measures are needed for media containing information determined by the organization to be in the public domain, to be publicly releasable, or to have limited or no adverse impact if accessed by other than authorized personnel. In these situations, it is assumed the physical access controls where the media resides provide adequate protection.

As part of a defense-in-depth strategy, the organization considers routinely encrypting information at rest on selected secondary storage devices. The decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies, and law. The selection of the cryptographic mechanisms used is based upon maintaining the confidentiality and integrity of the information.

The strength of mechanisms is commensurate with the classification and sensitivity of the information.

Information at rest, when not encrypted, is open to compromise from attackers who have gained unauthorized access to the data files.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Deploy Oracle 11.2.0.4 with the January 2014 CPU patch. Configure cryptographic functions to use FIPS 140-2-compliant algorithms and hashing functions.

Configure the DBMS to encrypt data at rest according to the requirements of the organization.

The strength requirements are dependent upon data classification.

For unclassified data, where cryptography is required:
AES 128 for encryption
SHA 256 for hashing

NSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows:

AES 128 for Secret
AES 256 for Top Secret
SHA 256 for Secret
SHA 384 for Top Secret

National Security System is defined as:
(OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications).

There is more information on this topic in the Oracle Database 11.2g Advanced Security Administrator's Guide, which may be found at http://docs.oracle.com/cd/E11882_01/network.112/e40393.pdf

Because of changes in Oracle's licensing policy, it is no longer necessary to purchase Oracle Advanced Security to use network encryption and advanced authentication.

FIPS 140-2 can be downloaded from http://csrc.nist.gov/publications/PubsFIPS.html#140-2"
      reference   : "800-53|MP-4(1),CAT|II,CCI|CCI-001019,ITSG-33|MP-4(1),NESA|M5.2.3,NESA|T1.4.1,Rule-ID|SV-66521r4_rule,STIG-ID|O112-C2-016400,Vuln-ID|V-52305"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT ACTION, NAMESPACE, VERSION, COMMENTS FROM sys.registry$history;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "Manual Review Required", "Manual Review Required", "Manual Review Required", "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'IDLE_TIME' Is Less than or Equal to '15'"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'IDLE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "IDLE_TIME", regex:"^([1-9]|1[0-5])$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-016500 - The DBMS must terminate the network connection associated with a communications session at the end of the session or after 15 minutes of inactivity."
          info        : "Non-local maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network.

The act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data.

When applications provide a remote management capability inherent to the application, the application needs to ensure all sessions and network connections are terminated when non-local maintenance is completed.

When network connections are left open after the database session has closed, the network session is open to session hijacking.

The Oracle Listener inherently meets most of this SRG requirement.  When a user logs off, or times out, or encounters an unrecoverable network fault, the Oracle Listener terminates all sessions and network connections.  The remaining aspect of the requirement, the timeout because of inactivity, is configurable."
          solution    : "Configure DBMS and/or OS settings to disconnect network sessions when database communication sessions have ended or after the DoD-defined period of inactivity.

To configure this in Oracle, modify each relevant profile.  The resource name is IDLE_TIME, which is expressed in minutes.  Using PPPPPP as an example of a profile, set the timeout to 15 minutes with:
ALTER PROFILE PPPPPP LIMIT IDLE_TIME 15;"
          reference   : "800-171|3.1.11,800-53|AC-12,CAT|II,CCI|CCI-001133,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8,Rule-ID|SV-66523r2_rule,STIG-ID|O112-C2-016500,Vuln-ID|V-52307"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'IDLE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "IDLE_TIME", regex:"^([1-9]|1[0-5]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-016500 - The DBMS must terminate the network connection associated with a communications session at the end of the session or after 15 minutes of inactivity."
          info        : "Non-local maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network.

The act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data.

When applications provide a remote management capability inherent to the application, the application needs to ensure all sessions and network connections are terminated when non-local maintenance is completed.

When network connections are left open after the database session has closed, the network session is open to session hijacking.

The Oracle Listener inherently meets most of this SRG requirement.  When a user logs off, or times out, or encounters an unrecoverable network fault, the Oracle Listener terminates all sessions and network connections.  The remaining aspect of the requirement, the timeout because of inactivity, is configurable."
          solution    : "Configure DBMS and/or OS settings to disconnect network sessions when database communication sessions have ended or after the DoD-defined period of inactivity.

To configure this in Oracle, modify each relevant profile.  The resource name is IDLE_TIME, which is expressed in minutes.  Using PPPPPP as an example of a profile, set the timeout to 15 minutes with:
ALTER PROFILE PPPPPP LIMIT IDLE_TIME 15;"
          reference   : "800-171|3.1.11,800-53|AC-12,CAT|II,CCI|CCI-001133,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,PCI-DSSv3.1|12.3.8,PCI-DSSv3.1|8.1.8,PCI-DSSv3.2|12.3.8,PCI-DSSv3.2|8.1.8,Rule-ID|SV-66523r2_rule,STIG-ID|O112-C2-016500,Vuln-ID|V-52307"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'IDLE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "IDLE_TIME", regex:"^([1-9]|1[0-5])$"
        </custom_item>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-C2-016600 - The DBMS must implement required cryptographic protections using cryptographic modules complying with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance."
      info        : "Use of cryptography to provide confidentiality and non-repudiation is not effective unless strong methods are employed. Many earlier encryption methods and modules have been broken and/or overtaken by increasing computing power. The NIST FIPS 140-2 cryptographic standards provide proven methods and strengths to employ cryptography effectively.

Detailed information on the NIST Cryptographic Module Validation Program (CMVP) is available at http://csrc.nist.gov/groups/STM/cmvp/index.html.

Note:  this does not require that all databases be encrypted.  It specifies that if encryption is required, then the implementation of the encryption must satisfy the prevailing standards.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement required cryptographic protections using cryptographic modules complying with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.

Deploy Oracle 11.2.0.4, with the January 2014 CPU patch, or a later version.  Configure cryptographic functions to use FIPS 140-2 compliant algorithms and hashing functions.

The strength requirements are dependent upon data classification.

For unclassified data, where cryptography is required:
AES 128 for encryption
SHA 256 for hashing

NSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows:
AES 128 for Secret
AES 256 for Top Secret
SHA 256 for Secret
SHA 384 for Top Secret

National Security System is defined as:
(OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications).

There is more information on this topic in the Oracle Database 11.2g Advanced Security Administrator's Guide, which may be found at  http://docs.oracle.com/cd/E11882_01/network.112/e40393.pdf.

FIPS 140-2 can be downloaded from http://csrc.nist.gov/publications/PubsFIPS.html#140-2"
      reference   : "CAT|II,CCI|CCI-001144,Rule-ID|SV-66525r2_rule,STIG-ID|O112-C2-016600,Vuln-ID|V-52309"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-016700 - Database data files containing sensitive information must be encrypted."
      info        : "Cryptography is only as strong as the encryption modules/algorithms employed to encrypt the data.

Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data.

Data files that are not encrypted are vulnerable to theft. When data files are not encrypted they can be copied and opened on a separate system. The data can be compromised without the information owner's knowledge that the theft has even taken place.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Obtain and utilize native or third-party NIST-validated FIPS 140-2-compliant cryptography solution for the DBMS.  Configure cryptographic functions to use FIPS 140-2-compliant algorithms and hashing functions.

Deploy Oracle 11.2.0.4 with the January 2014 CPU patch.

The strength requirements are dependent upon data classification.

For unclassified data, where cryptography is required:
AES 128 for encryption
SHA 256 for hashing

NSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows.
AES 128 for Secret
AES 256 for Top Secret
SHA 256 for Secret
SHA 384 for Top Secret

National Security System is defined as:
(OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications).

There is more information on this topic in the Oracle Database 11.2g Advanced Security Administrator's Guide, which may be found at  http://docs.oracle.com/cd/E11882_01/network.112/e40393.pdf

FIPS 140-2 can be downloaded from http://csrc.nist.gov/publications/PubsFIPS.html#140-2"
      reference   : "CAT|II,CCI|CCI-001144,Rule-ID|SV-66527r1_rule,STIG-ID|O112-C2-016700,Vuln-ID|V-52311"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C1-015000 - DBMS default accounts must be assigned custom passwords."
      info        : "Password maximum lifetime is  the maximum period of time, (typically in days) a user's password may be in effect before the user is forced to change it.

Passwords need to be changed at specific policy-based intervals as per policy. Any password, no matter how complex, can eventually be cracked.

One method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised.

DBMS default passwords provide a commonly known and exploited means for unauthorized access to database installations."
      solution    : "Change passwords for DBMS accounts to non-default values. Where necessary, unlock or enable accounts to change the password, and then return the account to disabled or locked status."
      reference   : "800-171|3.5.2,800-53|IA-5,CAT|I,CCI|CCI-000199,CIP|007-6-R5,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(b),CSCv6|5.3,CSF|PR.AC-1,ITSG-33|IA-5,NESA|T5.2.3,NIAv2|NS2,NIAv2|NS39,NIAv2|SS14f,PCI-DSSv3.1|2.1,PCI-DSSv3.2|2.1,Rule-ID|SV-66545r2_rule,STIG-ID|O112-C1-015000,Vuln-ID|V-52329"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT USERNAME FROM SYS.DBA_USERS_WITH_DEFPWD;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'SESSIONS_PER_USER' Is Less than or Equal to organization max"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'SESSIONS_PER_USER';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
# Note: Variable @SESSIONS_PER_USER@ replaced with "10|[1-9]" in field "sql_expect".
          sql_expect  : "DEFAULT", "IDLE_TIME", regex:"(10|[1-9])"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-000100 - The DBMS must limit the number of concurrent sessions for each system account to an organization-defined number of sessions."
          info        : "Application management includes the ability to control the number of users and user sessions utilizing an application. Limiting the number of allowed users, and sessions per user, is helpful in limiting risks related to Denial of Service attacks.

This requirement addresses concurrent session control for a single information system account and does not address concurrent sessions by a single user via multiple system accounts.

Unlimited concurrent connections to the DBMS could allow a successful Denial of Service (DoS) attack by exhausting connection resources.

The organization will need to define the maximum number of concurrent sessions by account type, by account, or a combination thereof.  In deciding on the appropriate number, it is important to take into account the work requirements of the various types of user.  For example, 2 might be an acceptable limit for general users accessing the database via an application; but 10 might be too few for a database administrator using a database management GUI tool, where each query tab and navigation pane may count as a separate session."
          solution    : "Limit concurrent connections for each system account to a number less than or equal to the organization-defined number of sessions using the following SQL.  Create profiles that conform to the DoD requirements.  Assign users to the appropriate profile.

Change the value of SESSIONS_PER_USER (along with the other parameters, where relevant) from UNLIMITED to DoD-compliant, site-specific requirements and then assign users to the profile (the name PPPPP is an example; use a name appropriate to your circumstance):

CREATE PROFILE 'PPPPPP' LIMIT CPU_PER_SESSION UNLIMITED
CPU_PER_CALL UNLIMITED
CONNECT_TIME UNLIMITED
IDLE_TIME UNLIMITED
SESSIONS_PER_USER UNLIMITED
LOGICAL_READS_PER_SESSION UNLIMITED
LOGICAL_READS_PER_CALL UNLIMITED
PRIVATE_SGA UNLIMITED
COMPOSITE_LIMIT UNLIMITED
PASSWORD_LIFE_TIME 180
PASSWORD_GRACE_TIME 7
PASSWORD_REUSE_MAX UNLIMITED
PASSWORD_REUSE_TIME UNLIMITED
PASSWORD_LOCK_TIME 1
FAILED_LOGIN_ATTEMPTS 10
PASSWORD_VERIFY_FUNCTION NULL

To assign the user to the profile do the following:
ALTER USER user1 PROFILE PPPPPP;"
          reference   : "800-53|AC-10,CAT|II,CCI|CCI-000054,ITSG-33|AC-10,NESA|T5.5.1,Rule-ID|SV-66553r2_rule,STIG-ID|O112-C2-000100,Vuln-ID|V-52337"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'IDLE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
# Note: Variable @SESSIONS_PER_USER@ replaced with "10|[1-9]" in field "sql_expect".
          sql_expect  : "DEFAULT", "IDLE_TIME", regex:"^(10|[1-9]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-000100 - The DBMS must limit the number of concurrent sessions for each system account to an organization-defined number of sessions."
          info        : "Application management includes the ability to control the number of users and user sessions utilizing an application. Limiting the number of allowed users, and sessions per user, is helpful in limiting risks related to Denial of Service attacks.

This requirement addresses concurrent session control for a single information system account and does not address concurrent sessions by a single user via multiple system accounts.

Unlimited concurrent connections to the DBMS could allow a successful Denial of Service (DoS) attack by exhausting connection resources.

The organization will need to define the maximum number of concurrent sessions by account type, by account, or a combination thereof.  In deciding on the appropriate number, it is important to take into account the work requirements of the various types of user.  For example, 2 might be an acceptable limit for general users accessing the database via an application; but 10 might be too few for a database administrator using a database management GUI tool, where each query tab and navigation pane may count as a separate session."
          solution    : "Limit concurrent connections for each system account to a number less than or equal to the organization-defined number of sessions using the following SQL.  Create profiles that conform to the DoD requirements.  Assign users to the appropriate profile.

Change the value of SESSIONS_PER_USER (along with the other parameters, where relevant) from UNLIMITED to DoD-compliant, site-specific requirements and then assign users to the profile (the name PPPPP is an example; use a name appropriate to your circumstance):

CREATE PROFILE 'PPPPPP' LIMIT CPU_PER_SESSION UNLIMITED
CPU_PER_CALL UNLIMITED
CONNECT_TIME UNLIMITED
IDLE_TIME UNLIMITED
SESSIONS_PER_USER UNLIMITED
LOGICAL_READS_PER_SESSION UNLIMITED
LOGICAL_READS_PER_CALL UNLIMITED
PRIVATE_SGA UNLIMITED
COMPOSITE_LIMIT UNLIMITED
PASSWORD_LIFE_TIME 180
PASSWORD_GRACE_TIME 7
PASSWORD_REUSE_MAX UNLIMITED
PASSWORD_REUSE_TIME UNLIMITED
PASSWORD_LOCK_TIME 1
FAILED_LOGIN_ATTEMPTS 10
PASSWORD_VERIFY_FUNCTION NULL

To assign the user to the profile do the following:
ALTER USER user1 PROFILE PPPPPP;"
          reference   : "800-53|AC-10,CAT|II,CCI|CCI-000054,ITSG-33|AC-10,NESA|T5.5.1,Rule-ID|SV-66553r2_rule,STIG-ID|O112-C2-000100,Vuln-ID|V-52337"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'IDLE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
# Note: Variable @SESSIONS_PER_USER@ replaced with "10|[1-9]" in field "sql_expect".
          sql_expect  : "DEFAULT", "IDLE_TIME", regex:"^(10|[1-9])$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-001600 - The DBMS must ensure remote sessions that access an organization-defined list of security functions and security-relevant information are audited."
      info        : "Remote access is any access to an organizational information system by a user (or an information system) communicating through an external, non-organization-controlled network (e.g., the Internet). Examples of remote access methods include dial-up, broadband, and wireless.

Remote network and system access is accomplished by leveraging common communication protocols to establish a remote connection. These connections will typically originate over either the public Internet or the Public Switched Telephone Network (PSTN). Neither of these internetworking mechanisms is private or secure and they do not by default restrict access to networked resources once connectivity is established.

Numerous best practices are employed to protect remote connections, such as utilizing encryption to protect data sessions and firewalls to restrict and control network connectivity. In addition to these protections, auditing must also be utilized in order to track system activity, assist in diagnosing system issues, and provide evidence needed for forensic investigations after a security incident.

When organizations define security-related application functions or security-related application information, it is incumbent upon the application providing access to that data to ensure auditing of remote connectivity to those resources occurs in support of organizational requirements.

Remote access to security functions (e.g., user management, audit log management, etc.) and security-relevant information requires the activity be audited by the organization. Any application providing remote access must support organizational requirements to audit access or organization-defined security functions and security-relevant information.

Database security features accessed through remote methods must be audited to ensure the access is authorized and appropriate.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure the DBMS's auditing to audit organization-defined auditable events. If preferred, use a third-party tool. The tool must provide the minimum capability to audit the required events.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this process to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

If the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation at the locations below.

For more information on the configuration of auditing, refer to the following document: https://docs.oracle.com/cd/E25054_01/network.1111/e16543/auditing.htm

If the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation at the location above."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-001454,CIP|005-5-R2,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66561r4_rule,STIG-ID|O112-C2-001600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52345"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM SYS.V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-001800 - The system must employ automated mechanisms for supporting Oracle user account management."
      info        : "A comprehensive application account management process that includes automation helps to ensure accounts designated as requiring attention are consistently and promptly addressed. Examples include, but are not limited to, using automation to take action on multiple accounts designated as inactive, suspended, or terminated, or by disabling accounts located in non-centralized account stores, such as multiple servers.

Enterprise environments make application user account management challenging and complex.  A user management process requiring administrators to manually address account management functions adds risk of potential oversight.

Automated mechanisms may be comprised of differing technologies that when placed together contain an overall automated mechanism supporting an organization's automated account management requirements.

Databases can have large numbers of users in disparate locations and job functions.  Automatic account management can help mitigate the risk of human error found in manually managing database access.

Note that user authentication and account management should be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Utilize an Oracle feature/product, an OS feature, a third-party product, or custom code to automate some or all account maintenance functionality.

- - - - -

Roles and Profiles are two Oracle features that should be employed in account management. (Indeed, other requirements mandate the use of Roles.) Following are some notes from Oracle on the use of Profiles.

A profile is a named set of resource limits and password parameters that restrict database usage and instance resources for a user. You can assign a profile to each user, and a default profile to all others. Each user can have only one profile, and creating a new one supersedes any earlier one.

Profile resource limits are enforced only when you enable resource limitation for the associated database. Enabling such limitation can occur either before starting up the database (the RESOURCE_LIMIT initialization parameter) or while it is open (using an ALTER SYSTEM statement).

While password parameters reside in profiles, they are unaffected by RESOURCE_LIMIT or ALTER SYSTEM and password management is always enabled."
      reference   : "CAT|II,CCI|CCI-000015,Rule-ID|SV-66565r2_rule,STIG-ID|O112-C2-001800,Vuln-ID|V-52349"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-001900 - The DBMS must provide a mechanism to automatically identify accounts designated as temporary or emergency accounts - Profile list"
      info        : "Temporary application accounts could be used in the event of a vendor support visit where a support representative requires a temporary unique account in order to perform diagnostic testing or conduct some other support-related activity. When these types of accounts are created, there is a risk that the temporary account may remain in place and active after the support representative has left.

To address this, in the event temporary application accounts are required, the application must ensure accounts designated as temporary in nature shall automatically terminate these accounts after an organization-defined time period.  Such a process and capability greatly reduces the risk that accounts will be misused, hijacked, or data compromised.

Note: User authentication and account management should be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

Temporary database accounts must be identified in order for the system to recognize and terminate them after a given time period. The DBMS and any administrators must have a means to recognize any temporary accounts for special handling."
      solution    : "Use a profile with a distinctive name (for example, TEMPORARY_USERS), so that temporary users can be easily identified. Whenever a temporary user account is created, assign it to this profile.

Set values in the profile as needed for temporary users - see below for further information. The values here are examples; set them to values appropriate to the situation:

CREATE PROFILE TEMPORARY_USERS
LIMIT
SESSIONS_PER_USER <limit>
CPU_PER_SESSION <limit>
CPU_PER_CALL <limit>
CONNECT_TIME <limit>
LOGICAL_READS_PER_SESSION <limit>
LOGICAL_READS_PER_CALL <limit>
PRIVATE_SGA <limit>
COMPOSITE_LIMIT <limit>
FAILED_LOGIN_ATTEMPTS 3
PASSWORD_LIFE_TIME 7
PASSWORD_REUSE_TIME 60
PASSWORD_REUSE_MAX 5
PASSWORD_VERIFY_FUNCTION <verify_function>
PASSWORD_LOCK_TIME UNLIMITED
PASSWORD_GRACE_TIME 3;
CREATE USER TEMP001 IDENTIFIED BY PassWord#TEMP01 PROFILE TEMPORARY_USERS;

Resource Parameters:

SESSIONS_PER_USER - Specify the number of concurrent sessions to which you want to limit the user.

CPU_PER_SESSION - Specify the CPU time limit for a session, expressed in hundredths of seconds.

CPU_PER_CALL - Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.

CONNECT_TIME - Specify the total elapsed time limit for a session, expressed in minutes.

IDLE_TIME - Specify the permitted periods of continuous inactive time during a session, expressed in minutes. Long-running queries and other operations are not subject to this limit.

LOGICAL_READS_PER_SESSION - Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.

LOGICAL_READS_PER_CALL - Specify the permitted number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).

PRIVATE_SGA - Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA). Refer to size_clause for information on that clause.

COMPOSITE_LIMIT - See Oracle documentation for more details.

Password Parameters:

Use the following clauses to set password parameters. Parameters that set lengths of time are interpreted in number of days. For testing purposes you can specify minutes (n/1440) or even seconds (n/86400).

FAILED_LOGIN_ATTEMPTS - Specify the number of failed attempts to log in to the user account before the account is locked.

PASSWORD_LIFE_TIME - Specify the number of days the same password can be used for authentication. If you also set a value for PASSWORD_GRACE_TIME, then the password expires if it is not changed within the grace period, and further connections are rejected. If you omit this clause, then the default is 180 days.

PASSWORD_REUSE_TIME and PASSWORD_REUSE_MAX - These two parameters must be set in conjunction with each other. PASSWORD_REUSE_TIME specifies the number of days before which a password cannot be reused. PASSWORD_REUSE_MAX specifies the number of password changes required before the current password can be reused. For these parameters to have any effect, you must specify an integer for both of them.

If you specify an integer for both of these parameters, then the user cannot reuse a password until the password has been changed the number of times specified for PASSWORD_REUSE_MAX during the number of days specified for PASSWORD_REUSE_TIME.

For example, if you specify PASSWORD_REUSE_TIME to 30 and PASSWORD_REUSE_MAX to 10, then the user can reuse the password after 30 days if the password has already been changed 10 times.

If you specify an integer for either of these parameters and specify UNLIMITED for the other, then the user can never reuse a password.

If you specify DEFAULT for either parameter, then Oracle Database uses the value defined in the DEFAULT profile. By default, all parameters are set to UNLIMITED in the DEFAULT profile. If you have not changed the default setting of UNLIMITED in the DEFAULT profile, then the database treats the value for that parameter as UNLIMITED.

If you set both of these parameters to UNLIMITED, then the database ignores both of them. This is the default if you omit both parameters.

PASSWORD_LOCK_TIME - Specify the number of days an account will be locked after the specified number of consecutive failed logon attempts. If you omit this clause, then the default is 1 day.

PASSWORD_GRACE_TIME - Specify the number of days after the grace period begins during which a warning is issued and logon is allowed. If you omit this clause, then the default is 7 days.

PASSWORD_VERIFY_FUNCTION - lets a PL/SQL password complexity verification script be passed as an argument to the CREATE PROFILE statement. Oracle Database provides a default script, but you can create your own routine or use third-party software instead."
      reference   : "800-53|AC-2(2),CAT|II,CCI|CCI-000016,CN-L3|7.1.3.2(e),CSF|PR.AC-1,CSF|PR.AC-4,ITSG-33|AC-2(2),Rule-ID|SV-66567r5_rule,STIG-ID|O112-C2-001900,Vuln-ID|V-52351"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT PROFILE#, NAME FROM SYS.PROFNAME$;"
      sql_types   : POLICY_INTEGER, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-001900 - The DBMS must provide a mechanism to automatically identify accounts designated as temporary or emergency accounts - User Profile assignment"
      info        : "Temporary application accounts could be used in the event of a vendor support visit where a support representative requires a temporary unique account in order to perform diagnostic testing or conduct some other support-related activity. When these types of accounts are created, there is a risk that the temporary account may remain in place and active after the support representative has left.

To address this, in the event temporary application accounts are required, the application must ensure accounts designated as temporary in nature shall automatically terminate these accounts after an organization-defined time period.  Such a process and capability greatly reduces the risk that accounts will be misused, hijacked, or data compromised.

Note: User authentication and account management should be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

Temporary database accounts must be identified in order for the system to recognize and terminate them after a given time period. The DBMS and any administrators must have a means to recognize any temporary accounts for special handling."
      solution    : "Use a profile with a distinctive name (for example, TEMPORARY_USERS), so that temporary users can be easily identified. Whenever a temporary user account is created, assign it to this profile.

Set values in the profile as needed for temporary users - see below for further information. The values here are examples; set them to values appropriate to the situation:

CREATE PROFILE TEMPORARY_USERS
LIMIT
SESSIONS_PER_USER <limit>
CPU_PER_SESSION <limit>
CPU_PER_CALL <limit>
CONNECT_TIME <limit>
LOGICAL_READS_PER_SESSION <limit>
LOGICAL_READS_PER_CALL <limit>
PRIVATE_SGA <limit>
COMPOSITE_LIMIT <limit>
FAILED_LOGIN_ATTEMPTS 3
PASSWORD_LIFE_TIME 7
PASSWORD_REUSE_TIME 60
PASSWORD_REUSE_MAX 5
PASSWORD_VERIFY_FUNCTION <verify_function>
PASSWORD_LOCK_TIME UNLIMITED
PASSWORD_GRACE_TIME 3;
CREATE USER TEMP001 IDENTIFIED BY PassWord#TEMP01 PROFILE TEMPORARY_USERS;

Resource Parameters:

SESSIONS_PER_USER - Specify the number of concurrent sessions to which you want to limit the user.

CPU_PER_SESSION - Specify the CPU time limit for a session, expressed in hundredths of seconds.

CPU_PER_CALL - Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.

CONNECT_TIME - Specify the total elapsed time limit for a session, expressed in minutes.

IDLE_TIME - Specify the permitted periods of continuous inactive time during a session, expressed in minutes. Long-running queries and other operations are not subject to this limit.

LOGICAL_READS_PER_SESSION - Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.

LOGICAL_READS_PER_CALL - Specify the permitted number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).

PRIVATE_SGA - Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA). Refer to size_clause for information on that clause.

COMPOSITE_LIMIT - See Oracle documentation for more details.

Password Parameters:

Use the following clauses to set password parameters. Parameters that set lengths of time are interpreted in number of days. For testing purposes you can specify minutes (n/1440) or even seconds (n/86400).

FAILED_LOGIN_ATTEMPTS - Specify the number of failed attempts to log in to the user account before the account is locked.

PASSWORD_LIFE_TIME - Specify the number of days the same password can be used for authentication. If you also set a value for PASSWORD_GRACE_TIME, then the password expires if it is not changed within the grace period, and further connections are rejected. If you omit this clause, then the default is 180 days.

PASSWORD_REUSE_TIME and PASSWORD_REUSE_MAX - These two parameters must be set in conjunction with each other. PASSWORD_REUSE_TIME specifies the number of days before which a password cannot be reused. PASSWORD_REUSE_MAX specifies the number of password changes required before the current password can be reused. For these parameters to have any effect, you must specify an integer for both of them.

If you specify an integer for both of these parameters, then the user cannot reuse a password until the password has been changed the number of times specified for PASSWORD_REUSE_MAX during the number of days specified for PASSWORD_REUSE_TIME.

For example, if you specify PASSWORD_REUSE_TIME to 30 and PASSWORD_REUSE_MAX to 10, then the user can reuse the password after 30 days if the password has already been changed 10 times.

If you specify an integer for either of these parameters and specify UNLIMITED for the other, then the user can never reuse a password.

If you specify DEFAULT for either parameter, then Oracle Database uses the value defined in the DEFAULT profile. By default, all parameters are set to UNLIMITED in the DEFAULT profile. If you have not changed the default setting of UNLIMITED in the DEFAULT profile, then the database treats the value for that parameter as UNLIMITED.

If you set both of these parameters to UNLIMITED, then the database ignores both of them. This is the default if you omit both parameters.

PASSWORD_LOCK_TIME - Specify the number of days an account will be locked after the specified number of consecutive failed logon attempts. If you omit this clause, then the default is 1 day.

PASSWORD_GRACE_TIME - Specify the number of days after the grace period begins during which a warning is issued and logon is allowed. If you omit this clause, then the default is 7 days.

PASSWORD_VERIFY_FUNCTION - lets a PL/SQL password complexity verification script be passed as an argument to the CREATE PROFILE statement. Oracle Database provides a default script, but you can create your own routine or use third-party software instead."
      reference   : "800-53|AC-2(2),CAT|II,CCI|CCI-000016,CN-L3|7.1.3.2(e),CSF|PR.AC-1,CSF|PR.AC-4,ITSG-33|AC-2(2),Rule-ID|SV-66567r5_rule,STIG-ID|O112-C2-001900,Vuln-ID|V-52351"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT username, profile FROM SYS.DBA_USERS ORDER BY username;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-001900 - The DBMS must provide a mechanism to automatically identify accounts designated as temporary or emergency accounts - User not assigned the default"
      info        : "Temporary application accounts could be used in the event of a vendor support visit where a support representative requires a temporary unique account in order to perform diagnostic testing or conduct some other support-related activity. When these types of accounts are created, there is a risk that the temporary account may remain in place and active after the support representative has left.

To address this, in the event temporary application accounts are required, the application must ensure accounts designated as temporary in nature shall automatically terminate these accounts after an organization-defined time period.  Such a process and capability greatly reduces the risk that accounts will be misused, hijacked, or data compromised.

Note: User authentication and account management should be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

Temporary database accounts must be identified in order for the system to recognize and terminate them after a given time period. The DBMS and any administrators must have a means to recognize any temporary accounts for special handling."
      solution    : "Use a profile with a distinctive name (for example, TEMPORARY_USERS), so that temporary users can be easily identified. Whenever a temporary user account is created, assign it to this profile.

Set values in the profile as needed for temporary users - see below for further information. The values here are examples; set them to values appropriate to the situation:

CREATE PROFILE TEMPORARY_USERS
LIMIT
SESSIONS_PER_USER <limit>
CPU_PER_SESSION <limit>
CPU_PER_CALL <limit>
CONNECT_TIME <limit>
LOGICAL_READS_PER_SESSION <limit>
LOGICAL_READS_PER_CALL <limit>
PRIVATE_SGA <limit>
COMPOSITE_LIMIT <limit>
FAILED_LOGIN_ATTEMPTS 3
PASSWORD_LIFE_TIME 7
PASSWORD_REUSE_TIME 60
PASSWORD_REUSE_MAX 5
PASSWORD_VERIFY_FUNCTION <verify_function>
PASSWORD_LOCK_TIME UNLIMITED
PASSWORD_GRACE_TIME 3;
CREATE USER TEMP001 IDENTIFIED BY PassWord#TEMP01 PROFILE TEMPORARY_USERS;

Resource Parameters:

SESSIONS_PER_USER - Specify the number of concurrent sessions to which you want to limit the user.

CPU_PER_SESSION - Specify the CPU time limit for a session, expressed in hundredths of seconds.

CPU_PER_CALL - Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.

CONNECT_TIME - Specify the total elapsed time limit for a session, expressed in minutes.

IDLE_TIME - Specify the permitted periods of continuous inactive time during a session, expressed in minutes. Long-running queries and other operations are not subject to this limit.

LOGICAL_READS_PER_SESSION - Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.

LOGICAL_READS_PER_CALL - Specify the permitted number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).

PRIVATE_SGA - Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA). Refer to size_clause for information on that clause.

COMPOSITE_LIMIT - See Oracle documentation for more details.

Password Parameters:

Use the following clauses to set password parameters. Parameters that set lengths of time are interpreted in number of days. For testing purposes you can specify minutes (n/1440) or even seconds (n/86400).

FAILED_LOGIN_ATTEMPTS - Specify the number of failed attempts to log in to the user account before the account is locked.

PASSWORD_LIFE_TIME - Specify the number of days the same password can be used for authentication. If you also set a value for PASSWORD_GRACE_TIME, then the password expires if it is not changed within the grace period, and further connections are rejected. If you omit this clause, then the default is 180 days.

PASSWORD_REUSE_TIME and PASSWORD_REUSE_MAX - These two parameters must be set in conjunction with each other. PASSWORD_REUSE_TIME specifies the number of days before which a password cannot be reused. PASSWORD_REUSE_MAX specifies the number of password changes required before the current password can be reused. For these parameters to have any effect, you must specify an integer for both of them.

If you specify an integer for both of these parameters, then the user cannot reuse a password until the password has been changed the number of times specified for PASSWORD_REUSE_MAX during the number of days specified for PASSWORD_REUSE_TIME.

For example, if you specify PASSWORD_REUSE_TIME to 30 and PASSWORD_REUSE_MAX to 10, then the user can reuse the password after 30 days if the password has already been changed 10 times.

If you specify an integer for either of these parameters and specify UNLIMITED for the other, then the user can never reuse a password.

If you specify DEFAULT for either parameter, then Oracle Database uses the value defined in the DEFAULT profile. By default, all parameters are set to UNLIMITED in the DEFAULT profile. If you have not changed the default setting of UNLIMITED in the DEFAULT profile, then the database treats the value for that parameter as UNLIMITED.

If you set both of these parameters to UNLIMITED, then the database ignores both of them. This is the default if you omit both parameters.

PASSWORD_LOCK_TIME - Specify the number of days an account will be locked after the specified number of consecutive failed logon attempts. If you omit this clause, then the default is 1 day.

PASSWORD_GRACE_TIME - Specify the number of days after the grace period begins during which a warning is issued and logon is allowed. If you omit this clause, then the default is 7 days.

PASSWORD_VERIFY_FUNCTION - lets a PL/SQL password complexity verification script be passed as an argument to the CREATE PROFILE statement. Oracle Database provides a default script, but you can create your own routine or use third-party software instead."
      reference   : "800-171|3.1.1,800-53|AC-2(2),CAT|II,CCI|CCI-000016,CN-L3|7.1.3.2(e),CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(2),NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,Rule-ID|SV-66567r5_rule,STIG-ID|O112-C2-001900,Vuln-ID|V-52351"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT username, profile FROM SYS.DBA_USERS WHERE PROFILE<> 'DEFAULT' ORDER BY profile;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'PASSWORD_LIFE_TIME' Is Less than or Equal to 35"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'PASSWORD_LIFE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_LIFE_TIME", regex:"(3[1-5]|[1-2][0-9]|[0-9])"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-002000 - The DBMS must provide a mechanism to automatically terminate accounts designated as temporary or emergency accounts after an organization-defined time period."
          info        : "Temporary application accounts could ostensibly be used in the event of a vendor support visit where a support representative requires a temporary unique account in order to perform diagnostic testing or conduct some other support related activity. When these types of accounts are created, there is a risk that the temporary account may remain in place and active after the support representative has left.

To address this, in the event temporary application accounts are required, the application must ensure accounts designated as temporary in nature shall automatically terminate these accounts after an organization-defined time period. Such a process and capability greatly reduces the risk that accounts will be misused, hijacked, or data compromised.

User authentication and account management should be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

Temporary database accounts must be automatically terminated after an organization-defined time period in order to mitigate the risk of the account being used beyond its original purpose or timeframe."
          solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If using database mechanisms to satisfy this requirement, use a profile with a distinctive name (for example, TEMPORARY_USERS), so that temporary users can be easily identified.  Whenever a temporary user account is created, assign it to this profile.

Create a job to lock accounts under this profile that are more than n days old, where n is the organization-defined time period."
          reference   : "800-171|3.5.10,800-171|3.5.7,800-171|3.5.8,800-171|3.5.9,800-53|IA-5(1),CAT|II,CCI|CCI-000016,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,Rule-ID|SV-66569r3_rule,STIG-ID|O112-C2-002000,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2,Vuln-ID|V-52353"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_LIFE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_LIFE_TIME", regex:"^(3[1-5]|[1-2][0-9]|[0-9]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-002000 - The DBMS must provide a mechanism to automatically terminate accounts designated as temporary or emergency accounts after an organization-defined time period."
          info        : "Temporary application accounts could ostensibly be used in the event of a vendor support visit where a support representative requires a temporary unique account in order to perform diagnostic testing or conduct some other support related activity. When these types of accounts are created, there is a risk that the temporary account may remain in place and active after the support representative has left.

To address this, in the event temporary application accounts are required, the application must ensure accounts designated as temporary in nature shall automatically terminate these accounts after an organization-defined time period. Such a process and capability greatly reduces the risk that accounts will be misused, hijacked, or data compromised.

User authentication and account management should be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

Temporary database accounts must be automatically terminated after an organization-defined time period in order to mitigate the risk of the account being used beyond its original purpose or timeframe."
          solution    : "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.

If using database mechanisms to satisfy this requirement, use a profile with a distinctive name (for example, TEMPORARY_USERS), so that temporary users can be easily identified.  Whenever a temporary user account is created, assign it to this profile.

Create a job to lock accounts under this profile that are more than n days old, where n is the organization-defined time period."
          reference   : "800-171|3.5.10,800-171|3.5.7,800-171|3.5.8,800-171|3.5.9,800-53|IA-5(1),CAT|II,CCI|CCI-000016,CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,Rule-ID|SV-66569r3_rule,STIG-ID|O112-C2-002000,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2,Vuln-ID|V-52353"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_LIFE_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_LIFE_TIME", regex:"^(3[1-5]|[1-2][0-9]|[0-9])$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-002200 - The DBMS must support the requirement to automatically audit account creation."
      info        : "Once an attacker establishes initial access to a system, they often attempt to create a persistent method of reestablishing access. One way to accomplish this is for the attacker to simply create a new account.

Auditing of account creation is one method and best practice for mitigating this risk. A comprehensive account management process will ensure an audit trail documents the creation of application user accounts and, as required, notifies administrators and/or application owners that they exist. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes.

Note that user authentication and account management should be done via an enterprise-wide mechanism whenever possible. Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.

However, notwithstanding how accounts are managed, Oracle auditing must always be configured to capture account creation."
      solution    : "Configure Oracle to audit account creation activities.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000018,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66573r3_rule,STIG-ID|O112-C2-002200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52357"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM SYS.V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-002300 - The DBMS must support the requirement to automatically audit account modification."
      info        : "Once an attacker establishes initial access to a system, they often attempt to create a persistent method of reestablishing access. One way to accomplish this is for the attacker to simply modify an existing account.

Auditing of account modification is one method and best practice for mitigating this risk. A comprehensive application account management process ensures an audit trail automatically documents the modification of application user accounts and, as required, notifies administrators, application owners, and/or appropriate individuals. Applications must provide this capability directly, leveraging complementary technology providing this capability or a combination thereof.

Automated account auditing processes greatly reduces the risk that accounts will be surreptitiously modified and provides logging that can be used for forensic purposes.

Note that user authentication and account management should be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.

However, notwithstanding how accounts are managed, Oracle auditing must always be configured to capture account modification."
      solution    : "Configure Oracle to audit account creation activities.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-001403,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66575r2_rule,STIG-ID|O112-C2-002300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52359"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-002400 - The DBMS must automatically audit account disabling actions, to the extent such information is available."
      info        : "When application accounts are disabled, user accessibility is affected. Accounts are utilized for identifying individual application users or for identifying the application processes themselves.

In order to detect and respond to events affecting user accessibility and application processing, applications must audit account disabling actions and, as required, notify the appropriate individuals so they can investigate the event.

Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and provides logging that can be used for forensic purposes.

Note that user authentication and account management should be done via an enterprise-wide mechanism whenever possible. Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.

However, notwithstanding how accounts are managed, Oracle auditing must always be configured to capture account-disabling actions, to the extent such information is available.

Note that some Oracle architectural details limit the ability to capture this information.  There is a difference between actions taken by a user that generate an audit record and actions by the database itself, which do not generate an audit record.  If an account is locked because of an expiration event, it is done by the database without involving the action of a user.  Failed logins are logged user interactions, but the subsequent locking of the account, although initiated by user actions, is a function of the database."
      solution    : "Configure Oracle to audit account disabling actions.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-001404,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66577r3_rule,STIG-ID|O112-C2-002400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52361"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-002500 - The DBMS must automatically audit account termination."
      info        : "When application accounts are terminated, user accessibility is affected.  Accounts are utilized for identifying individual application users or for identifying the application processes themselves.

In order to detect and respond to events affecting user accessibility and application processing, applications must audit account terminating actions and notify the appropriate individuals so they can investigate the event.  Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and provides logging that can be used for forensic purposes.

Note that user authentication and account management should be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.

However, notwithstanding how accounts are managed, Oracle auditing must always be configured to capture account termination."
      solution    : "Configure Oracle to audit account termination actions.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-001405,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66579r2_rule,STIG-ID|O112-C2-002500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52363"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Check that Oracle Database Vault is installed"
          sql_request : "SELECT PARAMETER, VALUE FROM V$OPTION WHERE PARAMETER = 'Oracle Database Vault';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "Oracle Database Vault", "TRUE"
        </custom_item>
      </condition>

      <then>
        <report type:"WARNING">
          description : "O112-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy - User role listing"
          info        : "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.

Consideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.

If the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
          solution    : "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.

If Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles."
          reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|II,CCI|CCI-000213,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),Rule-ID|SV-66581r1_rule,STIG-ID|O112-C2-002700,Vuln-ID|V-52365"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
        </report>

        <report type:"WARNING">
          description : "O112-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy - Role assignments to users"
          info        : "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.

Consideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.

If the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
          solution    : "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.

If Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles."
          reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|II,CCI|CCI-000213,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),Rule-ID|SV-66581r1_rule,STIG-ID|O112-C2-002700,Vuln-ID|V-52365"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
        </report>

        <report type:"WARNING">
          description : "O112-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy - Role Table SELECT"
          info        : "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.

Consideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.

If the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
          solution    : "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.

If Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles."
          reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000213,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66581r1_rule,STIG-ID|O112-C2-002700,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52365"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
        </report>

        <report type:"WARNING">
          description : "O112-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy - User Table SELECT"
          info        : "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.

Consideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.

If the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
          solution    : "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.

If Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles."
          reference   : "800-171|3.1.1,800-53|AC-3,CAT|II,CCI|CCI-000213,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,Rule-ID|SV-66581r1_rule,STIG-ID|O112-C2-002700,TBA-FIISB|31.1,Vuln-ID|V-52365"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
        </report>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy - User role listing"
          info        : "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.

Consideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.

If the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy."
          solution    : "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.

If Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles."
          reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|II,CCI|CCI-000213,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),Rule-ID|SV-66581r1_rule,STIG-ID|O112-C2-002700,Vuln-ID|V-52365"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT grantee, granted_role FROM dba_role_privs;"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : NULL, NULL
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy - Role assignments to users"
          info        : "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.

Consideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.

If the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy."
          solution    : "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.

If Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles."
          reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|II,CCI|CCI-000213,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,HIPAA|164.310(a)(2)(iii),Rule-ID|SV-66581r1_rule,STIG-ID|O112-C2-002700,Vuln-ID|V-52365"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT grantee, granted_role FROM dba_role_privs ORDER BY grantee;"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : NULL, NULL
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy - Role Table SELECT"
          info        : "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.

Consideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.

If the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy."
          solution    : "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.

If Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles."
          reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000213,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66581r1_rule,STIG-ID|O112-C2-002700,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52365"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT role, table_name FROM role_tab_privs WHERE privilege = 'SELECT' ORDER BY role;"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : NULL, NULL
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy - User Table SELECT"
          info        : "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.

Consideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.

If the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy."
          solution    : "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.

If Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles."
          reference   : "800-171|3.1.1,800-53|AC-3,CAT|II,CCI|CCI-000213,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,Rule-ID|SV-66581r1_rule,STIG-ID|O112-C2-002700,TBA-FIISB|31.1,Vuln-ID|V-52365"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT grantee, table_name FROM dba_tab_privs WHERE privilege = 'SELECT' ORDER BY grantee;"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : NULL, NULL
        </custom_item>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-C2-003000 - The DBMS must enforce Discretionary Access Control (DAC) policy allowing users to specify and control sharing by named individuals, groups of individuals, or by both, limiting propagation of access rights and includes or excludes access to the granularity of a single user."
      info        : "Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) are employed by organizations to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains).

DAC is a type of access control methodology serving as a means of restricting access to objects and data based on the identity of subjects and/or groups to which they belong. It is discretionary in the sense that application users with the appropriate permissions to access an application resource or data have the discretion to pass that permission on to another user either directly or indirectly.

Data protection requirements may result in a DAC policy being specified as part of the application design. Discretionary access controls would be employed at the application level to restrict and control access to application objects and data thereby providing increased information security for the organization.

When DAC controls are employed, those controls must limit sharing to named application users, groups of users, or both. The application DAC controls must also limit the propagation of access rights and have the ability to exclude access to data down to the granularity of a single user.

Databases using DAC must have the ability for the owner of an object or information to assign or revoke rights to view or modify the object or information.  If the owner of an object or information does not have rights to exclude access to an object or information at a user level, users may gain access to objects and information they are not authorized to view/modify.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Modify DBMS settings to allow users to assign or revoke access rights to objects and information owned by the user. The ability to grant or revoke rights must include the ability to grant or revoke those rights down to the granularity of a single user.

(Note:  in most cases no fix will be necessary.  This is default functionality for Oracle.)"
      reference   : "CAT|II,CCI|CCI-001362,Rule-ID|SV-66583r1_rule,STIG-ID|O112-C2-003000,Vuln-ID|V-52367"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-003500 - The DBMS must restrict grants to sensitive information to authorized user roles."
      info        : "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.

Unauthorized access to sensitive data may compromise the confidentiality of personnel privacy, threaten national security, or compromise a variety of other sensitive operations. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Define application user roles based on privilege and job function requirements.

Assign the required privileges to the role and assign the role to authorized application user accounts.

Revoke any privileges to sensitive information directly assigned to application user accounts."
      reference   : "CAT|II,CCI|CCI-000037,Rule-ID|SV-66587r1_rule,STIG-ID|O112-C2-003500,Vuln-ID|V-52371"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-003600 - A single database connection configuration file must not be used to configure all database clients."
      info        : "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.

Many sites distribute a single client database connection configuration file to all site database users that contains network access information for all databases on the site. Such a file provides information to access databases not required by all users that may assist in unauthorized access attempts.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement procedures to supply database connection information to only those databases authorized for the user."
      reference   : "CAT|II,CCI|CCI-000037,Rule-ID|SV-66589r1_rule,STIG-ID|O112-C2-003600,Vuln-ID|V-52373"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-003700 - The DBMS must be protected from unauthorized access by developers."
      info        : "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.

Developers granted elevated database and/or operating system privileges on production databases can affect the operation and/or security of the database system. Operating system and database privileges assigned to developers on production systems must not be allowed.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Restrict developer privileges to production objects to only objects and data where those privileges are required and authorized.  Document the approval and risk acceptance.

Consider using separate accounts for a person's developer duties and production duties.  At a minimum, use separate roles for developer privileges and production privileges.

If developers need the ability to create and maintain tables (or other database objects) as part of their development activities, provide dedicated tablespaces, and revoke any rights that allowed them to use production tablespaces for this purpose."
      reference   : "CAT|II,CCI|CCI-000037,Rule-ID|SV-66591r1_rule,STIG-ID|O112-C2-003700,Vuln-ID|V-52375"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-003800 - The DBMS must be protected from unauthorized access by developers on shared production/development host systems."
      info        : "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.

Developers granted elevated database and/or operating system privileges on systems that support both development and production databases can affect the operation and/or security of the production database system. Operating system and database privileges assigned to developers on shared development and production systems must be restricted.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Restrict developer privileges to production objects to only objects and data where those privileges are required and authorized.  Document the approval and risk acceptance.

Consider using separate accounts for a person's developer duties and production duties.  At a minimum, use separate roles for developer privileges and production privileges.

If developers need the ability to create and maintain tables (or other database objects) as part of their development activities, provide dedicated tablespaces, and revoke any rights that allowed them to use production tablespaces for this purpose."
      reference   : "CAT|II,CCI|CCI-000037,Rule-ID|SV-66593r1_rule,STIG-ID|O112-C2-003800,Vuln-ID|V-52377"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-003900 - The DBMS must restrict access to system tables and other configuration information or metadata to DBAs or other authorized users."
      info        : "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.

Administrative data includes DBMS metadata and other configuration and management data.  Unauthorized access to this data could result in unauthorized changes to database objects, access controls, or DBMS configuration.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Restrict accessibility of Oracle system tables and other configuration information or metadata to DBAs or other authorized users."
      reference   : "CAT|II,CCI|CCI-000037,Rule-ID|SV-66595r3_rule,STIG-ID|O112-C2-003900,Vuln-ID|V-52379"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-004000 - Administrative privileges must be assigned to database accounts via database roles."
      info        : "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.

Privileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create roles for administrative function assignments. Assign the necessary privileges for the administrative functions to a role."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000037,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66599r2_rule,STIG-ID|O112-C2-004000,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52383"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT grantee, privilege FROM dba_sys_privs WHERE grantee IN (SELECT username FROM dba_users WHERE username NOT IN ('XDB','SYSTEM','SYS','LBACSYS','DVSYS','DVF','SYSMAN_RO','SYSMAN_BIPLATFORM','SYSMAN_MDS','SYSMAN_OPSS','SYSMAN_STB','DBSNMP','SYSMAN','APEX_040200','WMSYS','SYSDG','SYSBACKUP','SPATIAL_WFS_ADMIN_USR','SPATIAL_CSW_ADMIN_US','GSMCATUSER','OLAPSYS','SI_INFORMTN_SCHEMA','OUTLN','ORDSYS','ORDDATA','OJVMSYS','ORACLE_OCM','MDSYS','ORDPLUGINS','GSMADMIN_INTERNAL','MDDATA','FLOWS_FILES','DIP','CTXSYS','AUDSYS','APPQOSSYS','APEX_PUBLIC_USER','ANONYMOUS','SPATIAL_CSW_ADMIN_USR','SYSKM','SYSMAN_TYPES','MGMT_VIEW','EUS_ENGINE_USER','EXFSYS','SYSMAN_APM')) AND privilege NOT IN ('UNLIMITED TABLESPACE') ORDER BY 1, 2;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "ManualReview", "ManualReview"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-004100 - Administrators must utilize a separate, distinct administrative account when performing administrative activities, accessing database security functions, or accessing security-relevant information."
      info        : "This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

To limit exposure when operating from within a privileged account or role, the application must support organizational requirements that users of information system accounts, or roles, with access to organization-defined lists of security functions or security-relevant information, use non-privileged accounts, or roles, when accessing other (non-security) system functions.

When privileged activities are not separated from non-privileged activities, the database can be subject to unauthorized changes to settings and data that a standard user would not normally have access to, outside of an authorized maintenance session.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Revoke DBA privileges, and privileges to administer DBA-owned objects, from non-DBA accounts.

Provide separate accounts to DBA for database administration."
      reference   : "CAT|II,CCI|CCI-000040,Rule-ID|SV-66603r2_rule,STIG-ID|O112-C2-004100,Vuln-ID|V-52387"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-004200 - All use of privileged accounts must be audited."
      info        : "This is intended to limit exposure, by making it possible to trace any unauthorized access, by a privileged user account or role that has permissions on security functions or security-relevant information, to other data or functionality.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS auditing so that all use of privileged accounts is recorded in the audit log."
      reference   : "CAT|II,CCI|CCI-000040,Rule-ID|SV-66605r2_rule,STIG-ID|O112-C2-004200,Vuln-ID|V-52389"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-004300 - The DBA role must not be assigned excessive or unauthorized privileges."
      info        : "This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

Audit of privileged activity may require physical separation employing information systems on which the user does not have privileged access.

To limit exposure and provide forensic history of activity when operating from within a privileged account or role, the application must support organizational requirements that users of information system accounts, or roles, with access to organization-defined lists of security functions or security-relevant information, use non-privileged accounts, or roles, when accessing other (non-security) system functions.

If feasible, applications must provide access logging that ensures users who are granted a privileged role (or roles) have their privileged activity logged.

DBAs, if assigned excessive privileges, could perform actions that endanger the information system or hide evidence of malicious activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Remove permissions from DBAs and other administrative users beyond those required for administrative functions."
      reference   : "CAT|II,CCI|CCI-000040,Rule-ID|SV-66609r2_rule,STIG-ID|O112-C2-004300,Vuln-ID|V-52393"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-N1-015601 - Applications must obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals."
      info        : "To prevent the compromise of authentication information, such as passwords, during the authentication process, the feedback from the information system shall not provide any information that would allow an unauthorized user to compromise the authentication mechanism.

Obfuscation of user-provided information when typed into the system is a method used in addressing this risk.

For example, displaying asterisks when a user types in a password, is an example of obscuring feedback of authentication information.

Database applications may allow for entry of the account name and password as a visible parameter of the application execution command. This practice should be prohibited and disabled to prevent shoulder surfing.


This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure or modify applications to prohibit display of passwords in clear text on the command line."
      reference   : "CAT|I,CCI|CCI-000366,Rule-ID|SV-66611r2_rule,STIG-ID|O112-N1-015601,Vuln-ID|V-52395"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-N2-004701 - DBMS default accounts must be protected from misuse."
      info        : "The Security Requirements Guide says, 'Default accounts are usually accounts that have special privileges required to administer the database.  Well-known DBMS account names are targeted most frequently by attackers and are thus more prone to providing unauthorized access to the database.

'If default account names are not changed, an attacker has a predefined list of accounts to target.  Since most default accounts are administrative in nature, the compromise of a default account can have catastrophic consequences, including the complete loss of control over the information system.'

However, Oracle does not provide for changing user names directly.  Workarounds to achieve the effect of a name change are cumbersome.  In addition, names of essential system accounts such as SYS are 'baked into' the product, with thousands of dependencies involved.  Making such a change would risk making the DBMS inoperative, and would interfere with getting support from Oracle.

The Check and Fix, therefore, relate to good practices for protecting the essential system accounts from misuse.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Ensure that all individuals with DBA responsibilities always log in under their individual administrative accounts.

Ensure that the passwords for essential system accounts such as SYS are available only to authorized administrators, and tightly guarded to avoid misuse.  Ensure that these accounts are kept locked except when it is specifically necessary to use them."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-66621r1_rule,STIG-ID|O112-N2-004701,Vuln-ID|V-52405"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'PASSWORD_LOCK_TIME' Is Unlimited"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'PASSWORD_LOCK_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_LOCK_TIME", "UNLIMITED"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-004900 - The DBMS must specify an account lockout duration that is greater than or equal to the organization-approved minimum."
          info        : "Anytime an authentication method is exposed, to allow for the utilization of an application, there is a risk that attempts will be made to obtain unauthorized access.

To defeat these attempts, organizations define the number of times a user account may consecutively fail a logon attempt. The organization also defines the period of time in which these consecutive failed attempts may occur.

By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account.

User authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "Configure the DBMS settings to specify indefinite lockout duration:

ALTER PROFILE '&PROFILE_NAME' LIMIT PASSWORD_LOCK_TIME UNLIMITED;"
          reference   : "800-171|3.1.8,800-53|AC-7,CAT|II,CCI|CCI-002236,CN-L3|8.1.4.1(b),CSCv6|16.7,ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,Rule-ID|SV-66623r3_rule,STIG-ID|O112-C2-004900,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-52407"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_LOCK_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_LOCK_TIME", regex:"^([Uu][Nn][Ll][Ii][Mm][Ii][Tt][Ee][Dd]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-004900 - The DBMS must specify an account lockout duration that is greater than or equal to the organization-approved minimum."
          info        : "Anytime an authentication method is exposed, to allow for the utilization of an application, there is a risk that attempts will be made to obtain unauthorized access.

To defeat these attempts, organizations define the number of times a user account may consecutively fail a logon attempt. The organization also defines the period of time in which these consecutive failed attempts may occur.

By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account.

User authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "Configure the DBMS settings to specify indefinite lockout duration:

ALTER PROFILE '&PROFILE_NAME' LIMIT PASSWORD_LOCK_TIME UNLIMITED;"
          reference   : "800-171|3.1.8,800-53|AC-7,CAT|II,CCI|CCI-002236,CN-L3|8.1.4.1(b),CSCv6|16.7,ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,Rule-ID|SV-66623r3_rule,STIG-ID|O112-C2-004900,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-52407"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_LOCK_TIME';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "PASSWORD_LOCK_TIME", "UNLIMITED"
        </custom_item>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-N2-008601 - Disk space used by audit trail(s) must be monitored; audit records must be regularly or continuously offloaded to a centralized log management system."
      info        : "It is critical when a system is at risk of failing to process audit logs as required; it detects and takes action to mitigate the failure. Audit processing failures include:  software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded. Applications are required to be capable of either directly performing or calling system-level functionality performing defined actions upon detection of an application audit log processing failure.

The Security Requirements Guide says, 'A failure of database auditing will result in either the database continuing to function without auditing or in a complete halt to database operations. The database must be capable of taking organization-defined actions to avoid either a complete halt to processing or processing transactions in an unaudited manner.'

This STIG requirement mandates the implementation of a method to mitigate Oracle's inability to automatically reuse audit trail space on a first-in, first-out basis.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Institute procedures, manual and/or automated, for monitoring the space used by audit trail(s), and for offloading audit records to a centralized log management system."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-66625r1_rule,STIG-ID|O112-N2-008601,Vuln-ID|V-52409"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-OS-004600 - Use of the DBMS software installation account must be restricted."
      info        : "This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

To limit exposure when operating from within a privileged account or role, the application must support organizational requirements that users of information system accounts, or roles, with access to organization-defined lists of security functions or security-relevant information, use non-privileged accounts, or roles, when accessing other (non-security) system functions.

Use of privileged accounts for non-administrative purposes puts data at risk of unintended or unauthorized loss, modification, or exposure. In particular, DBA accounts if used for non-administration application development or application maintenance can lead to miss-assignment of privileges where privileges are inherited by object owners. It may also lead to loss or compromise of application data where the elevated privileges bypass controls designed in and provided by applications.

The DBMS software installation account may require privileges not required for database administration or other functions. Use of accounts configured with excess privileges may result in the loss or compromise of data or system settings due to elevated privileges that bypass controls designed to protect them.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Restrict interactive use of the DBMS software installation account to DBMS software installation, upgrade, and maintenance actions only.

If possible, disable the installation accounts when authorized actions are not being performed. Otherwise, disable the use of the account(s) for interactive activity."
      reference   : "CAT|II,CCI|CCI-000040,Rule-ID|SV-66641r2_rule,STIG-ID|O112-OS-004600,Vuln-ID|V-52425"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-OS-010700 - Database software, applications, and configuration files must be monitored to discover unauthorized changes."
      info        : "Any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to the database software libraries or configuration can lead to unauthorized or compromised installations.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement procedures to monitor for unauthorized changes to DBMS software libraries, related software application libraries, and configuration files. If a third-party automated tool is not employed, an automated job that reports file information on the directories and files of interest and compares them to the baseline report for the same will meet the requirement.

File hashes or checksums should be used for comparisons since file dates may be manipulated by malicious users."
      reference   : "CAT|II,CCI|CCI-001499,Rule-ID|SV-66643r2_rule,STIG-ID|O112-OS-010700,Vuln-ID|V-52427"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-OS-010710 - Logic modules within the database (to include packages, procedures, functions and triggers) must be monitored to discover unauthorized changes."
      info        : "Any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.  This includes the logic modules implemented within the database, such as packages, procedures, functions and triggers.

If the DBMS were to allow any user to make changes to these, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to the database logic modules can lead to unauthorized or compromised installations.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement procedures to monitor for unauthorized changes to database logic modules. If a third-party automated tool is not employed, an automated job that reports on the objects of interest and compares them to the baseline report for the same will meet the requirement."
      reference   : "CAT|II,CCI|CCI-001499,Rule-ID|SV-83465r1_rule,STIG-ID|O112-OS-010710,Vuln-ID|V-68861"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-OS-011200 - The OS must limit privileges to change the DBMS software resident within software libraries (including privileged programs)."
      info        : "When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

If the application were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

This requirement is contingent upon the language in which the application is programmed, as many application architectures in use today incorporate their software libraries into, and make them inseparable from, their compiled distributions, rendering them static and version-dependent.  However, this requirement does apply to applications with software libraries accessible and configurable as in the case of interpreted languages.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

The DBMS software libraries contain the executables used by the DBMS to operate. Unauthorized access to the libraries can result in malicious alteration. This may in turn jeopardize data stored in the DBMS and/or operation of the host system."
      solution    : "Restrict access to the DBMS software libraries to accounts that require access based on job function."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-001499,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66645r1_rule,STIG-ID|O112-OS-011200,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52429"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT GRANTEE, GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTED_ROLE = 'DBA';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'FAILED_LOGON_ATTEMPTS' Is Unlimited"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'FAILED_LOGON_ATTEMPTS';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "FAILED_LOGON_ATTEMPTS", regex:"[1-3]"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-005000 - The DBMS must have the capability to limit the number of failed login attempts based upon an organization-defined number of consecutive invalid attempts occurring within an organization-defined time period."
          info        : "Anytime an authentication method is exposed,  to allow for the utilization of an application, there is a risk that attempts will be made to obtain unauthorized access.

To defeat these attempts, organizations define the number of times a user account may consecutively fail a login attempt. The organization also defines the period of time in which these consecutive failed attempts may occur.

By limiting the number of failed login attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account.

More recent brute force attacks make attempts over long periods of time to circumvent intrusion detection systems and system account lockouts based entirely on the number of failed logins that are typically reset after a successful login.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

Note also that a policy that places no limit on the length of the timeframe (for counting consecutive invalid attempts) does satisfy this requirement."
          solution    : "(This addresses both O112-C2-005000 and O112-C2-005200.)

Configure the DBMS settings to specify the maximum number of consecutive failed login attempts to 3 (or less):
ALTER PROFILE '&PROFILE_NAME' LIMIT FAILED_LOGON_ATTEMPTS 3;"
          reference   : "800-171|3.1.8,800-53|AC-7,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSCv6|16.7,ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,Rule-ID|SV-66647r2_rule,STIG-ID|O112-C2-005000,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-52431"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'FAILED_LOGON_ATTEMPTS';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "FAILED_LOGON_ATTEMPTS", regex:"^([1-3]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-005000 - The DBMS must have the capability to limit the number of failed login attempts based upon an organization-defined number of consecutive invalid attempts occurring within an organization-defined time period."
          info        : "Anytime an authentication method is exposed,  to allow for the utilization of an application, there is a risk that attempts will be made to obtain unauthorized access.

To defeat these attempts, organizations define the number of times a user account may consecutively fail a login attempt. The organization also defines the period of time in which these consecutive failed attempts may occur.

By limiting the number of failed login attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account.

More recent brute force attacks make attempts over long periods of time to circumvent intrusion detection systems and system account lockouts based entirely on the number of failed logins that are typically reset after a successful login.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.

Note also that a policy that places no limit on the length of the timeframe (for counting consecutive invalid attempts) does satisfy this requirement."
          solution    : "(This addresses both O112-C2-005000 and O112-C2-005200.)

Configure the DBMS settings to specify the maximum number of consecutive failed login attempts to 3 (or less):
ALTER PROFILE '&PROFILE_NAME' LIMIT FAILED_LOGON_ATTEMPTS 3;"
          reference   : "800-171|3.1.8,800-53|AC-7,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSCv6|16.7,ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,Rule-ID|SV-66647r2_rule,STIG-ID|O112-C2-005000,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-52431"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'FAILED_LOGON_ATTEMPTS';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "FAILED_LOGON_ATTEMPTS", regex:"[1-3]"
        </custom_item>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-P2-008100 - The DBMS must provide the ability to write specified audit record content to a centralized audit log repository."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes but is not limited:  timestamps, source and destination IP addresses, user/process identifiers, event descriptions, application specific events, success/fail indications, file names involved, access control or flow control rules invoked.

Centralized management of audit records and logs provides for efficiency in maintenance and management of records, as well as, the backup and archiving of those records. When organizations define application components requiring centralized audit log management, applications need to support that requirement.

Database audit records not stored in a centralized audit log management tool may be overlooked during investigation of a security incident or may be subject to intentional or accidental manipulation by privileged users of the database.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "If the organization requires the use of a centralized audit log repository, employ PL/SQL code or other software to copy or transfer the specified audit record content to the repository.

Ensure that permissions are set to enable transfer of the data.

If, after the preceding steps, the transfer is not succeeding, diagnose and repair the problem.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide:  http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "CAT|II,CCI|CCI-000136,Rule-ID|SV-66649r1_rule,STIG-ID|O112-P2-008100,Vuln-ID|V-52433"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "DEFAULT Profile 'FAILED_LOGON_ATTEMPTS' Is Unlimited"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'FAILED_LOGON_ATTEMPTS';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "FAILED_LOGON_ATTEMPTS", regex:"[1-3]"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-005200 - The DBMS, when the maximum number of unsuccessful attempts is exceeded, must automatically lock the account/node for an organization-defined time period or lock the account/node until released by an administrator IAW organizational policy."
          info        : "Anytime an authentication method is exposed,  to allow for the utilization of an application, there is a risk that attempts will be made to obtain unauthorized access.

To defeat these attempts, organizations define the number of times a user account may consecutively fail a login attempt. The organization also defines the period of time in which these consecutive failed attempts may occur.

By limiting the number of failed login attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "(This addresses both O112-C2-005000 and O112-C2-005200.)

Configure the DBMS settings to specify the maximum number of consecutive failed login attempts to 3 (or less):
ALTER PROFILE '&PROFILE_NAME' LIMIT FAILED_LOGON_ATTEMPTS 3;"
          reference   : "800-171|3.1.8,800-53|AC-7,CAT|II,CCI|CCI-000047,CN-L3|8.1.4.1(b),CSCv6|16.7,ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,Rule-ID|SV-66651r2_rule,STIG-ID|O112-C2-005200,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-52435"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'FAILED_LOGON_ATTEMPTS';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "FAILED_LOGON_ATTEMPTS", regex:"^([1-3]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt])$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-C2-005200 - The DBMS, when the maximum number of unsuccessful attempts is exceeded, must automatically lock the account/node for an organization-defined time period or lock the account/node until released by an administrator IAW organizational policy."
          info        : "Anytime an authentication method is exposed,  to allow for the utilization of an application, there is a risk that attempts will be made to obtain unauthorized access.

To defeat these attempts, organizations define the number of times a user account may consecutively fail a login attempt. The organization also defines the period of time in which these consecutive failed attempts may occur.

By limiting the number of failed login attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account.

Note that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle."
          solution    : "(This addresses both O112-C2-005000 and O112-C2-005200.)

Configure the DBMS settings to specify the maximum number of consecutive failed login attempts to 3 (or less):
ALTER PROFILE '&PROFILE_NAME' LIMIT FAILED_LOGON_ATTEMPTS 3;"
          reference   : "800-171|3.1.8,800-53|AC-7,CAT|II,CCI|CCI-000047,CN-L3|8.1.4.1(b),CSCv6|16.7,ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,Rule-ID|SV-66651r2_rule,STIG-ID|O112-C2-005200,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-52435"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'FAILED_LOGON_ATTEMPTS';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "DEFAULT", "FAILED_LOGON_ATTEMPTS", regex:"[1-3]"
        </custom_item>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-P2-010800 - The DBMS software installation account must be restricted to authorized users."
      info        : "When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

If the application were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

This requirement is contingent upon the language in which the application is programmed, as many application architectures in use today incorporate their software libraries into, and make them inseparable from, their compiled distributions, rendering them static and version-dependent. However, this requirement does apply to applications with software libraries accessible and configurable, as in the case of interpreted languages.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

DBA and other privileged administrative or application owner accounts are granted privileges that allow actions that can have a greater impact on database security and operation. It is especially important to grant access to privileged accounts to only those persons who are qualified and authorized to use them.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document, and implement procedures to restrict use of the DBMS software installation account."
      reference   : "CAT|II,CCI|CCI-001499,Rule-ID|SV-66653r1_rule,STIG-ID|O112-P2-010800,Vuln-ID|V-52437"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-P2-010900 - Database software directories, including DBMS configuration files, must be stored in dedicated directories, or DASD pools, separate from the host OS and other applications."
      info        : "When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

Multiple applications can provide a cumulative negative effect. A vulnerability and subsequent exploit to one application can lead to an exploit of other applications sharing the same security context. For example, an exploit to a web server process that leads to unauthorized administrative access to host system directories can most likely lead to a compromise of all applications hosted by the same system. Database software not installed using dedicated directories both threatens and is threatened by other hosted applications. Access controls defined for one application may by default provide access to the other application's database objects or directories. Any method that provides any level of separation of security context assists in the protection between applications.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Install all applications on directories, or pools, separate from the DBMS software library directory. Re-locate any directories or re-install other application software that currently shares the DBMS software library directory to separate directories.

For mainframe-based databases, locate database software and configuration files in separate DASD pools from other mainframe applications."
      reference   : "CAT|II,CCI|CCI-001499,Rule-ID|SV-66657r1_rule,STIG-ID|O112-P2-010900,Vuln-ID|V-52441"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-P2-012700 - The DBMS software libraries must be periodically backed up."
      info        : "Information system backup is a critical step in maintaining data assurance and availability.

System-level information includes:  system-state information, operating system and application software, and licenses.

Backups shall be consistent with organizational recovery time and recovery point objectives.

The DBMS application depends upon the availability and integrity of its software libraries. Without backups, compromise or loss of the software libraries can prevent a successful recovery of DBMS operations.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure backups to include all DBMS application and third-party database application software libraries."
      reference   : "CAT|II,CCI|CCI-000537,Rule-ID|SV-66661r1_rule,STIG-ID|O112-P2-012700,Vuln-ID|V-52445"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-005600 - The DBMS must have its auditing configured to reduce the likelihood of storage capacity being exceeded."
      info        : "Applications need to be cognizant of potential audit log storage capacity issues. During the installation and/or configuration process, applications should detect and determine if adequate storage capacity has been allocated for audit logs.

During the installation process, a notification may be provided to the installer indicating, based on the auditing configuration chosen and the amount of storage space allocated for audit logs, the amount of storage capacity available is not sufficient to meet storage requirements.

Logging must be configured appropriately. If the logs generated outstrip the amount of space reserved for those logs, the system may shut down or take other measures to stop processing in order to protect transactions from continuing unlogged."
      solution    : "Ensure that the audit logging tables are in their own tablespaces, and that the tablespaces have enough room for the volume of log data that will be produced."
      reference   : "800-53|AU-4,CAT|II,CCI|CCI-000138,CSCv6|6.3,CSF|PR.DS-4,CSF|PR.PT-1,ITSG-33|AU-4,NESA|T3.3.1,NESA|T3.6.2,Rule-ID|SV-66663r1_rule,STIG-ID|O112-C2-005600,Vuln-ID|V-52447"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT table_name, tablespace_name FROM dba_tables WHERE table_name IN ('AUD$', 'FGA_LOG$') AND tablespace_name = 'SYSTEM' ORDER BY table_name;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-005700 - The DBMS must have allocated audit record storage capacity."
      info        : "Applications need to be cognizant of potential audit log storage capacity issues. During the installation and/or configuration process, applications should detect and determine if adequate storage capacity has been allocated for audit logs.

During the installation process, a notification may be provided to the installer indicating, based on the auditing configuration chosen and the amount of storage space allocated for audit logs, the amount of storage capacity available is not sufficient to meet storage requirements.

When insufficient space in directories is allocated for audit records, database audit logs can fill up and begin to overwrite earlier logs, database activity can stop altogether, or auditing could fail and crucial tracking data could be lost."
      solution    : "Ensure that the audit logging tables are in their own tablespaces, and that the tablespaces have enough room for the volume of log data that will be produced."
      reference   : "800-53|AU-4,CAT|II,CCI|CCI-000137,CSCv6|6.3,CSF|PR.DS-4,CSF|PR.PT-1,ITSG-33|AU-4,NESA|T3.3.1,NESA|T3.6.2,Rule-ID|SV-66665r1_rule,STIG-ID|O112-C2-005700,Vuln-ID|V-52449"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT table_name, tablespace_name FROM dba_tables WHERE table_name IN ('AUD$', 'FGA_LOG$') AND tablespace_name = 'SYSTEM' ORDER BY table_name;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-P2-012800 - The DBMS must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)."
      info        : "To assure accountability and prevent unauthorized access, organizational users shall be identified and authenticated.

Organizational users include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors, guest researchers, individuals from allied nations).

Users (and any processes acting on behalf of users) are uniquely identified and authenticated for all accesses other than those accesses explicitly identified and documented by the organization which outlines specific user actions that can be performed on the information system without identification or authentication.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to uniquely identify and authenticate all organizational users who log onto the system.  Ensure that each user has a separate account from all other users.

(This is the default behavior of Oracle.)"
      reference   : "CAT|II,CCI|CCI-000764,Rule-ID|SV-66667r1_rule,STIG-ID|O112-P2-012800,Vuln-ID|V-52451"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-006600 - Databases utilizing Discretionary Access Control (DAC) must enforce a policy that limits propagation of access rights."
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment.

DAC allows the owner to determine who will have access to objects they control. An example of DAC includes user-controlled file permissions. DAC models have the potential for the access controls to propagate without limit, resulting in unauthorized access to said objects.

When applications provide a discretionary access control mechanism, the application must be able to limit the propagation of those access rights.

The DBMS must ensure the recipient of permissions possesses only the access intended. The database must enforce the ability to limit rights propagation if that is the intent of the grantor. If the propagation of access rights is not limited, users with rights to objects they do not own can continue to grant rights to those objects to other users without limit.

This is default for behavior for Oracle.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create and document an access propagation policy that limits the propagation of rights.

Configure the DBMS to enforce the access propagation policy.

When a user is granted access to an object they have access to the object.  When a used is granted access to an object with the ADMIN option, then they can provide permissions to others.  Without the ADMIN option, a user cannot grant access to an object.  No configuration is required."
      reference   : "CAT|II,CCI|CCI-001693,Rule-ID|SV-66669r1_rule,STIG-ID|O112-C2-006600,Vuln-ID|V-52453"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-P2-015800 - The DBMS must uniquely identify and authenticate non-organizational users (or processes acting on behalf of non-organizational users)."
      info        : "Non-organizational users include all information system users other than organizational users which include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors, guest researchers, individuals from allied nations).

Non-organizational users shall be uniquely identified and authenticated for all accesses other than those accesses explicitly identified and documented by the organization when related to the use of anonymous access, such as accessing a web server.

Accordingly, a risk assessment is used in determining the authentication needs of the organization.

Scalability, practicality, and security are simultaneously considered in balancing the need to ensure ease of use for access to federal information and information systems with the need to protect and adequately mitigate risk to organizational operations, organizational assets, individuals, other organizations, and the Nation.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS settings to uniquely identify and authenticate all non-organizational users who log onto the system."
      reference   : "CAT|II,CCI|CCI-000804,Rule-ID|SV-66671r1_rule,STIG-ID|O112-P2-015800,Vuln-ID|V-52455"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-006700 - A DBMS utilizing Discretionary Access Control (DAC) must enforce a policy that includes or excludes access to the granularity of a single user."
      info        : "DAC is based on the notion that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment.

DAC allows the owner to determine who will have access to objects they control. An example of DAC includes user-controlled file permissions.

Including or excluding access to the granularity of a single user means providing the capability to either allow or deny access to objects (e.g., files, folders) on a per single user basis.

Databases using DAC must have the ability for the owner of an object or information to assign or revoke rights to view or modify the object or information.  If the owner of an object or information does not have rights to exclude access to an object or information at a user level, users may gain access to objects and information they are not authorized to view/modify.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Modify DBMS settings to allow users to assign or revoke access rights to objects and information owned by the user. The ability to grant or revoke rights must include the ability to grant or revoke those rights down to the granularity of a single user.

(This is default Oracle behavior.)"
      reference   : "CAT|II,CCI|CCI-001694,Rule-ID|SV-66673r1_rule,STIG-ID|O112-C2-006700,Vuln-ID|V-52457"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-P2-017300 - The DBMS must separate user functionality (including user interface services) from database management functionality."
      info        : "Information system management functionality includes functions necessary to administer databases, network components, workstations, or servers, and typically requires privileged user access.

The separation of user functionality from information system management functionality is either physical or logical and is accomplished by using different computers, different central processing units, different instances of the operating system, different network addresses, combinations of these methods, or other methods, as appropriate.

An example of this type of separation is observed in web administrative interfaces that use separate authentication methods for users of any other information system resources.

This may include isolating the administrative interface on a different domain and with additional access controls.

If administrative functionality or information regarding DBMS management is presented on an interface available for users, information on DBMS settings may be inadvertently made available to the user.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS settings to separate database administration and general user functionality. Provide those who have both administrative and general-user responsibilities with separate accounts for these separate functions."
      reference   : "CAT|II,CCI|CCI-001082,Rule-ID|SV-66675r1_rule,STIG-ID|O112-P2-017300,Vuln-ID|V-52459"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-P2-017400 - The DBMS must prevent the presentation of information system management-related functionality at an interface utilized by general (i.e., non-privileged) users."
      info        : "Information system management functionality includes functions necessary to administer databases, network components, workstations, or servers, and typically requires privileged user access.

The separation of user functionality from information system management functionality is either physical or logical and is accomplished by using different computers, different central processing units, different instances of the operating system, different network addresses, combinations of these methods, or other methods, as appropriate.

An example of this type of separation is observed in web administrative interfaces that use separate authentication methods for users of any other information system resources. This may include isolating the administrative interface on a different domain and with additional access controls.

If administrative functionality or information regarding DBMS management is presented on an interface available for users, information on DBMS settings may be inadvertently made available to the user.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure DBMS settings to separate database administration and general user functionality.  Provide those who have both administrative and general-user  responsibilities with separate accounts for these separate functions."
      reference   : "CAT|II,CCI|CCI-001083,Rule-ID|SV-66677r1_rule,STIG-ID|O112-P2-017400,Vuln-ID|V-52461"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-006800 - The DBMS must provide audit record generation capability for organization-defined auditable events within the database."
      info        : "Audit records can be generated from various components within the information system. (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.

The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).

Organizations define which application components shall provide auditable events.

The DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system. Audit records can be generated from various components within the information system, such as network interfaces, hard disks, modems, etc. From an application perspective, certain specific application functionalities may be audited, as well.

The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).

Organizations may define the organizational personnel accountable for determining which application components shall provide auditable events.

Auditing provides accountability for changes made to the DBMS configuration or its objects and data. It provides a means to discover suspicious activity and unauthorized changes. Without auditing, a compromise may go undetected and without a means to determine accountability.

The Department of Defense has established the following as the minimum set of auditable events.  Most can be audited via Oracle settings; some may require OS settings.

- Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g. classification levels).

- Successful and unsuccessful logon attempts, privileged activities or other system level access

- Starting and ending time for user access to the system, concurrent logons from different workstations.

- Successful and unsuccessful accesses to objects.

- All program initiations.

- All direct access to the information system.

- All account creations, modifications, disabling, and terminations.

- All kernel module loads, unloads, and restarts."
      solution    : "Configure the DBMS's auditing to audit organization-defined auditable events. If preferred, use a third-party tool. The tool must provide the minimum capability to audit the required events.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm

If the organization-defined audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation, at the locations above."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000169,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66679r2_rule,STIG-ID|O112-C2-006800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52463"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-P3-006200 - The DBMS must protect against an individual using a group account from falsely denying having performed a particular action."
      info        : "Non-repudiation of actions taken is required in order to maintain application integrity. Examples of particular actions taken by individuals include creating information, sending a message, approving information (e.g., indicating concurrence or signing a contract), and receiving a message.

Non-repudiation protects individuals against later claims by an author of not having authored a particular document, a sender of not having transmitted a message, a receiver of not having received a message, or a signatory of not having signed a document.

Group authentication does not provide individual accountability for actions taken on the DBMS or data. Whenever a single database account is used to connect to the database, a secondary authentication method that provides individual accountability is required. This scenario most frequently occurs when an externally hosted application authenticates individual users to the application and the application uses a single account to retrieve or update database information on behalf of the individual users.

When group accounts are utilized without another means of identifying individual users, users may deny having performed a particular action.


This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered."
      solution    : "Use accounts assigned to individual users where feasible. Configure DBMS to provide individual accountability at the DBMS level, and in audit logs, for actions performed under a shared database account.

Modify applications and data tables that are not capturing individual user identity to do so.

Create and enforce the use of individual user IDs for logging on to Oracle tools and third-party products.

If Oracle (or third-party) auditing is not already enabled, enable it.  For Oracle auditing, use this query:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide:  http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm

If the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation, at the locations above.

If this level of auditing does not meet site-specific requirements, consider deploying the Oracle Audit Vault.  The Audit Vault is a highly configurable option from Oracle made specifically for performing the audit functions.  It has reporting capabilities as well as user-defined rules that provide additional flexibility for complex auditing requirements."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000166,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66681r3_rule,STIG-ID|O112-P3-006200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52465"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-006900 - The DBMS must allow designated organizational personnel to select which auditable events are to be audited by the database."
      info        : "The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).

If the list of auditable events is not configurable, events that should be caught by auditing may be missed.  This may allow malicious activity to be overlooked.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure the DBMS's settings to allow designated personnel to select which auditable events are audited.

Note the following:
    In Oracle, any user can configure auditing for the objects in his or her own schema by using the AUDIT statement. To undo the audit configuration for an object, the user can use the NOAUDIT statement. No additional privileges are needed to perform this task.
    To audit objects in another schema, the user must have the AUDIT ANY system privilege.
    To audit system privileges, the user must have the AUDIT SYSTEM privilege.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide:  http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "CAT|II,CCI|CCI-000171,Rule-ID|SV-66683r1_rule,STIG-ID|O112-C2-006900,Vuln-ID|V-52467"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-007000 - The DBMS must generate audit records for the DoD-selected list of auditable events, to the extent such information is available."
      info        : "Audit records can be generated from various components within the information system, such as network interfaces, hard disks, modems, etc. From an application perspective, certain specific application functionalities may be audited, as well.

The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).

Organizations may define the organizational personnel accountable for determining which application components shall provide auditable events.

Auditing provides accountability for changes made to the DBMS configuration or its objects and data. It provides a means to discover suspicious activity and unauthorized changes. Without auditing, a compromise may go undetected and without a means to determine accountability.

The Department of Defense has established the following as the minimum set of auditable events.  Most can be audited via Oracle settings; some may require OS settings.

- Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g. classification levels).

- Successful and unsuccessful logon attempts, privileged activities or other system level access

- Starting and ending time for user access to the system, concurrent logons from different workstations.

- Successful and unsuccessful accesses to objects.

- All program initiations.

- All direct access to the information system.

- All account creations, modifications, disabling, and terminations.

- All kernel module loads, unloads, and restarts.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure the DBMS's auditing settings to include auditing of events on the DoD-selected list of auditable events.

For more information on the configuration of auditing in the DBMS, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide:  http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "CAT|II,CCI|CCI-000172,Rule-ID|SV-66685r3_rule,STIG-ID|O112-C2-007000,Vuln-ID|V-52469"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-007400 - The DBMS must produce audit records containing sufficient information to establish what type of events occurred."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

Database software is capable of a range of actions on data stored within the database. It's important, for accurate forensic analysis, to know exactly what actions were performed. This requires specific information regarding the event type an audit record is referring to. If event type information is not recorded and stored with the audit record, the record itself is of very limited use."
      solution    : "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include what type of event occurred. If preferred, use a third-party or custom tool.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000130,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66687r2_rule,STIG-ID|O112-C2-007400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52471"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-007500 - The DBMS must produce audit records containing sufficient information to establish when (date and time) the events occurred."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

Database software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly when specific actions were performed. This requires the date and time an audit record is referring to. If date and time information is not recorded and stored with the audit record, the record itself is of very limited use."
      solution    : "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the date and time of any user/subject or process associated with the event. If preferred, use a third-party or custom tool.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000131,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66689r2_rule,STIG-ID|O112-C2-007500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52473"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-007600 - The DBMS must produce audit records containing sufficient information to establish where the events occurred."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

Without sufficient information establishing where the audit events occurred, investigation into the cause of events is severely hindered."
      solution    : "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include where the event occurred. If preferred, use a third-party or custom tool.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000132,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66691r2_rule,STIG-ID|O112-C2-007600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52475"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-007700 - The DBMS must produce audit records containing sufficient information to establish the sources (origins) of the events."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control, includes, but is not limited to:  timestamps, source and destination IP addresses, user/process identifiers, event descriptions, application specific events, success/fail indications, file names involved, access control or flow control rules invoked.

Without information establishing the source of activity, the value of audit records from a forensics perspective is questionable."
      solution    : "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the source of the event. If preferred, use a third-party or custom tool.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000133,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66693r2_rule,STIG-ID|O112-C2-007700,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52477"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-C2-007800 - The DBMS must produce audit records containing sufficient information to establish the outcome (success or failure) of the events."
      info        : "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes, but is not limited to: timestamps, source and destination IP addresses, user/process identifiers, event descriptions, application specific events, success/fail indications, file names involved, access control, or flow control rules invoked.

Success and failure indicators ascertain the outcome of a particular event. As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response. Without knowing the outcome of audit events, it is very difficult to accurately recreate the series of events during forensic analysis."
      solution    : "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the outcome. If preferred, use a third-party or custom tool.

If using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.

Use this query to ensure auditable events are captured:
ALTER SYSTEM SET AUDIT_TRAIL=<audit trail type> SCOPE=SPFILE;
Audit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.
After executing this statement, it may be necessary to shut down and restart the Oracle database.

For more information on the configuration of auditing, please refer to 'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:
http://docs.oracle.com/cd/E11882_01/server.112/e10575/tdpsg_auditing.htm
and 'Verifying Security Access with Auditing' in the Oracle Database Security Guide: http://docs.oracle.com/cd/E11882_01/network.112/e36292/auditing.htm#DBSEG006
and '27 DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:
http://docs.oracle.com/cd/E11882_01/appdev.112/e40758/d_audit_mgmt.htm"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000134,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-66695r2_rule,STIG-ID|O112-C2-007800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-52479"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT Name, Value FROM V$PARAMETER WHERE NAME = 'audit_trail' AND Value = 'NONE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-C2-015501 - Processes (services, applications, etc.) that connect to the DBMS independently of individual users, must use valid, current DoD-issued PKI certificates for authentication to the DBMS."
      info        : "Just as individual users must be authenticated, and just as they must use PKI-based authentication, so must any processes that connect to the DBMS.

The DoD standard for authentication of a process or device communicating with another process or device is the presentation of a valid, current, DoD-issued Public Key Infrastructure (PKI) certificate that has previously been verified as Trusted by an administrator of the other process or device.

This applies both to processes that run on the same server as the DBMS and to processes running on other computers.

The Oracle-supplied super-user account, SYS, is an exception.  It cannot currently use certificate-based authentication.  For this reason among others, use of SYS should be restricted to where it is truly needed.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "For each such account, use DoD certificate-based authentication."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-67497r2_rule,STIG-ID|O112-C2-015501,Vuln-ID|V-53281"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-021100 - Audit trail data must be retained for one year."
      info        : "Without preservation, a complete discovery of an attack or suspicious activity may not be determined.  DBMS audit data also contributes to the complete investigation of unauthorized activity and needs to be included in audit retention plans and procedures.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement an audit retention policy and procedures.

It is recommended that the most recent thirty days of audit logs remain available online.

After thirty days, the audit logs may be maintained offline.

Online maintenance provides for a more timely capability and inclination to investigate suspicious activity."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68199r1_rule,STIG-ID|O112-BP-021100,Vuln-ID|V-53959"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021200 - Access to default accounts used to support replication must be restricted to authorized DBAs."
      info        : "Replication database accounts are used for database connections between databases. Replication requires the configuration of these accounts using the same username and password on all databases participating in the replication. Replication connections use fixed user database links. This means that access to the replication account on one server provides access to the other servers participating in the replication. Granting unauthorized access to the replication account provides unauthorized and privileged access to all databases participating in the replication group."
      solution    : "Change the password for default and custom replication accounts and provide the password to IAO-authorized users only."
      reference   : "800-53|IA-3,CAT|II,CCI|CCI-000366,CSF|PR.AC-1,ITSG-33|IA-3,NESA|T5.4.3,Rule-ID|SV-68201r1_rule,STIG-ID|O112-BP-021200,TBA-FIISB|27.1,Vuln-ID|V-53961"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT COUNT(*) FROM sys.dba_repcatlog;"
      sql_types   : POLICY_INTEGER
      sql_expect  : regex:"[1-9]+"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021300 - Oracle instance names must not contain Oracle version numbers."
      info        : "Service names may be discovered by unauthenticated users. If the service name includes version numbers or other database product information, a malicious user may use that information to develop a targeted attack."
      solution    : "Follow the instructions in Oracle MetaLink Note 15390.1 (and related documents) to change the SID for the database without re-creating the database to a value that does not identify the Oracle version."
      reference   : "800-171|3.4.1,800-53|CM-8,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSF|DE.CM-7,CSF|ID.AM-1,CSF|ID.AM-2,CSF|PR.DS-3,ISO/IEC-27001|A.8.1.1,ITSG-33|CM-8,NESA|T1.2.1,NESA|T1.2.2,NIAv2|NS35,Rule-ID|SV-68203r1_rule,STIG-ID|O112-BP-021300,Vuln-ID|V-53963"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT instance_name FROM v$instance WHERE instance_name LIKE '%11.2%';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021400 - Fixed user and public database links must be authorized for use - 'DB Links'"
      info        : "Database links define connections that may be used by the local database to access remote Oracle databases. These links provide a means for a compromise to the local database to spread to remote databases in the distributed database environment. Limiting or eliminating use of database links where they are not required to support the operational system can help isolate compromises to the local or a limited number of databases."
      solution    : "Document all authorized connections from the database to remote databases in the System Security Plan.

Remove all unauthorized remote database connection definitions from the database.

From SQL*Plus:

drop database link [link name];
OR
drop public database link [link name];

Review remote database connection definitions periodically and confirm their use is still required and authorized."
      reference   : "800-171|3.1.1,800-53|AC-3,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,Rule-ID|SV-68205r1_rule,STIG-ID|O112-BP-021400,TBA-FIISB|31.1,Vuln-ID|V-53965"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT owner||': '||db_link FROM dba_db_links;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021400 - Fixed user and public database links must be authorized for use - 'repcatlog count = 0'"
      info        : "Database links define connections that may be used by the local database to access remote Oracle databases. These links provide a means for a compromise to the local database to spread to remote databases in the distributed database environment. Limiting or eliminating use of database links where they are not required to support the operational system can help isolate compromises to the local or a limited number of databases."
      solution    : "Document all authorized connections from the database to remote databases in the System Security Plan.

Remove all unauthorized remote database connection definitions from the database.

From SQL*Plus:

drop database link [link name];
OR
drop public database link [link name];

Review remote database connection definitions periodically and confirm their use is still required and authorized."
      reference   : "800-53|IA-3,CAT|II,CCI|CCI-000366,CSF|PR.AC-1,ITSG-33|IA-3,NESA|T5.4.3,Rule-ID|SV-68205r1_rule,STIG-ID|O112-BP-021400,TBA-FIISB|27.1,Vuln-ID|V-53965"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT count(*) FROM sys.dba_repcatlog;"
      sql_types   : POLICY_INTEGER
      sql_expect  : "0"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021500 - A minimum of two Oracle control files must be defined and configured to be stored on separate, archived disks (physical or virtual) or archived partitions on a RAID device."
      info        : "Oracle control files are used to store information critical to Oracle database integrity. Oracle uses these files to maintain time synchronization of database files as well as at system startup to verify the validity of system data and log files. Loss of access to the control files can affect database availability, integrity and recovery."
      solution    : "To prevent loss of service during disk failure, multiple copies of Oracle control files should be maintained on separate disks in archived directories or on separate, archived directories within one or more RAID devices.

Adding or moving a control file requires careful planning and execution.

Please consult and follow the instructions for creating control files in the Oracle Database Administrator's Guide, under Steps for Creating New Control Files."
      reference   : "800-53|AU-4(1),CAT|III,CCI|CCI-000366,CSF|PR.DS-4,CSF|PR.PT-1,Rule-ID|SV-68207r3_rule,STIG-ID|O112-BP-021500,Vuln-ID|V-53967"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT COUNT(name) FROM v$controlfile;"
      sql_types   : POLICY_INTEGER
      sql_expect  : regex:"([2-9]|[1-9][0-9]+)"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021600 - A minimum of two Oracle redo log groups/files must be defined and configured to be stored on separate, archived physical disks or archived directories on a RAID device - V$LOG count"
      info        : "The Oracle redo log files store the detailed information on changes made to the database. This information is critical to database recovery in case of a database failure."
      solution    : "To define additional redo log file groups:

From SQL*Plus (Example):

alter database add logfile group 2
('diska:log2.log', 'diskb:log2.log') size 50K;

To add additional redo log file [members] to an existing redo log file group:

From SQL*Plus (Example):

alter database add logfile member 'diskc:log2.log' to group 2;

Replace diska, diskb, diskc with valid, different disk drive specifications.

Replace log#.log file with valid or custom names for the log files."
      reference   : "800-53|CP-10(2),CAT|II,CCI|CCI-000366,CSF|RC.RP-1,CSF|RS.RP-1,ITSG-33|CP-10(2),NESA|T2.2.4,Rule-ID|SV-68209r1_rule,STIG-ID|O112-BP-021600,Vuln-ID|V-53969"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT COUNT(*) FROM V$LOG;"
      sql_types   : POLICY_INTEGER
      sql_expect  : regex:"([2-9]|[1-9][0-9])"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021600 - A minimum of two Oracle redo log groups/files must be defined and configured to be stored on separate, archived physical disks or archived directories on a RAID device - V$LOG members count"
      info        : "The Oracle redo log files store the detailed information on changes made to the database. This information is critical to database recovery in case of a database failure."
      solution    : "To define additional redo log file groups:

From SQL*Plus (Example):

alter database add logfile group 2
('diska:log2.log', 'diskb:log2.log') size 50K;

To add additional redo log file [members] to an existing redo log file group:

From SQL*Plus (Example):

alter database add logfile member 'diskc:log2.log' to group 2;

Replace diska, diskb, diskc with valid, different disk drive specifications.

Replace log#.log file with valid or custom names for the log files."
      reference   : "800-53|CP-10(2),CAT|II,CCI|CCI-000366,CSF|RC.RP-1,CSF|RS.RP-1,ITSG-33|CP-10(2),NESA|T2.2.4,Rule-ID|SV-68209r1_rule,STIG-ID|O112-BP-021600,Vuln-ID|V-53969"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT COUNT(*) FROM V$LOG WHERE members > 1;"
      sql_types   : POLICY_INTEGER
      sql_expect  : regex:"([2-9]|[1-9][0-9])"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021700 - The Oracle WITH GRANT OPTION privilege must not be granted to non-DBA or non-Application administrator user accounts."
      info        : "An account permission to grant privileges within the database is an administrative function. Minimizing the number and privileges of administrative accounts reduces the chances of privileged account exploitation. Application user accounts should never require WITH GRANT OPTION privileges since, by definition, they require only privileges to execute procedures or view / edit data."
      solution    : "Revoke privileges granted the WITH GRANT OPTION from non-DBA and accounts that do not own application objects.

Re-grant privileges without specifying WITH GRANT OPTION."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,Rule-ID|SV-68211r2_rule,STIG-ID|O112-BP-021700,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53971"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select grantee||': '||owner||'.'||table_name from dba_tab_privs where grantable = 'YES' and grantee not in (select distinct owner from dba_objects) and grantee not in (select grantee from dba_role_privs where granted_role = 'DBA') order by grantee;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021800 - Execute permission must be revoked from PUBLIC for restricted Oracle packages."
      info        : "Access to the following packages should be restricted to authorized accounts only.

UTL_FILE: allows Oracle accounts to read and write files on the host operating system.
UTL_SMTP: allows messages to be sent from an arbitrary user.
UTL_TCP: allows arbitrary data to be sent from the database server.
UTL_HTTP: allows the database server to send and receive data via HTTP.
DBMS_RANDOM: allows encrypting of data without requiring safe management of encryption keys.
DBMS_LOB: allows users access to files stored outside the database.
DBMS_SQL: allows users to write dynamic SQL procedures.
DBMS_SYS_SQL: allows users to execute SQL with DBA privileges.
DBMS_JOB: allows users to submit jobs to the database job queue.
DBMS_BACKUP_RESTORE:  allows users to backup and restore database data.
DBMS_OBFUSCATION_TOOLKIT:  allows users access to encryption and decryption functions."
      solution    : "Revoking all default installation privilege assignments from PUBLIC is not required at this time. However, execute permissions to the specified packages is required to be revoked from PUBLIC. Removal of these privileges from PUBLIC may result in invalid packages in version 10.1 and later of Oracle and an inability to execute default Oracle applications and utilities.

To correct this problem, grant execute privileges on these packages directly to the SYSMAN, WKSYS, MDSYS and SYSTEM accounts as well as any other default Oracle database and custom application object owner accounts as necessary to support execution of applications/utilities installed with an Oracle Database Server.

At a minimum, revoke the following:

From SQL*Plus:
revoke execute on UTL_FILE from PUBLIC;
revoke execute on UTL_SMTP from PUBLIC;
revoke execute on UTL_TCP from PUBLIC;
revoke execute on UTL_HTTP from PUBLIC;
revoke execute on DBMS_RANDOM from PUBLIC;
revoke execute on DBMS_LOB from PUBLIC;
revoke execute on DBMS_SQL from PUBLIC;
revoke execute on DBMS_SYS_SQL from PUBLIC;
revoke execute on DBMS_JOB from PUBLIC;
revoke execute on DBMS_BACKUP_RESTORE from PUBLIC;
revoke execute on DBMS_OBFUSCATION_TOOLKIT from PUBLIC;"
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68213r1_rule,STIG-ID|O112-BP-021800,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53973"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT table_name FROM dba_tab_privs WHERE grantee='PUBLIC' AND privilege ='EXECUTE' AND table_name IN ('UTL_FILE', 'UTL_SMTP', 'UTL_TCP', 'UTL_HTTP', 'DBMS_RANDOM', 'DBMS_LOB', 'DBMS_SQL', 'DBMS_SYS_SQL', 'DBMS_JOB', 'DBMS_BACKUP_RESTORE', 'DBMS_OBFUSCATION_TOOLKIT');"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-021900 - The Oracle REMOTE_OS_AUTHENT parameter must be set to FALSE."
      info        : "Setting this value to TRUE allows operating system authentication over an unsecured connection. Trusting remote operating systems can allow a user to impersonate another operating system user and connect to the database without having to supply a password. If REMOTE_OS_AUTHENT is set to true, the only information a remote user needs to connect to the database is the name of any user whose account is setup to be authenticated by the operating system."
      solution    : "Document remote OS authentication in the System Security Plan.

If not required or not mitigated to an acceptable level, disable remote OS authentication.

From SQL*Plus:

alter system set remote_os_authent = FALSE scope = spfile;

The above SQL*Plus command will set the parameter to take effect at next system startup."
      reference   : "800-53|IA-5(8),CAT|I,CCI|CCI-000366,CSF|PR.AC-1,ITSG-33|IA-5(8),Rule-ID|SV-68215r1_rule,STIG-ID|O112-BP-021900,SWIFT-CSCv1|5.1,Vuln-ID|V-53975"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name, value FROM v$parameter WHERE name = 'remote_os_authent';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "remote_os_authent", "FALSE"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022000 - The Oracle REMOTE_OS_ROLES parameter must be set to FALSE."
      info        : "Setting REMOTE_OS_ROLES to TRUE allows operating system groups to control Oracle roles. The default value of FALSE causes roles to be identified and managed by the database. If REMOTE_OS_ROLES is set to TRUE, a remote user could impersonate another operating system user over a network connection."
      solution    : "Document remote OS roles in the System Security Plan.

If not required, disable use of remote OS roles.

From SQL*Plus:

alter system set remote_os_roles = FALSE scope = spfile;

The above SQL*Plus command will set the parameter to take effect at next system startup."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-17,800-53|AC-2(7),CAT|I,CCI|CCI-000366,CIP|005-5-R2,CN-L3|8.1.10.6(i),CN-L3|8.1.4.4(c),CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.AC-4,CSF|PR.PT-4,ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17,ITSG-33|AC-2(7),NESA|M5.3.1,NESA|T5.4.5,Rule-ID|SV-68217r1_rule,STIG-ID|O112-BP-022000,SWIFT-CSCv1|2.6,Vuln-ID|V-53977"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name, value FROM v$parameter WHERE name = 'remote_os_roles';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "remote_os_roles", "FALSE"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022100 - The Oracle SQL92_SECURITY parameter must be set to TRUE."
      info        : "The configuration option SQL92_SECURITY specifies whether table-level SELECT privileges are required to execute an update or delete that references table column values. If this option is disabled (set to FALSE), the UPDATE privilege can be used to determine values that should require SELECT privileges.

The SQL92_SECURITY setting of TRUE prevents the exploitation of user credentials with only DELETE or UPDATE privileges on a table from being able to derive column values in that table by performing a series of update/delete statements using a where clause, and rolling back the change. In the following example, with SQL92_SECURITY set to FALSE, a user with only delete privilege on the scott.emp table is able to derive that there is one employee with a salary greater than 3000. With SQL92_SECURITY set to TRUE, that user is prevented from attempting to derive a value.

SQL92_SECURITY = FALSE
SQL> delete from scott.emp where sal > 3000;
1 row deleted
SQL> rollback;
Rollback complete

SQL92_SECURITY = TRUE
SQL> delete from scott.emp where sal > 3000;
delete from scott.emp where sal > 3000
                  *
ERROR at line 1:
ORA-01031: insufficient privileges"
      solution    : "Enable SQL92 security.

From SQL*Plus:

alter system set sql92_security = TRUE scope = spfile;

The above SQL*Plus command will set the parameter to take effect at next system startup."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68219r2_rule,STIG-ID|O112-BP-022100,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53979"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name, value FROM v$parameter WHERE name = 'sql92_security';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "sql92_security", NULL || "TRUE"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022200 - The Oracle password file ownership and permissions should be limited and the REMOTE_LOGIN_PASSWORDFILE parameter must be set to EXCLUSIVE or NONE."
      info        : "It is critically important to the security of your system that you protect your password file and the environment variables that identify the location of the password file. Any user with access to these could potentially compromise the security of the connection.
The REMOTE_LOGIN_PASSWORDFILE setting of 'NONE' disallows remote administration of the database. The REMOTE_LOGIN_PASSWORDFILE setting of 'EXCLUSIVE' allows for auditing of individual DBA logins to the SYS account. If not set to 'EXCLUSIVE,' remote connections to the database as 'internal' or 'as SYSDBA' are not logged to an individual account."
      solution    : "Disable use of the remote_login_passwordfile where remote administration is not authorized by specifying a value of NONE.

If authorized, restrict use of a password file to exclusive use by each database by specifying a value of EXCLUSIVE.

From SQL*Plus:

alter system set remote_login_passwordfile = 'EXCLUSIVE' scope = spfile;

OR

alter system set remote_login_passwordfile = 'NONE' scope = spfile;

The above SQL*Plus command will set the parameter to take effect at next system startup.

Restrict ownership and permissions on the Oracle password file to exclude world (Unix) or everyone (Windows).

More information regarding the ORAPWD file and the REMOTE_LOGIN_PASSWORDFILE parameter, can be found here:
https://docs.oracle.com/cd/E11882_01/server.112/e25494/dba.htm#ADMIN10241"
      reference   : "800-171|3.1.1,800-171|3.1.5,800-53|AC-3,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|9.2,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-6,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM3,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68221r4_rule,STIG-ID|O112-BP-022200,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53981"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name, value from v$parameter where upper(name) = 'REMOTE_LOGIN_PASSWORDFILE';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "remote_login_passwordfile", "EXCLUSIVE" || "NONE"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022300 - System privileges granted using the WITH ADMIN OPTION must not be granted to unauthorized user accounts."
      info        : "The WITH ADMIN OPTION allows the grantee to grant a privilege to another database account. Best security practice restricts the privilege of assigning privileges to authorized personnel. Authorized personnel include DBAs, object owners, and, where designed and included in the application's functions, application administrators. Restricting privilege-granting functions to authorized accounts can help decrease mismanagement of privileges and wrongful assignments to unauthorized accounts."
      solution    : "Revoke assignment of privileges with the WITH ADMIN OPTION from unauthorized users and re-grant them without the option.

From SQL*Plus:

revoke [privilege name] from user [username];

Replace [privilege name] with the named privilege and [username] with the named user.

Restrict use of the WITH ADMIN OPTION to authorized administrators.

Document authorized privilege assignments with the WITH ADMIN OPTION in the System Security Plan."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68223r3_rule,STIG-ID|O112-BP-022300,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53983"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT grantee, privilege FROM dba_sys_privs WHERE grantee NOT IN ('SYS', 'SYSTEM', 'AQ_ADMINISTRATOR_ROLE', 'DBA', 'MDSYS', 'LBACSYS', 'SCHEDULER_ADMIN', 'WMSYS') AND admin_option = 'YES' AND grantee NOT IN (SELECT grantee FROM dba_role_privs WHERE granted_role = 'DBA');"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022400 - System Privileges must not be granted to PUBLIC."
      info        : "System privileges can be granted to users and roles and to the user group PUBLIC. All privileges granted to PUBLIC are accessible to every user in the database. Many of these privileges convey considerable authority over the database and are granted only to those persons responsible for administering the database. In general, these privileges should be granted to roles and then the appropriate roles should be granted to users. System privileges should never be granted to PUBLIC as this could allow users to compromise the database."
      solution    : "Revoke any system privileges assigned to PUBLIC:

From SQL*Plus:

revoke [system privilege] from PUBLIC;

Replace [system privilege] with the named system privilege.

NOTE:  System privileges are not granted to PUBLIC by default and would indicate a custom action."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68225r1_rule,STIG-ID|O112-BP-022400,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53985"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT grantee, privilege FROM dba_sys_privs WHERE grantee = 'PUBLIC';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022500 - Oracle roles granted using the WITH ADMIN OPTION must not be granted to unauthorized accounts."
      info        : "The WITH ADMIN OPTION allows the grantee to grant a role to another database account. Best security practice restricts the privilege of assigning privileges to authorized personnel. Authorized personnel include DBA's, object owners, and, where designed and included in the application's functions, application administrators. Restricting privilege-granting functions to authorized accounts can help decrease mismanagement of privileges and wrongful assignments to unauthorized accounts."
      solution    : "Revoke assignment of roles with the WITH ADMIN OPTION from unauthorized grantees and re-grant them without the option if required.

From SQL*Plus:

revoke [role name] from [grantee];
grant [role name] to [grantee];

Restrict use of the WITH ADMIN OPTION to authorized administrators.

Document authorized role assignments with the WITH ADMIN OPTION in the System Security Plan."
      reference   : "800-171|3.1.5,800-53|AC-6(5),CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,Rule-ID|SV-68227r2_rule,STIG-ID|O112-BP-022500,SWIFT-CSCv1|1.2,Vuln-ID|V-53987"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT grantee, granted_role FROM dba_role_privs WHERE grantee NOT IN ('DBA', 'SYS', 'SYSTEM', 'WKSYS', 'LBACSYS', 'WMSYS', 'OWBSYS', 'CTXSYS', 'SPATIAL_CSW_ADMIN_USR', 'SPATIAL_WFS_ADMIN_USR', 'FLOWS_030000') AND admin_option = 'YES' AND grantee NOT IN (SELECT distinct owner FROM dba_objects) AND grantee NOT IN (SELECT grantee FROM dba_role_privs WHERE granted_role = 'DBA') ORDER BY grantee;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022600 - Object permissions granted to PUBLIC must be restricted."
      info        : "Permissions on objects may be granted to the user group PUBLIC. Because every database user is a member of the PUBLIC group, granting object permissions to PUBLIC gives all users in the database access to that object. In a secure environment, granting object permissions to PUBLIC should be restricted to those objects that all users are allowed to access. The policy does not require object permissions assigned to PUBLIC by the installation of Oracle Database server components to be revoked (with the exception of the packages listed in O112-BP-021800)."
      solution    : "Revoke any privileges granted to PUBLIC for objects that are not owned by Oracle product accounts.

From SQL*Plus:

revoke [privilege name] from [user name] on [object name];

Assign permissions to custom application user roles based on job functions:

From SQL*Plus:

grant [privilege name] to [user role] on [object name];"
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68229r3_rule,STIG-ID|O112-BP-022600,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53989"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT owner, table_name, privilege FROM dba_tab_privs WHERE grantee = 'PUBLIC' AND owner NOT IN ('SYS', 'CTXSYS', 'MDSYS', 'ODM', 'OLAPSYS', 'MTSSYS', 'ORDPLUGINS', 'ORDSYS', 'SYSTEM', 'WKSYS', 'WMSYS', 'XDB', 'LBACSYS', 'PERFSTAT', 'SYSMAN', 'DMSYS', 'EXFSYS');"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022800 - Application role permissions must not be assigned to the Oracle PUBLIC role."
      info        : "Application roles have been granted to PUBLIC. Permissions granted to PUBLIC are granted to all users of the database. Custom roles should be used to assign application permissions to functional groups of application users. The installation of Oracle does not assign role permissions to PUBLIC."
      solution    : "Revoke role grants from PUBLIC.

Do not assign role privileges to PUBLIC.

From SQL*Plus:

revoke [role name] from PUBLIC;"
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68233r1_rule,STIG-ID|O112-BP-022800,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53993"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT grantee, granted_role FROM dba_role_privs WHERE grantee = 'PUBLIC';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-022900 - Oracle application administration roles must be disabled if not required and authorized."
      info        : "Application administration roles, which are assigned system or elevated application object privileges, should be protected from default activation. Application administration roles are determined by system privilege assignment (create / alter / drop user) and application user role ADMIN OPTION privileges."
      solution    : "For each role assignment returned, issue:

From SQL*Plus:

alter user [username] default role all except [role];

If the user has more than one application administration role assigned, then you will have to remove assigned roles from default assignment and assign individually the appropriate default roles."
      reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|II,CCI|CCI-000366,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-6,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68235r3_rule,STIG-ID|O112-BP-022900,SWIFT-CSCv1|5.1,Vuln-ID|V-53995"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT grantee, granted_role FROM dba_role_privs WHERE default_role='YES' AND granted_role IN (SELECT grantee FROM dba_sys_privs WHERE UPPER(privilege) LIKE '%USER%') AND grantee NOT IN ('DBA', 'SYS', 'SYSTEM', 'CTXSYS', 'IMP_FULL_DATABASE', 'MDSYS', 'SYS', 'WKSYS') AND grantee NOT IN (SELECT DISTINCT owner FROM dba_tables) AND grantee NOT IN (SELECT DISTINCT username FROM dba_users WHERE UPPER(account_status) LIKE '%LOCKED%');"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-BP-023000 - Connections by mid-tier web and application systems to the Oracle DBMS from a DMZ or external network must be encrypted."
      info        : "Multi-tier systems may be configured with the database and connecting middle-tier system located on an internal network, with the database located on an internal network behind a firewall and the middle-tier system located in a DMZ. In cases where either or both systems are located in the DMZ (or on networks external to DoD), network communications between the systems must be encrypted.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure communications between the DBMS and remote applications/application servers to use DoD-approved encryption."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68237r3_rule,STIG-ID|O112-BP-023000,Vuln-ID|V-53997"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-023100 - Database job/batch queues must be reviewed regularly to detect unauthorized database job submissions - job_queue_processes"
      info        : "Unauthorized users may bypass security mechanisms by submitting jobs to job queues managed by the database to be run under a more privileged security context of the database or host system. These queues should be monitored regularly to detect any such unauthorized job submissions."
      solution    : "Develop, document and implement procedures to monitor the database job queues for unauthorized job submissions.

Develop, document and implement a formal migration plan to convert jobs using DBMS_JOB to use DBMS_SCHEDULER instead for Oracle versions 10.1 and higher.  (This does not apply to DBMS_JOB jobs generated by Oracle itself, such as those for refreshing materialized views.)

Set the value of the job_queue_processes parameter to a low value to restrict concurrent DBMS_JOB executions.

Use auditing to capture use of the DBMS_JOB package in the audit trail. Review the audit trail for unauthorized use of the DBMS_JOB package."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68239r4_rule,STIG-ID|O112-BP-023100,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53999"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name||' = '||value FROM v$parameter WHERE name = 'job_queue_processes';"
      sql_types   : POLICY_VARCHAR
# Note: Variable @JOB_QUEUE_PROC@ replaced with "10" in field "sql_expect".
      sql_expect  : "job_queue_processes = 10"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-023100 - Database job/batch queues must be reviewed regularly to detect unauthorized database job submissions - MAX_JOB_SLAVE_PROCESSES"
      info        : "Unauthorized users may bypass security mechanisms by submitting jobs to job queues managed by the database to be run under a more privileged security context of the database or host system. These queues should be monitored regularly to detect any such unauthorized job submissions."
      solution    : "Develop, document and implement procedures to monitor the database job queues for unauthorized job submissions.

Develop, document and implement a formal migration plan to convert jobs using DBMS_JOB to use DBMS_SCHEDULER instead for Oracle versions 10.1 and higher.  (This does not apply to DBMS_JOB jobs generated by Oracle itself, such as those for refreshing materialized views.)

Set the value of the job_queue_processes parameter to a low value to restrict concurrent DBMS_JOB executions.

Use auditing to capture use of the DBMS_JOB package in the audit trail. Review the audit trail for unauthorized use of the DBMS_JOB package."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68239r4_rule,STIG-ID|O112-BP-023100,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53999"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT attribute_name||' = '||value FROM all_scheduler_global_attribute WHERE ATTRIBUTE_NAME = 'MAX_JOB_SLAVE_PROCESSES';"
      sql_types   : POLICY_VARCHAR
# Note: Variable @MAX_JOB_SLAVE_PROC@ replaced with "999" in field "sql_expect".
      sql_expect  : "MAX_JOB_SLAVE_PROCESSES = 999"
    </custom_item>

    <report type:"WARNING">
      description : "O112-BP-023300 - Sensitive information from production database exports must be modified before being imported into a development database."
      info        : "Data export from production databases may include sensitive data. Application developers do not have a need to know to sensitive data. Any access they may have to production data would be considered unauthorized access and subject the sensitive data to unlawful or unauthorized disclosure. See DODD 8500.1 for a definition of Sensitive Information.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement policy, procedures and restrictions for production data import.

Require any users assigned privileges that allow the export of production data from the database to acknowledge understanding of import policies, procedures and restrictions.

Restrict permissions of development personnel requiring use or access to production data imported into development databases containing sensitive information to authorized users.

Implement policy and procedures to modify or remove sensitive information in production exports prior to import into development databases."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68243r2_rule,STIG-ID|O112-BP-023300,Vuln-ID|V-54003"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-023400 - Application user privilege assignment must be reviewed monthly or more frequently to ensure compliance with least privilege and documented policy."
      info        : "Users granted privileges not required to perform their assigned functions are able to make unauthorized modifications to the production data or database. Monthly or more frequent periodic review of privilege assignments assures that organizational and/or functional changes are reflected appropriately.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement policy and procedures for periodic review of database user accounts and privilege assignments.

Include methods to provide evidence of review in the procedures to verify reviews occur in accordance with the procedures."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68245r1_rule,STIG-ID|O112-BP-023400,Vuln-ID|V-54005"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-023500 - Audit trail data must be reviewed daily or more frequently."
      info        : "Review of audit trail data provides a means for detection of unauthorized access or attempted access. Frequent and regularly scheduled reviews ensure that such access is discovered in a timely manner.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement policy and procedures to monitor audit trail data daily."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68247r1_rule,STIG-ID|O112-BP-023500,Vuln-ID|V-54007"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-023600 - Only authorized system accounts must have the SYSTEM tablespace specified as the default tablespace - non-default account records"
      info        : "The Oracle SYSTEM tablespace is used by the database to store all DBMS system objects. Other use of the system tablespace may compromise system availability and the effectiveness of host system access controls to the tablespace files."
      solution    : "Create and dedicate tablespaces to support only one application.

Do not share tablespaces between applications.

Do not grant quotas to application object owners on tablespaces not dedicated to their associated application.

Run the queries:

alter database default tablespace <tablespace_name>;
alter database default temporary tablespace <temporary_tablespace_name>;

alter user <username> default tablespace <tablespace_name> temporary tablespace <temporary_tablespace_name>;

Replace <username> with the named user account.
Replace <tablespace_name> with the new default tablespace name.
Replace <temporary_tablespace_name> with the new default temporary tablespace name (typically TEMP).
Repeat the 'alter user' for each affected user account."
      reference   : "800-171|3.1.1,800-53|AC-3,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,Rule-ID|SV-68249r2_rule,STIG-ID|O112-BP-023600,TBA-FIISB|31.1,Vuln-ID|V-54009"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT username FROM dba_users WHERE (default_tablespace = 'SYSTEM' OR temporary_tablespace = 'SYSTEM') AND username NOT IN ('AURORA$JIS$UTILITY$','AURORA$ORB$UNAUTHENTICATED', 'DBSNMP','MDSYS','ORDPLUGINS','ORDSYS','OSE$HTTP$ADMIN', 'OUTLN','REPADMIN','SYS','SYSTEM','TRACESVR','MTSSYS','DIP');"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-023600 - Only authorized system accounts must have the SYSTEM tablespace specified as the default tablespace - default tablespace"
      info        : "The Oracle SYSTEM tablespace is used by the database to store all DBMS system objects. Other use of the system tablespace may compromise system availability and the effectiveness of host system access controls to the tablespace files."
      solution    : "Create and dedicate tablespaces to support only one application.

Do not share tablespaces between applications.

Do not grant quotas to application object owners on tablespaces not dedicated to their associated application.

Run the queries:

alter database default tablespace <tablespace_name>;
alter database default temporary tablespace <temporary_tablespace_name>;

alter user <username> default tablespace <tablespace_name> temporary tablespace <temporary_tablespace_name>;

Replace <username> with the named user account.
Replace <tablespace_name> with the new default tablespace name.
Replace <temporary_tablespace_name> with the new default temporary tablespace name (typically TEMP).
Repeat the 'alter user' for each affected user account."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ISO/IEC-27001|A.9.4.1,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-68249r2_rule,STIG-ID|O112-BP-023600,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-54009"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select property_name, property_value from database_properties where property_name in ('DEFAULT_PERMANENT_TABLESPACE','DEFAULT_TEMP_TABLESPACE') AND property_value = 'SYSTEM';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-023700 - Application owner accounts must have a dedicated application tablespace."
      info        : "Separation of tablespaces by application helps to protect the application from resource contention and unauthorized access that could result from storage space reuses or host system access controls. Application data should be stored separately from system and custom user-defined objects to facilitate administration and management of its data storage. The SYSTEM tablespace should never be used for application data storage in order to prevent resource contention and performance degradation."
      solution    : "Create and assign dedicated tablespaces for the storage of data by each application using the CREATE TABLESPACE command."
      reference   : "800-171|3.1.5,800-53|AC-6(4),CAT|II,CCI|CCI-000366,CSF|PR.AC-4,ITSG-33|AC-6(4),PCI-DSSv3.1|7.1.2,Rule-ID|SV-68251r3_rule,STIG-ID|O112-BP-023700,Vuln-ID|V-54011"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "select distinct owner, tablespace_name from dba_SEGMENTS where owner not in ('SYS','SYSTEM','OUTLN','OLAPSYS','CTXSYS','WKSYS','ODM','ODM_MTR','MDSYS','ORDSYS','WMSYS','RMAN','XDB','AUDSYS','DBSNMP','GSMADMIN_INTERNAL') order by tablespace_name;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Check LOG_MODE = NOARCHIVELOG"
          sql_request : "SELECT log_mode FROM v$database;"
          sql_types   : POLICY_VARCHAR
          sql_expect  : "NOARCHIVELOG"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O112-BP-023800 - The directories assigned to the LOG_ARCHIVE_DEST* parameters must be protected from unauthorized access."
          info        : "The LOG_ARCHIVE_DEST parameter is used to specify the directory to which Oracle archive logs are written. Where the DBMS availability and recovery to a specific point in time is critical, the protection of archive log files is critical. Archive log files may also contain unencrypted sensitive data. If written to an inadequately protected or invalidated directory, the archive log files may be accessed by unauthorized persons or processes."
          solution    : "Specify a valid and protected directory for archive log files.

Restrict access to the Oracle process and software owner accounts, DBAs, and backup operator accounts."
          reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000366,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-68253r1_rule,STIG-ID|O112-BP-023800,SWIFT-CSCv1|5.1,Vuln-ID|V-54013"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
        </report>
      </then>

      <else>
        <if>
          <condition type:"AND">
            <custom_item>
              type        : SQL_POLICY
              description : "Check log_archive_dest is NULL"
              sql_request : "SELECT value FROM v$parameter WHERE name = 'log_archive_dest';"
              sql_types   : POLICY_VARCHAR
              sql_expect  : NULL
            </custom_item>
          </condition>

          <then>
            <custom_item>
              type        : SQL_POLICY
              description : "O112-BP-023800 - The directories assigned to the LOG_ARCHIVE_DEST* parameters must be protected from unauthorized access."
              info        : "The LOG_ARCHIVE_DEST parameter is used to specify the directory to which Oracle archive logs are written. Where the DBMS availability and recovery to a specific point in time is critical, the protection of archive log files is critical. Archive log files may also contain unencrypted sensitive data. If written to an inadequately protected or invalidated directory, the archive log files may be accessed by unauthorized persons or processes."
              solution    : "Specify a valid and protected directory for archive log files.

Restrict access to the Oracle process and software owner accounts, DBAs, and backup operator accounts."
              reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000366,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-68253r1_rule,STIG-ID|O112-BP-023800,SWIFT-CSCv1|5.1,Vuln-ID|V-54013"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
              sql_request : "SELECT name, value FROM v$parameter WHERE name LIKE 'log_archive_dest_%';"
              sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
              sql_expect  : regex: "log_archive_dest_(10|[1-9])", regex: ".+"
            </custom_item>
          </then>

          <else>
            <custom_item>
              type        : SQL_POLICY
              description : "O112-BP-023800 - The directories assigned to the LOG_ARCHIVE_DEST* parameters must be protected from unauthorized access."
              info        : "The LOG_ARCHIVE_DEST parameter is used to specify the directory to which Oracle archive logs are written. Where the DBMS availability and recovery to a specific point in time is critical, the protection of archive log files is critical. Archive log files may also contain unencrypted sensitive data. If written to an inadequately protected or invalidated directory, the archive log files may be accessed by unauthorized persons or processes."
              solution    : "Specify a valid and protected directory for archive log files.

Restrict access to the Oracle process and software owner accounts, DBAs, and backup operator accounts."
              reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000366,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-68253r1_rule,STIG-ID|O112-BP-023800,SWIFT-CSCv1|5.1,Vuln-ID|V-54013"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
              sql_request : "SELECT value FROM v$parameter WHERE name = 'log_archive_dest';"
              sql_types   : POLICY_VARCHAR
              sql_expect  : regex: ".+"
            </custom_item>
          </else>
        </if>
      </else>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-023900 - The Oracle _TRACE_FILES_PUBLIC parameter if present must be set to FALSE."
      info        : "The _TRACE_FILES_PUBLIC parameter is used to make trace files used for debugging database applications and events available to all database users. Use of this capability precludes the discrete assignment of privileges based on job function. Additionally, its use may provide access to external files and data to unauthorized users."
      solution    : "From SQL*Plus (shutdown database instance):

shutdown immediate

From SQL*Plus (create a pfile from spfile):

create pfile='[PATH]init[SID].ora' from spfile;

Edit the init[SID].ora file and remove the following line:

*._trace_files_public=TRUE

From SQL*Plus (update the spfile using the pfile):

create spfile from pfile='[PATH]init[SID].ora';

From SQL*Plus (start the database instance):

startup

NOTE: [PATH] depends on the platform (Windows or UNIX).

Ensure the file is directed to a writable location.

[SID] is equal to the oracle SID or database instance ID."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-68255r1_rule,STIG-ID|O112-BP-023900,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-54015"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT value FROM v$parameter WHERE name = '_trace_files_public';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL || "FALSE"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-024000 - Application object owner accounts must be disabled when not performing installation or maintenance actions - locked roles"
      info        : "Object ownership provides all database object permissions to the owned object. Access to the application object owner accounts requires special protection to prevent unauthorized access and use of the object ownership privileges. In addition to the high privileges to application objects assigned to this account, it is also an account that, by definition, is not accessed interactively except for application installation and maintenance. This reduced access to the account means that unauthorized access to the account could go undetected. To help protect the account, it should be enabled only when access is required."
      solution    : "Disable any application object owner accounts.

From SQL*Plus:
alter user [username] account lock;

Enable application object owner accounts only for installation and maintenance.

DBA are special purpose accounts and do not require disabling although they may own objects.

For application objects that require routine maintenance, e.g. index objects, to maintain performance, consider allowing a special purpose account to own the index or enable the application owner account for the duration of the routine maintenance function only."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ISO/IEC-27001|A.9.4.1,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-68257r3_rule,STIG-ID|O112-BP-024000,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-54017"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT DISTINCT o.owner FROM dba_objects o, dba_users u WHERE o.owner NOT IN ('ANONYMOUS','AURORA$JIS$UTILITY$', 'AURORA$ORB$UNAUTHENTICATED','CTXSYS','DBSNMP','DIP','DVF', 'DVSYS','EXFSYS','LBACSYS','MDDATA','MDSYS','MGMT_VIEW','ODM', 'ODM_MTR','OLAPSYS','ORDPLUGINS','ORDSYS','OSE$HTTP$ADMIN', 'OUTLN','PERFSTAT','PUBLIC','REPADMIN','RMAN', 'SI_INFORMTN_SCHEMA','SYS','SYSMAN','SYSTEM','TRACESVR', 'TSMSYS','WK_TEST','WKPROXY','WKSYS','WKUSER','WMSYS','XDB') AND o.object_type <> 'SYNONYM' AND o.owner = username AND UPPER(account_status) NOT LIKE '%LOCKED%';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-024000 - Application object owner accounts must be disabled when not performing installation or maintenance actions - dba roles"
      info        : "Object ownership provides all database object permissions to the owned object. Access to the application object owner accounts requires special protection to prevent unauthorized access and use of the object ownership privileges. In addition to the high privileges to application objects assigned to this account, it is also an account that, by definition, is not accessed interactively except for application installation and maintenance. This reduced access to the account means that unauthorized access to the account could go undetected. To help protect the account, it should be enabled only when access is required."
      solution    : "Disable any application object owner accounts.

From SQL*Plus:
alter user [username] account lock;

Enable application object owner accounts only for installation and maintenance.

DBA are special purpose accounts and do not require disabling although they may own objects.

For application objects that require routine maintenance, e.g. index objects, to maintain performance, consider allowing a special purpose account to own the index or enable the application owner account for the duration of the routine maintenance function only."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ISO/IEC-27001|A.9.4.1,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-68257r3_rule,STIG-ID|O112-BP-024000,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-54017"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT grantee FROM dba_role_privs WHERE granted_role = 'DBA';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <report type:"WARNING">
      description : "O112-BP-024100 - DBMS production application and data directories must be protected from developers on shared production/development DBMS host systems."
      info        : "Developer roles should not be assigned DBMS administrative privileges to production DBMS application and data directories. The separation of production DBA and developer roles helps protect the production system from unauthorized, malicious or unintentional interruption due to development activities.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create separate DBMS host OS groups for developer and production DBAs.

Do not assign production DBA OS group membership to accounts used for development.

Remove development accounts from production DBA OS group membership.

Recommend establishing a dedicated DBMS host for production DBMS installations (See Checks O112-BP-025000 and O112-BP-025300). A dedicated host system in this case refers to an instance of the operating system at a minimum. The operating system may reside on a virtual host machine where supported by the DBMS vendor."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68259r1_rule,STIG-ID|O112-BP-024100,Vuln-ID|V-54019"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-024200 - Use of the DBMS installation account must be logged."
      info        : "The DBMS installation account may be used by any authorized user to perform DBMS installation or maintenance. Without logging, accountability for actions attributed to the account is lost.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement a logging procedure for use of the DBMS software installation account that provides accountability to individuals for any actions taken by the account.

Host system audit logs should be included in the DBMS account usage log along with an indication of the person who accessed the account and an explanation for the access.

Ensure all accounts with administrator privileges are monitored for DBMS host on Windows OS platforms."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68261r1_rule,STIG-ID|O112-BP-024200,Vuln-ID|V-54021"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-024400 - Remote administrative access to the database must be monitored by the IAO or IAM."
      info        : "Remote administrative access to systems provides a path for access to and exploit of DBA privileges. Where the risk has been accepted to allow remote administrative access, it is imperative to instate increased monitoring of this access to detect any abuse or compromise.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement policy and procedures to monitor remote administrative access to the DBMS.

The automated generation of a log report with automatic dissemination to the IAO/IAM may be used.

Require and store an acknowledgement of receipt and confirmation of review for the log report."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68263r1_rule,STIG-ID|O112-BP-024400,Vuln-ID|V-54023"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-024500 - The database must not be directly accessible from public or unauthorized networks."
      info        : "Databases often store critical and/or sensitive information used by the organization. For this reason, databases are targeted for attacks by malicious users. Additional protections provided by network defenses that limit accessibility help protect the database and its data from unnecessary exposure and risk.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Do not allow direct connections from users originating from the Internet or other public network to the DBMS.

Include in the System Security Plan for the system whether the DBMS serves public-facing applications or applications serving users from other untrusted networks.

Do not store sensitive or classified data on a DBMS server that serves public-facing applications."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68265r1_rule,STIG-ID|O112-BP-024500,Vuln-ID|V-54025"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-024600 - The IAM must review changes to DBA role assignments."
      info        : "Unauthorized assignment of DBA privileges can lead to a compromise of DBMS integrity. Providing oversight to the authorization and assignment of privileges provides the separation of duty to support sufficient oversight.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement procedures to monitor changes to DBA role assignments.

Develop, document and implement procedures to notify the IAM of changes to DBA role assignments.

Include in the procedures methods that provide evidence of monitoring and notification."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68267r1_rule,STIG-ID|O112-BP-024600,Vuln-ID|V-54027"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-024700 - Plans and procedures for testing DBMS installations, upgrades and patches must be defined and followed prior to production implementation."
      info        : "Updates and patches to existing software have the intention of improving the security or enhancing or adding features to the product. However, it is unfortunately common that updates or patches can render production systems inoperable or even introduce serious vulnerabilities. Some updates also set security configurations back to unacceptable settings that do not meet security requirements. For these reasons, it is a good practice to test updates and patches offline before introducing them in a production environment.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement procedures for testing DBMS installations, upgrades and patches prior to deployment on production systems."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68269r1_rule,STIG-ID|O112-BP-024700,Vuln-ID|V-54029"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-024800 - Procedures and restrictions for import of production data to development databases must be documented, implemented, and followed."
      info        : "Data export from production databases may include sensitive data. Application developers may not be cleared for or have need-to-know to sensitive data. Any access they may have to production data would be considered unauthorized access and subject the sensitive data to unlawful or unauthorized disclosure.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document and implement policy and procedures that provide restrictions for production data export.

Require users and administrators assigned privileges that allow the export of production data from a production database to acknowledge understanding of export restrictions.

Restrict permissions allowing use or access to database export procedures or functions to authorized users.

Ensure sensitive data from production is sanitized prior to import to a development database (O112-BP-023300).

Grant access and need-to-know to developers where allowed by policy."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68271r1_rule,STIG-ID|O112-BP-024800,Vuln-ID|V-54031"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-024900 - Sensitive data stored in the database must be identified in the System Security Plan and AIS Functional Architecture documentation."
      info        : "A DBMS that does not have the correct confidentiality level identified or any confidentiality level assigned is not being secured at a level appropriate to the risk it poses.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Include identification of any sensitive data in the AIS Functional Architecture and the System Security Plan.

Include data that appear to be sensitive with a discussion as to why it is not marked as such."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68273r1_rule,STIG-ID|O112-BP-024900,Vuln-ID|V-54033"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-023200 - Unauthorized database links must not be defined and active."
      info        : "DBMS links provide a communication and data transfer path definition between two databases that may be used by malicious users to discover and obtain unauthorized access to remote systems. Database links between production and development DBMSs provide a means for developers to access production data not authorized for their access or to introduce untested or unauthorized applications to the production database. Only protected, controlled, and authorized downloads of any production data to use for development should be allowed. Only applications that have completed the configuration management process should be introduced by the application object owner account to the production system."
      solution    : "Document all remote or external interfaces used by the DBMS to connect to or allow connections from remote or external sources.

Include with the documentation as appropriate, any network ports or protocols, security accounts, and the sensitivity of any data exchanged.

Do not define or configure database links between production databases and test or development databases."
      reference   : "800-171|3.1.1,800-53|AC-3,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,Rule-ID|SV-68241r1_rule,STIG-ID|O112-BP-023200,TBA-FIISB|31.1,Vuln-ID|V-54001"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT db_link, host FROM dba_db_links;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-025500 - Replication accounts must not be granted DBA privileges."
      info        : "Replication accounts may be used to access databases defined for the replication architecture. An exploit of a replication on one database could lead to the compromise of any database participating in the replication that uses the same account name and credentials. If the replication account is compromised and it has DBA privileges, the database is at additional risk to unauthorized or malicious action."
      solution    : "Restrict privileges assigned to replication accounts to the fewest possible privileges.

Remove DBA roles from replication accounts.

Create and use custom replication accounts assigned least privileges for supporting replication operations."
      reference   : "800-53|IA-3,CAT|II,CCI|CCI-000366,CSF|PR.AC-1,ITSG-33|IA-3,NESA|T5.4.3,Rule-ID|SV-68285r1_rule,STIG-ID|O112-BP-025500,TBA-FIISB|27.1,Vuln-ID|V-54045"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT COUNT(*) FROM sys.dba_repcatlog;"
      sql_types   : POLICY_INTEGER
      sql_expect  : regex:"[1-9]+"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-025800 - Changes to configuration options must be audited."
      info        : "The AUDIT_SYS_OPERATIONS parameter is used to enable auditing of actions taken by the user SYS. The SYS user account is a shared account by definition and holds all privileges in the Oracle database. It is the account accessed by users connecting to the database with SYSDBA or SYSOPER privileges."
      solution    : "From SQL*Plus:

alter system set audit_sys_operations = TRUE scope = spfile;

The above SQL*Plus command will set the parameter to take effect at next system startup."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-68291r1_rule,STIG-ID|O112-BP-025800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-54051"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name, value FROM v$parameter WHERE name = 'audit_sys_operations';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "audit_sys_operations", "TRUE"
    </custom_item>

    <report type:"WARNING">
      description : "O112-BP-026000 - Remote DBMS administration must be documented and authorized or disabled."
      info        : "Remote administration may expose configuration and sensitive data to unauthorized viewing during transit across the network or allow unauthorized administrative access to the DBMS to remote users.

For the purposes of this STIG, 'Remote' means 'outside the DoDIN.' However, use of an approved and properly configured VPN counts as inside the DoDIN.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Disable remote administration of the DBMS where not required.

Where remote administration of the DBMS is required, develop, document and implement policy and procedures on its use.

Where remote administration is to be performed from outside the DoDIN, configure an approved VPN client for this purpose.

Assign remote administration privileges to ISSO-authorized personnel only.

Document assignments in the System Security Plan."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68295r3_rule,STIG-ID|O112-BP-026000,Vuln-ID|V-54055"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-026100 - DBMS symmetric keys must be protected in accordance with NSA- or NIST-approved key management technology or processes."
      info        : "Symmetric keys used for encryption protect data from unauthorized access. However, if not protected in accordance with acceptable standards, the keys themselves may be compromised and used for unauthorized data access.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement the following for symmetric and other encryption keys:

  -  protection from unauthorized access in transit and in storage
  -  utilization of accepted algorithms
  -  generation in accordance with required standards for the key's use
  -  expiration date
  -  continuity - key backup and recovery
  -  key change
  -  archival key storage (as necessary)

Details for key management requirements are provided by FIPS 140-2 key management standards available from NIST."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68307r2_rule,STIG-ID|O112-BP-026100,Vuln-ID|V-54067"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-BP-026200 - Changes to DBMS security labels must be audited."
      info        : "Some DBMS systems provide the feature to assign security labels to data elements. If labeling is required, implementation options include the Oracle Label Security package, or a third-party product, or custom-developed functionality.  The confidentiality and integrity of the data depends upon the security label assignment where this feature is in use. Changes to security label assignment may indicate suspicious activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Define the policy for auditing changes to security labels defined for the data.

Document the audit requirements in the System Security Plan and configure database auditing in accordance with the policy."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68309r3_rule,STIG-ID|O112-BP-026200,Vuln-ID|V-54069"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "O112-BP-026300 - Remote database or other external access must use fully-qualified names."
      info        : "The Oracle GLOBAL_NAMES parameter is used to set the requirement for database link names to be the same name as the remote database whose connection they define. By using the same name for both, ambiguity is avoided and unauthorized or unintended connections to remote databases are less likely."
      solution    : "From SQL*Plus:

alter system set global_names = TRUE scope = spfile;

NOTE: This parameter, if changed, will affect all currently defined Oracle database links.

The above SQL*Plus command will set the parameter to take effect at next system startup."
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-68311r1_rule,STIG-ID|O112-BP-026300,SWIFT-CSCv1|2.3,Vuln-ID|V-54071"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
      sql_request : "SELECT name, value FROM v$parameter WHERE name = 'global_names';"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "global_names", "TRUE"
    </custom_item>

    <report type:"WARNING">
      description : "O112-BP-024300 - The DBMS host platform and other dependent applications must be configured in compliance with applicable STIG requirements."
      info        : "The security of the data stored in the DBMS is also vulnerable to attacks against the host platform, calling applications, and other application or optional components.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure all related application components and the DBMS host platform in accordance with the applicable DoD STIG.

Regularly audit the security configuration of related applications and the host platform to confirm continued compliance with security requirements."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68319r1_rule,STIG-ID|O112-BP-024300,Vuln-ID|V-54079"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Check audit_trail is DB or DB, EXTENDED"
          sql_request : "SELECT name, value FROM v$parameter WHERE name = 'audit_trail';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "audit_trail", "DB" || "DB, EXTENDED"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O112-BP-025101 - The directory assigned to the AUDIT_FILE_DEST parameter must be protected from unauthorized access and must be stored in a dedicated directory or disk partition separate from software or other application files."
          info        : "The AUDIT_FILE_DEST parameter specifies the directory where the database audit trail file is stored (when AUDIT_TRAIL parameter is set to 'OS', 'xml' or 'xml, extended' where supported by the DBMS). Unauthorized access or loss of integrity of the audit trail could result in loss of accountability or the ability to detect suspicious
activity. This directory also contains the audit trail of the SYS and SYSTEM accounts that captures privileged database events when the database is not running (when AUDIT_SYS_OPERATIONS parameter is set to TRUE)."
          solution    : "Alter host system permissions to the AUDIT_FILE_DEST directory to the Oracle process and software owner accounts, DBAs, backup accounts, SAs (if required), and auditors.

Authorize and document user access requirements to the directory outside of the Oracle, DBA, and SA account list in the System Security Plan."
          reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000366,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-72025r3_rule,STIG-ID|O112-BP-025101,SWIFT-CSCv1|5.1,Vuln-ID|V-57615"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
        </report>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "O112-BP-025101 - The directory assigned to the AUDIT_FILE_DEST parameter must be protected from unauthorized access and must be stored in a dedicated directory or disk partition separate from software or other application files."
          info        : "The AUDIT_FILE_DEST parameter specifies the directory where the database audit trail file is stored (when AUDIT_TRAIL parameter is set to 'OS', 'xml' or 'xml, extended' where supported by the DBMS). Unauthorized access or loss of integrity of the audit trail could result in loss of accountability or the ability to detect suspicious
activity. This directory also contains the audit trail of the SYS and SYSTEM accounts that captures privileged database events when the database is not running (when AUDIT_SYS_OPERATIONS parameter is set to TRUE)."
          solution    : "Alter host system permissions to the AUDIT_FILE_DEST directory to the Oracle process and software owner accounts, DBAs, backup accounts, SAs (if required), and auditors.

Authorize and document user access requirements to the directory outside of the Oracle, DBA, and SA account list in the System Security Plan."
          reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000366,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-72025r3_rule,STIG-ID|O112-BP-025101,SWIFT-CSCv1|5.1,Vuln-ID|V-57615"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
          sql_request : "SELECT name, value FROM v$parameter WHERE name = 'audit_file_dest';"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : "audit_file_dest", regex: ".+"
        </custom_item>
      </else>
    </if>

    <report type:"WARNING">
      description : "O112-BP-025200 - Credentials stored and used by the DBMS to access remote databases or applications must be authorized and restricted to authorized users."
      info        : "Credentials defined for access to remote databases or applications may provide unauthorized access to additional databases and applications to unauthorized or malicious users.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Grant access to database links to authorized users or applications only.

Document all database links access authorizations in the System Security Plan."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-68279r1_rule,STIG-ID|O112-BP-025200,Vuln-ID|V-54039"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O112-C2-004210 - Owners of privileged accounts must use non-privileged accounts for non-administrative activities."
      info        : "Use of privileged accounts for non-administrative purposes puts data at risk of unintended or unauthorized loss, modification, or exposure. In particular, DBA accounts, if used for non-administration application development or application maintenance, can lead to excessive privileges where privileges are inherited by object owners. It may also lead to loss or compromise of application data where the elevated privileges bypass controls designed in and provided by applications.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Require that DBAs and other privileged users use non-privileged accounts for non-administrative activities."
      reference   : "CAT|II,CCI|CCI-000040,Rule-ID|SV-74285r1_rule,STIG-ID|O112-C2-004210,Vuln-ID|V-59855"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_STIG_Oracle_Database_11.2g_v1r18_DB.audit from DISA Oracle Database 11.2g v1r18 STIG"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
    </report>
  </else>
</if>

</group_policy>
</check_type>
