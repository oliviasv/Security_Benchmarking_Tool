#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.4 $
# $Date: 2020/04/22 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Oracle Database 12c Benchmark v2.1.0
#
#               https://workbench.cisecurity.org/files/2121
#
#<ui_metadata>
#<display_name>CIS Oracle Server 12c DB Traditional Auditing v2.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Oracle Server 12c DB Traditional Auditing</name>
#  <version>2.1.0</version>
#  <link>https://workbench.cisecurity.org/files/2121</link>
#</spec>
#<labels>database,cis,oracle,oracle_12c</labels>
#<benchmark_refs>LEVEL,CSCv6</benchmark_refs>
#</ui_metadata>

<check_type:"Database" db_type:"Oracle" version:"1">
<group_policy:"CIS Oracle Database 12c Traditional Auditing v2.1.0 - Database - Level 1">

<report type:"WARNING">
  description : "1.1 Ensure the Appropriate Version/Patches for Oracle Software Is Installed"
  info        : "The Oracle installation version and patches should be the most recent that are compatible with the organization's operational needs.

Rationale:
Using the most recent Oracle database software, along with all applicable patches can help limit the possibilities for vulnerabilities in the software, the installation version and/or patches applied during setup should be established according to the needs of the organization. Ensure you are using a release that is covered by a level of support that includes the generation of Critical Patch Updates.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Perform the following step for remediation:

Download and apply the latest quarterly Critical Patch Update patches."
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "CSCv6|2,LEVEL|1NS"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "1.2 Ensure All Default Passwords Are Changed"
  info        : "Default passwords should not be used by Oracle database users.

Rationale:
Default passwords should be considered 'well known' to attackers. Consequently, if default passwords remain in place, any attacker with access to the database can authenticate as the user with that default password."
  solution    : "To remediate this recommendation, you may perform either of the following actions:
- Manually issue the following SQL statement for each USERNAME returned in the Audit Procedure:

	PASSWORD <username>
- Execute the following SQL script to assign a randomly generated password to each account using a default password:

 begin
 for r_user in
 (select username from dba_users_with_defpwd where username not like '%XS$NULL%')
 loop
 DBMS_OUTPUT.PUT_LINE('Password for user '||r_user.username||' will be changed.');
 execute immediate 'alter user ''||r_user.username||'' identified by ''||DBMS_RANDOM.string('a',16)||''account lock password expire';
 end loop;
 end;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.5.2,800-53|IA-5,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSCv6|5.3,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,LEVEL|1S,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3"
  sql_request : "SELECT USERNAME FROM DBA_USERS_WITH_DEFPWD WHERE USERNAME NOT LIKE '%XS$NULL%';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "1.3 Ensure All Sample Data And Users Have Been Removed"
  info        : "Oracle sample schemas can be used to create sample users ('BI','HR','IX','OE','PM','SCOTT','SH'), with well-known default passwords, particular views, and procedures/functions, in addition to tables and fictitious data. The sample schemas should be removed.

Rationale:
The sample schemas are typically not required for production operations of the database. The default users, views, and/or procedures/functions created by sample schemas could be used to launch exploits against production environments."
  solution    : "To remediate this setting, execute the following SQL script.

$ORACLE_HOME/demo/schema/drop_sch.sql

Then, execute the following SQL statement.

DROP USER SCOTT CASCADE;

Note: The 'recyclebin' is not set to 'OFF' within the default drop script, which means that the data will still be present in your environment until the 'recyclebin' is emptied."
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
  sql_request : "SELECT USERNAME FROM ALL_USERS WHERE USERNAME IN ('BI','HR','IX','OE','PM','SCOTT','SH');"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.1 Ensure 'AUDIT_SYS_OPERATIONS' Is Set to 'TRUE'"
  info        : "The 'AUDIT_SYS_OPERATIONS' setting provides for the auditing of all user activities conducted under the 'SYSOPER' and 'SYSDBA' accounts. The setting should be set to 'TRUE' to enable this auditing.

Rationale:
If the parameter 'AUDIT_SYS_OPERATIONS' is 'FALSE', all statements except for Startup/Shutdown and Logon by 'SYSDBA'/'SYSOPER' users are not audited."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET AUDIT_SYS_OPERATIONS = TRUE SCOPE=SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME) = 'AUDIT_SYS_OPERATIONS';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "TRUE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.2 Ensure 'AUDIT_TRAIL' Is Set to 'DB', 'XML', 'OS', 'DB,EXTENDED', or 'XML,EXTENDED'"
  info        : "The 'audit_trail' setting determines whether or not Oracle's basic audit features are enabled. It can be set to 'Operating System'('OS'); 'DB'; 'DB,EXTENDED'; 'XML'; or 'XML,EXTENDED'. The value should be set according to the needs of the organization.

Rationale:
Enabling the basic auditing features for the Oracle instance permits the collection of data to troubleshoot problems, as well as provides valuable forensic logs in the case of a system breach this value should be set according to the needs of the organization."
  solution    : "To remediate this setting, execute one of the following SQL statements.

ALTER SYSTEM SET AUDIT_TRAIL = DB, EXTENDED SCOPE = SPFILE;


ALTER SYSTEM SET AUDIT_TRAIL = OS SCOPE = SPFILE;


ALTER SYSTEM SET AUDIT_TRAIL = XML, EXTENDED SCOPE = SPFILE;


ALTER SYSTEM SET AUDIT_TRAIL = DB SCOPE = SPFILE;


ALTER SYSTEM SET AUDIT_TRAIL = XML SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='AUDIT_TRAIL';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:"^(OS|(DB|XML)(,\s*EXTENDED)?)$"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.3 Ensure 'GLOBAL_NAMES' Is Set to 'TRUE'"
  info        : "The 'global_names' setting requires that the name of a database link matches that of the remote database it will connect to. This setting should have a value of 'TRUE'.

Rationale:
Not requiring database connections to match the domain that is being called remotely could allow unauthorized domain sources to potentially connect via brute-force tactics."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET GLOBAL_NAMES = TRUE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='GLOBAL_NAMES';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "TRUE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.4 Ensure 'O7_DICTIONARY_ACCESSIBILITY' Is Set to 'FALSE'"
  info        : "The 'O7_dictionary_accessibility' setting is a database initialization parameter that allows/disallows access to objects with the '* ANY *' privileges ('SELECT ANY TABLE', 'DELETE ANY TABLE', 'EXECUTE ANY PROCEDURE', etc.). This functionality was created for the ease of migration from Oracle 7 databases to later versions. The setting should have a value of 'FALSE'.

Rationale:
Leaving the 'SYS' schema so open to connection could permit unauthorized access to critical data structures."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET O7_DICTIONARY_ACCESSIBILITY=FALSE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|9.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='O7_DICTIONARY_ACCESSIBILITY';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "FALSE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.5 Ensure 'OS_ROLES' Is Set to 'FALSE'"
  info        : "The 'os_roles' setting permits externally created groups to be applied to database management.

Rationale:
Allowing the OS to use external groups for database management could cause privilege overlaps and generally weaken security."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET OS_ROLES = FALSE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-17,800-53|AC-2(7),CIP|005-5-R2,CN-L3|8.1.10.6(i),CN-L3|8.1.4.4(c),CSCv6|16,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.AC-4,CSF|PR.PT-4,ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17,ITSG-33|AC-2(7),LEVEL|1S,NESA|M5.3.1,NESA|T5.4.5,SWIFT-CSCv1|2.6"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='OS_ROLES';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "FALSE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.6 Ensure 'REMOTE_LISTENER' Is Empty"
  info        : "The 'remote_listener' setting determines whether or not a valid listener can be established on a system separate from the database instance. This setting should be empty unless the organization specifically needs a valid listener on a separate system.

Rationale:
Permitting a remote listener for connections to the database instance can allow for the potential spoofing of connections and that could compromise data confidentiality and integrity."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET REMOTE_LISTENER = '' SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-17,CN-L3|7.1.2.2(h),CN-L3|7.1.3.7(a),CN-L3|8.1.10.6(i),CN-L3|8.1.4.4(c),CSCv6|9,CSF|PR.AC-3,CSF|PR.PT-4,ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17,LEVEL|1S,NESA|T4.2.1,NESA|T4.5.1,NESA|T5.1.1,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.7.1,NESA|T5.7.2,NIAv2|AM40,NIAv2|AM41,NIAv2|NS48,NIAv2|NS51,NIAv2|NS5g,NIAv2|NS5h,SWIFT-CSCv1|2.6"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='REMOTE_LISTENER';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.7 Ensure 'REMOTE_LOGIN_PASSWORDFILE' Is Set to 'NONE'"
  info        : "The 'remote_login_passwordfile' setting specifies whether or not Oracle checks for a password file during login and how many databases can use the password file. The setting should have a value of 'NONE'.

Rationale:
The use of this sort of password login file could permit unsecured, privileged connections to the database."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET REMOTE_LOGIN_PASSWORDFILE = 'NONE' SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.1,800-171|3.1.5,800-53|AC-3,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|9.2,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-6,LEVEL|1S,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM3,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='REMOTE_LOGIN_PASSWORDFILE';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "NONE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.8 Ensure 'REMOTE_OS_AUTHENT' Is Set to 'FALSE'"
  info        : "The 'remote_os_authent' setting determines whether or not OS 'roles' with the attendant privileges are allowed for remote client connections. This setting should have a value of 'FALSE'.

Rationale:
Permitting OS roles for database connections to can allow the spoofing of connections and permit granting the privileges of an OS role to unauthorized users to make connections, this value should be restricted according to the needs of the organization."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET REMOTE_OS_AUTHENT = FALSE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-53|IA-5(8),CSCv6|16,CSF|PR.AC-1,ITSG-33|IA-5(8),LEVEL|1S,SWIFT-CSCv1|5.1"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='REMOTE_OS_AUTHENT';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "FALSE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.9 Ensure 'REMOTE_OS_ROLES' Is Set to 'FALSE'"
  info        : "The 'remote_os_roles' setting permits remote users' OS roles to be applied to database management. This setting should have a value of 'FALSE'.

Rationale:
Allowing remote clients OS roles to have permissions for database management could cause privilege overlaps and generally weaken security."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET REMOTE_OS_ROLES = FALSE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-17,800-53|AC-2(7),CIP|005-5-R2,CN-L3|8.1.10.6(i),CN-L3|8.1.4.4(c),CSCv6|16,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.AC-4,CSF|PR.PT-4,ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17,ITSG-33|AC-2(7),LEVEL|1S,NESA|M5.3.1,NESA|T5.4.5,SWIFT-CSCv1|2.6"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='REMOTE_OS_ROLES';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "FALSE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.10 Ensure 'UTL_FILE_DIR' Is Empty"
  info        : "The 'utl_file_dir' setting allows packages like 'utl_file' to access (read/write/modify/delete) files specified in 'utl_file_dir'. This setting should have an empty value.

Rationale:
Using the 'utl_file_dir' to create directories allows the manipulation of files in these directories."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET UTL_FILE_DIR = '' SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|8.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
  sql_request : "SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME)='UTL_FILE_DIR';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.11 Ensure 'SEC_CASE_SENSITIVE_LOGON' Is Set to 'TRUE'"
  info        : "The 'SEC_CASE_SENSITIVE_LOGON' information determines whether or not case-sensitivity is required for passwords during login.

Rationale:
Oracle database password case-sensitivity increases the pool of characters that can be chosen for the passwords, making brute-force password attacks quite difficult."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET SEC_CASE_SENSITIVE_LOGON = TRUE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.5.2,800-53|IA-5,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSCv6|16,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,LEVEL|1S,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='SEC_CASE_SENSITIVE_LOGON';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "TRUE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.12 Ensure 'SEC_MAX_FAILED_LOGIN_ATTEMPTS' Is '3' or Less"
  info        : "The 'SEC_MAX_FAILED_LOGIN_ATTEMPTS' parameter determines how many failed login attempts are allowed before Oracle closes the login connection.

Rationale:
Allowing an unlimited number of login attempts for a user connection can facilitate both brute-force login attacks and the occurrence of denial-of-service."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET SEC_MAX_FAILED_LOGIN_ATTEMPTS = 3 SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.8,800-53|AC-7,800-53|SC-5,CN-L3|8.1.4.1(b),CSCv6|16.7,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|AC-7,ITSG-33|SC-5,LEVEL|1S,NESA|T3.3.1,NIAv2|AM24,NIAv2|GS10c,NIAv2|GS8e,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='SEC_MAX_FAILED_LOGIN_ATTEMPTS';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:"^([1-3])$"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.13 Ensure 'SEC_PROTOCOL_ERROR_FURTHER_ACTION' Is Set to 'DELAY,3' or 'DROP,3'"
  info        : "The 'SEC_PROTOCOL_ERROR_FURTHER_ACTION' setting determines the Oracle's server's response to bad/malformed packets received from the client. This setting should have a value of 'DROP,3', which will cause a connection to be dropped after three bad/malformed packets.

Rationale:
Bad packets received from the client can potentially indicate packet-based attacks on the system, such as 'TCP SYN Flood' or 'Smurf' attacks, which could result in a denial-of-service condition, this value should be set according to the needs of the organization."
  solution    : "To remediate this setting, execute one of the following SQL statement.

ALTER SYSTEM SET SEC_PROTOCOL_ERROR_FURTHER_ACTION = 'DROP,3' SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-53|SC-5,CSCv6|18,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,LEVEL|1S,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='SEC_PROTOCOL_ERROR_FURTHER_ACTION';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:"^\((DELAY|DROP),\s*3\)$"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.14 Ensure 'SEC_PROTOCOL_ERROR_TRACE_ACTION' Is Set to 'LOG'"
  info        : "The 'SEC_PROTOCOL_ERROR_TRACE_ACTION' setting determines the Oracle's server's logging response level to bad/malformed packets received from the client by generating 'ALERT', 'LOG', or 'TRACE' levels of detail in the log files. This setting should have a value of 'LOG' unless the organization has a compelling reason to use a different value because 'LOG' should cause the necessary information to be logged. Setting the value as 'TRACE' can generate an enormous amount of log output and should be reserved for debugging only.

Rationale:
Bad packets received from the client can potentially indicate packet-based attacks on the system, which could result in a denial-of-service condition."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET SEC_PROTOCOL_ERROR_TRACE_ACTION=LOG SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53|SC-5,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,ITSG-33|SC-5,LEVEL|1S,NESA|T3.3.1,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|GS10c,NIAv2|GS8e,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='SEC_PROTOCOL_ERROR_TRACE_ACTION';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "LOG" || "TRACE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.15 Ensure 'SEC_RETURN_SERVER_RELEASE_BANNER' Is Set to 'FALSE'"
  info        : "The information about patch/update release number provides information about the exact patch/update release that is currently running on the database. This is sensitive information that should not be revealed to anyone who requests it.

Rationale:
Allowing the database to return information about the patch/update release number could facilitate unauthorized users' attempts to gain access based upon known patch weaknesses."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET SEC_RETURN_SERVER_RELEASE_BANNER = FALSE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='SEC_RETURN_SERVER_RELEASE_BANNER';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "FALSE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.16 Ensure 'SQL92_SECURITY' Is Set to 'TRUE'"
  info        : "The 'SQL92_SECURITY' parameter setting 'TRUE' requires that a user must also be granted the 'SELECT' object privilege before being able to perform 'UPDATE' or 'DELETE' operations on tables that have 'WHERE' or 'SET' clauses. The setting should have a value of TRUE.

Rationale:
A user without 'SELECT' privilege can still infer the value stored in a column by referring to that column in a 'DELETE' or 'UPDATE' statement. This setting prevents inadvertent information disclosure by ensuring that only users who already have 'SELECT' privilege can execute the statements that would allow them to infer the stored values."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET SQL92_SECURITY = TRUE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='SQL92_SECURITY';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "TRUE"
</custom_item>

<custom_item>
  type         : SQL_POLICY
  description  : "2.2.17 Ensure '_trace_files_public' Is Set to 'FALSE'"
  info         : "The '_trace_files_public' setting determines whether or not the system's trace file is world readable. This setting should have a value of FALSE to restrict trace file access.

Rationale:
Making the file world readable means anyone can read the instance's trace file, which could contain sensitive information about instance operations."
  solution     : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET '_trace_files_public' = FALSE SCOPE = SPFILE;"
  see_also     : "https://workbench.cisecurity.org/files/2121"
  reference    : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|14.4,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request  : "SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME)='_TRACE_FILES_PUBLIC';"
  sql_types    : POLICY_VARCHAR
  sql_expect   : NULL || "FALSE"
  check_option : CAN_BE_NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "2.2.18 Ensure 'RESOURCE_LIMIT' Is Set to 'TRUE'"
  info        : "'RESOURCE_LIMIT' determines whether resource limits are enforced in database profiles. This setting should have a value of 'TRUE'.

Rationale:
If 'RESOURCE_LIMIT' is set to 'FALSE', none of the system resource limits that are set in any database profiles are enforced. If 'RESOURCE_LIMIT' is set to 'TRUE', the limits set in database profiles are enforced."
  solution    : "To remediate this setting, execute the following SQL statement.

ALTER SYSTEM SET RESOURCE_LIMIT = TRUE SCOPE = SPFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-53|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),CSCv6|14.4,ITSG-33|SC-6,LEVEL|1S"
  sql_request : "SELECT UPPER(VALUE) FROM V$PARAMETER WHERE UPPER(NAME)='RESOURCE_LIMIT';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : "TRUE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.1 Ensure 'FAILED_LOGIN_ATTEMPTS' Is Less than or Equal to '5'"
  info        : "The 'FAILED_LOGIN_ATTEMPTS' setting determines how many failed login attempts are permitted before the system locks the user's account. While different profiles can have different and more restrictive settings, such as 'USERS' and 'APPS', the minimum(s) recommended here should be set on the 'DEFAULT' profile.

Rationale:
Repeated failed login attempts can indicate the initiation of a brute-force login attack, this value should be set according to the needs of the organization. (See the Notes for a warning on a known bug that can make this security measure backfire.)"
  solution    : "Remediate this setting by executing the following SQL statement for each 'PROFILE' returned by the audit procedure.

	ALTER PROFILE \

	 LIMIT FAILED_LOGIN_ATTEMPTS 5;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.8,800-53|AC-7,CIP|007-6-R5,CN-L3|8.1.4.1(b),CSCv6|16.7,ITSG-33|AC-7,LEVEL|1S,NIAv2|AM24,PCI-DSSv3.1|8.1.6,PCI-DSSv3.2|8.1.6,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2"
  sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME='FAILED_LOGIN_ATTEMPTS' AND (LIMIT = 'DEFAULT' OR LIMIT = 'UNLIMITED' OR LIMIT > 5);"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_INTEGER
  sql_expect  : NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.2 Ensure 'PASSWORD_LOCK_TIME' Is Greater than or Equal to '1'"
  info        : "The 'PASSWORD_LOCK_TIME' setting determines how many days must pass for the user's account to be unlocked after the set number of failed login attempts has occurred. The suggested value for this is one day or greater.

Rationale:
Locking the user account after repeated failed login attempts can block further brute-force login attacks, but can create administrative headaches as this account unlocking process always requires DBA intervention."
  solution    : "Remediate this setting by executing the following SQL statement for each 'PROFILE' returned by the audit procedure.

	ALTER PROFILE \

	 LIMIT PASSWORD_LOCK_TIME 1;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.8,800-53|AC-7,CN-L3|8.1.4.1(b),CSCv6|16.7,ITSG-33|AC-7,LEVEL|1S,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
  sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME='PASSWORD_LOCK_TIME' AND (LIMIT = 'DEFAULT' OR LIMIT = 'UNLIMITED' OR LIMIT < 1)"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_INTEGER
  sql_expect  : NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.3 Ensure 'PASSWORD_LIFE_TIME' Is Less than or Equal to '90'"
  info        : "The 'PASSWORD_LIFE_TIME' setting determines how long a password may be used before the user is required to be change it. The suggested value for this is 90 days or less.

Rationale:
Allowing passwords to remain unchanged for long periods makes the success of brute-force login attacks more likely."
  solution    : "Remediate this setting by executing the following SQL statement for each PROFILE returned by the audit procedure.

	ALTER PROFILE \

	 LIMIT PASSWORD_LIFE_TIME 90;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv6|16,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME='PASSWORD_LIFE_TIME' AND (LIMIT = 'DEFAULT' OR LIMIT = 'UNLIMITED' OR LIMIT > 90)"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_INTEGER
  sql_expect  : NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.4 Ensure 'PASSWORD_REUSE_MAX' Is Greater than or Equal to '20'"
  info        : "The 'PASSWORD_REUSE_MAX' setting determines how many different passwords must be used before the user is allowed to reuse a prior password. The suggested value for this is 20 passwords or greater.

Rationale:
Allowing reuse of a password within a short period of time after the password's initial use can make the success of both social-engineering and brute-force password-based attacks more likely."
  solution    : "Remediate this setting by executing the following SQL statement for each 'PROFILE' returned by the audit procedure.

	ALTER PROFILE \

	 LIMIT PASSWORD_REUSE_MAX 20;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.5.8,800-53|IA-5(1),CSCv6|16,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|AM22c,PCI-DSSv3.1|8.2.5,PCI-DSSv3.2|8.2.5,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3"
  sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME='PASSWORD_REUSE_MAX' AND (LIMIT = 'DEFAULT' OR LIMIT = 'UNLIMITED' OR LIMIT < 20);"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_INTEGER
  sql_expect  : NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.5 Ensure 'PASSWORD_REUSE_TIME' Is Greater than or Equal to '365'"
  info        : "The 'PASSWORD_REUSE_TIME' setting determines the amount of time in days that must pass before the same password may be reused. The suggested value for this is 365 days or greater.

Rationale:
Reusing the same password after only a short period of time has passed makes the success of brute-force login attacks more likely."
  solution    : "Remediate this setting by executing the following SQL statement for each 'PROFILE' returned by the audit procedure.

	ALTER PROFILE \

	 LIMIT PASSWORD_REUSE_TIME 365;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.5.8,800-53|IA-5(1),CSCv6|16,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|AM22c,PCI-DSSv3.1|8.2.5,PCI-DSSv3.2|8.2.5,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3"
  sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME='PASSWORD_REUSE_TIME' AND (LIMIT = 'DEFAULT' OR LIMIT = 'UNLIMITED' OR LIMIT < 365);"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_INTEGER
  sql_expect  : NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.6 Ensure 'PASSWORD_GRACE_TIME' Is Less than or Equal to '5'"
  info        : "The 'PASSWORD_GRACE_TIME' setting determines how many days can pass after the user's password expires before the user's login capability is automatically locked out. The suggested value for this is five days or less.

Rationale:
Locking the user account after the expiration of the password change requirement's grace period can help prevent password-based attacks against any forgotten or disused accounts, while still allowing the account and its information to be accessible by DBA intervention."
  solution    : "Remediate this setting by executing the following SQL statement for each 'PROFILE' returned by the audit procedure.

	ALTER PROFILE \

	 LIMIT PASSWORD_GRACE_TIME 5;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv6|16,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME='PASSWORD_GRACE_TIME' AND (LIMIT = 'DEFAULT' OR LIMIT = 'UNLIMITED' OR LIMIT > 5);"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_INTEGER
  sql_expect  : NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.7 Ensure 'DBA_USERS.PASSWORD' Is Not Set to 'EXTERNAL' for Any User"
  info        : "The 'password='EXTERNAL'' setting determines whether or not a user can be authenticated by a remote OS to allow access to the database with full authorization. This setting should not be used.

Rationale:
Allowing remote OS authentication of a user to the database can potentially allow supposed 'privileged users' to connect as 'authenticated,' even when the remote system is compromised."
  solution    : "To remediate this setting execute the following SQL statement.

	ALTER USER <username> IDENTIFIED BY <password>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.1,800-53|AC-2,CN-L3|7.1.3.2(d),CSCv6|16,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1S,NESA|T5.2.1,NESA|T5.2.4,NIAv2|AM27,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e"
  sql_request : "SELECT USERNAME FROM DBA_USERS WHERE PASSWORD='EXTERNAL';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.8 Ensure 'PASSWORD_VERIFY_FUNCTION' Is Set for All Profiles"
  info        : "The 'PASSWORD_VERIFY_FUNCTION' determines password settings requirements when a user password is changed at the SQL command prompt. It should be set for all profiles. Note that this setting does not apply for users managed by the Oracle password file.

Rationale:
Requiring users to apply the 12c security features in password creation, such as forcing mixed-case complexity, blocking of simple combinations, and enforcing change/history settings can potentially thwart logins by an unauthorized user."
  solution    : "Create a custom password verification function which fulfills the password requirements of the organization."
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.5.7,800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv6|16,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
  sql_request : "SELECT PROFILE, RESOURCE_NAME FROM DBA_PROFILES WHERE RESOURCE_NAME='PASSWORD_VERIFY_FUNCTION' AND (LIMIT = 'DEFAULT' OR LIMIT = 'NULL');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.9 Ensure 'SESSIONS_PER_USER' Is Less than or Equal to '10'"
  info        : "The 'SESSIONS_PER_USER' setting determines the maximum number of user sessions that are allowed to be open concurrently. The suggested value for this is 10 or less.

Rationale:
Limiting the number of the 'SESSIONS_PER_USER' can help prevent memory resource exhaustion by poorly formed requests or intentional denial-of-service attacks."
  solution    : "To remediate this setting, execute the following SQL statement for each 'PROFILE' returned by the audit procedure.

	ALTER PROFILE \

	 LIMIT SESSIONS_PER_USER 10;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-53|AC-10,CSCv6|18,ITSG-33|AC-10,LEVEL|1S,NESA|T5.5.1"
  sql_request : "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME='SESSIONS_PER_USER' AND (LIMIT = 'DEFAULT' OR LIMIT = 'UNLIMITED' OR LIMIT > 10);"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_INTEGER
  sql_expect  : NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.10 Ensure No Users Are Assigned the 'DEFAULT' Profile"
  info        : "Upon creation database users are assigned to the DEFAULT profile unless otherwise specified.

It is recommended that users be created with function-appropriate profiles. The DEFAULT profile, being defined by Oracle, is subject to change at any time (e.g. by patch or version update). TheDEFAULTprofilehasunlimitedsettingsthatareoftenrequiredbytheSYSuser when patching; such unlimited settings should be tightly reserved and not applied to unnecessary users."
  solution    : "To remediate this recommendation, execute the following SQL statement for each user returned by the audit query using a functional-appropriate profile.

ALTER USER <username> PROFILE <appropriate_profile>"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT USERNAME FROM DBA_USERS WHERE PROFILE='DEFAULT' AND ACCOUNT_STATUS='OPEN' AND USERNAME NOT IN ('ANONYMOUS', 'MDSYS', 'ORDSYS', 'SYSMAN', 'WKPROXY', 'CTXSYS', 'MGMT_VIEW','OLAPSYS','OWBSYS', 'ORDPLUGINS', 'OUTLN', 'SI_INFORMTN_SCHEMA','SYS', 'SYSTEM', 'TSMSYS', 'WK_TEST', 'WKSYS', 'WMSYS', 'XDB', 'CISSCAN');"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.1 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_ADVISOR'"
  info        : "The Oracle database 'DBMS_ADVISOR' package can be used to write files located on the server where the Oracle instance is installed. The user 'PUBLIC' should not be able to execute 'DBMS_ADVISOR'.

Rationale:
Use of the 'DBMS_ADVISOR' package could allow an unauthorized user to corrupt operating system files on the instance's host."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_ADVISOR FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_ADVISOR';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.2 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_CRYPTO'"
  info        : "The 'DBMS_CRYPTO' settings provide a toolset that determines the strength of the encryption algorithm used to encrypt application data and is part of the 'SYS' schema. The 'DES' (56-bit key), '3DES' (168-bit key), '3DES-2KEY' (112-bit key), 'AES' (128/192/256-bit keys), and 'RC4' are available. The user 'PUBLIC' should not be able to execute 'DBMS_CRYPTO'.

Rationale:
Execution of these cryptography procedures by the user 'PUBLIC' can potentially endanger portions of or all of the data storage."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_CRYPTO FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND TABLE_NAME='DBMS_CRYPTO';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.3 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_JAVA'"
  info        : "The Oracle database 'DBMS_JAVA' package can run Java classes (e.g. OS commands) or grant Java privileges. The user 'PUBLIC' should not be able to execute 'DBMS_JAVA'.

Rationale:
The 'DBMS_JAVA' package could allow an attacker to run OS commands from the database."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_JAVA FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18.9,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_JAVA';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.4 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_JAVA_TEST'"
  info        : "The Oracle database 'DBMS_JAVA_TEST' package can run Java classes (e.g. OS commands) or grant Java privileges. The user 'PUBLIC' should not be able to execute 'DBMS_JAVA_TEST'.

Rationale:
The 'DBMS_JAVA_TEST' package could allow an attacker to run operating system commands from the database."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_JAVA_TEST FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18.9,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_JAVA_TEST';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.5 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_JOB'"
  info        : "The Oracle database 'DBMS_JOB' package schedules and manages the jobs sent to the job queue and has been superseded by the 'DBMS_SCHEDULER' package, even though 'DBMS_JOB' has been retained for backwards compatibility. The user 'PUBLIC' should not be able to execute 'DBMS_JOB'.

Rationale:
Use of the 'DBMS_JOB' package could allow an unauthorized user to disable or overload the job queue. It has been superseded by the 'DBMS_SCHEDULER' package."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_JOB FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_JOB';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.6 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_LDAP'"
  info        : "The Oracle database 'DBMS_LDAP' package contains functions and procedures that enable programmers to access data from LDAP servers. The user 'PUBLIC' should not be able to execute 'DBMS_LDAP'.

Rationale:
Use of the 'DBMS_LDAP' package can be used to create specially crafted error messages or send information via DNS to the outside."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_LDAP FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_LDAP';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.7 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_LOB'"
  info        : "The Oracle database 'DBMS_LOB' package provides subprograms that can manipulate and read/write on 'BLOBs', 'CLOBs', 'NCLOBs', 'BFILEs', and temporary 'LOBs'. The user 'PUBLIC' should not be able to execute 'DBMS_LOB'.

Rationale:
Use of the 'DBMS_LOB' package could allow an unauthorized user to manipulate 'BLOBs', 'CLOBs', 'NCLOBs', 'BFILEs', and temporary 'LOBs' on the instance, either destroying data or causing a denial-of-service condition due to corruption of disk space."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_LOB FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_LOB';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.8 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_OBFUSCATION_TOOLKIT'"
  info        : "The 'DBMS_OBFUSCATION_TOOLKIT' provides one of the tools that determine the strength of the encryption algorithm used to encrypt application data and is part of the 'SYS' schema. The 'DES' (56-bit key) and '3DES' (168-bit key) are the only two types available. The user 'PUBLIC' should not be able to execute 'DBMS_OBFUSCATION_TOOLKIT'.

Rationale:
Allowing the 'PUBLIC' user privileges to access this capability can be potentially harm data storage."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_OBFUSCATION_TOOLKIT FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_OBFUSCATION_TOOLKIT';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.9 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_RANDOM'"
  info        : "The Oracle database 'DBMS_RANDOM' package is used for generating random numbers but should not be used for cryptographic purposes. The user 'PUBLIC' should not be able to execute 'DBMS_RANDOM'.

Rationale:
Use of the 'DBMS_RANDOM' package can allow the unauthorized application of the random number-generating function."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_RANDOM FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_RANDOM';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.10 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_SCHEDULER'"
  info        : "The Oracle database 'DBMS_SCHEDULER' package schedules and manages the database and operating system jobs. The user 'PUBLIC' should not be able to execute 'DBMS_SCHEDULER'.

Rationale:
Use of the 'DBMS_SCHEDULER' package could allow an unauthorized user to run database or operating system jobs."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_SCHEDULER FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_SCHEDULER';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.11 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_SQL'"
  info        : "The Oracle database 'DBMS_SQL' package is used for running dynamic SQL statements. The user 'PUBLIC' should not be able to execute 'DBMS_SQL'.

Rationale:
The 'DBMS_SQL' package could allow privilege escalation if input validation is not done properly."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_SQL FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_SQL';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.12 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_XMLGEN'"
  info        : "The 'DBMS_XMLGEN' package takes an arbitrary SQL query as input, converts it to XML format, and returns the result as a 'CLOB'. The user 'PUBLIC' should not be able to execute 'DBMS_XMLGEN'.

Rationale:
The package 'DBMS_XMLGEN' can be used to search the entire database for sensitive information like credit card numbers."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_XMLGEN FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|13,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_XMLGEN';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.13 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_XMLQUERY'"
  info        : "The Oracle package 'DBMS_XMLQUERY' takes an arbitrary SQL query, converts it to XML format, and returns the result. This package is similar to 'DBMS_XMLGEN'. The user 'PUBLIC' should not be able to execute 'DBMS_XMLQUERY'.

Rationale:
The package 'DBMS_XMLQUERY' can be used to search the entire database for sensitive information like credit card numbers. Malicious users may be able to exploit this package as an auxiliary inject function in a SQL injection attack."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_XMLQUERY FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|13,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_XMLQUERY';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.14 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_FILE'"
  info        : "The Oracle database 'UTL_FILE' package can be used to read/write files located on the server where the Oracle instance is installed. The user 'PUBLIC' should not be able to execute 'UTL_FILE'.

Rationale:
Use of the 'UTL_FILE' package could allow an user to read OS files. These files could contain sensitive information (e.g. passwords in '.bash_history')."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON UTL_FILE FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|14,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='UTL_FILE';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.15 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_INADDR'"
  info        : "The Oracle database 'UTL_INADDR' package can be used to create specially crafted error messages or send information via DNS to the outside. The user 'PUBLIC' should not be able to execute 'UTL_INADDR'.

Rationale:
The 'UTL_INADDR' package is often used in SQL injection attacks from the web it should be revoked from public."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON UTL_INADDR FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='UTL_INADDR';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.16 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_TCP'"
  info        : "The Oracle database 'UTL_TCP' package can be used to read/write file to TCP sockets on the server where the Oracle instance is installed. The user 'PUBLIC' should not be able to execute 'UTL_TCP'.

Rationale:
The 'UTL_TCP' package could allow an unauthorized user to corrupt the TCP stream used to carry the protocols that communicate with the instance's external communications."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON UTL_TCP FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='UTL_TCP';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.17 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_MAIL'"
  info        : "The Oracle database 'UTL_MAIL' package can be used to send email from the server where the Oracle instance is installed. The user 'PUBLIC' should not be able to execute 'UTL_MAIL'.

Rationale:
The 'UTL_MAIL' package could allow an unauthorized user to corrupt the SMTP function to accept or generate junk mail that can result in a denial-of-service condition due to network saturation."
  solution    : "To remediate this setting execute the following SQL statement.

REVOKE EXECUTE ON UTL_MAIL FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='UTL_MAIL';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.18 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_SMTP'"
  info        : "The Oracle database 'UTL_SMTP' package can be used to send email from the server where the Oracle instance is installed. The user 'PUBLIC' should not be able to execute 'UTL_SMTP'.

Rationale:
The 'UTL_SMTP' package could allow an unauthorized user to corrupt the SMTP function to accept or generate junk mail that can result in a denial-of-service condition due to network saturation."
  solution    : "To remediate this setting execute the following SQL statement.

REVOKE EXECUTE ON UTL_SMTP FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='UTL_SMTP';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.19 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_DBWS'"
  info        : "The Oracle database 'UTL_DBWS' package can be used to read/write file to web-based applications on the server where the Oracle instance is installed. This package is not automatically installed for security reasons. The user 'PUBLIC' should not be able to execute 'UTL_DBWS'.

Rationale:
The 'UTL_DBWS' package could allow an unauthorized user to corrupt the HTTP stream used to carry the protocols that communicate for the instance's web-based external communications."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON UTL_DBWS FROM 'PUBLIC';"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='UTL_DBWS';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.20 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_ORAMTS'"
  info        : "The Oracle database 'UTL_ORAMTS' package can be used to perform HTTP requests. This could be used to send information to the outside. The user 'PUBLIC' should not be able to execute 'UTL_ORAMTS'.

Rationale:
The 'UTL_ORAMTS' package could be used to send (sensitive) information to external websites. The use of this package should be restricted according to the needs of the organization."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON UTL_ORAMTS FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='UTL_ORAMTS';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.21 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_HTTP'"
  info        : "The Oracle database 'UTL_HTTP' package can be used to perform HTTP requests. This could be used to send information to the outside. The user 'PUBLIC' should not be able to execute 'UTL_HTTP'.

Rationale:
The 'UTL_HTTP' package could be used to send (sensitive) information to external websites. The use of this package should be restricted according to the needs of the organization."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON UTL_HTTP FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='UTL_HTTP';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.22 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'HTTPURITYPE'"
  info        : "The Oracle database 'HTTPURITYPE' object type can be used to perform HTTP requests. The user 'PUBLIC' should not be able to execute 'HTTPURITYPE'.

Rationale:
The ability to perform HTTP requests could be used to leak information from the database to an external destination."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON HTTPURITYPE FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='HTTPURITYPE';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.23 Ensure 'EXECUTE' is revoked from 'PUBLIC' on 'DBMS_XMLSTORE'"
  info        : "The 'DBMS_XLMSTORE' package provides XML functionality. It accepts a table name and XML as input to perform DML operations against the table. The user 'PUBLIC' should not be able to execute 'DBMS_XLMSTORE'.

Rationale:
Malicious users may be able to exploit this package as an auxiliary inject function in a SQL injection attack."
  solution    : "To remediate this setting, execute the following SQL statement:


REVOKE EXECUTE ON DBMS_XMLSTORE FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18.3,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE FROM DBA_TAB_PRIVS WHERE TABLE_NAME = 'DBMS_XMLSTORE' AND GRANTEE = 'PUBLIC' AND PRIVILEGE = 'EXECUTE';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.24 Ensure 'EXECUTE' is revoked from 'PUBLIC' on 'DBMS_XMLSAVE'"
  info        : "The 'DBMS_XLMSTORE' package provides XML functionality. It accepts a table name and XML as input and then inserts into or updates that table. The user 'PUBLIC' should not be able to execute 'DBMS_XLMSAVE'.

Rationale:
Malicious users may be able to exploit this package as an auxiliary inject function in a SQL injection attack."
  solution    : "To remediate this setting, execute the following SQL statement

REVOKE EXECUTE ON DBMS_XMLSAVE FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18.3,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE FROM DBA_TAB_PRIVS WHERE TABLE_NAME = 'DBMS_XMLSAVE' AND GRANTEE = 'PUBLIC' AND PRIVILEGE = 'EXECUTE';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.1.25 Ensure 'EXECUTE' is revoked from 'PUBLIC' on 'DBMS_REDACT'"
  info        : "The 'DBMS_REDACT' package provides an interface to Oracle Data Redaction, which enables you to mask (redact) data that is returned from queries issued by low-privileged users or an application. The user 'PUBLIC' should not be able to execute 'DBMS_REDACT'.

Rationale:
Malicious users may be able to exploit this package as an auxiliary inject function in a SQL injection attack."
  solution    : "To remediate this setting, execute the following SQL statement

REVOKE EXECUTE ON DBMS_REDACT FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18.3,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE FROM DBA_TAB_PRIVS WHERE TABLE_NAME = 'DBMS_REDACT' AND GRANTEE = 'PUBLIC' AND PRIVILEGE = 'EXECUTE';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.1 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_SYS_SQL'"
  info        : "The Oracle database 'DBMS_SYS_SQL' package is shipped as undocumented. The user 'PUBLIC' should not be able to execute 'DBMS_SYS_SQL'.

Rationale:
The 'DBMS_SYS_SQL' package could allow an user to run code as a different user without entering valid credentials."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_SYS_SQL FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|16,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_SYS_SQL';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.2 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_BACKUP_RESTORE'"
  info        : "The Oracle database 'DBMS_BACKUP_RESTORE' package is used for applying PL/SQL commands to the native 'RMAN' sequences. The user 'PUBLIC' should not be able to execute 'DBMS_BACKUP_RESTORE'.

Rationale:
The 'DBMS_BACKUP_RESTORE' package can allow access to OS files."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_BACKUP_RESTORE FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_BACKUP_RESTORE';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.3 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_AQADM_SYSCALLS'"
  info        : "The Oracle database 'DBMS_AQADM_SYSCALLS' package is shipped as undocumented. The user 'PUBLIC' should not be able to execute 'DBMS_AQADM_SYSCALLS'.

Rationale:
The 'DBMS_AQADM_SYSCALLS' package could allow an unauthorized user to run SQL commands as user 'SYS'."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_AQADM_SYSCALLS FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_AQADM_SYSCALLS';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.4 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_REPCAT_SQL_UTL'"
  info        : "The Oracle database 'DBMS_REPCAT_SQL_UTL' package is shipped as undocumented and allows to run SQL commands as user 'SYS'. The user 'PUBLIC' should not be able to execute 'DBMS_REPCAT_SQL_UTL'.

Rationale:
The 'DBMS_REPCAT_SQL_UTL' package could allow an unauthorized user to run SQL commands as user 'SYS'."
  solution    : "To remediate this setting, execute the following SQL statement.

revoke execute on DBMS_REPCAT_SQL_UTL FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_REPCAT_SQL_UTL';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.5 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'INITJVMAUX'"
  info        : "The Oracle database 'INITJVMAUX' package is shipped as undocumented and allows to run SQL commands as user 'SYS'. The user 'PUBLIC' should not be able to execute 'INITJVMAUX'.

Rationale:
The 'INITJVMAUX' package could allow an unauthorized user to run SQL commands as user 'SYS'."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON INITJVMAUX FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='INITJVMAUX';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.6 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_STREAMS_ADM_UTL'"
  info        : "The Oracle database 'DBMS_STREAMS_ADM_UTL' package is shipped as undocumented and allows to run SQL commands as user 'SYS'. The user 'PUBLIC' should not be able to execute 'DBMS_STREAMS_ADM_UTL'.

Rationale:
The 'DBMS_STREAMS_ADM_UTL' package could allow an unauthorized user to run SQL commands as user 'SYS'."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_STREAMS_ADM_UTL FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_STREAMS_ADM_UTL';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.7 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_AQADM_SYS'"
  info        : "The Oracle database 'DBMS_AQADM_SYS' package is shipped as undocumented and allows to run SQL commands as user 'SYS'. The user 'PUBLIC' should not be able to execute 'DBMS_AQADM_SYS'.

Rationale:
The 'DBMS_AQADM_SYS' package could allow an unauthorized user to run SQL commands as user 'SYS'."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_AQADM_SYS FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_AQADM_SYS';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.8 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_STREAMS_RPC'"
  info        : "The Oracle database 'DBMS_STREAMS_RPC' package is shipped as undocumented and allows to run SQL commands as user 'SYS'. The user 'PUBLIC' should not be able to execute 'DBMS_STREAMS_RPC'.

Rationale:
The 'DBMS_STREAMS_RPC' package could allow an unauthorized user to run SQL commands as user 'SYS'."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_STREAMS_RPC FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_STREAMS_RPC';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.9 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_PRVTAQIM'"
  info        : "The Oracle database 'DBMS_PRVTAQIM' package is shipped as undocumented and allows to run SQL commands as user SYS. The user 'PUBLIC' should not be able to execute 'DBMS_PRVTAQIM'.

Rationale:
The 'DBMS_PRVTAQIM' package could allow an unauthorized user to escalate privileges because any SQL statements could be executed as user SYS."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_PRVTAQIM FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_PRVTAQIM';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.10 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'LTADM'"
  info        : "The Oracle database 'LTADM' package is shipped as undocumented. It allows privilege escalation if granted to unprivileged users. The user 'PUBLIC' should not be able to execute 'LTADM'.

Rationale:
The 'LTADM' package could allow an unauthorized user to run any SQL command as user 'SYS'."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON LTADM FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='LTADM';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.11 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'WWV_DBMS_SQL'"
  info        : "The Oracle database 'WWV_DBMS_SQL' package is shipped as undocumented. It allows Oracle Application Express to run dynamic SQL statements.

Rationale:
The 'WWV_DBMS_SQL' package could allow an unauthorized user to run SQL statements as the Application Express ('APEX') user. The user 'PUBLIC' should not be able to execute 'WWV_DBMS_SQL'."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON WWV_DBMS_SQL FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|14,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='WWV_DBMS_SQL';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.12 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'WWV_EXECUTE_IMMEDIATE'"
  info        : "The Oracle database 'WWV_EXECUTE_IMMEDIATE' package is shipped as undocumented. It allows Oracle Application Express to run dynamic SQL statements. The user 'PUBLIC' should not be able to execute 'WWV_EXECUTE_IMMEDIATE'.

Rationale:
The 'WWV_EXECUTE_IMMEDIATE' package could allow an unauthorized user to run SQL statements as the Application Express ('APEX') user."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON WWV_EXECUTE_IMMEDIATE FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='WWV_EXECUTE_IMMEDIATE';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.13 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_IJOB'"
  info        : "The Oracle database 'DBMS_IJOB' package is shipped as undocumented. It allows a user to run database jobs in the context of another user. The user 'PUBLIC' should not be able to execute 'DBMS_IJOB'.

Rationale:
The 'DBMS_IJOB' package could allow an attacker to change identities by using a different username to execute a database job."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_IJOB FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_IJOB';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2.14 Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_FILE_TRANSFER'"
  info        : "The Oracle database 'DBMS_FILE_TRANSFER' package allows a user to transfer files from one database server to another. The user 'PUBLIC' should not be able to execute 'DBMS_FILE_TRANSFER'.

Rationale:
The 'DBMS_FILE_TRANSFER' package could allow to transfer files from one database server to another without authorization to do so."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ON DBMS_FILE_TRANSFER FROM PUBLIC;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|18,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE='PUBLIC' AND PRIVILEGE='EXECUTE' AND TABLE_NAME='DBMS_FILE_TRANSFER';"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.1 Ensure 'SELECT ANY DICTIONARY' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'SELECT ANY DICTIONARY' privilege allows the designated user to access 'SYS' schema objects. Unauthorized grantees should not have that privilege.

Rationale:
The Oracle password hashes are part of the 'SYS' schema and can be selected using 'SELECT ANY DICTIONARY' privileges."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE SELECT_ANY_DICTIONARY FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|14.4,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='SELECT ANY DICTIONARY' AND GRANTEE NOT IN ('DBA','DBSNMP','OEM_MONITOR', 'OLAPSYS','ORACLE_OCM','SYSMAN','WMSYS','SYSBACKUP','SYSDG');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.2 Ensure 'SELECT ANY TABLE' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'SELECT ANY TABLE' privilege allows the designated user to open any table, except 'SYS', to view it. Unauthorized grantees should not have that privilege.

Rationale:
Assignment of the 'SELECT ANY TABLE' privilege can allow the unauthorized viewing of sensitive data."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE SELECT ANY TABLE FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|14.4,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='SELECT ANY TABLE' AND GRANTEE NOT IN ('DBA', 'MDSYS', 'SYS', 'IMP_FULL_DATABASE', 'EXP_FULL_DATABASE', 'DATAPUMP_IMP_FULL_DATABASE', 'WMSYS', 'SYSTEM','OLAP_DBA', 'DV_REALM_OWNER');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.3 Ensure 'AUDIT SYSTEM' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'AUDIT SYSTEM' privilege allows changes to auditing activities on the system. Unauthorized grantees should not have that privilege.

Rationale:
The 'AUDIT SYSTEM' privilege can allow the unauthorized alteration of system audit activities, such as disabling the creation of audit trails."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE AUDIT SYSTEM FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='AUDIT SYSTEM' AND GRANTEE NOT IN ('DBA','DATAPUMP_IMP_FULL_DATABASE','IMP_FULL_DATABASE', 'SYS','AUDIT_ADMIN');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.4 Ensure 'EXEMPT ACCESS POLICY' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'EXEMPT ACCESS POLICY' keyword provides the user the capability to access all the table rows regardless of row-level security lockouts. Unauthorized grantees should not have that keyword assigned to them.

Rationale:
The 'EXEMPT ACCESS POLICY' privilege can allow an unauthorized user to potentially access and change data."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE EXEMPT ACCESS POLICY FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|14.4,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='EXEMPT ACCESS POLICY';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.5 Ensure 'BECOME USER' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'BECOME USER' privilege allows the designated user to inherit the rights of another user. Unauthorized grantees should not have that privilege.

Rationale:
The 'BECOME USER' privilege can allow the unauthorized use of another user's privileges, this capability should be restricted according to the needs of the organization."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE BECOME USER FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|16,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='BECOME USER' AND GRANTEE NOT IN ('DBA','SYS','IMP_FULL_DATABASE');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.6 Ensure 'CREATE_PROCEDURE' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'CREATE PROCEDURE' privilege allows the designated user to create a stored procedure that will fire when given the correct command sequence. Unauthorized grantees should not have that privilege.

Rationale:
The 'CREATE PROCEDURE' privilege can lead to severe problems in unauthorized hands, such as rogue procedures facilitating data theft or denial-of-service by corrupting data tables."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE CREATE_PROCEDURE FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='CREATE PROCEDURE' AND GRANTEE NOT IN ( 'DBA','DBSNMP','MDSYS','OLAPSYS','OWB$CLIENT', 'OWBSYS','RECOVERY_CATALOG_OWNER','SPATIAL_CSW_ADMIN_USR', 'SPATIAL_WFS_ADMIN_USR','SYS','APEX_030200','APEX_040000', 'APEX_040100','APEX_040200','DVF','RESOURCE','DV_REALM_RESOURCE', 'APEX_GRANTS_FOR_NEW_USERS_ROLE','APEX_050000','MGMT_VIEW', 'SYSMAN_MDS','SYSMAN_OPSS','SYSMAN_RO','SYSMAN_STB');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.7 Ensure 'ALTER SYSTEM' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'ALTER SYSTEM' privilege allows the designated user to dynamically alter the instance's running operations. Unauthorized grantees should not have that privilege.

Rationale:
The 'ALTER SYSTEM' privilege can lead to severe problems, such as the instance's session being killed or the stopping of redo log recording, which would make transactions unrecoverable."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE ALTER SYSTEM FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='ALTER SYSTEM' AND GRANTEE NOT IN ('SYS','SYSTEM','APEX_030200','APEX_040000', 'APEX_040100','APEX_040200','DBA','EM_EXPRESS_ALL','SYSBACKUP','GSMADMIN_ROLE', 'GSM_INTERNAL','SYSDG','GSMADMIN_INTERNAL');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.8 Ensure 'CREATE ANY LIBRARY' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'CREATE ANY LIBRARY' privilege allows the designated user to create objects that are associated to the shared libraries. Unauthorized grantees should not have that privilege.

Rationale:
The 'CREATE ANY LIBRARY' privilege can allow the creation of numerous library-associated objects and potentially corrupt the libraries' integrity."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE CREATE ANY LIBRARY FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='CREATE ANY LIBRARY' AND GRANTEE NOT IN ('SYS','SYSTEM','DBA','IMP_FULL_DATABASE');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.9 Ensure 'CREATE LIBRARY' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'CREATE LIBRARY' privilege allows the designated user to create objects that are associated to the shared libraries. Unauthorized grantees should not have that privilege.

Rationale:
The 'CREATE LIBRARY' privilege can allow the creation of numerous library-associated objects and potentially corrupt the libraries' integrity."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE CREATE LIBRARY FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='CREATE LIBRARY' AND GRANTEE NOT IN ('SYS','SYSTEM','DBA','MDSYS','SPATIAL_WFS_ADMIN_USR', 'SPATIAL_CSW_ADMIN_USR','DVSYS','GSMADMIN_INTERNAL','XDB');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.10 Ensure 'GRANT ANY OBJECT PRIVILEGE' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'GRANT ANY OBJECT PRIVILEGE' keyword provides the grantee the capability to grant access to any single or multiple combinations of objects to any grantee in the catalog of the database. Unauthorized grantees should not have that keyword assigned to them.

Rationale:
The 'GRANT ANY OBJECT PRIVILEGE' capability can allow an unauthorized user to potentially access or change confidential data, or damage the data catalog due to potential complete instance access."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE GRANT ANY OBJECT PRIVILEGE FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='GRANT ANY OBJECT PRIVILEGE' AND GRANTEE NOT IN ('DBA','SYS','IMP_FULL_DATABASE','DATAPUMP_IMP_FULL_DATABASE', 'EM_EXPRESS_ALL', 'DV_REALM_OWNER');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.11 Ensure 'GRANT ANY ROLE' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'GRANT ANY ROLE' keyword provides the grantee the capability to grant any single role to any grantee in the catalog of the database. Unauthorized grantees should not have that keyword assigned to them.

Rationale:
The 'GRANT ANY ROLE' capability can allow an unauthorized user to potentially access or change confidential data or damage the data catalog due to potential complete instance access."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE GRANT ANY ROLE FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='GRANT ANY ROLE' AND GRANTEE NOT IN ('DBA','SYS','DATAPUMP_IMP_FULL_DATABASE','IMP_FULL_DATABASE', 'SPATIAL_WFS_ADMIN_USR','SPATIAL_CSW_ADMIN_USR', 'GSMADMIN_INTERNAL','DV_REALM_OWNER', 'EM_EXPRESS_ALL', 'DV_OWNER');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.3.12 Ensure 'GRANT ANY PRIVILEGE' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'GRANT ANY PRIVILEGE' keyword provides the grantee the capability to grant any single privilege to any item in the catalog of the database. Unauthorized grantees should not have that privilege.

Rationale:
The 'GRANT ANY PRIVILEGE' capability can allow an unauthorized user to potentially access or change confidential data or damage the data catalog due to potential complete instance access."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE GRANT ANY PRIVILEGE FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='GRANT ANY PRIVILEGE' AND GRANTEE NOT IN ('DBA','SYS','IMP_FULL_DATABASE','DATAPUMP_IMP_FULL_DATABASE','DV_REALM_OWNER','EM_EXPRESS_ALL');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.4.1 Ensure 'DELETE_CATALOG_ROLE' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'DELETE_CATALOG_ROLE' provides 'DELETE' privileges for the records in the system's audit table ('AUD$'). Unauthorized grantees should not have that role.

Rationale:
Permitting unauthorized access to the 'DELETE_CATALOG_ROLE' can allow the destruction of audit records vital to the forensic investigation of unauthorized activities."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE DELETE_CATALOG_ROLE FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|6,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE granted_role='DELETE_CATALOG_ROLE' AND GRANTEE NOT IN ('DBA','SYS');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.4.2 Ensure 'SELECT_CATALOG_ROLE' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'SELECT_CATALOG_ROLE' provides 'SELECT' privileges on all data dictionary views held in the 'SYS' schema. Unauthorized grantees should not have that role.

Rationale:
Permitting unauthorized access to the 'SELECT_CATALOG_ROLE' can allow the disclosure of all dictionary data."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE SELECT_CATALOG_ROLE FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE granted_role='SELECT_CATALOG_ROLE' AND grantee not in ('DBA','SYS','IMP_FULL_DATABASE','EXP_FULL_DATABASE', 'OEM_MONITOR', 'SYSBACKUP','EM_EXPRESS_BASIC','SYSMAN');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.4.3 Ensure 'EXECUTE_CATALOG_ROLE' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'EXECUTE_CATALOG_ROLE' provides 'EXECUTE' privileges for a number of packages and procedures in the data dictionary in the 'SYS' schema. Unauthorized grantees should not have that role.

Rationale:
Permitting unauthorized access to the 'EXECUTE_CATALOG_ROLE' can allow the disruption of operations by initialization of rogue procedures, this capability should be restricted according to the needs of the organization."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE EXECUTE_CATALOG_ROLE FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE granted_role='EXECUTE_CATALOG_ROLE' AND grantee not in ('DBA','SYS','IMP_FULL_DATABASE','EXP_FULL_DATABASE');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.4.4 Ensure 'DBA' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'DBA' role is the default database administrator role provided for the allocation of administrative privileges. Unauthorized grantees should not have that role.

Rationale:
Assignment of the 'DBA' role to an ordinary user can provide a great number of unnecessary privileges to that user and open the door to data breaches, integrity violations, and denial-of-service conditions."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE DBA FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTED_ROLE='DBA' AND GRANTEE NOT IN ('SYS','SYSTEM');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.5.1 Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'AUD$'"
  info        : "The Oracle database 'SYS.AUD$' table contains all the audit records for the database of the non-Data Manipulation Language (DML) events, such as 'ALTER', 'DROP', and 'CREATE', and so forth. (DML changes need trigger-based audit events to record data alterations.) Unauthorized grantees should not have full access to that table.

Rationale:
Permitting non-privileged users the authorization to manipulate the 'SYS.AUD$' table can allow distortion of the audit records, hiding unauthorized activities."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE ALL ON AUD$ FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|6,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_TAB_PRIVS WHERE TABLE_NAME='AUD$' AND GRANTEE NOT IN ('DELETE_CATALOG_ROLE');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.5.2 Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'USER_HISTORY$'"
  info        : "The Oracle database 'SYS.USER_HISTORY$' table contains all the audit records for the user's password change history. (This table gets updated by password changes if the user has an assigned profile that has a password reuse limit set, e.g., 'PASSWORD_REUSE_TIME' set to other than 'UNLIMITED'.) Unauthorized grantees should not have full access to that table.

Rationale:
Permitting non-privileged users the authorization to manipulate the records in the 'SYS.USER_HISTORY$' table can allow distortion of the audit trail, potentially hiding unauthorized data confidentiality attacks or integrity changes."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE ALL ON USER_HISTORY$ FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|16.14,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_TAB_PRIVS WHERE TABLE_NAME='USER_HISTORY$' AND OWNER = 'SYS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.5.3 Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'LINK$'"
  info        : "The Oracle database 'SYS.LINK$' table contains all the user's password information and data table link information. Unauthorized grantees should not have full access to that table.

Rationale:
Permitting non-privileged users to manipulate or view the 'SYS.LINK$' table can allow capture of password information and/or corrupt the primary database linkages."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE ALL ON LINK$ FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|16.14,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_TAB_PRIVS WHERE TABLE_NAME='LINK$' AND GRANTEE NOT IN ('DV_SECANALYST') AND OWNER='SYS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.5.4 Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'SYS.USER$'"
  info        : "The Oracle database 'SYS.USER$' table contains the users' hashed password information. Unauthorized grantees should not have full access to that table.

Rationale:
Permitting non-privileged users the authorization to open the 'SYS.USER$' table can allow the capture of password hashes for the later application of password cracking algorithms to breach confidentiality."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE ALL ON SYS.USER$ FROM <username>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|16.14,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_TAB_PRIVS WHERE TABLE_NAME='USER$' AND OWNER='SYS' AND GRANTEE NOT IN ('CTXSYS','XDB','APEX_030200','SYSMAN', 'APEX_040000','APEX_040100','APEX_040200','DV_SECANALYST','DVSYS','ORACLE_OCM');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.5.5 Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'DBA_%'"
  info        : "The Oracle database 'DBA_' views show all information which is relevant to administrative accounts. Unauthorized grantees should not have full access to those views.

Rationale:
Permitting users the authorization to manipulate the 'DBA_' views can expose sensitive data."
  solution    : "Replace <Non-DBA/SYS grantee> in the query below, with the Oracle login(s) or role(s) returned from the associated audit procedure and execute:

	REVOKE ALL ON DBA_ FROM <Non-DBA/SYS grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1"
  sql_request : "SELECT grantee||'.'||table_name FROM DBA_TAB_PRIVS WHERE TABLE_NAME LIKE 'DBA_%' AND GRANTEE NOT IN ('DBA','AUDIT_ADMIN','AUDIT_VIEWER','CAPTURE_ADMIN','DVSYS', 'SYSDG','DV_SECANALYST','SYSKM','DV_MONITOR','ORACLE_OCM','DV_ACCTMGR', 'GSMADMIN_INTERNAL','XDB','SYS','APPQOSSYS','AQ_ADMINISTRATOR_ROLE','CTXSYS', 'EXFSYS','MDSYS','OLAP_XS_ADMIN','OLAPSYS','ORDSYS','OWB$CLIENT','OWBSYS', 'SELECT_CATALOG_ROLE','WM_ADMIN_ROLE','WMSYS','XDBADMIN', 'LBACSYS', 'ADM_PARALLEL_EXECUTE_TASK','CISSCANROLE') AND NOT REGEXP_LIKE(grantee,'^APEX_0[3-9][0-9][0-9][0-9][0-9]$');"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.5.6 Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'SYS.SCHEDULER$_CREDENTIAL'"
  info        : "The Oracle database 'SCHEDULER$_CREDENTIAL' table contains the database scheduler credential information. Unauthorized grantees should not have full access to that table.

Rationale:
Permitting non-privileged users the authorization to open the 'SYS.SCHEDULER$_CREDENTIAL' table could expose the credentials to compromise and reuse."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE ALL ON SYS.SCHEDULER$_CREDENTIAL FROM <username>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|16.14,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_TAB_PRIVS WHERE TABLE_NAME='SCHEDULER$_CREDENTIAL' AND OWNER='SYS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.5.7 Ensure 'SYS.USER$MIG' Has Been Dropped"
  info        : "The table 'sys.user$mig' is created during migration and contains the Oracle password hashes before the migration starts. This table should be dropped.

Rationale:
The table 'sys.user$mig' is not deleted after the migration. An attacker could access the table containing the Oracle password hashes."
  solution    : "To remediate this setting, execute the following SQL statement.

DROP TABLE SYS.USER$MIG;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
  sql_request : "SELECT OWNER, TABLE_NAME FROM ALL_TABLES WHERE OWNER='SYS' AND TABLE_NAME='USER$MIG';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.6 Ensure '%ANY%' Is Revoked from Unauthorized 'GRANTEE'"
  info        : "The Oracle database 'ANY' keyword provides the user the capability to alter any item in the catalog of the database. Unauthorized grantees should not have that keyword assigned to them.

Rationale:
Authorization to use the 'ANY' expansion of a privilege can allow an unauthorized user to potentially change confidential data or damage the data catalog."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE '<ANY Privilege>' FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|14.4,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE LIKE '%ANY%' AND GRANTEE NOT IN ('AQ_ADMINISTRATOR_ROLE','DBA','DBSNMP','EXFSYS', 'EXP_FULL_DATABASE','IMP_FULL_DATABASE','DATAPUMP_IMP_FULL_DATABASE', 'JAVADEBUGPRIV','MDSYS','OEM_MONITOR','OLAPSYS','OLAP_DBA','ORACLE_OCM', 'OWB$CLIENT','OWBSYS','SCHEDULER_ADMIN','SPATIAL_CSW_ADMIN_USR', 'SPATIAL_WFS_ADMIN_USR','SYS','SYSMAN','SYSTEM','WMSYS','APEX_030200', 'APEX_040000','APEX_040100','APEX_040200','LBACSYS', 'SYSBACKUP','CTXSYS','OUTLN','DVSYS','ORDPLUGINS','ORDSYS','RECOVERY_CATALOG_OWNER_VPD', 'GSMADMIN_INTERNAL','XDB','SYSDG','AUDIT_ADMIN','DV_OWNER','DV_REALM_OWNER', 'EM_EXPRESS_ALL','RECOVERY_CATALOG_OWNER','APEX_050000','SYSMAN_STB','SYSMAN_TYPES');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.7 Ensure 'DBA_SYS_PRIVS.%' Is Revoked from Unauthorized 'GRANTEE' with 'ADMIN_OPTION' Set to 'YES'"
  info        : "The Oracle database 'WITH_ADMIN' privilege allows the designated user to grant another user the same privileges. Unauthorized grantees should not have that privilege.

Rationale:
Assignment of the 'WITH_ADMIN' privilege can allow the granting of a restricted privilege to an unauthorized user."
  solution    : "To remediate this setting, execute the following SQL statement.

	REVOKE <privilege> FROM <grantee>;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE ADMIN_OPTION='YES' AND GRANTEE not in ('AQ_ADMINISTRATOR_ROLE','DBA','OWBSYS', 'SCHEDULER_ADMIN','SYS','SYSTEM','WMSYS', 'DVSYS','SYSKM','DV_ACCTMGR') AND NOT REGEXP_LIKE(grantee,'^APEX_0[3-9][0-9][0-9][0-9][0-9]$');"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.8 Ensure Proxy Users Have Only 'CONNECT' Privilege"
  info        : "Do not grant privileges other than 'CONNECT' directly to proxy users.

Rationale:
A proxy user should only have the ability to connect to the database or based on the needs of the organization."
  solution    : "To remediate this setting execute the following SQL statement for each '[PRIVILEGE]' returned (other than 'CONNECT') by running the audit procedure.

	REVOKE \

	 FROM \

	;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|16,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE,GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE IN (SELECT PROXY FROM DBA_PROXIES) AND GRANTED_ROLE NOT IN ('CONNECT') UNION SELECT GRANTEE,PRIVILEGE FROM DBA_SYS_PRIVS WHERE GRANTEE IN (SELECT PROXY FROM DBA_PROXIES) AND PRIVILEGE NOT IN ('CREATE SESSION') UNION SELECT GRANTEE,PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE IN (SELECT PROXY FROM DBA_PROXIES);"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.9 Ensure 'EXECUTE ANY PROCEDURE' Is Revoked from 'OUTLN'"
  info        : "Remove unneeded 'EXECUTE ANY PROCEDURE' privileges from 'OUTLN'.

Rationale:
Migrated 'OUTLN' users have more privileges than required."
  solution    : "To remediate this setting, execute the following SQL statement.

REVOKE EXECUTE ANY PROCEDURE FROM OUTLN;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='EXECUTE ANY PROCEDURE' AND GRANTEE='OUTLN';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.10 Ensure 'EXECUTE ANY PROCEDURE' Is Revoked from 'DBSNMP'"
  info        : "Remove unneeded privileges from DBSNMP.

Migrated DBSNMP users have more privileges than required."
  solution    : "To remediate this setting execute the following SQL statement.

REVOKE EXECUTE ANY PROCEDURE FROM DBSNMP;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  sql_request : "SELECT GRANTEE, PRIVILEGE FROM DBA_SYS_PRIVS WHERE PRIVILEGE='EXECUTE ANY PROCEDURE' AND GRANTEE='DBSNMP';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.1 Ensure the 'USER' Audit Option Is Enabled"
  info        : "The 'USER' object allows for creating accounts that can interact with the database according to the roles and privileges allotted to the account. It may also own database objects. Enabling the audit option causes auditing of all activities and requests to create, drop or alter a user, including a user changing their own password. (The latter is not audited by 'audit ALTER USER'.)

Rationale:
Any unauthorized attempts to create, drop or alter a user should cause concern, whether successful or not. Auditing can also be useful in forensics if an account is compromised, and auditing is mandated by many common security initiatives. An abnormally high number of these activities in a given period might be worth investigation. Any failed attempt to drop a user or create a user may be worth further review."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT USER;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='USER' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "USER", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.2 Ensure the 'ROLE' Audit Option Is Enabled"
  info        : "The 'ROLE' object allows for the creation of a set of privileges that can be granted to users or other roles. Enabling the audit option causes auditing of all attempts, successful or not, to create, drop, alter or set roles.

Rationale:
Roles are a key database security infrastructure component. Any attempt to create, drop or alter a role should be audited. This statement auditing option also audits attempts, successful or not, to set a role in a session. Any unauthorized attempts to create, drop or alter a role may be worthy of investigation. Attempts to set a role by users without the role privilege may warrant investigation."
  solution    : "Execute the following SQL statement to remediate this setting:

AUDIT ROLE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='ROLE' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "ROLE", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.3 Ensure the 'SYSTEM GRANT' Audit Option Is Enabled"
  info        : "Enabling the audit option for the 'SYSTEM GRANT' object causes auditing of any attempt, successful or not, to grant or revoke any system privilege or role, regardless of privilege held by the user attempting the operation.

Rationale:
Logging of all grant and revokes (roles and system privileges) can provide forensic evidence about a pattern of suspect/unauthorized activities. Any unauthorized attempt may be cause for further investigation."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT SYSTEM GRANT;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='SYSTEM GRANT' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "SYSTEM GRANT", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.4 Ensure the 'PROFILE' Audit Option Is Enabled"
  info        : "The 'PROFILE' object allows for the creation of a set of database resource limits that can be assigned to a user, so that that user cannot exceed those resource limitations. Enabling the audit option causes auditing of all attempts, successful or not, to create, drop or alter any profile.

Rationale:
As profiles are part of the database security infrastructure, auditing the creation, modification, and deletion of profiles is recommended."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT PROFILE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='PROFILE' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "PROFILE", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.5 Ensure the 'DATABASE LINK' Audit Option Is Enabled"
  info        : "Enabling the audit option for the DATABASE LINK object causes all activities on database links to be audited.

Rationale:
As the logging of user activities involving the creation or dropping of a 'DATABASE LINK' can provide forensic evidence about a pattern of unauthorized activities, the audit capability should be enabled."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT DATABASE LINK;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='DATABASE LINK' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "DATABASE LINK", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.6 Ensure the 'PUBLIC DATABASE LINK' Audit Option Is Enabled"
  info        : "The 'PUBLIC DATABASE LINK' object allows for the creation of a public link for an application-based 'user' to access the database for connections/session creation. Enabling the audit option causes all user activities involving the creation, alteration, or dropping of public links to be audited.

Rationale:
As the logging of user activities involving the creation, alteration, or dropping of a 'PUBLIC DATABASE LINK' can provide forensic evidence about a pattern of unauthorized activities, the audit capability should be enabled."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT PUBLIC DATABASE LINK;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='PUBLIC DATABASE LINK' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "PUBLIC DATABASE LINK", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.7 Ensure the 'PUBLIC SYNONYM' Audit Option Is Enabled"
  info        : "The 'PUBLIC SYNONYM' object allows for the creation of an alternate description of an object. Public synonyms are accessible by all users that have the appropriate privileges to the underlying object. Enabling the audit option causes all user activities involving the creation or dropping of public synonyms to be audited.

Rationale:
As the logging of user activities involving the creation or dropping of a 'PUBLIC SYNONYM' can provide forensic evidence about a pattern of unauthorized activities, the audit capability should be enabled."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT PUBLIC SYNONYM;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='PUBLIC SYNONYM' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "PUBLIC SYNONYM", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.8 Ensure the 'SYNONYM' Audit Option Is Enabled"
  info        : "The 'SYNONYM' operation allows for the creation of an alternative name for a database object such as a Java class schema object, materialized view, operator, package, procedure, sequence, stored function, table, view, user-defined object type, or even another synonym. This synonym puts a dependency on its target and is rendered invalid if the target object is changed/dropped. Enabling the audit option causes all user activities involving the creation or dropping of synonyms to be audited.

Rationale:
As the logging of user activities involving the creation or dropping of a 'SYNONYM' can provide forensic evidence about a pattern of suspect/unauthorized activities, the audit capability should be enabled."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT SYNONYM;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='SYNONYM' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "SYNONYM", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.9 Ensure the 'GRANT DIRECTORY' Audit Option Is Enabled"
  info        : "The 'DIRECTORY' object allows for the creation of a directory object that specifies an alias for a directory on the server file system, where the external binary file 'LOBs' ('BFILEs')/ table data are located. Enabling this audit option causes all user activities involving the creation or dropping of a directory alias to be audited.

Rationale:
As the logging of user activities involving the creation or dropping of a 'DIRECTORY' can provide forensic evidence about a pattern of unauthorized activities, the audit capability should be enabled."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT DIRECTORY;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='DIRECTORY' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "GRANT DIRECTORY", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.10 Ensure the 'SELECT ANY DICTIONARY' Audit Option Is Enabled"
  info        : "The 'SELECT ANY DICTIONARY' capability allows the user to view the definitions of all schema objects in the database. Enabling the audit option causes all user activities involving this capability to be audited.

Rationale:
As the logging of user activities involving the capability to access the description of all schema objects in the database can provide forensic evidence about a pattern of unauthorized activities, the audit capability should be enabled."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT SELECT ANY DICTIONARY;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='SELECT ANY DICTIONARY' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "SELECT ANY DICTIONARY", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.11 Ensure the 'GRANT ANY OBJECT PRIVILEGE' Audit Option Is Enabled"
  info        : "'GRANT ANY OBJECT PRIVILEGE' allows the user to grant or revoke any object privilege, which includes privileges on tables, directories, mining models, etc. Enabling this audit option causes auditing of all uses of that privilege.

Rationale:
Logging of privilege grants that can lead to the creation, alteration, or deletion of critical data, the modification of objects, object privilege propagation and other such activities can be critical to forensic investigations."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT GRANT ANY OBJECT PRIVILEGE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.7,800-53|AC-6(9),CSCv6|6.2,CSF|PR.AC-4,ISO/IEC-27001|A.12.4.3,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3"
  sql_request : "SELECT PRIVILEGE, SUCCESS, FAILURE FROM DBA_PRIV_AUDIT_OPTS WHERE PRIVILEGE='GRANT ANY OBJECT PRIVILEGE' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "GRANT ANY OBJECT PRIVILEGE", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.12 Ensure the 'GRANT ANY PRIVILEGE' Audit Option Is Enabled"
  info        : "'GRANT ANY PRIVILEGE' allows a user to grant any system privilege, including the most powerful privileges typically available only to administrators - to change the security infrastructure, to drop/add/modify users and more.

Rationale:
Auditing the use of this privilege is part of a comprehensive auditing policy that can help in detecting issues and can be useful in forensics."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT GRANT ANY PRIVILEGE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.1.7,800-53|AC-6(9),CSCv6|6.2,CSF|PR.AC-4,ISO/IEC-27001|A.12.4.3,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3"
  sql_request : "SELECT PRIVILEGE, SUCCESS, FAILURE FROM DBA_PRIV_AUDIT_OPTS WHERE PRIVILEGE='GRANT ANY PRIVILEGE' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "GRANT ANY PRIVILEGE", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.13 Ensure the 'DROP ANY PROCEDURE' Audit Option Is Enabled"
  info        : "The 'AUDIT DROP ANY PROCEDURE' command is auditing the dropping of procedures. Enabling the option causes auditing of all such activities.

Rationale:
Dropping procedures of another user could be part of a privilege escalation exploit and should be audited."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT DROP ANY PROCEDURE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='DROP ANY PROCEDURE' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "DROP ANY PROCEDURE", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.14 Ensure the 'ALL' Audit Option on 'SYS.AUD$' Is Enabled"
  info        : "The logging of attempts to alter the audit trail in the 'SYS.AUD$' table (open for read/update/delete/view) will provide a record of any activities that may indicate unauthorized attempts to access the audit trail. Enabling the audit option will cause these activities to be audited.

Rationale:
As the logging of attempts to alter the 'SYS.AUD$' table can provide forensic evidence of the initiation of a pattern of unauthorized activities, this logging capability should be enabled."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT ALL ON SYS.AUD$ BY ACCESS;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT OWNER, OBJECT_NAME, OBJECT_TYPE FROM DBA_OBJ_AUDIT_OPTS WHERE OBJECT_NAME='AUD$' AND ALT='A/A' AND AUD='A/A' AND COM='A/A' AND DEL='A/A' AND GRA='A/A' AND IND='A/A' AND INS='A/A' AND LOC='A/A' AND REN='A/A' AND SEL='A/A' AND UPD='A/A' AND FBK='A/A';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "SYS", "AUD$", "TABLE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.15 Ensure the 'PROCEDURE' Audit Option Is Enabled"
  info        : "In this statement audit, 'PROCEDURE' means any procedure, function, package or library. Enabling this audit option causes any attempt, successful or not, to create or drop any of these types of objects to be audited, regardless of privilege or lack thereof. Java schema objects (sources, classes, and resources) are considered the same as procedures for the purposes of auditing SQL statements.

Rationale:
Any unauthorized attempts to create or drop a procedure in another's schema should cause concern, whether successful or not. Changes to critical stored code can dramatically change the behavior of the application and produce serious security consequences, including enabling privilege escalation and introducing SQL injection vulnerabilities. Audit records of such changes can be helpful in forensics."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT PROCEDURE;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='PROCEDURE' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "PROCEDURE", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.16 Ensure the 'ALTER SYSTEM' Audit Option Is Enabled"
  info        : "'ALTER SYSTEM' allows one to change instance settings, including security settings and auditing options. Additionally, 'ALTER SYSTEM' can be used to run operating system commands using undocumented Oracle functionality. Enabling the audit option will audit all attempts to perform 'ALTER SYSTEM', whether successful or not and regardless of whether or not the 'ALTER SYSTEM' privilege is held by the user attempting the action.

Rationale:
Any unauthorized attempt to alter the system should be cause for concern. Alterations outside of some specified maintenance window may be of concern. In forensics, these audit records could be quite useful."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT ALTER SYSTEM;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='ALTER SYSTEM' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "ALTER SYSTEM", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.17 Ensure the 'TRIGGER' Audit Option Is Enabled"
  info        : "A 'TRIGGER' may be used to modify 'DML' actions or invoke other (recursive) actions when some types of user-initiated actions occur. Enabling this audit option will cause auditing of any attempt, successful or not, to create, drop, enable or disable any schema trigger in any schema regardless of privilege or lack thereof. For enabling and disabling a trigger, it covers both 'ALTER TRIGGER' and 'ALTER TABLE'.

Rationale:
Triggers are often part of schema security, data validation and other critical constraints upon actions and data. A trigger in another schema may be used to escalate privileges, redirect operations, transform data and perform other sorts of perhaps undesired actions. Any unauthorized attempt to create, drop or alter a trigger in another schema may be cause for investigation."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT TRIGGER;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='TRIGGER' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "TRIGGER", "BY ACCESS", "BY ACCESS"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "5.1.18 Ensure the 'CREATE SESSION' Audit Option Is Enabled"
  info        : "Enabling this audit option will cause auditing of all attempts to connect to the database, whether successful or not, as well as audit session disconnects/logoffs. The commands to audit 'SESSION', 'CONNECT' or 'CREATE SESSION' all accomplish the same thing - they initiate statement auditing of the connect statement used to create a database session.

Rationale:
Auditing attempts to connect to the database is basic and mandated by most security initiatives. Any attempt to logon to a locked account, failed attempts to logon to default accounts or an unusually high number of failed logon attempts of any sort, for any user, in a particular time period may indicate an intrusion attempt. In forensics, the logon record may be first in a chain of evidence and contain information found in no other type of audit record for the session. Logon and logoff in the audit trail define the period and duration of the session."
  solution    : "Execute the following SQL statement to remediate this setting.

AUDIT SESSION;"
  see_also    : "https://workbench.cisecurity.org/files/2121"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  sql_request : "SELECT AUDIT_OPTION, SUCCESS, FAILURE FROM DBA_STMT_AUDIT_OPTS WHERE AUDIT_OPTION='CREATE SESSION' AND USER_NAME IS NULL AND PROXY_NAME IS NULL AND SUCCESS = 'BY ACCESS' AND FAILURE = 'BY ACCESS';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "CREATE SESSION", "BY ACCESS", "BY ACCESS"
</custom_item>

</group_policy>
</check_type>
