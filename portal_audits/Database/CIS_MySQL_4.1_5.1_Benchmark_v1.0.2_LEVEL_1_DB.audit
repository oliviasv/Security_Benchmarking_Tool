#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.23 $
# $Date: 2020/04/22 $
#
# Description	: This audit is based on the Security Configuration Benchmark For MySQL 4.1, 5.0, 5.1 Community Editions
# 	  Version 1.0.2 April 2009
# 	  https://workbench.cisecurity.org/files/1613
#
#<ui_metadata>
#<display_name>CIS MySQL 4.1 5.1 L1 v1.0.2</display_name>
#<spec>
#  <type>CIS</type>
#  <name>MySQL 4.1 5.1 L1</name>
#  <version>1.0.2</version>
#  <link>https://workbench.cisecurity.org/files/1613</link>
#</spec>
#<labels>database,cis,mysql,mysql_4,mysql_4.1,mysql_5,mysql_5.1</labels>
#<benchmark_refs>LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"Database" db_type:"MySQL" version:"1">
<group_policy:"MySQL CIS 1.0.2">

<if>
  <condition type:"AND">
    <custom_item>
      type         : SQL_POLICY
      description  : "MySQL 4.1, 5.0, 5.1 Community Editions is installed"
      sql_request  : "show variables like 'version' ;"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "version", regex:"(4\.1|5\.[01])"
      check_option : CAN_NOT_BE_NULL
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "MySQL 4.1, 5.0, 5.1 Community Editions is installed"
    </report>

    <report type:"WARNING">
      description : "1.1 OS Hardening"
      info        : "Harden OS using appropriate CIS benchmark

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Harden OS using appropriate CIS benchmark"
      reference   : "LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "1.6 Database not on system partition"
      info        : "Moving the database off the system partition will reduce the probability of denial of service via the exhaustion of available disk space to the operating system."
      solution    : "Databases must not be located on system partitions."
      reference   : "800-53|SC-5(2),CSF|PR.DS-4,ITSG-33|SC-5(2),LEVEL|1S,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "show variables like 'datadir' ;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "datadir", regex:"^([^C][:][\\].+|/.+)$"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "2.5 SSL files 'ssl_ca is configured'"
      info        : "Limiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL logs."
      solution    : "SSL files should be readable by MySQL user. No other read or write permissions."
      reference   : "800-171|3.13.8,800-53|SC-8(1),CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),LEVEL|1S,NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,SWIFT-CSCv1|2.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "show variables like 'ssl_ca' ;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "ssl_ca", regex:"^([A-Z][:][\\].+|/.+)$"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "2.5 SSL files 'ssl_cert is configured'"
      info        : "Limiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL logs."
      solution    : "SSL files should be readable by MySQL user. No other read or write permissions."
      reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "show variables like 'ssl_cert' ;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "ssl_cert", regex:"^([A-Z][:][\\].+|/.+)$"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "2.5 SSL files 'ssl_key is configured'"
      info        : "Limiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL logs."
      solution    : "SSL files should be readable by MySQL user. No other read or write permissions."
      reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "show variables like 'ssl_key' ;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : "ssl_key", regex:"^([A-Z][:][\\].+|/.+)$"
    </custom_item>

    <custom_item>
      type         : SQL_POLICY
      description  : "3.1 Error Logging Enabled"
      info         : "Enabling error logging may increase the ability to detect malicious attempts against MySQL."
      solution     : "The error log must be enabled."
      reference    : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also     : "https://workbench.cisecurity.org/files/1613"
      sql_request  : "show variables like 'log_error' ;"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "log_error", regex:".*\.err"
      check_option : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type         : SQL_POLICY
      description  : "3.2 Logs not on system partition 'log_bin = ON'"
      info         : "Moving the MySQL logs off the system partition will reduce the probability of denial of service via the exhaustion of available disk space to the operating system."
      solution     : "Logs should be on a non-system partition."
      reference    : "800-53|SC-5(2),CSF|PR.DS-4,ITSG-33|SC-5(2),LEVEL|1S,SWIFT-CSCv1|6.4"
      see_also     : "https://workbench.cisecurity.org/files/1613"
      sql_request  : "show variables like 'log_bin' ;"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "log_bin", "ON"
      check_option : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type         : SQL_POLICY
      description  : "3.3 Logs not on database partition 'log_bin = ON'"
      info         : "Moving the MySQL logs off the database partition will reduce the probability of denial of service via the exhaustion of available disk space to MySQL."
      solution     : "Logs should be on their own partition"
      reference    : "800-53|SC-5(2),CSF|PR.DS-4,ITSG-33|SC-5(2),LEVEL|1S,SWIFT-CSCv1|6.4"
      see_also     : "https://workbench.cisecurity.org/files/1613"
      sql_request  : "show variables like 'log_bin' ;"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "log_bin", "ON"
      check_option : CAN_NOT_BE_NULL
    </custom_item>

    <report type:"WARNING">
      description : "4.3 Upgrade fix privilege tables"
      info        : "Some revisions of MySQL have added privileges that did not exist in earlier versions. Ensuring that privileges are appropriately applied to MySQL objects will help ensure the confidentiality, integrity, and availability of the data housed in MySQL.

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "When upgrading always fix the privilege tables."
      reference   : "LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "4.4 Remove test database"
      info        : "Removing unutilized components will eliminate an attacker's ability to leverage them. The default MySQL installation comes with a database called 'test'. Databases can be viewed using the 'SHOW DATABASES;' command. Databases can be dropped using the 'DROP DATABASE xxx;' syntax."
      solution    : "Remove test database."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "show databases like 'test' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "4.5 Change admin account name"
      info        : "Disabling the root user's ability to interact with MySQL will limit the use of this sensitive account for non-operating system administrative purposes. Additionally, avoiding the 'root' account for MySQL interactions will reduce the possibility of compromising the system via a MySQL client-born vulnerability. Verify root user no longer exists using following query: select user from mysql.user where user = 'root';"
      solution    : "Change admin account from default ('root') to something else."
      reference   : "800-171|3.1.1,800-53|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1S,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user from mysql.user where user = 'root' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : NULL
    </custom_item>

    <report type:"WARNING">
      description : "4.6 Complex Passwords"
      info        : "Complex passwords help mitigate dictionary, brute forcing, and other password attacks. A policy should be in place to require complex passwords on all database accounts.

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Minimum 8 characters in length with characters from at least three of the following categories: uppercase, lowercase, numeric, non-alphanumeric."
      reference   : "LEVEL|1NS"
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "4.7 Verify Secure Password Hashes"
      info        : "Starting in v4.1 a stronger password hash is used that result in hashes 41 bytes long. Older password hashes were only 16 bytes. Utilizing the stronger hashing algorithm will ensure the confidentiality, integrity, and availability of the data housed within MySQL by protecting the confidentiality of authentication credentials. Use 'select User, Password from mysql.user where length(password) < 41;' query to verify."
      solution    : "All password hashes should be 41 bytes or longer."
      reference   : "800-171|3.13.11,800-171|3.5.10,800-53|IA-5(1),800-53|SC-13,CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|IA-5(1),ITSG-33|SC-13,LEVEL|1S,NESA|M5.2.6,NESA|T5.2.3,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY6,NIAv2|CY7,NIAv2|NS5e,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select User, Password from mysql.user where length(password) < 41 ;"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : NULL, NULL
    </custom_item>

    <report type:"WARNING">
      description : "4.8 Single use accounts"
      info        : "Utilizing unique database accounts across applications will reduce the impact of a compromised MySQL account. Database user accounts should not be reused for multiple applications or users.

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Each database user should be used for single purpose/person."
      reference   : "LEVEL|1NS"
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "4.10 No blank passwords"
      info        : "Blank passwords negate the benefits provided by authentication mechanisms. Blank passwords allow a user to login with out using a password. Use the 'select User, Password from mysql.user where length(password) = 0 or password is null;' query to verify."
      solution    : "Verify no blank passwords."
      reference   : "800-171|3.5.7,800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1S,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select count(user), password from mysql.user where length(password) = 0 or password is null ;"
      sql_types   : POLICY_INTEGER, POLICY_VARCHAR
      sql_expect  : "0", NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "4.11 Anonymous account"
      info        : "Anonymous accounts are users with no name (''). They allow for default logins and there permissions can sometimes be used by other users. Anonymous accounts are users with no name (''). They allow for default logins and their permissions can sometimes be used by other users. Check for anonymous users using the query: select user from mysql.user where user = '';."
      solution    : "Verify and remove anonymous accounts."
      reference   : "800-53|AC-14,ITSG-33|AC-14,LEVEL|1S,NESA|T5.6.1"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user,COUNT(*) from mysql.user where user = '' group by user ;"
      sql_types   : POLICY_VARCHAR, POLICY_INTEGER
      sql_expect  : NULL,"0"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "5.1 Access to MySQL database 'mysql.user'"
          sql_request : "select user, host from mysql.user where (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y') ;"
          sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
          sql_expect  : NULL, NULL
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "5.1 Access to MySQL database 'mysql.user'"
          info        : "Limiting the accessibility of the mysql database will protect the confidentiality, integrity, and availability of the data housed within MySQL. Verify access by checking the user and db tables. Use the following two queries: select user, host from mysql.user where (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y'); and  select user, host from mysql.db where db = 'mysql' and ( (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y'));"
          solution    : "Only admin users should have access to the mysql database"
          reference   : "LEVEL|1NS"
          see_also    : "https://workbench.cisecurity.org/files/1613"
        </report>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "5.1 Access to MySQL database 'mysql.user'"
          info        : "Limiting the accessibility of the mysql database will protect the confidentiality, integrity, and availability of the data housed within MySQL. Verify access by checking the user and db tables. Use the following two queries: select user, host from mysql.user where (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y'); and  select user, host from mysql.db where db = 'mysql' and ( (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y'));"
          solution    : "Only admin users should have access to the mysql database"
          reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
          see_also    : "https://workbench.cisecurity.org/files/1613"
          sql_request : "select user, host from mysql.user where (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y') ;"
          sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
          sql_expect  : "root", regex:".+"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "5.1 Access to MySQL database 'mysql.db'"
          sql_request : "select user, host from mysql.db where db = 'mysql' and ( (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y')) ;"
          sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
          sql_expect  : NULL, NULL
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "5.1 Access to MySQL database 'mysql.db'"
          info        : "Limiting the accessibility of the mysql database will protect the confidentiality, integrity, and availability of the data housed within MySQL. Verify access by checking the user and db tables. Use the following two queries: select user, host from mysql.user where (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y'); and  select user, host from mysql.db where db = 'mysql' and ( (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y'));"
          solution    : "Only admin users should have access to the mysql database"
          reference   : "LEVEL|1NS"
          see_also    : "https://workbench.cisecurity.org/files/1613"
        </report>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "5.1 Access to MySQL database 'mysql.db'"
          info        : "Limiting the accessibility of the mysql database will protect the confidentiality, integrity, and availability of the data housed within MySQL. Verify access by checking the user and db tables. Use the following two queries: select user, host from mysql.user where (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y'); and  select user, host from mysql.db where db = 'mysql' and ( (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y'));"
          solution    : "Only admin users should have access to the mysql database"
          reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
          see_also    : "https://workbench.cisecurity.org/files/1613"
          sql_request : "select user, host from mysql.db where db = 'mysql' and ( (Select_priv = 'Y') or (Insert_priv = 'Y') or (Update_priv = 'Y') or (Delete_priv = 'Y') or (Create_priv = 'Y') or (Drop_priv = 'Y')) ;"
          sql_types   : POLICY_VARCHAR,POLICY_VARCHAR
          sql_expect  : "root", regex:".+"
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "5.2 FILE privilege"
      info        : "The FILE privilege allows mysql users to write files to disk. This may be leveraged by an attacker to further compromise MySQL. Verify using following query: select user, host from mysql.user where File_priv = 'Y';"
      solution    : "Do not grant to non Admin users"
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user, host from mysql.user where File_priv = 'Y' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "root"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.3 PROCESS privilege"
      info        : "The PROCESS privilege allows principals to view currently executing MySQL statements, including statements used to manage passwords. This may be leveraged by an attacker to compromise MySQL. Verify using following query: select user, host from mysql.user where Process_priv = 'Y';"
      solution    : "Do not grant to non Admin users"
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user, host from mysql.user where Process_priv = 'Y' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "root"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.4 SUPER privilege"
      info        : "The SUPER privilege allows principals to view and terminate currently executing MySQL statements, including statements used to manage passwords. This privilege also provides the ability to configure MySQL. This may be leveraged by an attacker to compromise MySQL. Verify using following query: select user, host from mysql.user where Super_priv = 'Y';"
      solution    : "Do not grant to non Admin users"
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user, host from mysql.user where Super_priv = 'Y' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "root"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.5 SHUTDOWN privilege"
      info        : "The SHUTDOWN privilege allows principals to shutdown MySQL. This may be leveraged by an attacker to negatively impact the availability of MySQL. Verify using following query: select user, host from mysql.user where Shutdown_priv = 'Y';"
      solution    : "Do not grant to non Admin users"
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user, host from mysql.user where Shutdown_priv = 'Y' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "root"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.6 CREATE USER privilege"
      info        : "The CREATE USER privilege allows principals to create MySQL users. This may be leveraged by an attacker to compromise MySQL. Verify using following query: select user, host from mysql.user where Create_user_priv = 'Y';"
      solution    : "Do not grant to non Admin users"
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user, host from mysql.user where Create_user_priv = 'Y' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "root"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.7 RELOAD privilege"
      info        : "The RELOAD privilege allows a principal to reload privileges/grants. Non administrative are not capable of modifying grants/privileges and should therefore have no need for this privilege. Allows reloading of grant tables (flush-privileges is a synonym). Verify using following query: select user, host from mysql.user where Reload_priv = 'Y';"
      solution    : "Do not grant to non Admin users"
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user, host from mysql.user where Reload_priv = 'Y' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "root"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.8 GRANT privilege"
      info        : "The GRANT privilege allows a principal to grant other principals additional privileges. This may be used by an attacker to compromise MySQL. Allows changing of permissions. Verify using following query: select user, host from mysql.user where Grant_priv = 'Y';"
      solution    : "Do not grant to non Admin users"
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1NS,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/1613"
      sql_request : "select user, host from mysql.user where Grant_priv = 'Y' ;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "root"
    </custom_item>

    <custom_item>
      type         : SQL_POLICY
      description  : "6.3 Old password hashing"
      info         : "Utilizing stronger hashing algorithms will help protect the confidentiality of authentication credentials. This configuration parameter forces use of older insecure password hashing method."
      solution     : "Must not use: --old-passwords"
      reference    : "800-171|3.13.11,800-171|3.5.10,800-53|IA-5(1),800-53|SC-13,CSCv6|16.13,CSCv6|16.14,CSF|PR.AC-1,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|IA-5(1),ITSG-33|SC-13,LEVEL|1S,NESA|M5.2.6,NESA|T5.2.3,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY6,NIAv2|CY7,NIAv2|NS5e,PCI-DSSv3.1|8.2.1,PCI-DSSv3.2|8.2.1,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also     : "https://workbench.cisecurity.org/files/1613"
      sql_request  : "show variables like 'old_passwords' ;"
      sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect   : "old_passwords", "OFF"
      check_option : CAN_NOT_BE_NULL
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type         : SQL_POLICY
          description  : "MySQL 5.1 Community Editions is installed"
          sql_request  : "show variables like 'version' ;"
          sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect   : "version", regex:"5\.1"
          check_option : CAN_NOT_BE_NULL
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "6.4 Safe show database"
          info        : "This reinforces the least privilege model by limiting a user's knowledge of other existing databases. This option causes the SHOW DATABASES statement to display names of only those databases for which the user has some kind of privilege (default in 5.1)"
          solution    : "Must use: --safe-show-database"
          reference   : "LEVEL|1S"
          see_also    : "https://workbench.cisecurity.org/files/1613"
        </report>
      </then>

      <else>
        <custom_item>
          type         : SQL_POLICY
          description  : "6.4 Safe show database"
          info         : "This reinforces the least privilege model by limiting a user's knowledge of other existing databases. This option causes the SHOW DATABASES statement to display names of only those databases for which the user has some kind of privilege (default in 5.1)"
          solution     : "Must use: --safe-show-database"
          reference    : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also     : "https://workbench.cisecurity.org/files/1613"
          sql_request  : "show variables like 'safe_show_database' ;"
          sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect   : "safe_show_database", "ON"
          check_option : CAN_NOT_BE_NULL
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "6.6 Grant tables - 'skip-grant-tables does not exist'"
          sql_request : "show variables like 'skip_grant_tables' ;"
          sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect  : NULL,NULL
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "6.6 Grant tables"
          info        : "This option causes the server not to use the privilege system at all. This gives anyone with access to the server unrestricted access to all databases."
          solution    : "Must not use: --skip-grant-tables"
          reference   : "LEVEL|1S"
          see_also    : "https://workbench.cisecurity.org/files/1613"
        </report>
      </then>

      <else>
        <custom_item>
          type         : SQL_POLICY
          description  : "6.6 Grant tables"
          info         : "This option causes the server not to use the privilege system at all. This gives anyone with access to the server unrestricted access to all databases."
          solution     : "Must not use: --skip-grant-tables"
          reference    : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also     : "https://workbench.cisecurity.org/files/1613"
          sql_request  : "show variables like 'skip_grant_tables' ;"
          sql_types    : POLICY_VARCHAR, POLICY_VARCHAR
          sql_expect   : "skip_grant_tables", "OFF"
          check_option : CAN_NOT_BE_NULL
        </custom_item>
      </else>
    </if>

    <custom_item>
      type         : SQL_POLICY
      description  : "6.9 Safe user create '@@global.sql_mode'"
      info         : "Blank passwords negate the benefits provided by authentication mechanisms. Prevent GRANT from creating a new user unless a non-empty password is also specified."
      solution     : "NO_AUTO_CREATE_USER or --safe-user-create"
      reference    : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also     : "https://workbench.cisecurity.org/files/1613"
      sql_request  : "select @@global.sql_mode ;"
      sql_types    : POLICY_VARCHAR
      sql_expect   : regex:"NO_AUTO_CREATE_USER"
      check_option : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type         : SQL_POLICY
      description  : "6.9 Safe user create '@@session.sql_mode'"
      info         : "Blank passwords negate the benefits provided by authentication mechanisms. Prevent GRANT from creating a new user unless a non-empty password is also specified."
      solution     : "NO_AUTO_CREATE_USER or --safe-user-create"
      reference    : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also     : "https://workbench.cisecurity.org/files/1613"
      sql_request  : "select @@session.sql_mode ;"
      sql_types    : POLICY_VARCHAR
      sql_expect   : regex:"NO_AUTO_CREATE_USER"
      check_option : CAN_NOT_BE_NULL
    </custom_item>

    <report type:"WARNING">
      description : "7.3 Unique Key/Cert"
      info        : "Use of default certificates can allow an attacker to impersonate the MySQL server.

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Do not use a default or example certificate. Generate a key specifically for MySQL"
      reference   : "LEVEL|1NS"
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>

    <report type:"WARNING">
      description : "8.1 Backup of databases"
      info        : "Backing up MySQL databases, including 'mysql', will help ensure the availability of data in the event of an incident.

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Regularly occurring backup."
      reference   : "LEVEL|1NS"
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>

    <report type:"WARNING">
      description : "8.2 Verify backups"
      info        : "Verifying that backups are occurring appropriately will help ensure the availability of data in the event of an incident.

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Verify backups are good."
      reference   : "LEVEL|1NS"
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>

    <report type:"WARNING">
      description : "8.3 Replication slave backups"
      info        : "Additional files must be backed up for replication slaves. SQL_LOAD-* files are in the slave-load-tmpdir (defaults to tmpdir). Use show variables;

   NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Verify master.info, relay-log.info, and SQL_LOAD-* files."
      reference   : "LEVEL|1NS"
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>
  </then>

  <else>
    <report type:"WARNING">
      description : "MySQL 4.1, 5.0, 5.1 Community Editions is installed"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/1613"
    </report>
  </else>
</if>

</group_policy>
</check_type>
