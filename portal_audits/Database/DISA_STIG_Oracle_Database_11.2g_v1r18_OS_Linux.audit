#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2020/05/19 $
#
# Description : This document implements the security configuration as recommended by the
#               DISA Oracle Database 11.2g v1r18 STIG.
#
#<ui_metadata>
#<display_name>DISA STIG Oracle 11.2g v1r18 Linux</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>Oracle 11.2g Linux</name>
#  <version>1.18.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip</link>
#</spec>
#<labels>database,disa,oracle,oracle_11.2g,stig,linux</labels>
#<benchmark_refs>CAT,CCI,Rule-ID,STIG-ID,Vuln-ID,Group-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>DBA_ACCTS</name>
#    <default>oracle|dba</default>
#    <description>Oracle DBA Accounts</description>
#    <info>The organization's DBA account list.</info>
#  </variable>
#  <variable>
#    <name>ORACLE_HOME</name>
#    <default>/u01/app/oracle/product/11.2.0/dbhome_1</default>
#    <description>Oracle Home</description>
#    <info>The directory where your Oracle installation is located.</info>
#  </variable>
#  <variable>
#    <name>LISTENERS</name>
#    <default>LISTENER1|LISTENER1</default>
#    <description>Oracle Listeners</description>
#    <info>The listener names configred on the system.</info>
#  </variable>
#  <variable>
#    <name>CLIENT_CHECKSUM_TYPES</name>
#    <default>SHA384</default>
#    <description>SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT</description>
#    <info>The organization's client crypto checksum value.</info>
#  </variable>
#  <variable>
#    <name>SERVER_CHECKSUM_TYPES</name>
#    <default>SHA384</default>
#    <description>SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER</description>
#    <info>The organization's server crypto checksum value.</info>
#  </variable>
#  <variable>
#    <name>CLIENT_ENCRYPTION_TYPES</name>
#    <default>AES256</default>
#    <description>SQLNET.ENCRYPTION_TYPES_CLIENT</description>
#    <info>The organization's client encryption value.</info>
#  </variable>
#  <variable>
#    <name>SERVER_ENCRYPTION_TYPES</name>
#    <default>AES256</default>
#    <description>SQLNET.ENCRYPTION_TYPES_SERVER</description>
#    <info>The organization's server encryption value.</info>
#  </variable>
#  <variable>
#    <name>CLIENT_CRYPTO_CHECKSUM</name>
#    <default>requested</default>
#    <description>SQLNET.CRYPTO_CHECKSUM_CLIENT</description>
#    <info>The organization's client crypto checksum value.</info>
#  </variable>
#  <variable>
#    <name>SERVER_CRYPTO_CHECKSUM</name>
#    <default>required</default>
#    <description>SQLNET.CRYPTO_CHECKSUM_SERVER</description>
#    <info>The organization's server crypto checksum value.</info>
#  </variable>
#  <variable>
#    <name>UNSAFE_PROTOCOLS</name>
#    <default>tcp|TCP|ipc|IPC</default>
#    <description>Unsafe DB protocols value</description>
#    <info>The protocols determined to be unsafe by the organization.</info>
#  </variable>
#  <variable>
#    <name>ORACLE_ACCT</name>
#    <default>oracle</default>
#    <description>Oracle Account</description>
#    <info>The account that the Oracle process should be running as.</info>
#  </variable>
#  <variable>
#    <name>LISTENER_LIST</name>
#    <default>lsnr1 lsnr2 lsnr3</default>
#    <description>Oracle Listener List</description>
#    <info>The space delimited list of listeners configured on your server</info>
#  </variable>
#  <variable>
#    <name>DIAGONOSTICFILE</name>
#    <default>/u01/app/oracle/diag</default>
#    <description>The /diag subdirectory</description>
#    <info>The /diag subdirectory indicates the directory where trace, alert, core and incident directories and files are located.</info>
#  </variable>
#  <variable>
#    <name>AUDIT_FILE_DEST</name>
#    <default>/u01/app/oracle/product/11.2.0/dbhome_1/log</default>
#    <description>Audit trail destination</description>
#    <info>The directory where the database audit trail file is stored.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<report type:"PASSED">
  description : "DISA_STIG_Oracle_Database_11.2g_v1r18_OS_Linux.audit from DISA Oracle Database 11.2g v1r18 STIG"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
</report>

<custom_item>
  type        : CMD_EXEC
  description : "O112-C1-004500 - DBA OS accounts must be granted only those host system privileges necessary for the administration of the DBMS - DBA group"
  info        : "This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

DBAs, if assigned excessive OS privileges, could perform actions that could endanger the information system or hide evidence of malicious activity."
  solution    : "Revoke all host system privileges from the DBA group accounts and DBA user accounts not required for DBMS administration.

Revoke all OS group memberships that assign excessive privileges to the DBA group accounts and DBA user accounts.

Remove any directly applied permissions or user rights from the DBA group accounts and DBA user accounts.

Document all DBA group accounts and individual DBA account assigned privileges in the System Security Plan."
  reference   : "800-171|3.1.5,800-53|AC-6,CAT|I,CCI|CCI-000040,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66341r2_rule,STIG-ID|O112-C1-004500,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52125"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
  cmd         : "/bin/cat /etc/group | /bin/egrep -i '^dba' | /bin/grep root | /bin/awk '{print} END {if (NR == 0) print \"none\"}'"
  expect      : "^none$"
</custom_item>

<custom_item>
  type        : CMD_EXEC
  description : "O112-C1-004500 - DBA OS accounts must be granted only those host system privileges necessary for the administration of the DBMS - Root group"
  info        : "This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

DBAs, if assigned excessive OS privileges, could perform actions that could endanger the information system or hide evidence of malicious activity."
  solution    : "Revoke all host system privileges from the DBA group accounts and DBA user accounts not required for DBMS administration.

Revoke all OS group memberships that assign excessive privileges to the DBA group accounts and DBA user accounts.

Remove any directly applied permissions or user rights from the DBA group accounts and DBA user accounts.

Document all DBA group accounts and individual DBA account assigned privileges in the System Security Plan."
  reference   : "800-171|3.1.5,800-53|AC-6,CAT|I,CCI|CCI-000040,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66341r2_rule,STIG-ID|O112-C1-004500,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52125"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @DBA_ACCTS@ replaced with "oracle|dba" in field "cmd".
  cmd         : "/bin/cat /etc/group | /bin/egrep -i '^root' | /bin/egrep '(oracle|dba)' | /bin/awk '{print} END {if (NR == 0) print \"none\"}'"
  expect      : "^none$"
</custom_item>

<custom_item>
  type        : CMD_EXEC
  description : "O112-C1-011100 - Vendor-supported software must be evaluated and patched against newly found vulnerabilities."
  info        : "Security faults with software applications and operating systems are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling, must also be  addressed expeditiously.

Anytime new software code is introduced to a system there is the potential for unintended consequences. There have been documented instances where the application of a patch has caused problems with system integrity or availability.  Due to information system integrity and availability concerns, organizations must give careful consideration to the methodology used to carry out automatic updates.

Unsupported software versions are not patched by vendors to address newly discovered security versions. An unpatched version is vulnerable to attack.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Upgrade the DBMS to a vendor-supported version.

Apply the latest DBMS patches."
  reference   : "800-171|3.14.1,800-53|SI-2,CAT|I,CCI|CCI-001499,CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.4.4(e),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|PR9,NIAv2|SS14b,Rule-ID|SV-66543r3_rule,STIG-ID|O112-C1-011100,SWIFT-CSCv1|2.2,Vuln-ID|V-52327"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "cmd".
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "cmd".
  cmd         : "/u01/app/oracle/product/11.2.0/dbhome_1/OPatch/opatch lsinventory -detail -oh /u01/app/oracle/product/11.2.0/dbhome_1 2>&1 | /bin/awk '{print} END {if (NR == 0) print \"none\"}'"
  expect      : "^none$"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-019100 - The DBMS must protect against or limit the effects of the organization-defined types of Denial of Service (DoS) attacks."
  info            : "A variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks. For example, boundary protection devices can filter certain types of packets to protect devices on an organization's internal network from being directly affected by DoS attacks.

Employing increased capacity and bandwidth combined with service redundancy may reduce the susceptibility to some DoS attacks.

Some of the ways databases can limit their exposure to DoS attacks are through limiting the number of connections that can be opened by a single user and database clustering."
  solution        : "Implement measures to limit the effects of organization-defined types of Denial of Service attacks.

Modify the $ORACLE_HOME/network/admin/listener.ora to establish a Rate Limit."
  reference       : "800-53|SC-5,CAT|II,CCI|CCI-001092,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e,Rule-ID|SV-66377r1_rule,STIG-ID|O112-C2-019100,Vuln-ID|V-52161"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora"
  regex           : "^[\\s]*\\([\\s]*[Aa][Dd][Dd][Rr][Ee][Ss][Ss][\\s]*="
  expect          : "\\(RATE_LIMIT[\\s]*=[\\s]*([Yy][Ee][Ss]|[0-9]+)"
  string_required : YES
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK_NOT
  description : "O112-C3-019200 - The DBMS must restrict the ability of users to launch Denial of Service (DoS) attacks against other information systems or networks - LISTENER"
  info        : "When it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks.

While it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that extent, a variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks.

For example, boundary protection devices can filter certain types of packets to protect devices from being directly affected by  DoS attacks. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.

Applications and application developers must take the steps needed to ensure users cannot use these applications to launch DoS attacks against other systems and networks. An example would be designing applications to include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application.

The methods employed to counter this risk will be dependent upon the potential application layer methods that can be used to exploit it.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered."
  solution    : "Configure DBMS settings to restrict functionality that could be used to initiate DoS attacks.


Securing the Network Connection:
Protecting the network and its traffic from inappropriate access or modification is the essence of network security. You should consider all paths the data travels, and assess the threats on each path and node. Then, take steps to lessen or eliminate those threats and the consequences of a security breach. In addition, monitor and audit to detect either increased threat levels or penetration attempts.

The following practices improve network security:


1. Disable the Default Listener.
All listeners have a unique name instead of the name LISTENER and have startup protection.

LISTENER=(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST=)(PORT = 0)))

This configuration prevents the default listener from starting.


2. Prevent online administration by requiring the administrator to have the write privilege on the listener.ora file on the server.
a. Add or alter this line in the listener.ora file:

ADMIN_RESTRICTIONS_LISTENER=ON

b. Use RELOAD to reload the configuration.


3. Set Protection against crafted network packets on database level.

SEC_PROTOCOL_ERROR_TRACE_ACTION specifies the action that the database should take when bad packets are received from a possibly malicious client.

SEC_PROTOCOL_ERROR_TRACE_ACTION = { NONE | TRACE | LOG | ALERT } (TRACE is the default)

NONE: The database server ignores the bad packets and does not generate any trace files or log messages. (Not recommended)

TRACE: A detailed trace file is generated when bad packets are received, which can be used to debug any problems in client/server communication.

LOG: A minimal log message is printed in the alert logfile and in the server trace file. A minimal amount of disk space is used.

ALERT: An alert message is sent to a DBA or monitoring console.

SEC_PROTOCOL_ERROR_FURTHER_ACTION specifies the further execution of a server process when receiving bad packets from a possibly malicious client.

SEC_PROTOCOL_ERROR_FURTHER_ACTION = { CONTINUE | (DELAY,integer) | (DROP,integer) } (DROP,3 is the default)

CONTINUE: The server process continues execution. The database server may be subject to a Denial of Service (DoS) if bad packets continue to be sent by a malicious client. (Not recommended)

(DELAY, integer) :The client experiences a delay of integer seconds before the server process accepts the next request from the same client connection. Malicious clients are prevented from excessive consumption of server resources while legitimate clients experience degradation in performance but can continue to function.

(DROP, integer) : The server forcefully terminates the client connection after integer bad packets. The server protects itself at the expense of the client (for example, a client transaction may be lost). The client may reconnect and attempt the same operation.

SEC_MAX_FAILED_LOGIN_ATTEMPTS specifies the number of authentication attempts that can be made by a client on a connection to the server process. After the specified number of failure attempts, the connection will be automatically dropped by the server process.

SEC_MAX_FAILED_LOGIN_ATTEMPTS = n (3 is the default) Values range from 1 to unlimited. (A value of 1 to 3 is recommended)

For more information about the parameters in listener.ora, see https://docs.oracle.com/cd/E11882_01/network.112/e10835/listener.htm#NETRF008


4. Do not set the listener password.

Ensure that the password has not been set in the listener.ora file. The local operating system authentication will secure the listener administration. The remote listener administration is disabled when the password has not been set. This prevents brute force attacks of the listener password.

The listener password has been deprecated in this release. It will not be supported in the next release of Oracle Database.


5. When a host computer has multiple IP addresses associated with multiple network interface controller (NIC) cards, configure the listener to the specific IP address.

You can restrict the listener to listen on a specific IP address. Oracle recommends that you specify the specific IP addresses on these types of computers, rather than allowing the listener to listen on all IP addresses. Restricting the listener to specific IP addresses helps to prevent an intruder from stealing a TCP end point from under the listener process.


6. Restrict the privileges of the listener, so that it cannot read or write files in the database or the Oracle server address space.

The default configuration for external procedures does not require a network listener to work with Oracle Database and the extproc agent. The extproc agent is spawned directly by Oracle Database and eliminates the risks that the extproc agent might be spawned by Oracle Listener unexpectedly. This default configuration is recommended for maximum security. For more information about securing external procedures see
https://docs.oracle.com/cd/E11882_01/network.112/e41945/advcfg.htm#NETAG888
However, the extproc agent can be configured to be spawned by a listener. In that case (not recommended) the listener should have restricted privileges.


7. Use a firewall, IAW DoD network policy and guidance.

Appropriately placed and configured firewalls can prevent outside access to your databases.


8. Prevent unauthorized administration of the Oracle listener.

Local administration of the listener is secure by default through the local operating system. Therefore configuring a password is neither required nor recommended for secure local administration. However, a password can be configured for the listener to provide security for administrative operations, such as starting or stopping the listener, viewing a list of supported services, or saving changes to the Listener Control configuration.

By default, Oracle Net Listener permits only local administration for security reasons. As a policy, the listener can be administered only by the user who started it. This is enforced through local operating system authentication. For example, if user1 starts the listener, then only user1 can administer it. Any other user trying to administer the listener gets an error. The super user is the only exception.

Oracle recommends that you perform listener administration in the default mode (secure by means of local operating system authentication), and access the system remotely using a remote logon. Oracle Enterprise Manager Cloud Control can also be used for remote administration.


9. Encrypt network traffic.  (Mandatory for sensitive data and optional for non-sensitive, as covered in other STIG requirements.)

Where applicable, use Oracle network data encryption to encrypt network traffic among clients, databases, and application servers.


10. Set Connect Rate to organization defined limit. (Also required by O112-C2-019100/SRG-APP-000245-DB-000132)

The connection rate limiter feature in Oracle Net Listener enables a database administrator to limit the number of new connections handled by the listener. When this feature is enabled, Oracle Net Listener imposes a user-specified maximum limit on the number of new connections handled by the listener every second.

CONNECTION_RATE_LISTENER=10
LISTENER=
(ADDRESS_LIST=
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1521)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1522)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1526))
)


11. Setup Valid Node Checking.
(See also O112-BP-025600.)

Valid node checking is a security feature that protects DBMS instances from malevolent or errant Oracle Net connections over TCP/IP, without the need for a firewall or IP address filtering at the operating system-level. The feature is controlled by the three parameters; tcp.validnode_checking, tcp.invited_nodes, and tcp.excluded_nodes.

Modify the sqlnet.ora file manually
TCP.VALIDNODE_CHECKING=yes
(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

If this parameter is set to yes, then incoming connections are allowed only if they originate from a node that conforms to the list specified by TCP.INVITED_NODES or TCP.EXCLUDED_NODES parameters.

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes (no is the default).

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes.

Modify the listener.ora file manually

TCP.EXCLUDED_NODES Syntax:
TCP.EXCLUDED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.EXCLUDED_NODES=(finance.us.example.com, mktg.us.example.com, 192.0.2.25, 172.30.*, 2001:DB8:200C:417A/32)

TCP.INVITED_NODES Syntax:
TCP.INVITED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.INVITED_NODES=(sales.us.example.com, hr.us.example.com, 192.0.*, 2001:DB8:200C:433B/32)

Usage Notes:

Use TCP.INVITED_NODES to specify which clients are allowed access to the database. This list takes precedence over the TCP.EXCLUDED_NODES parameter if both lists are present. These parameters can use wildcards for IPv4 addresses and CIDR notation for IPv4 and IPv6 addresses.


12. Apply Listener Security Patches.
(See also O112-C1-011100/SRG-APP-000133-DB-000205.)

Critical Patch Updates are cumulative. Therefore, the latest patch will contain all previous security patches for the Listener.


13. Ensure that listener logging is turned on.

Listener logging is on by default. If logging is not on, configure logging for all listeners in order to capture Listener commands and brute force password attacks.


14. Monitor the listener logfile.

The logfile may contain TNS-01169, TNS-01189, TNS-01190, or TNS-12508 errors, which may signify attacks or inappropriate activity. Monitor the logfile and generate an alert whenever these errors are encountered."
  reference   : "800-53|SC-5,CAT|III,CCI|CCI-001094,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e,Rule-ID|SV-66433r6_rule,STIG-ID|O112-C3-019200,Vuln-ID|V-52217"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora"
  regex       : "^[\\s]*LISTENER[\\s]*="
  expect      : "^[\\s]*LISTENER[\\s]*="
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C3-019200 - The DBMS must restrict the ability of users to launch Denial of Service (DoS) attacks against other information systems or networks - ADMIN_RESTRICTIONS"
  info            : "When it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks.

While it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that extent, a variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks.

For example, boundary protection devices can filter certain types of packets to protect devices from being directly affected by  DoS attacks. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.

Applications and application developers must take the steps needed to ensure users cannot use these applications to launch DoS attacks against other systems and networks. An example would be designing applications to include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application.

The methods employed to counter this risk will be dependent upon the potential application layer methods that can be used to exploit it.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered."
  solution        : "Configure DBMS settings to restrict functionality that could be used to initiate DoS attacks.


Securing the Network Connection:
Protecting the network and its traffic from inappropriate access or modification is the essence of network security. You should consider all paths the data travels, and assess the threats on each path and node. Then, take steps to lessen or eliminate those threats and the consequences of a security breach. In addition, monitor and audit to detect either increased threat levels or penetration attempts.

The following practices improve network security:


1. Disable the Default Listener.
All listeners have a unique name instead of the name LISTENER and have startup protection.

LISTENER=(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST=)(PORT = 0)))

This configuration prevents the default listener from starting.


2. Prevent online administration by requiring the administrator to have the write privilege on the listener.ora file on the server.
a. Add or alter this line in the listener.ora file:

ADMIN_RESTRICTIONS_LISTENER=ON

b. Use RELOAD to reload the configuration.


3. Set Protection against crafted network packets on database level.

SEC_PROTOCOL_ERROR_TRACE_ACTION specifies the action that the database should take when bad packets are received from a possibly malicious client.

SEC_PROTOCOL_ERROR_TRACE_ACTION = { NONE | TRACE | LOG | ALERT } (TRACE is the default)

NONE: The database server ignores the bad packets and does not generate any trace files or log messages. (Not recommended)

TRACE: A detailed trace file is generated when bad packets are received, which can be used to debug any problems in client/server communication.

LOG: A minimal log message is printed in the alert logfile and in the server trace file. A minimal amount of disk space is used.

ALERT: An alert message is sent to a DBA or monitoring console.

SEC_PROTOCOL_ERROR_FURTHER_ACTION specifies the further execution of a server process when receiving bad packets from a possibly malicious client.

SEC_PROTOCOL_ERROR_FURTHER_ACTION = { CONTINUE | (DELAY,integer) | (DROP,integer) } (DROP,3 is the default)

CONTINUE: The server process continues execution. The database server may be subject to a Denial of Service (DoS) if bad packets continue to be sent by a malicious client. (Not recommended)

(DELAY, integer) :The client experiences a delay of integer seconds before the server process accepts the next request from the same client connection. Malicious clients are prevented from excessive consumption of server resources while legitimate clients experience degradation in performance but can continue to function.

(DROP, integer) : The server forcefully terminates the client connection after integer bad packets. The server protects itself at the expense of the client (for example, a client transaction may be lost). The client may reconnect and attempt the same operation.

SEC_MAX_FAILED_LOGIN_ATTEMPTS specifies the number of authentication attempts that can be made by a client on a connection to the server process. After the specified number of failure attempts, the connection will be automatically dropped by the server process.

SEC_MAX_FAILED_LOGIN_ATTEMPTS = n (3 is the default) Values range from 1 to unlimited. (A value of 1 to 3 is recommended)

For more information about the parameters in listener.ora, see https://docs.oracle.com/cd/E11882_01/network.112/e10835/listener.htm#NETRF008


4. Do not set the listener password.

Ensure that the password has not been set in the listener.ora file. The local operating system authentication will secure the listener administration. The remote listener administration is disabled when the password has not been set. This prevents brute force attacks of the listener password.

The listener password has been deprecated in this release. It will not be supported in the next release of Oracle Database.


5. When a host computer has multiple IP addresses associated with multiple network interface controller (NIC) cards, configure the listener to the specific IP address.

You can restrict the listener to listen on a specific IP address. Oracle recommends that you specify the specific IP addresses on these types of computers, rather than allowing the listener to listen on all IP addresses. Restricting the listener to specific IP addresses helps to prevent an intruder from stealing a TCP end point from under the listener process.


6. Restrict the privileges of the listener, so that it cannot read or write files in the database or the Oracle server address space.

The default configuration for external procedures does not require a network listener to work with Oracle Database and the extproc agent. The extproc agent is spawned directly by Oracle Database and eliminates the risks that the extproc agent might be spawned by Oracle Listener unexpectedly. This default configuration is recommended for maximum security. For more information about securing external procedures see
https://docs.oracle.com/cd/E11882_01/network.112/e41945/advcfg.htm#NETAG888
However, the extproc agent can be configured to be spawned by a listener. In that case (not recommended) the listener should have restricted privileges.


7. Use a firewall, IAW DoD network policy and guidance.

Appropriately placed and configured firewalls can prevent outside access to your databases.


8. Prevent unauthorized administration of the Oracle listener.

Local administration of the listener is secure by default through the local operating system. Therefore configuring a password is neither required nor recommended for secure local administration. However, a password can be configured for the listener to provide security for administrative operations, such as starting or stopping the listener, viewing a list of supported services, or saving changes to the Listener Control configuration.

By default, Oracle Net Listener permits only local administration for security reasons. As a policy, the listener can be administered only by the user who started it. This is enforced through local operating system authentication. For example, if user1 starts the listener, then only user1 can administer it. Any other user trying to administer the listener gets an error. The super user is the only exception.

Oracle recommends that you perform listener administration in the default mode (secure by means of local operating system authentication), and access the system remotely using a remote logon. Oracle Enterprise Manager Cloud Control can also be used for remote administration.


9. Encrypt network traffic.  (Mandatory for sensitive data and optional for non-sensitive, as covered in other STIG requirements.)

Where applicable, use Oracle network data encryption to encrypt network traffic among clients, databases, and application servers.


10. Set Connect Rate to organization defined limit. (Also required by O112-C2-019100/SRG-APP-000245-DB-000132)

The connection rate limiter feature in Oracle Net Listener enables a database administrator to limit the number of new connections handled by the listener. When this feature is enabled, Oracle Net Listener imposes a user-specified maximum limit on the number of new connections handled by the listener every second.

CONNECTION_RATE_LISTENER=10
LISTENER=
(ADDRESS_LIST=
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1521)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1522)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1526))
)


11. Setup Valid Node Checking.
(See also O112-BP-025600.)

Valid node checking is a security feature that protects DBMS instances from malevolent or errant Oracle Net connections over TCP/IP, without the need for a firewall or IP address filtering at the operating system-level. The feature is controlled by the three parameters; tcp.validnode_checking, tcp.invited_nodes, and tcp.excluded_nodes.

Modify the sqlnet.ora file manually
TCP.VALIDNODE_CHECKING=yes
(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

If this parameter is set to yes, then incoming connections are allowed only if they originate from a node that conforms to the list specified by TCP.INVITED_NODES or TCP.EXCLUDED_NODES parameters.

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes (no is the default).

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes.

Modify the listener.ora file manually

TCP.EXCLUDED_NODES Syntax:
TCP.EXCLUDED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.EXCLUDED_NODES=(finance.us.example.com, mktg.us.example.com, 192.0.2.25, 172.30.*, 2001:DB8:200C:417A/32)

TCP.INVITED_NODES Syntax:
TCP.INVITED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.INVITED_NODES=(sales.us.example.com, hr.us.example.com, 192.0.*, 2001:DB8:200C:433B/32)

Usage Notes:

Use TCP.INVITED_NODES to specify which clients are allowed access to the database. This list takes precedence over the TCP.EXCLUDED_NODES parameter if both lists are present. These parameters can use wildcards for IPv4 addresses and CIDR notation for IPv4 and IPv6 addresses.


12. Apply Listener Security Patches.
(See also O112-C1-011100/SRG-APP-000133-DB-000205.)

Critical Patch Updates are cumulative. Therefore, the latest patch will contain all previous security patches for the Listener.


13. Ensure that listener logging is turned on.

Listener logging is on by default. If logging is not on, configure logging for all listeners in order to capture Listener commands and brute force password attacks.


14. Monitor the listener logfile.

The logfile may contain TNS-01169, TNS-01189, TNS-01190, or TNS-12508 errors, which may signify attacks or inappropriate activity. Monitor the logfile and generate an alert whenever these errors are encountered."
  reference       : "800-53|SC-5,CAT|III,CCI|CCI-001094,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e,Rule-ID|SV-66433r6_rule,STIG-ID|O112-C3-019200,Vuln-ID|V-52217"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora"
# Note: Variable @LISTENERS@ replaced with "LISTENER1|LISTENER1" in field "regex".
  regex           : "^[\\s]*ADMIN_RESTRICTIONS_(LISTENER1|LISTENER1)[\\s]*="
# Note: Variable @LISTENERS@ replaced with "LISTENER1|LISTENER1" in field "expect".
  expect          : "^[\\s]*ADMIN_RESTRICTIONS_(LISTENER1|LISTENER1)[\\s]*=[Oo][Nn]"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C3-019200 - The DBMS must restrict the ability of users to launch Denial of Service (DoS) attacks against other information systems or networks - RATE_LIMIT"
  info            : "When it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks.

While it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that extent, a variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks.

For example, boundary protection devices can filter certain types of packets to protect devices from being directly affected by  DoS attacks. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.

Applications and application developers must take the steps needed to ensure users cannot use these applications to launch DoS attacks against other systems and networks. An example would be designing applications to include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application.

The methods employed to counter this risk will be dependent upon the potential application layer methods that can be used to exploit it.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered."
  solution        : "Configure DBMS settings to restrict functionality that could be used to initiate DoS attacks.


Securing the Network Connection:
Protecting the network and its traffic from inappropriate access or modification is the essence of network security. You should consider all paths the data travels, and assess the threats on each path and node. Then, take steps to lessen or eliminate those threats and the consequences of a security breach. In addition, monitor and audit to detect either increased threat levels or penetration attempts.

The following practices improve network security:


1. Disable the Default Listener.
All listeners have a unique name instead of the name LISTENER and have startup protection.

LISTENER=(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST=)(PORT = 0)))

This configuration prevents the default listener from starting.


2. Prevent online administration by requiring the administrator to have the write privilege on the listener.ora file on the server.
a. Add or alter this line in the listener.ora file:

ADMIN_RESTRICTIONS_LISTENER=ON

b. Use RELOAD to reload the configuration.


3. Set Protection against crafted network packets on database level.

SEC_PROTOCOL_ERROR_TRACE_ACTION specifies the action that the database should take when bad packets are received from a possibly malicious client.

SEC_PROTOCOL_ERROR_TRACE_ACTION = { NONE | TRACE | LOG | ALERT } (TRACE is the default)

NONE: The database server ignores the bad packets and does not generate any trace files or log messages. (Not recommended)

TRACE: A detailed trace file is generated when bad packets are received, which can be used to debug any problems in client/server communication.

LOG: A minimal log message is printed in the alert logfile and in the server trace file. A minimal amount of disk space is used.

ALERT: An alert message is sent to a DBA or monitoring console.

SEC_PROTOCOL_ERROR_FURTHER_ACTION specifies the further execution of a server process when receiving bad packets from a possibly malicious client.

SEC_PROTOCOL_ERROR_FURTHER_ACTION = { CONTINUE | (DELAY,integer) | (DROP,integer) } (DROP,3 is the default)

CONTINUE: The server process continues execution. The database server may be subject to a Denial of Service (DoS) if bad packets continue to be sent by a malicious client. (Not recommended)

(DELAY, integer) :The client experiences a delay of integer seconds before the server process accepts the next request from the same client connection. Malicious clients are prevented from excessive consumption of server resources while legitimate clients experience degradation in performance but can continue to function.

(DROP, integer) : The server forcefully terminates the client connection after integer bad packets. The server protects itself at the expense of the client (for example, a client transaction may be lost). The client may reconnect and attempt the same operation.

SEC_MAX_FAILED_LOGIN_ATTEMPTS specifies the number of authentication attempts that can be made by a client on a connection to the server process. After the specified number of failure attempts, the connection will be automatically dropped by the server process.

SEC_MAX_FAILED_LOGIN_ATTEMPTS = n (3 is the default) Values range from 1 to unlimited. (A value of 1 to 3 is recommended)

For more information about the parameters in listener.ora, see https://docs.oracle.com/cd/E11882_01/network.112/e10835/listener.htm#NETRF008


4. Do not set the listener password.

Ensure that the password has not been set in the listener.ora file. The local operating system authentication will secure the listener administration. The remote listener administration is disabled when the password has not been set. This prevents brute force attacks of the listener password.

The listener password has been deprecated in this release. It will not be supported in the next release of Oracle Database.


5. When a host computer has multiple IP addresses associated with multiple network interface controller (NIC) cards, configure the listener to the specific IP address.

You can restrict the listener to listen on a specific IP address. Oracle recommends that you specify the specific IP addresses on these types of computers, rather than allowing the listener to listen on all IP addresses. Restricting the listener to specific IP addresses helps to prevent an intruder from stealing a TCP end point from under the listener process.


6. Restrict the privileges of the listener, so that it cannot read or write files in the database or the Oracle server address space.

The default configuration for external procedures does not require a network listener to work with Oracle Database and the extproc agent. The extproc agent is spawned directly by Oracle Database and eliminates the risks that the extproc agent might be spawned by Oracle Listener unexpectedly. This default configuration is recommended for maximum security. For more information about securing external procedures see
https://docs.oracle.com/cd/E11882_01/network.112/e41945/advcfg.htm#NETAG888
However, the extproc agent can be configured to be spawned by a listener. In that case (not recommended) the listener should have restricted privileges.


7. Use a firewall, IAW DoD network policy and guidance.

Appropriately placed and configured firewalls can prevent outside access to your databases.


8. Prevent unauthorized administration of the Oracle listener.

Local administration of the listener is secure by default through the local operating system. Therefore configuring a password is neither required nor recommended for secure local administration. However, a password can be configured for the listener to provide security for administrative operations, such as starting or stopping the listener, viewing a list of supported services, or saving changes to the Listener Control configuration.

By default, Oracle Net Listener permits only local administration for security reasons. As a policy, the listener can be administered only by the user who started it. This is enforced through local operating system authentication. For example, if user1 starts the listener, then only user1 can administer it. Any other user trying to administer the listener gets an error. The super user is the only exception.

Oracle recommends that you perform listener administration in the default mode (secure by means of local operating system authentication), and access the system remotely using a remote logon. Oracle Enterprise Manager Cloud Control can also be used for remote administration.


9. Encrypt network traffic.  (Mandatory for sensitive data and optional for non-sensitive, as covered in other STIG requirements.)

Where applicable, use Oracle network data encryption to encrypt network traffic among clients, databases, and application servers.


10. Set Connect Rate to organization defined limit. (Also required by O112-C2-019100/SRG-APP-000245-DB-000132)

The connection rate limiter feature in Oracle Net Listener enables a database administrator to limit the number of new connections handled by the listener. When this feature is enabled, Oracle Net Listener imposes a user-specified maximum limit on the number of new connections handled by the listener every second.

CONNECTION_RATE_LISTENER=10
LISTENER=
(ADDRESS_LIST=
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1521)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1522)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1526))
)


11. Setup Valid Node Checking.
(See also O112-BP-025600.)

Valid node checking is a security feature that protects DBMS instances from malevolent or errant Oracle Net connections over TCP/IP, without the need for a firewall or IP address filtering at the operating system-level. The feature is controlled by the three parameters; tcp.validnode_checking, tcp.invited_nodes, and tcp.excluded_nodes.

Modify the sqlnet.ora file manually
TCP.VALIDNODE_CHECKING=yes
(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

If this parameter is set to yes, then incoming connections are allowed only if they originate from a node that conforms to the list specified by TCP.INVITED_NODES or TCP.EXCLUDED_NODES parameters.

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes (no is the default).

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes.

Modify the listener.ora file manually

TCP.EXCLUDED_NODES Syntax:
TCP.EXCLUDED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.EXCLUDED_NODES=(finance.us.example.com, mktg.us.example.com, 192.0.2.25, 172.30.*, 2001:DB8:200C:417A/32)

TCP.INVITED_NODES Syntax:
TCP.INVITED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.INVITED_NODES=(sales.us.example.com, hr.us.example.com, 192.0.*, 2001:DB8:200C:433B/32)

Usage Notes:

Use TCP.INVITED_NODES to specify which clients are allowed access to the database. This list takes precedence over the TCP.EXCLUDED_NODES parameter if both lists are present. These parameters can use wildcards for IPv4 addresses and CIDR notation for IPv4 and IPv6 addresses.


12. Apply Listener Security Patches.
(See also O112-C1-011100/SRG-APP-000133-DB-000205.)

Critical Patch Updates are cumulative. Therefore, the latest patch will contain all previous security patches for the Listener.


13. Ensure that listener logging is turned on.

Listener logging is on by default. If logging is not on, configure logging for all listeners in order to capture Listener commands and brute force password attacks.


14. Monitor the listener logfile.

The logfile may contain TNS-01169, TNS-01189, TNS-01190, or TNS-12508 errors, which may signify attacks or inappropriate activity. Monitor the logfile and generate an alert whenever these errors are encountered."
  reference       : "800-53|SC-5,CAT|III,CCI|CCI-001094,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e,Rule-ID|SV-66433r6_rule,STIG-ID|O112-C3-019200,Vuln-ID|V-52217"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora"
  regex           : "^[\\s]*\\([\\s]*[Aa][Dd][Dd][Rr][Ee][Ss][Ss][\\s]*="
  expect          : "\\(RATE_LIMIT[\\s]*=[\\s]*([Yy][Ee][Ss]|[0-9]+)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C3-019200 - The DBMS must restrict the ability of users to launch Denial of Service (DoS) attacks against other information systems or networks - TCP.VALIDNODE_CHECKING"
  info            : "When it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks.

While it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that extent, a variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks.

For example, boundary protection devices can filter certain types of packets to protect devices from being directly affected by  DoS attacks. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.

Applications and application developers must take the steps needed to ensure users cannot use these applications to launch DoS attacks against other systems and networks. An example would be designing applications to include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application.

The methods employed to counter this risk will be dependent upon the potential application layer methods that can be used to exploit it.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered."
  solution        : "Configure DBMS settings to restrict functionality that could be used to initiate DoS attacks.


Securing the Network Connection:
Protecting the network and its traffic from inappropriate access or modification is the essence of network security. You should consider all paths the data travels, and assess the threats on each path and node. Then, take steps to lessen or eliminate those threats and the consequences of a security breach. In addition, monitor and audit to detect either increased threat levels or penetration attempts.

The following practices improve network security:


1. Disable the Default Listener.
All listeners have a unique name instead of the name LISTENER and have startup protection.

LISTENER=(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST=)(PORT = 0)))

This configuration prevents the default listener from starting.


2. Prevent online administration by requiring the administrator to have the write privilege on the listener.ora file on the server.
a. Add or alter this line in the listener.ora file:

ADMIN_RESTRICTIONS_LISTENER=ON

b. Use RELOAD to reload the configuration.


3. Set Protection against crafted network packets on database level.

SEC_PROTOCOL_ERROR_TRACE_ACTION specifies the action that the database should take when bad packets are received from a possibly malicious client.

SEC_PROTOCOL_ERROR_TRACE_ACTION = { NONE | TRACE | LOG | ALERT } (TRACE is the default)

NONE: The database server ignores the bad packets and does not generate any trace files or log messages. (Not recommended)

TRACE: A detailed trace file is generated when bad packets are received, which can be used to debug any problems in client/server communication.

LOG: A minimal log message is printed in the alert logfile and in the server trace file. A minimal amount of disk space is used.

ALERT: An alert message is sent to a DBA or monitoring console.

SEC_PROTOCOL_ERROR_FURTHER_ACTION specifies the further execution of a server process when receiving bad packets from a possibly malicious client.

SEC_PROTOCOL_ERROR_FURTHER_ACTION = { CONTINUE | (DELAY,integer) | (DROP,integer) } (DROP,3 is the default)

CONTINUE: The server process continues execution. The database server may be subject to a Denial of Service (DoS) if bad packets continue to be sent by a malicious client. (Not recommended)

(DELAY, integer) :The client experiences a delay of integer seconds before the server process accepts the next request from the same client connection. Malicious clients are prevented from excessive consumption of server resources while legitimate clients experience degradation in performance but can continue to function.

(DROP, integer) : The server forcefully terminates the client connection after integer bad packets. The server protects itself at the expense of the client (for example, a client transaction may be lost). The client may reconnect and attempt the same operation.

SEC_MAX_FAILED_LOGIN_ATTEMPTS specifies the number of authentication attempts that can be made by a client on a connection to the server process. After the specified number of failure attempts, the connection will be automatically dropped by the server process.

SEC_MAX_FAILED_LOGIN_ATTEMPTS = n (3 is the default) Values range from 1 to unlimited. (A value of 1 to 3 is recommended)

For more information about the parameters in listener.ora, see https://docs.oracle.com/cd/E11882_01/network.112/e10835/listener.htm#NETRF008


4. Do not set the listener password.

Ensure that the password has not been set in the listener.ora file. The local operating system authentication will secure the listener administration. The remote listener administration is disabled when the password has not been set. This prevents brute force attacks of the listener password.

The listener password has been deprecated in this release. It will not be supported in the next release of Oracle Database.


5. When a host computer has multiple IP addresses associated with multiple network interface controller (NIC) cards, configure the listener to the specific IP address.

You can restrict the listener to listen on a specific IP address. Oracle recommends that you specify the specific IP addresses on these types of computers, rather than allowing the listener to listen on all IP addresses. Restricting the listener to specific IP addresses helps to prevent an intruder from stealing a TCP end point from under the listener process.


6. Restrict the privileges of the listener, so that it cannot read or write files in the database or the Oracle server address space.

The default configuration for external procedures does not require a network listener to work with Oracle Database and the extproc agent. The extproc agent is spawned directly by Oracle Database and eliminates the risks that the extproc agent might be spawned by Oracle Listener unexpectedly. This default configuration is recommended for maximum security. For more information about securing external procedures see
https://docs.oracle.com/cd/E11882_01/network.112/e41945/advcfg.htm#NETAG888
However, the extproc agent can be configured to be spawned by a listener. In that case (not recommended) the listener should have restricted privileges.


7. Use a firewall, IAW DoD network policy and guidance.

Appropriately placed and configured firewalls can prevent outside access to your databases.


8. Prevent unauthorized administration of the Oracle listener.

Local administration of the listener is secure by default through the local operating system. Therefore configuring a password is neither required nor recommended for secure local administration. However, a password can be configured for the listener to provide security for administrative operations, such as starting or stopping the listener, viewing a list of supported services, or saving changes to the Listener Control configuration.

By default, Oracle Net Listener permits only local administration for security reasons. As a policy, the listener can be administered only by the user who started it. This is enforced through local operating system authentication. For example, if user1 starts the listener, then only user1 can administer it. Any other user trying to administer the listener gets an error. The super user is the only exception.

Oracle recommends that you perform listener administration in the default mode (secure by means of local operating system authentication), and access the system remotely using a remote logon. Oracle Enterprise Manager Cloud Control can also be used for remote administration.


9. Encrypt network traffic.  (Mandatory for sensitive data and optional for non-sensitive, as covered in other STIG requirements.)

Where applicable, use Oracle network data encryption to encrypt network traffic among clients, databases, and application servers.


10. Set Connect Rate to organization defined limit. (Also required by O112-C2-019100/SRG-APP-000245-DB-000132)

The connection rate limiter feature in Oracle Net Listener enables a database administrator to limit the number of new connections handled by the listener. When this feature is enabled, Oracle Net Listener imposes a user-specified maximum limit on the number of new connections handled by the listener every second.

CONNECTION_RATE_LISTENER=10
LISTENER=
(ADDRESS_LIST=
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1521)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1522)(RATE_LIMIT=yes))
(ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1526))
)


11. Setup Valid Node Checking.
(See also O112-BP-025600.)

Valid node checking is a security feature that protects DBMS instances from malevolent or errant Oracle Net connections over TCP/IP, without the need for a firewall or IP address filtering at the operating system-level. The feature is controlled by the three parameters; tcp.validnode_checking, tcp.invited_nodes, and tcp.excluded_nodes.

Modify the sqlnet.ora file manually
TCP.VALIDNODE_CHECKING=yes
(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)

If this parameter is set to yes, then incoming connections are allowed only if they originate from a node that conforms to the list specified by TCP.INVITED_NODES or TCP.EXCLUDED_NODES parameters.

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes (no is the default).

The TCP.INVITED_NODES and TCP.EXCLUDED_NODES parameters are valid only when the TCP.VALIDNODE_CHECKING parameter is set to yes.

Modify the listener.ora file manually

TCP.EXCLUDED_NODES Syntax:
TCP.EXCLUDED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.EXCLUDED_NODES=(finance.us.example.com, mktg.us.example.com, 192.0.2.25, 172.30.*, 2001:DB8:200C:417A/32)

TCP.INVITED_NODES Syntax:
TCP.INVITED_NODES=(hostname | ip_address, hostname | ip_address, ...)

Example:
TCP.INVITED_NODES=(sales.us.example.com, hr.us.example.com, 192.0.*, 2001:DB8:200C:433B/32)

Usage Notes:

Use TCP.INVITED_NODES to specify which clients are allowed access to the database. This list takes precedence over the TCP.EXCLUDED_NODES parameter if both lists are present. These parameters can use wildcards for IPv4 addresses and CIDR notation for IPv4 and IPv6 addresses.


12. Apply Listener Security Patches.
(See also O112-C1-011100/SRG-APP-000133-DB-000205.)

Critical Patch Updates are cumulative. Therefore, the latest patch will contain all previous security patches for the Listener.


13. Ensure that listener logging is turned on.

Listener logging is on by default. If logging is not on, configure logging for all listeners in order to capture Listener commands and brute force password attacks.


14. Monitor the listener logfile.

The logfile may contain TNS-01169, TNS-01189, TNS-01190, or TNS-12508 errors, which may signify attacks or inappropriate activity. Monitor the logfile and generate an alert whenever these errors are encountered."
  reference       : "800-171|3.13.1,800-171|3.13.6,800-53|SC-5,800-53|SC-7(5),CAT|III,CCI|CCI-001094,CN-L3|7.1.2.2(c),CSF|DE.CM-1,CSF|PR.DS-4,CSF|PR.PT-4,ITSG-33|SC-5,ITSG-33|SC-7(5),NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS7b,NIAv2|GS8e,NIAv2|NS25,Rule-ID|SV-66433r6_rule,STIG-ID|O112-C3-019200,Vuln-ID|V-52217"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*TCP\\.VALIDNODE_CHECKING[\\s]*="
  expect          : "^[\\s]*TCP\\.VALIDNODE_CHECKING[\\s]*=[\\s]*[Yy][Ee][Ss]"
  string_required : YES
</custom_item>

<custom_item>
  type        : CMD_EXEC
  description : "O112-C3-020200 - The DBMS must support organizational requirements to employ automated patch management tools to facilitate flaw remediation to organization-defined information system components."
  info        : "The organization (including any contractor to the organization) shall promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling, shall also be addressed expeditiously. Due to information system integrity and availability concerns, organizations shall give careful consideration to the methodology used to carry out automatic updates.

Automated patch management can be useful in ensuring that appropriate patches are scheduled and applied to databases as required. DBAs often support multiple databases in different environments and with different classification levels. This can lead to confusion if patch management is not automated, leading to inconsistent patching.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "When the Quarterly CPU is released, check the CPU Notice and note the specific patch number for your system. Follow the process below to apply the security patch.

Login to My Oracle Support.  Select patches and download your specific patch number and corresponding MD5 checksum.  Once the patch is downloaded to the server, check the MD5 checksum to make sure the patch is valid. To check the MD5 Checksum in Linux/Unix, the command is:
$md5sum absolute_path_of_file_name - file_name is the complete location of the downloaded file.
$md5sum /home/oracle/test.zip
a34d8cd98f00cf24e9800998ecf823e4 /home/oracle/test.zip

Once the checksum is validated, apply the patch.:
$ cd $ORACLE_HOME
$ opatch apply

Check that the patch was applied and the inventory was updated with the following command (Unix/Linux):
$ opatch lsinventory -d
Windows:
> opatch lsinventory -detail"
  reference   : "800-171|3.14.1,800-53|SI-2,CAT|III,CCI|CCI-001237,CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.4.4(e),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|PR9,NIAv2|SS14b,Rule-ID|SV-66443r2_rule,STIG-ID|O112-C3-020200,SWIFT-CSCv1|2.2,Vuln-ID|V-52227"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "cmd".
  cmd         : "/u01/app/oracle/product/11.2.0/dbhome_1/OPatch/opatch lsinventory 2>&1 | /bin/awk '{print} END {if (NR == 0) print \"none\"}'"
  expect      : "^none$"
  severity    : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "O112-C2-011900 - The DBMS must support the organizational requirements to specifically prohibit or restrict the use of unauthorized functions, ports, protocols, and/or services."
  info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

Additionally, it is sometimes convenient to provide multiple services from a single component of an information system (e.g., email and web services), but doing so increases risk by constraining the ability to restrict the use of functions, ports, protocols, and/or services.

To support the requirements and principles of least functionality, the application must support the organizational requirements providing only essential capabilities and limiting the use of ports, protocols, and/or services to only those required, authorized, and approved to conduct official business or to address authorized quality of life issues.

Database Management Systems using ports, protocols, and services deemed unsafe are open to attack through those ports, protocols, and services. This can allow unauthorized access to the database and through the database to other components of the information system.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Disable functions, ports, protocols, and services that are not approved.

- - - - -

Change the SQLNET.ora, LISTENER.ora, and TNSNAMES.ora files to reflect the proper use of ports, protocols and services that are approved at the site.

If changes to the Listener are made, the files associated with the Listener must be reloaded.  Do that by issuing the following commands at the Unix/Linux or Windows prompt.
First - issue the command to see what the current status is
$ lsnrctl stat
Then load the new file that was corrected to reflect site-specific requirements.
$ lsnrctl reload
Then check the status again to see that the changes have taken place
$ lsnrctl stat"
  reference   : "CAT|II,CCI|CCI-000382,Rule-ID|SV-66455r1_rule,STIG-ID|O112-C2-011900,Vuln-ID|V-52239"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
</report>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-012900 - The DBMS must use multifactor authentication for network access to privileged accounts - SQLNET.AUTHENTICATION_SERVICES"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A privileged account is defined as an information system account with authorizations of a privileged user.

Network access is defined as access to an information system by a user (or a process acting on behalf of a user) communicating through a network (e.g., local area network, wide area network, Internet).

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for network users logging into privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000765,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66471r5_rule,STIG-ID|O112-C2-012900,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52255"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.AUTHENTICATION_SERVICES[\\s]*="
  expect          : "^[\\s]*SQLNET.AUTHENTICATION_SERVICES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-012900 - The DBMS must use multifactor authentication for network access to privileged accounts - SSL_VERSION"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A privileged account is defined as an information system account with authorizations of a privileged user.

Network access is defined as access to an information system by a user (or a process acting on behalf of a user) communicating through a network (e.g., local area network, wide area network, Internet).

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for network users logging into privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-5(2),CAT|II,CCI|CCI-000765,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-5(2),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66471r5_rule,STIG-ID|O112-C2-012900,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52255"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  expect          : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-012900 - The DBMS must use multifactor authentication for network access to privileged accounts - SSL_CLIENT_AUTHENTICATION"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A privileged account is defined as an information system account with authorizations of a privileged user.

Network access is defined as access to an information system by a user (or a process acting on behalf of a user) communicating through a network (e.g., local area network, wide area network, Internet).

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for network users logging into privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000765,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66471r5_rule,STIG-ID|O112-C2-012900,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52255"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  expect          : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-012900 - The DBMS must use multifactor authentication for network access to privileged accounts - SSL_CIPHER_SUITES"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A privileged account is defined as an information system account with authorizations of a privileged user.

Network access is defined as access to an information system by a user (or a process acting on behalf of a user) communicating through a network (e.g., local area network, wide area network, Internet).

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for network users logging into privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000765,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66471r5_rule,STIG-ID|O112-C2-012900,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52255"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  expect          : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013000 - The DBMS must use multifactor authentication for network access to non-privileged accounts - SQLNET.AUTHENTICATION_SERVICES"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii)  Something a user is (e.g., biometric).

A non-privileged account is defined as an information system account with authorizations of a regular or non-privileged user.

Network access is defined as access to an information system by a user (or a process acting on behalf of a user) communicating through a network (e.g., local area network, wide area network, Internet).

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for network users logging into non-privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000766,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66473r5_rule,STIG-ID|O112-C2-013000,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52257"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.AUTHENTICATION_SERVICES[\\s]*="
  expect          : "^[\\s]*SQLNET.AUTHENTICATION_SERVICES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013000 - The DBMS must use multifactor authentication for network access to non-privileged accounts - SSL_VERSION"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii)  Something a user is (e.g., biometric).

A non-privileged account is defined as an information system account with authorizations of a regular or non-privileged user.

Network access is defined as access to an information system by a user (or a process acting on behalf of a user) communicating through a network (e.g., local area network, wide area network, Internet).

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for network users logging into non-privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-5(2),CAT|II,CCI|CCI-000766,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-5(2),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66473r5_rule,STIG-ID|O112-C2-013000,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52257"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  expect          : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013000 - The DBMS must use multifactor authentication for network access to non-privileged accounts - SSL_CLIENT_AUTHENTICATION"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii)  Something a user is (e.g., biometric).

A non-privileged account is defined as an information system account with authorizations of a regular or non-privileged user.

Network access is defined as access to an information system by a user (or a process acting on behalf of a user) communicating through a network (e.g., local area network, wide area network, Internet).

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for network users logging into non-privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000766,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66473r5_rule,STIG-ID|O112-C2-013000,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52257"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  expect          : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013000 - The DBMS must use multifactor authentication for network access to non-privileged accounts."
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii)  Something a user is (e.g., biometric).

A non-privileged account is defined as an information system account with authorizations of a regular or non-privileged user.

Network access is defined as access to an information system by a user (or a process acting on behalf of a user) communicating through a network (e.g., local area network, wide area network, Internet).

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for network users logging into non-privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000766,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66473r5_rule,STIG-ID|O112-C2-013000,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52257"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  expect          : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013600 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to privileged accounts - SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in unfettered access to the database settings and data. A successful replay attack against a privileged database account could result in a complete compromise of the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to utilize replay-resistant authentication mechanisms such as nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000774,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66481r5_rule,STIG-ID|O112-C2-013600,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52265"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT[\\s]*="
# Note: Variable @CLIENT_CHECKSUM_TYPES@ replaced with "SHA384" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT[\\s]*=[\\s]*\(SHA384\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013600 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to privileged accounts - SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in unfettered access to the database settings and data. A successful replay attack against a privileged database account could result in a complete compromise of the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to utilize replay-resistant authentication mechanisms such as nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000774,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66481r5_rule,STIG-ID|O112-C2-013600,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52265"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER[\\s]*="
# Note: Variable @SERVER_CHECKSUM_TYPES@ replaced with "SHA384" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER[\\s]*=[\\s]*\(SHA384\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013600 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to privileged accounts - SQLNET.ENCRYPTION_TYPES_CLIENT"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in unfettered access to the database settings and data. A successful replay attack against a privileged database account could result in a complete compromise of the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to utilize replay-resistant authentication mechanisms such as nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000774,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66481r5_rule,STIG-ID|O112-C2-013600,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52265"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.ENCRYPTION_TYPES_CLIENT[\\s]*="
# Note: Variable @CLIENT_ENCRYPTION_TYPES@ replaced with "AES256" in field "expect".
  expect          : "^[\\s]*SQLNET.ENCRYPTION_TYPES_CLIENT[\\s]*=[\\s]*\(AES256\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013600 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to privileged accounts - SQLNET.ENCRYPTION_TYPES_SERVER"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in unfettered access to the database settings and data. A successful replay attack against a privileged database account could result in a complete compromise of the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to utilize replay-resistant authentication mechanisms such as nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000774,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66481r5_rule,STIG-ID|O112-C2-013600,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52265"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.ENCRYPTION_TYPES_SERVER[\\s]*="
# Note: Variable @SERVER_ENCRYPTION_TYPES@ replaced with "AES256" in field "expect".
  expect          : "^[\\s]*SQLNET.ENCRYPTION_TYPES_SERVER[\\s]*=[\\s]*\(AES256\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013600 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to privileged accounts - SQLNET.CRYPTO_CHECKSUM_CLIENT"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in unfettered access to the database settings and data. A successful replay attack against a privileged database account could result in a complete compromise of the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to utilize replay-resistant authentication mechanisms such as nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000774,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66481r5_rule,STIG-ID|O112-C2-013600,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52265"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_CLIENT[\\s]*="
# Note: Variable @CLIENT_CRYPTO_CHECKSUM@ replaced with "requested" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_CLIENT[\\s]*=[\\s]*requested"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013600 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to privileged accounts - SQLNET.CRYPTO_CHECKSUM_SERVER"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in unfettered access to the database settings and data. A successful replay attack against a privileged database account could result in a complete compromise of the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to utilize replay-resistant authentication mechanisms such as nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000774,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66481r5_rule,STIG-ID|O112-C2-013600,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52265"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_SERVER[\\s]*="
# Note: Variable @SERVER_CRYPTO_CHECKSUM@ replaced with "required" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_SERVER[\\s]*=[\\s]*required"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013700 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts - SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in access to database data.  A successful replay attack against a non-privileged database account could result in a compromise of data stored on the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000776,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66483r5_rule,STIG-ID|O112-C2-013700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52267"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT[\\s]*="
# Note: Variable @CLIENT_CHECKSUM_TYPES@ replaced with "SHA384" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT[\\s]*=[\\s]*\(SHA384\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013700 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts - SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in access to database data.  A successful replay attack against a non-privileged database account could result in a compromise of data stored on the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000776,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66483r5_rule,STIG-ID|O112-C2-013700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52267"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER[\\s]*="
# Note: Variable @SERVER_CHECKSUM_TYPES@ replaced with "SHA384" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER[\\s]*=[\\s]*\(SHA384\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013700 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts - SQLNET.ENCRYPTION_TYPES_CLIENT"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in access to database data.  A successful replay attack against a non-privileged database account could result in a compromise of data stored on the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000776,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66483r5_rule,STIG-ID|O112-C2-013700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52267"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.ENCRYPTION_TYPES_CLIENT[\\s]*="
# Note: Variable @CLIENT_ENCRYPTION_TYPES@ replaced with "AES256" in field "expect".
  expect          : "^[\\s]*SQLNET.ENCRYPTION_TYPES_CLIENT[\\s]*=[\\s]*\(AES256\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013700 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts - SQLNET.ENCRYPTION_TYPES_SERVER"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in access to database data.  A successful replay attack against a non-privileged database account could result in a compromise of data stored on the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000776,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66483r5_rule,STIG-ID|O112-C2-013700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52267"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.ENCRYPTION_TYPES_SERVER[\\s]*="
# Note: Variable @SERVER_ENCRYPTION_TYPES@ replaced with "AES256" in field "expect".
  expect          : "^[\\s]*SQLNET.ENCRYPTION_TYPES_SERVER[\\s]*=[\\s]*\(AES256\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013700 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts - SQLNET.CRYPTO_CHECKSUM_CLIENT"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in access to database data.  A successful replay attack against a non-privileged database account could result in a compromise of data stored on the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000776,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66483r5_rule,STIG-ID|O112-C2-013700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52267"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_CLIENT[\\s]*="
# Note: Variable @CLIENT_CRYPTO_CHECKSUM@ replaced with "requested" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_CLIENT[\\s]*=[\\s]*requested"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013700 - The DBMS must use organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts - SQLNET.CRYPTO_CHECKSUM_SERVER"
  info            : "An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message.

Techniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security), and time synchronous or challenge-response one-time authenticators.

Replay attacks, if successfully used against a database account, could result in access to database data.  A successful replay attack against a non-privileged database account could result in a compromise of data stored on the database.

Oracle Database enables you to encrypt data that is sent over a network.  There is no distinction between privileged and non-privileged accounts.

Encryption of network data provides data privacy so that unauthorized parties are not able to view plain-text data as it passes over the network. Oracle Database also provides protection against two forms of active attacks.

Data modification attack:  An unauthorized party intercepting data in transit, altering it, and retransmitting it is a data modification attack. For example, intercepting a $100 bank deposit, changing the amount to $10,000, and retransmitting the higher amount is a data modification attack.

Replay attack:  Repetitively retransmitting an entire set of valid data is a replay attack, such as intercepting a $100 bank withdrawal and retransmitting it ten times, thereby receiving $1,000.

AES and Triple-DES operate in outer Cipher Block Chaining (CBC) mode.

The DES algorithm uses a 56-bit key length."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require organization-defined replay-resistant authentication mechanisms for network access to non-privileged accounts.

If appropriate, apply Oracle Data Network Encryption to protect against replay mechanisms."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000776,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66483r5_rule,STIG-ID|O112-C2-013700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52267"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_SERVER[\\s]*="
# Note: Variable @SERVER_CRYPTO_CHECKSUM@ replaced with "required" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_SERVER[\\s]*=[\\s]*required"
  string_required : YES
</custom_item>

<report type:"WARNING">
  description : "O112-C2-014600 - The DBMS must support organizational requirements to enforce password encryption for storage."
  info        : "Applications must enforce password encryption when storing passwords. Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read and easily compromised.

Database passwords stored in clear text are vulnerable to unauthorized disclosure. Database passwords must always be encoded or encrypted when stored internally or externally to the DBMS.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Develop, document, and maintain a list of DBMS database objects, database configuration files, associated scripts, and applications defined within or external to the DBMS that access the database, and DBMS/user environment files/settings in the System Security Plan.

Record whether they do or do not contain DBMS passwords. If passwords are present, ensure they are encoded or encrypted and protected by host system security.


The following are notes on implementing a Secure External Password Store using Oracle Wallet:

Oracle provides the capability to provide for a secure external password facility.  Use the Oracle mkstore to create a secure storage area for passwords for applications, batch jobs, and scripts to use, or deploy a site-authorized facility to perform this function.

Check to see what has been stored in the Oracle External Password Store.

To view all contents of a client wallet external password store, check specific credentials by viewing them. Listing the external password store contents provides information you can use to decide whether to add or delete credentials from the store.  To list the contents of the external password store, enter the following command at the command line:

$ mkstore -wrl wallet_location -listCredential
For example:
$ mkstore -wrl c:\oracle\product\11.2.0\db_1\wallets -listCredential

The wallet_location specifies the path to the directory where the wallet, whose external password store contents you want to view, is located. This command lists all of the credential database service names (aliases) and the corresponding user name (schema) for that database. Passwords are not listed.

Configuring Clients to use the External Password Store:

If your client is already configured to use external authentication, such as Windows native authentication or Transport Layer Security (TLS), then Oracle Database uses that authentication method. The same credentials used for this type of authentication are typically also used to log in to the database.

For clients not using such authentication methods or wanting to override them for database authentication, you can set the SQLNET.WALLET_OVERRIDE parameter in sqlnet.ora to TRUE. The default value for SQLNET.WALLET_OVERRIDE is FALSE, allowing standard use of authentication credentials as before.

If you want a client to use the secure external password store feature, then perform the following configuration task:

1. Create a wallet on the client by using the following syntax at the command line:

mkstore -wrl wallet_location -create

For example:

mkstore -wrl c:\oracle\product\11.2.0\db_1\wallets -create

Enter password: password

The wallet_location is the path to the directory where you want to create and store the wallet. This command creates an Oracle wallet with the autologin feature enabled at the location you specify. The autologin feature enables the client to access the wallet contents without supplying a password.

The mkstore utility -create option uses password complexity verification.

2. Create database connection credentials in the wallet by using the following syntax at the command line:

mkstore -wrl wallet_location -createCredential db_connect_string username

Enter password: password

For example:
mkstore -wrl c:\oracle\product\11.2.0\db_1\wallets -createCredential oracle system

Enter password: password

In this specification the wallet_location is the path to the directory where you created the wallet.  The db_connect_string used in the CONNECT /@db_connect_string statement must be identical to the db_connect_string specified in the -createCredential command.  The db_connect_string is the TNS alias you use to specify the database in the tnsnames.ora file or any service name you use to identify the database on an Oracle network. By default, tnsnames.ora is located in the $ORACLE_HOME/network/admin directory on UNIX systems and in ORACLE_HOME\network\admin on Windows.  The username is the database logon credential. When prompted, enter the password for this user.

 3. In the client sqlnet.ora file, enter the WALLET_LOCATION parameter and set it to the directory location of the wallet you created in Step 1.  For example, if you created the wallet in $ORACLE_HOME/network/admin and your Oracle home is set to /private/ora11, then you need to enter the following into your client sqlnet.ora file:

    WALLET_LOCATION =
           (SOURCE =
             (METHOD = FILE)
             (METHOD_DATA =
           (DIRECTORY = /private/ora11/network/admin)
           )
          )

4. In the client sqlnet.ora file, enter the SQLNET.WALLET_OVERRIDE parameter and set it to TRUE as follows:

SQLNET.WALLET_OVERRIDE = TRUE

This setting causes all CONNECT /@db_connect_string statements to use the information in the wallet at the specified location to authenticate to databases.

When external authentication is in use, an authenticated user with such a wallet can use the CONNECT /@db_connect_string syntax to access the previously specified databases without providing a user name and password. However, if a user fails that external authentication, then these connect statements also fail.

Below is a sample sqlnet.ora file with the WALLET_LOCATION and the SQLNET.WALLET_OVERRIDE parameters set as described in Steps 3 and 4.

        WALLET_LOCATION =
            (SOURCE =
              (METHOD = FILE)
              (METHOD_DATA =
            (DIRECTORY = /private/ora11/network/admin)
              )
             )
        SQLNET.WALLET_OVERRIDE = TRUE
        SSL_CLIENT_AUTHENTICATION = FALSE
        SSL_VERSION = 1.2

(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)"
  reference   : "CAT|II,CCI|CCI-000196,Rule-ID|SV-66501r4_rule,STIG-ID|O112-C2-014600,Vuln-ID|V-52285"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
</report>

<report type:"WARNING">
  description : "O112-C2-015100 - DBMS passwords must not be stored in compiled, encoded, or encrypted batch jobs or compiled, encoded, or encrypted application source code."
  info        : "Password maximum lifetime is  the maximum period of time, (typically in days) a user's password may be in effect before the user is forced to change it.

Passwords need to be changed at specific policy-based intervals as per policy. Any password, no matter how complex, can eventually be cracked.

One method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised.

The storage of passwords in application source or batch job code that is compiled, encoded, or encrypted prevents compliance with password expiration and other management requirements, as well as provides another means for potential discovery.

This requirement applies equally to those accounts managed by Oracle and those managed and authenticated by the OS or an enterprise-wide mechanism.

This requirement should not be construed as prohibiting or discouraging the encryption of source code, which remains an advisable precaution.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Design DBMS application code and batch job code that is compiled, encoded or encrypted, to NOT contain passwords.


Oracle provides the capability to provide for a secure external password facility.  Use the Oracle mkstore to create a secure storage area for passwords for applications, batch jobs, and scripts to use or deploy a site-authorized facility to perform this function.

Check to see what has been stored in the Oracle External Password Store.

To view all contents of a client wallet external password store, check specific credentials by viewing them. Listing the external password store contents provides information you can use to decide whether to add or delete credentials from the store.  To list the contents of the external password store, enter the following command at the command line:

  $ mkstore -wrl wallet_location -listCredential

  For example:

  $ mkstore -wrl c:\oracle\product\11.2.0\db_1\wallets -listCredential

The wallet_location specifies the path to the directory where the wallet, whose external password store contents you want to view, is located. This command lists all of the credential database service names (aliases) and the corresponding user name (schema) for that database. Passwords are not listed.

Configuring Clients to use the External Password Store:

If your client is already configured to use external authentication, such as Windows native authentication or Transport Layer Security (TLS), then Oracle Database uses that authentication method. The same credentials used for this type of authentication are typically also used to log in to the database.

For clients not using such authentication methods or wanting to override them for database authentication, you can set the SQLNET.WALLET_OVERRIDE parameter in sqlnet.ora to TRUE. The default value for SQLNET.WALLET_OVERRIDE is FALSE, allowing standard use of authentication credentials as before.

If you want a client to use the secure external password store feature, then perform the following configuration task:

1. Create a wallet on the client by using the following syntax at the command line:

    mkstore -wrl wallet_location -create

    For example:

    mkstore -wrl c:\oracle\product\11.2.0\db_1\wallets -create
    Enter password: password

The wallet_location is the path to the directory where you want to create and store the wallet. This command creates an Oracle wallet with the autologin feature enabled at the location you specify. The autologin feature enables the client to access the wallet contents without supplying a password.

 The mkstore utility -create option uses password complexity verification.

2. Create database connection credentials in the wallet by using the following syntax at the command line:

    mkstore -wrl wallet_location -createCredential db_connect_string username
    Enter password: password

    For example:

    mkstore -wrl c:\oracle\product\11.2.0\db_1\wallets -createCredential oracle system
    Enter password: password

    In this specification:

The wallet_location is the path to the directory where you created the wallet.  The db_connect_string used in the CONNECT /@db_connect_string statement must be identical to the db_connect_string specified in the -createCredential command.

The db_connect_string is the TNS alias you use to specify the database in the tnsnames.ora file or any service name you use to identify the database on an Oracle network. By default, tnsnames.ora is located in the $ORACLE_HOME/network/admin directory on UNIX systems and in ORACLE_HOME\network\admin on Windows.

The username is the database logon credential. When prompted, enter the password for this user.

3. In the client sqlnet.ora file, enter the WALLET_LOCATION parameter and set it to the directory location of the wallet you created in Step 1.  For example, if you created the wallet in $ORACLE_HOME/network/admin and your Oracle home is set to /private/ora11, then you need to enter the following into your client sqlnet.ora file:

    WALLET_LOCATION =
           (SOURCE =
             (METHOD = FILE)
             (METHOD_DATA =
           (DIRECTORY = /private/ora11/network/admin)
           )
          )

4. In the client sqlnet.ora file, enter the SQLNET.WALLET_OVERRIDE parameter and set it to TRUE as follows:

       SQLNET.WALLET_OVERRIDE = TRUE

This setting causes all CONNECT /@db_connect_string statements to use the information in the wallet at the specified location to authenticate to databases.

       When external authentication is in use, an authenticated user with such a wallet can use the CONNECT /@db_connect_string syntax to access the previously specified databases without providing a user name and password. However, if a user fails that external authentication, then these connect statements also fail.

Below is a sample sqlnet.ora file with the WALLET_LOCATION and the SQLNET.WALLET_OVERRIDE parameters set as described in Steps 3 and 4.

        WALLET_LOCATION =
            (SOURCE =
              (METHOD = FILE)
              (METHOD_DATA =
            (DIRECTORY = /private/ora12/network/admin)
              )
             )

        SQLNET.WALLET_OVERRIDE = TRUE
        SSL_CLIENT_AUTHENTICATION = FALSE
        SSL_VERSION = 1.2

(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)"
  reference   : "CAT|II,CCI|CCI-000199,Rule-ID|SV-66505r5_rule,STIG-ID|O112-C2-015100,Vuln-ID|V-52289"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
</report>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-015300 - The DBMS, when utilizing PKI-based authentication, must validate certificates by constructing a certification path with status information to an accepted trust anchor - SSL_CIPHER_SUITES"
  info            : "A trust anchor is an authoritative entity represented via a public key and associated data. It is used in the context of public key infrastructures, X.509 digital certificates, and DNSSEC.

When there is a chain of trust, usually the top entity to be trusted becomes the trust anchor; it can be for example a Certification Authority (CA). A certification path starts with the Subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate, typically issued by a trusted CA.

Path validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted.

Status information for certification paths includes certificate revocation lists or online certificate status protocol responses.

Database Management Systems that do not validate certificates to a trust anchor are in danger of accepting certificates that are invalid and/or counterfeit. This could allow unauthorized access to the database."
  solution        : "Configure the DBMS to validate certificates by constructing a certification path with status information to an accepted trust anchor.

Configure the database to support Transport Layer Security (TLS) protocols and the Oracle Wallet to store authentication and signing credentials including private keys."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000185,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66509r5_rule,STIG-ID|O112-C2-015300,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52293"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  expect          : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-015300 - The DBMS, when utilizing PKI-based authentication, must validate certificates by constructing a certification path with status information to an accepted trust anchor - SSL_VERSION"
  info            : "A trust anchor is an authoritative entity represented via a public key and associated data. It is used in the context of public key infrastructures, X.509 digital certificates, and DNSSEC.

When there is a chain of trust, usually the top entity to be trusted becomes the trust anchor; it can be for example a Certification Authority (CA). A certification path starts with the Subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate, typically issued by a trusted CA.

Path validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted.

Status information for certification paths includes certificate revocation lists or online certificate status protocol responses.

Database Management Systems that do not validate certificates to a trust anchor are in danger of accepting certificates that are invalid and/or counterfeit. This could allow unauthorized access to the database."
  solution        : "Configure the DBMS to validate certificates by constructing a certification path with status information to an accepted trust anchor.

Configure the database to support Transport Layer Security (TLS) protocols and the Oracle Wallet to store authentication and signing credentials including private keys."
  reference       : "800-171|3.5.1,800-53|IA-5(2),CAT|II,CCI|CCI-000185,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-5(2),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66509r5_rule,STIG-ID|O112-C2-015300,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52293"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  expect          : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-015300 - The DBMS, when utilizing PKI-based authentication, must validate certificates by constructing a certification path with status information to an accepted trust anchor - SSL_CLIENT_AUTHENTICATION"
  info            : "A trust anchor is an authoritative entity represented via a public key and associated data. It is used in the context of public key infrastructures, X.509 digital certificates, and DNSSEC.

When there is a chain of trust, usually the top entity to be trusted becomes the trust anchor; it can be for example a Certification Authority (CA). A certification path starts with the Subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate, typically issued by a trusted CA.

Path validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted.

Status information for certification paths includes certificate revocation lists or online certificate status protocol responses.

Database Management Systems that do not validate certificates to a trust anchor are in danger of accepting certificates that are invalid and/or counterfeit. This could allow unauthorized access to the database."
  solution        : "Configure the DBMS to validate certificates by constructing a certification path with status information to an accepted trust anchor.

Configure the database to support Transport Layer Security (TLS) protocols and the Oracle Wallet to store authentication and signing credentials including private keys."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000185,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66509r5_rule,STIG-ID|O112-C2-015300,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52293"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  expect          : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-015500 - The DBMS must ensure that PKI-based authentication maps the authenticated identity to the user account - SSL_CIPHER_SUITES"
  info            : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information. The key by itself is a cryptographic value that does not contain specific user information.

When including the DBMS in the Private Key Infrastructure, the authenticated user must map directly to a user account in the DBMS. If the user account is not directly tied to the authenticated identity, there is no way to know which, if any, database user account has been authorized."
  solution        : "Configure the DBMS to map the authenticated identity directly to the DBMS user account."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000187,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66511r4_rule,STIG-ID|O112-C2-015500,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52295"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  expect          : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-015500 - The DBMS must ensure that PKI-based authentication maps the authenticated identity to the user account - SSL_VERSION"
  info            : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information. The key by itself is a cryptographic value that does not contain specific user information.

When including the DBMS in the Private Key Infrastructure, the authenticated user must map directly to a user account in the DBMS. If the user account is not directly tied to the authenticated identity, there is no way to know which, if any, database user account has been authorized."
  solution        : "Configure the DBMS to map the authenticated identity directly to the DBMS user account."
  reference       : "800-171|3.5.1,800-53|IA-5(2),CAT|II,CCI|CCI-000187,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-5(2),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66511r4_rule,STIG-ID|O112-C2-015500,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52295"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  expect          : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-015500 - The DBMS must ensure that PKI-based authentication maps the authenticated identity to the user account - SSL_CLIENT_AUTHENTICATION"
  info            : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information. The key by itself is a cryptographic value that does not contain specific user information.

When including the DBMS in the Private Key Infrastructure, the authenticated user must map directly to a user account in the DBMS. If the user account is not directly tied to the authenticated identity, there is no way to know which, if any, database user account has been authorized."
  solution        : "Configure the DBMS to map the authenticated identity directly to the DBMS user account."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000187,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66511r4_rule,STIG-ID|O112-C2-015500,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52295"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  expect          : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-015700 - The DBMS must use  NIST-validated FIPS 140-2-compliant cryptography for authentication mechanisms."
  info            : "Encryption is only as good as the encryption modules utilized. Unapproved cryptographic module algorithms cannot be verified and cannot be relied upon to provide confidentiality or integrity, and DoD data may be compromised due to weak algorithms.

Applications utilizing encryption are required to use approved encryption modules that meet the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.

FIPS 140-2 is the current standard for validating cryptographic modules, and NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified hardware-based encryption modules.

Authentication modules with weak encryption could allow an attacker to gain access to data stored in the database and to the administration settings of the DBMS."
  solution        : "Utilize NIST-validated FIPS 140-2-compliant cryptography for all authentication mechanisms.

The strength requirements are dependent upon data classification.

For unclassified data, where cryptography is required:

AES 128 for encryption
SHA 256 for hashing

NSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows:

AES 128 for Secret
AES 256 for Top Secret
SHA 256 for Secret
SHA 384 for Top Secret

National Security System is defined as:

(OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications).

There is more information on this topic in the Oracle Database 11.2g Advanced Security Administrator's Guide, which may be found at  https://docs.oracle.com/database/112/DBSEG/E48135-11.pdf.

Note: because of changes in Oracle's licensing policy, it is no longer necessary to purchase Oracle Advanced Security to use network encryption and advanced authentication.

FIPS 140-2 documentation can be downloaded from http://csrc.nist.gov/publications/PubsFIPS.html#140-2"
  reference       : "800-171|3.13.11,800-53|SC-13,CAT|II,CCI|CCI-000803,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,Rule-ID|SV-66513r3_rule,STIG-ID|O112-C2-015700,Vuln-ID|V-52297"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/ldap/admin/fips.ora"
  regex           : "^[\\s]*SSLFIPS_140[\\s]*="
  expect          : "^[\\s]*SSLFIPS_140[\\s]*=[\\s]*[Tt][Rr][Uu][Ee]"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-015400 - The DBMS, when using PKI-based authentication, must enforce authorized access to the corresponding private key - SSL_CIPHER_SUITES"
  info            : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information.

If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and can pretend to be the authorized user.

Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys.

All access to the private key of the DBMS must be restricted to authorized and authenticated users. If unauthorized users have access to the DBMS's private key, an attacker could gain access to the primary key and use it to impersonate the database on the network.

Transport Layer Security (TLS) is the successor protocol to Secure Sockets Layer (SSL). Although the Oracle configuration parameters have names including 'SSL', such as SSL_VERSION and SSL_CIPHER_SUITES, they refer to TLS."
  solution        : "Implement strong access and authentication controls to protect the database's private key.

Configure the database to support Transport Layer Security (TLS) protocols and the Oracle Wallet to store authentication and signing credentials including private keys."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|I,CCI|CCI-000186,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66547r5_rule,STIG-ID|O112-C1-015400,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52331"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  expect          : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-015400 - The DBMS, when using PKI-based authentication, must enforce authorized access to the corresponding private key - SSL_VERSION"
  info            : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information.

If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and can pretend to be the authorized user.

Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys.

All access to the private key of the DBMS must be restricted to authorized and authenticated users. If unauthorized users have access to the DBMS's private key, an attacker could gain access to the primary key and use it to impersonate the database on the network.

Transport Layer Security (TLS) is the successor protocol to Secure Sockets Layer (SSL). Although the Oracle configuration parameters have names including 'SSL', such as SSL_VERSION and SSL_CIPHER_SUITES, they refer to TLS."
  solution        : "Implement strong access and authentication controls to protect the database's private key.

Configure the database to support Transport Layer Security (TLS) protocols and the Oracle Wallet to store authentication and signing credentials including private keys."
  reference       : "800-171|3.5.1,800-53|IA-5(2),CAT|I,CCI|CCI-000186,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-5(2),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66547r5_rule,STIG-ID|O112-C1-015400,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52331"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  expect          : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-015400 - The DBMS, when using PKI-based authentication, must enforce authorized access to the corresponding private key - SSL_CLIENT_AUTHENTICATION"
  info            : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information.

If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and can pretend to be the authorized user.

Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys.

All access to the private key of the DBMS must be restricted to authorized and authenticated users. If unauthorized users have access to the DBMS's private key, an attacker could gain access to the primary key and use it to impersonate the database on the network.

Transport Layer Security (TLS) is the successor protocol to Secure Sockets Layer (SSL). Although the Oracle configuration parameters have names including 'SSL', such as SSL_VERSION and SSL_CIPHER_SUITES, they refer to TLS."
  solution        : "Implement strong access and authentication controls to protect the database's private key.

Configure the database to support Transport Layer Security (TLS) protocols and the Oracle Wallet to store authentication and signing credentials including private keys."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|I,CCI|CCI-000186,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66547r5_rule,STIG-ID|O112-C1-015400,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52331"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  expect          : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-019700 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information during transmission unless the transmitted data is otherwise protected by alternative physical measures - SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT"
  info            : "Preventing the disclosure of transmitted information requires that applications take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSEC tunnel.

Alternative physical protection measures include Protected Distribution Systems (PDS). PDS are used to transmit unencrypted classified NSI through an area of lesser classification or control. Inasmuch as the classified NSI is unencrypted, the PDS must provide adequate electrical, electromagnetic, and physical safeguards to deter exploitation. Refer to NSTSSI No. 7003 for additional details on a PDS.

Information in transmission is particularly vulnerable to attack. If the DBMS does not employ cryptographic mechanisms preventing unauthorized disclosure of information during transit, the information may be compromised."
  solution        : "Configure DBMS and/or operating system to use cryptographic mechanisms to prevent unauthorized disclosure of information during transmission where physical measures are not being utilized."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|I,CCI|CCI-002418,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66549r6_rule,STIG-ID|O112-C1-019700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52333"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT[\\s]*="
# Note: Variable @CLIENT_CHECKSUM_TYPES@ replaced with "SHA384" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_CLIENT[\\s]*=[\\s]*\(SHA384\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-019700 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information during transmission unless the transmitted data is otherwise protected by alternative physical measures - SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER"
  info            : "Preventing the disclosure of transmitted information requires that applications take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSEC tunnel.

Alternative physical protection measures include Protected Distribution Systems (PDS). PDS are used to transmit unencrypted classified NSI through an area of lesser classification or control. Inasmuch as the classified NSI is unencrypted, the PDS must provide adequate electrical, electromagnetic, and physical safeguards to deter exploitation. Refer to NSTSSI No. 7003 for additional details on a PDS.

Information in transmission is particularly vulnerable to attack. If the DBMS does not employ cryptographic mechanisms preventing unauthorized disclosure of information during transit, the information may be compromised."
  solution        : "Configure DBMS and/or operating system to use cryptographic mechanisms to prevent unauthorized disclosure of information during transmission where physical measures are not being utilized."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|I,CCI|CCI-002418,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66549r6_rule,STIG-ID|O112-C1-019700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52333"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER[\\s]*="
# Note: Variable @SERVER_CHECKSUM_TYPES@ replaced with "SHA384" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER[\\s]*=[\\s]*\(SHA384\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-019700 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information during transmission unless the transmitted data is otherwise protected by alternative physical measures - SQLNET.ENCRYPTION_TYPES_CLIENT"
  info            : "Preventing the disclosure of transmitted information requires that applications take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSEC tunnel.

Alternative physical protection measures include Protected Distribution Systems (PDS). PDS are used to transmit unencrypted classified NSI through an area of lesser classification or control. Inasmuch as the classified NSI is unencrypted, the PDS must provide adequate electrical, electromagnetic, and physical safeguards to deter exploitation. Refer to NSTSSI No. 7003 for additional details on a PDS.

Information in transmission is particularly vulnerable to attack. If the DBMS does not employ cryptographic mechanisms preventing unauthorized disclosure of information during transit, the information may be compromised."
  solution        : "Configure DBMS and/or operating system to use cryptographic mechanisms to prevent unauthorized disclosure of information during transmission where physical measures are not being utilized."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|I,CCI|CCI-002418,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66549r6_rule,STIG-ID|O112-C1-019700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52333"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.ENCRYPTION_TYPES_CLIENT[\\s]*="
# Note: Variable @CLIENT_ENCRYPTION_TYPES@ replaced with "AES256" in field "expect".
  expect          : "^[\\s]*SQLNET.ENCRYPTION_TYPES_CLIENT[\\s]*=[\\s]*\(AES256\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-019700 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information during transmission unless the transmitted data is otherwise protected by alternative physical measures."
  info            : "Preventing the disclosure of transmitted information requires that applications take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSEC tunnel.

Alternative physical protection measures include Protected Distribution Systems (PDS). PDS are used to transmit unencrypted classified NSI through an area of lesser classification or control. Inasmuch as the classified NSI is unencrypted, the PDS must provide adequate electrical, electromagnetic, and physical safeguards to deter exploitation. Refer to NSTSSI No. 7003 for additional details on a PDS.

Information in transmission is particularly vulnerable to attack. If the DBMS does not employ cryptographic mechanisms preventing unauthorized disclosure of information during transit, the information may be compromised."
  solution        : "Configure DBMS and/or operating system to use cryptographic mechanisms to prevent unauthorized disclosure of information during transmission where physical measures are not being utilized."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|I,CCI|CCI-002418,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66549r6_rule,STIG-ID|O112-C1-019700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52333"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.ENCRYPTION_TYPES_SERVER[\\s]*="
# Note: Variable @SERVER_ENCRYPTION_TYPES@ replaced with "AES256" in field "expect".
  expect          : "^[\\s]*SQLNET.ENCRYPTION_TYPES_SERVER[\\s]*=[\\s]*\(AES256\)"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-019700 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information during transmission unless the transmitted data is otherwise protected by alternative physical measures - SQLNET.ENCRYPTION_TYPES_SERVER"
  info            : "Preventing the disclosure of transmitted information requires that applications take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSEC tunnel.

Alternative physical protection measures include Protected Distribution Systems (PDS). PDS are used to transmit unencrypted classified NSI through an area of lesser classification or control. Inasmuch as the classified NSI is unencrypted, the PDS must provide adequate electrical, electromagnetic, and physical safeguards to deter exploitation. Refer to NSTSSI No. 7003 for additional details on a PDS.

Information in transmission is particularly vulnerable to attack. If the DBMS does not employ cryptographic mechanisms preventing unauthorized disclosure of information during transit, the information may be compromised."
  solution        : "Configure DBMS and/or operating system to use cryptographic mechanisms to prevent unauthorized disclosure of information during transmission where physical measures are not being utilized."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|I,CCI|CCI-002418,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66549r6_rule,STIG-ID|O112-C1-019700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52333"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_CLIENT[\\s]*="
# Note: Variable @CLIENT_CRYPTO_CHECKSUM@ replaced with "requested" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_CLIENT[\\s]*=[\\s]*requested"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C1-019700 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information during transmission unless the transmitted data is otherwise protected by alternative physical measures - SQLNET.CRYPTO_CHECKSUM_CLIENT"
  info            : "Preventing the disclosure of transmitted information requires that applications take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSEC tunnel.

Alternative physical protection measures include Protected Distribution Systems (PDS). PDS are used to transmit unencrypted classified NSI through an area of lesser classification or control. Inasmuch as the classified NSI is unencrypted, the PDS must provide adequate electrical, electromagnetic, and physical safeguards to deter exploitation. Refer to NSTSSI No. 7003 for additional details on a PDS.

Information in transmission is particularly vulnerable to attack. If the DBMS does not employ cryptographic mechanisms preventing unauthorized disclosure of information during transit, the information may be compromised."
  solution        : "Configure DBMS and/or operating system to use cryptographic mechanisms to prevent unauthorized disclosure of information during transmission where physical measures are not being utilized."
  reference       : "800-171|3.13.8,800-53|SC-8(1),CAT|I,CCI|CCI-002418,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-66549r6_rule,STIG-ID|O112-C1-019700,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-52333"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_SERVER[\\s]*="
# Note: Variable @SERVER_CRYPTO_CHECKSUM@ replaced with "required" in field "expect".
  expect          : "^[\\s]*SQLNET.CRYPTO_CHECKSUM_SERVER[\\s]*=[\\s]*required"
  string_required : YES
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK_NOT
  description : "O112-C2-001700 - The DBMS must support the disabling of network protocols deemed by the organization to be non-secure."
  info        : "This requirement is related to remote access, but more specifically to the networking protocols allowing systems to communicate. Remote access is any access to an organizational information system by a user (or an information system) communicating through an external, non-organization  controlled network (e.g., the Internet). Examples of remote access methods include dial-up, broadband, and wireless.

Some networking protocols allowing remote access may not meet security requirements to protect data and components. Bluetooth and peer-to-peer networking are examples of less than secure networking protocols.

The DoD Ports, Protocols, and Services Management (PPSM) program provides implementation guidance on the use of IP protocols and application and data services traversing the DoD Networks in a manner supporting net-centric operations.

Applications implementing or utilizing remote access network protocols need to ensure the application is developed and implemented in accordance with the PPSM requirements. In situations where it has been determined that specific operational requirements outweigh the risks of enabling an insecure network protocol, the organization may pursue a risk acceptance.

Using protocols deemed non-secure would compromise the ability of the DBMS to operate in a secure fashion. The database must be able to disable network protocols deemed non-secure."
  solution    : "Disable any network protocol listed as non-secure in the PPSM documentation.

To disable the protocol deemed not secure, stop the listener by issuing the following command as the Oracle Software owner, typically Oracle.
          $ lsnrctl stop
This will stop the listener.  Edit the LISTENER.ORA file and remove the protocols deemed not secure and restart the listener.

For example, if TCP was deemed as not secure and the listener.ora would need to be changed and the tcp entry would need to be removed.  That would only allow the listener to listen for an IPC connection.

LISTENER=
  (DESCRIPTION=
    (ADDRESS_LIST=
      (ADDRESS=(PROTOCOL=tcp)(HOST=sale-server)(PORT=1521)) - remove this line and properly balance the parentheses -
      (ADDRESS=(PROTOCOL=ipc)(KEY=extproc))))
SID_LIST_LISTENER=
  (SID_LIST=
    (SID_DESC=
      (GLOBAL_DBNAME=sales.us.example.com)
      (ORACLE_HOME=/oracle11g)
      (SID_NAME=sales))
    (SID_DESC=
      (SID_NAME=plsextproc)
      (ORACLE_HOME=/oracle11g)
      (PROGRAM=extproc)))

Revise the client side TNSNAMES.ORA to align the PROTOCOL value in the PROTOCOL portion of the connect string.  For example, if TCP was deemed as not secure and the listener.ora was changed to listen for an IPC connection the code below would be required:

net_service_name=
(DESCRIPTION=
(ADDRESS=(PROTOCOL=tcp)(HOST=sales1-svr)(PORT=1521))
(ADDRESS=(PROTOCOL=tcp)(HOST=sales2-svr)(PORT=1521))
(CONNECT_DATA=
(SERVICE_NAME=sales.us.example.com)))"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-001436,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-66563r1_rule,STIG-ID|O112-C2-001700,SWIFT-CSCv1|2.3,Vuln-ID|V-52347"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora"
  regex       : "\\([Pp][Rr][Oo][Tt][Oo][Cc][Oo][Ll][\\s]*=[\\s]*"
# Note: Variable @UNSAFE_PROTOCOLS@ replaced with "tcp|TCP|ipc|IPC" in field "expect".
  expect      : "\\([Pp][Rr][Oo][Tt][Oo][Cc][Oo][Ll][\\s]*=[\\s]*(tcp|TCP|ipc|IPC)\\)"
</custom_item>

<custom_item>
  type        : FILE_CHECK
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "description".
# Note: Variable @ORACLE_ACCT@ replaced with "oracle" in field "description".
  description : "O112-C2-003400 - DBMS processes or services must run under custom, dedicated OS accounts - /u01/app/oracle/product/11.2.0/dbhome_1 is owned by oracle"
  info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

The DBMS must run under a custom dedicated OS account. When the DBMS is running under a shared account, users with access to that account could inadvertently or maliciously make changes to the DBMS's settings, files, or permissions."
  solution    : "Create an OS account dedicated to Oracle DBMS processes and allow only Oracle DBMS processes to run under the account."
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000037,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-66585r1_rule,STIG-ID|O112-C2-003400,SWIFT-CSCv1|2.3,Vuln-ID|V-52369"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1"
# Note: Variable @ORACLE_ACCT@ replaced with "oracle" in field "owner".
  owner       : "oracle"
</custom_item>

<custom_item>
  type        : CMD_EXEC
# Note: Variable @ORACLE_ACCT@ replaced with "oracle" in field "description".
  description : "O112-C2-003400 - DBMS processes or services must run under custom, dedicated OS accounts - Oracle processes are runng as oracle"
  info        : "Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

The DBMS must run under a custom dedicated OS account. When the DBMS is running under a shared account, users with access to that account could inadvertently or maliciously make changes to the DBMS's settings, files, or permissions."
  solution    : "Create an OS account dedicated to Oracle DBMS processes and allow only Oracle DBMS processes to run under the account."
  reference   : "800-171|3.1.4,800-171|3.1.5,800-53|AC-5,800-53|AC-6,CAT|II,CCI|CCI-000037,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ISO/IEC-27001|A.6.1.2,ITSG-33|AC-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,Rule-ID|SV-66585r1_rule,STIG-ID|O112-C2-003400,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-52369"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_ACCT@ replaced with "oracle" in field "cmd".
  cmd         : "/bin/ps -ef | /bin/grep 'ora_' | /bin/egrep -v '^oracle +' | /bin/awk '{print} END {if (NR == 0) print \"none\"}'"
  expect      : "^none$"
</custom_item>

<report type:"WARNING">
  description : "O112-N1-015602 - When using command-line tools such as Oracle SQL*Plus, which can accept a plain-text password, users must use an alternative login method that does not expose the password."
  info        : "The SRG states:  'To prevent the compromise of authentication information, such as passwords, during the authentication process, the feedback from the information system shall not provide any information that would allow an unauthorized user to compromise the authentication mechanism.'

'Obfuscation of user-provided information when typed into the system is a method used in addressing this risk.'

'For example, displaying asterisks when a user types in a password, is an example of obscuring feedback of authentication information.'

'Database applications may allow for entry of the account name and password as a visible parameter of the application execution command. This practice should be prohibited and disabled to prevent shoulder surfing.'

SQL*Plus is an essential part of any Oracle installation.  SQL*Plus cannot be configured not to accept a plain-text password.  Since the typical SQL*Plus user is a database administrator, the consequences of password compromise are particularly serious.  Therefore, the use of plain-text passwords must be prohibited, as a matter of practice and procedure.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "For Oracle SQL*Plus, which cannot be configured not to accept a plain-text password, and any other essential tool with the same limitation:

1) Document the need for it, who uses it, and any relevant mitigations, and obtain AO approval.
2) Train all users of the tool in the importance of not using the plain-text password option, and in how to keep the password hidden.

- - - - -

Consider wrapping the startup command with a shell or wrapper and using an Oracle external password store.

Oracle provides the capability to provide for a secure external password facility.  Use the Oracle mkstore to create a secure storage area for passwords for applications, batch jobs and scripts to use or deploy a site-authorized facility to perform this function.

Check to see what has been stored in the Oracle External Password Store.

  To view all contents of a client wallet external password store, check specific credentials by viewing them. Listing the external password store contents provides information you can use to decide whether to add or delete credentials from the store.

To list the contents of the external password store, enter the following command at the command line:

  $ mkstore -wrl wallet_location -listCredential

  For example:

  $ mkstore -wrl c:\oracle\product\11.2.0\db_1\wallets -listCredential

  The wallet_location specifies the path to the directory where the wallet, whose external password store contents you want to view, is located. This command lists all of the credential database service names (aliases) and the corresponding user name (schema) for that database. Passwords are not listed.

Configuring Clients to Use the External Password Store:

  If your client is already configured to use external authentication, such as Windows native authentication or Transport Layer Security (TLS), then Oracle Database uses that authentication method. The same credentials used for this type of authentication are typically also used to log in to the database.

  For clients not using such authentication methods or wanting to override them for database authentication, you can set the SQLNET.WALLET_OVERRIDE parameter in sqlnet.ora to TRUE. The default value for SQLNET.WALLET_OVERRIDE is FALSE, allowing standard use of authentication credentials as before.

  If you want a client to use the secure external password store feature, then perform the following configuration task:

    1. Create a wallet on the client by using the following syntax at the command line:

 mkstore -wrl wallet_location -create

    For example:

    mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -create
    Enter password: password

    The wallet_location is the path to the directory where you want to create and store the wallet. This command creates an Oracle wallet with the autologin feature enabled at the location you specify. The autologin feature enables the client to access the wallet contents without supplying a password.

 The mkstore utility -create option uses password complexity verification.

 2. Create database connection credentials in the wallet by using the following syntax at the command line:

    mkstore -wrl wallet_location -createCredential db_connect_string username
    Enter password: password

    For example:

    mkstore -wrl c:\oracle\product\11.2.0\db_1\wallets -createCredential oracle system
    Enter password: password

    In this specification:

    The wallet_location is the path to the directory where you created the wallet.  The db_connect_string used in the CONNECT /@db_connect_string statement must be identical to the db_connect_string specified in the -createCredential command.

 The db_connect_string is the TNS alias you use to specify the database in the tnsnames.ora file or any service name you use to identify the database on an Oracle network. By default, tnsnames.ora is located in the $ORACLE_HOME/network/admin directory on UNIX systems and in ORACLE_HOME\network\admin on Windows.

 The username is the database logon credential. When prompted, enter the password for this user.

 3. In the client sqlnet.ora file, enter the WALLET_LOCATION parameter and set it to the directory location of the wallet you created in Step 1.  For example, if you created the wallet in
       $ORACLE_HOME/network/admin and your Oracle home is set to /private/ora11, then you need to enter the following into your client sqlnet.ora file:

    WALLET_LOCATION =
           (SOURCE =
             (METHOD = FILE)
             (METHOD_DATA =
           (DIRECTORY = /private/ora11/network/admin)
           )
          )

 4. In the client sqlnet.ora file, enter the SQLNET.WALLET_OVERRIDE parameter and set it to TRUE as follows:

       SQLNET.WALLET_OVERRIDE = TRUE

       This setting causes all CONNECT /@db_connect_string statements to use the information in the wallet at the specified location to authenticate to databases.

       When external authentication is in use, an authenticated user with such a wallet can use the CONNECT /@db_connect_string syntax to access the previously specified databases without providing a user name and password. However, if a user fails that external authentication, then these connect statements also fail.

    Below is a sample sqlnet.ora file with the WALLET_LOCATION and the SQLNET.WALLET_OVERRIDE parameters set as described in Steps 3 and 4.

        Below is a sample SQLNET.ORA File with Wallet Parameters set:

        WALLET_LOCATION =
            (SOURCE =
              (METHOD = FILE)
              (METHOD_DATA =
            (DIRECTORY = /private/ora12/network/admin)
              )
             )

        SQLNET.WALLET_OVERRIDE = TRUE
        SSL_CLIENT_AUTHENTICATION = FALSE
        SSL_VERSION =1.2

(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)"
  reference   : "CAT|I,CCI|CCI-000366,Rule-ID|SV-66613r4_rule,STIG-ID|O112-N1-015602,Vuln-ID|V-52397"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
</report>

<report type:"WARNING">
  description : "O112-C2-004400 - OS accounts utilized to run external procedures called by the DBMS must have limited privileges."
  info        : "This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role Based Access Control (RBAC) is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

To limit exposure when operating from within a privileged account or role, the application must support organizational requirements that users of information system accounts, or roles, with access to organization-defined lists of security functions or security-relevant information, use non-privileged accounts, or roles, when accessing other (non-security) system functions.

Use of privileged accounts for non-administrative purposes puts data at risk of unintended or unauthorized loss, modification, or exposure. In particular, DBA accounts if used for non-administration application development or application maintenance can lead to miss-assignment of privileges where privileges are inherited by object owners. It may also lead to loss or compromise of application data where the elevated privileges bypass controls designed in and provided by applications.

External applications called or spawned by the DBMS process may be executed under OS accounts with unnecessary privileges. This can lead to unauthorized access to OS resources and compromise of the OS, the DBMS or any other services provided by the host platform.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Limit privileges to DBMS-related OS accounts to those required to perform their DBMS specific functionality."
  reference   : "CAT|II,CCI|CCI-000040,Rule-ID|SV-66615r2_rule,STIG-ID|O112-C2-004400,Vuln-ID|V-52399"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
</report>

<custom_item>
  type        : FILE_CHECK
  description : "O112-BP-022200 - The Oracle password file ownership and permissions should be limited and the REMOTE_LOGIN_PASSWORDFILE parameter must be set to EXCLUSIVE or NONE."
  info        : "It is critically important to the security of your system that you protect your password file and the environment variables that identify the location of the password file. Any user with access to these could potentially compromise the security of the connection.
The REMOTE_LOGIN_PASSWORDFILE setting of 'NONE' disallows remote administration of the database. The REMOTE_LOGIN_PASSWORDFILE setting of 'EXCLUSIVE' allows for auditing of individual DBA logins to the SYS account. If not set to 'EXCLUSIVE,' remote connections to the database as 'internal' or 'as SYSDBA' are not logged to an individual account."
  solution    : "Disable use of the remote_login_passwordfile where remote administration is not authorized by specifying a value of NONE.

If authorized, restrict use of a password file to exclusive use by each database by specifying a value of EXCLUSIVE.

From SQL*Plus:

alter system set remote_login_passwordfile = 'EXCLUSIVE' scope = spfile;

OR

alter system set remote_login_passwordfile = 'NONE' scope = spfile;

The above SQL*Plus command will set the parameter to take effect at next system startup.

Restrict ownership and permissions on the Oracle password file to exclude world (Unix) or everyone (Windows).

More information regarding the ORAPWD file and the REMOTE_LOGIN_PASSWORDFILE parameter, can be found here:
https://docs.oracle.com/cd/E11882_01/server.112/e25494/dba.htm#ADMIN10241"
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|CM-6,NESA|T3.2.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM3,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-68221r4_rule,STIG-ID|O112-BP-022200,SWIFT-CSCv1|2.3,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-53981"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/dbs/orapw*"
  mask        : "640"
</custom_item>

<custom_item>
  type        : CMD_EXEC
  description : "O112-BP-022700 - The Oracle Listener must be configured to require administration authentication."
  info        : "Oracle listener authentication helps prevent unauthorized administration of the Oracle listener. Unauthorized administration of the listener could lead to DoS exploits; loss of connection audit data, unauthorized reconfiguration or other unauthorized access. This is a Category I finding because privileged access to the listener is not restricted to authorized users. Unauthorized access can result in stopping of the listener (DoS) and overwriting of listener audit logs."
  solution    : "Configure the listener to use Local OS Authentication. This setting prevents remote administration of the listener, restricts management to the Oracle listener owner account (UNIX) and accounts with administrator privileges (WIN).

Remote administration of the listener should not be permitted. If listener administration from a remote system is required, granting secure remote access to the Oracle DBMS server and performing local administration is preferred. Authorize and document this requirement in the System Security Plan."
  reference   : "800-171|3.1.5,800-53|AC-6(1),CAT|I,CCI|CCI-000366,CSF|PR.AC-4,ISO/IEC-27001|A.9.4.4,ITSG-33|AC-6(1),NESA|T5.1.1,NESA|T5.4.4,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|VL3b,Rule-ID|SV-68231r2_rule,STIG-ID|O112-BP-022700,SWIFT-CSCv1|5.1,Vuln-ID|V-53991"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @LISTENER_LIST@ replaced with "lsnr1 lsnr2 lsnr3" in field "cmd".
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "cmd".
  cmd         : "for LISTENER in lsnr1 lsnr2 lsnr3; do /u01/app/oracle/product/11.2.0/dbhome_1/bin/lsnrctl status $LISTENER; done | /bin/egrep '^Security' | /bin/egrep -v 'ON: Local OS Authentication1' | /bin/awk '{print} END {if (NR == 0) print \"none\"}'"
  expect      : "^none$"
</custom_item>

<custom_item>
  type        : CMD_EXEC
  description : "O112-BP-025300 - The DBMS must not share a host supporting an independent security service."
  info        : "The Security Support Structure is a security control function or service provided by an external system or application. An example of this would be a Windows domain controller that provides identification and authentication that can be used by other systems to control access. The associated risk of a DBMS installed on a system that provides security support is significantly higher than when installed on separate systems. In cases where the DBMS is dedicated to local support of a security support function (e.g. a directory service), separation may not be possible.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Either move the DBMS installation to a dedicated host system or move the directory or security services to another host system.

A dedicated host system in this case refers to an instance of the operating system at a minimum.

The operating system may reside on a virtual host machine where supported by the DBMS vendor."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-68281r1_rule,STIG-ID|O112-BP-025300,SWIFT-CSCv1|2.3,Vuln-ID|V-54041"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
  cmd         : "/bin/ps -ef | /bin/grep -v '/usr/bin/awk' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'"
  expect      : "^none$"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK
  description : "O112-BP-025400 - Access to DBMS software files and directories must not be granted to unauthorized users - '/etc/profile umask < 022'"
  info        : "The DBMS software libraries contain the executables used by the DBMS to operate. Unauthorized access to the libraries can result in malicious alteration or planting of operational executables. This may in turn jeopardize data stored in the DBMS and/or operation of the host system."
  solution    : "For UNIX Systems:

Set the umask of the Oracle software owner account to 022. Determine the shell being used for the Oracle software owner account:

env | grep -i shell

Startup files for each shell are as follows (located in users $HOME directory):

C-Shell (CSH) = .cshrc
Bourne Shell (SH) = .profile
Korn Shell (KSH) = .kshrc
TC Shell (TCS) = .tcshrc
BASH Shell = .bash_profile or .bashrc

Edit the shell startup file for the account and add or modify the line:

umask 022

Log off and login, then enter the umask command to confirm the setting.

NOTE: To effect this change for all Oracle processes, a reboot of the DBMS server may be required.

For Windows Systems:
Product-specific fix is pending development. Use Generic Fix listed below:

Restrict access to the DBMS software libraries to the fewest accounts that clearly require access based on job function.

Document authorized access control and justify any access grants that do not fall under DBA, DBMS process, ownership, or SA accounts."
  reference   : "800-171|3.1.1,800-53|AC-3(4),CAT|II,CCI|CCI-000366,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(4),Rule-ID|SV-68283r1_rule,STIG-ID|O112-BP-025400,Vuln-ID|V-54043"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
  file        : "/etc/profile"
  regex       : "^[\\s\\t]*umask"
  expect      : "^[\\s\\t]*umask 0(0|2)(0|2)"
</custom_item>

<custom_item>
  type        : CMD_EXEC
  description : "O112-BP-025400 - Access to DBMS software files and directories must not be granted to unauthorized users - 'umask < 0022'"
  info        : "The DBMS software libraries contain the executables used by the DBMS to operate. Unauthorized access to the libraries can result in malicious alteration or planting of operational executables. This may in turn jeopardize data stored in the DBMS and/or operation of the host system."
  solution    : "For UNIX Systems:

Set the umask of the Oracle software owner account to 022. Determine the shell being used for the Oracle software owner account:

env | grep -i shell

Startup files for each shell are as follows (located in users $HOME directory):

C-Shell (CSH) = .cshrc
Bourne Shell (SH) = .profile
Korn Shell (KSH) = .kshrc
TC Shell (TCS) = .tcshrc
BASH Shell = .bash_profile or .bashrc

Edit the shell startup file for the account and add or modify the line:

umask 022

Log off and login, then enter the umask command to confirm the setting.

NOTE: To effect this change for all Oracle processes, a reboot of the DBMS server may be required.

For Windows Systems:
Product-specific fix is pending development. Use Generic Fix listed below:

Restrict access to the DBMS software libraries to the fewest accounts that clearly require access based on job function.

Document authorized access control and justify any access grants that do not fall under DBA, DBMS process, ownership, or SA accounts."
  reference   : "800-171|3.1.1,800-53|AC-3(4),CAT|II,CCI|CCI-000366,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(4),Rule-ID|SV-68283r1_rule,STIG-ID|O112-BP-025400,Vuln-ID|V-54043"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
  cmd         : "umask"
  expect      : "^00(0|2)(0|2)"
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-BP-025600 - Network access to the DBMS must be restricted to authorized personnel - TCP.VALIDNODE_CHECKING"
  info            : "Restricting remote access to specific, trusted systems helps prevent access by unauthorized and potentially malicious users."
  solution        : "Configure the database listener to restrict access by IP address or set up an external device to restrict network access to the DBMS."
  reference       : "800-171|3.13.1,800-171|3.13.6,800-53|SC-5,800-53|SC-7(5),CAT|II,CCI|CCI-000366,CN-L3|7.1.2.2(c),CSF|DE.CM-1,CSF|PR.DS-4,CSF|PR.PT-4,ITSG-33|SC-5,ITSG-33|SC-7(5),NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS7b,NIAv2|GS8e,NIAv2|NS25,Rule-ID|SV-68287r2_rule,STIG-ID|O112-BP-025600,Vuln-ID|V-54047"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*TCP\\.VALIDNODE_CHECKING[\\s]*="
  expect          : "^[\\s]*TCP\\.VALIDNODE_CHECKING[\\s]*=[\\s]*[Yy][Ee][Ss]"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-BP-025600 - Network access to the DBMS must be restricted to authorized personnel - TCP.INVITED_NODES"
  info            : "Restricting remote access to specific, trusted systems helps prevent access by unauthorized and potentially malicious users."
  solution        : "Configure the database listener to restrict access by IP address or set up an external device to restrict network access to the DBMS."
  reference       : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(j),CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,Rule-ID|SV-68287r2_rule,STIG-ID|O112-BP-025600,TBA-FIISB|43.1,Vuln-ID|V-54047"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*TCP\\.INVITED_NODES[\\s]*="
  expect          : "^[\\s]*TCP\\.INVITED_NODES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type        : FILE_CHECK
  description : "O112-BP-026400 - The /diag subdirectory under the directory assigned to the DIAGNOSTIC_DEST parameter must be protected from unauthorized access - Permissions"
  info        : "<DIAGNOSTIC_DEST>/diag indicates the directory where trace, alert, core and incident directories and files are located. The files may contain sensitive data or information that could prove useful to potential attackers."
  solution    : "Alter host system permissions to the <DIAGNOSTIC_DEST>/diag directory to the Oracle process and software owner accounts, DBAs, SAs (if required) and developers or other users that may specifically require access for debugging or other purposes.

Authorize and document user access requirements to the directory outside of the Oracle, DBA and SA account list."
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-68313r2_rule,STIG-ID|O112-BP-026400,SWIFT-CSCv1|2.3,Vuln-ID|V-54073"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @DIAGONOSTICFILE@ replaced with "/u01/app/oracle/diag" in field "file".
  file        : "/u01/app/oracle/diag"
  mask        : "137"
  required    : NO
</custom_item>

<custom_item>
  type        : FILE_CHECK
  description : "O112-BP-026400 - The /diag subdirectory under the directory assigned to the DIAGNOSTIC_DEST parameter must be protected from unauthorized access - Ownership"
  info        : "<DIAGNOSTIC_DEST>/diag indicates the directory where trace, alert, core and incident directories and files are located. The files may contain sensitive data or information that could prove useful to potential attackers."
  solution    : "Alter host system permissions to the <DIAGNOSTIC_DEST>/diag directory to the Oracle process and software owner accounts, DBAs, SAs (if required) and developers or other users that may specifically require access for debugging or other purposes.

Authorize and document user access requirements to the directory outside of the Oracle, DBA and SA account list."
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-68313r2_rule,STIG-ID|O112-BP-026400,SWIFT-CSCv1|2.3,Vuln-ID|V-54073"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @DIAGONOSTICFILE@ replaced with "/u01/app/oracle/diag" in field "file".
  file        : "/u01/app/oracle/diag"
  owner       : "oracle"
  group       : "dba"
</custom_item>

<if>
  <condition type:"AND">
    <custom_item>
      type        : FILE_CHECK
      description : "Check cman.ora exists in default location"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
      file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/cman.ora"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type            : FILE_CONTENT_CHECK
      description     : "O112-BP-026500 - Remote administration must be disabled for the Oracle connection manager."
      info            : "Remote administration provides a potential opportunity for malicious users to make unauthorized changes to the Connection Manager configuration or interrupt its service."
      solution        : "View the cman.ora file in the ORACLE_HOME/network/admin directory of the Connection Manager.

Include the following line in the file:

REMOTE_ADMIN = NO"
      reference       : "800-171|3.1.1,800-171|3.1.2,800-53|AC-17,800-53|AC-3,CAT|II,CCI|CCI-000366,CIP|005-5-R2,CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(i),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.1.4.4(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-3,CSF|PR.AC-4,CSF|PR.PT-3,CSF|PR.PT-4,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-17,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,Rule-ID|SV-68315r1_rule,STIG-ID|O112-BP-026500,SWIFT-CSCv1|2.6,TBA-FIISB|31.1,Vuln-ID|V-54075"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
      file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/cman.ora"
      regex           : "^[\\s]*\\(REMOTE_ADMIN[\\s]*="
      expect          : "^[\\s]*\\(REMOTE_ADMIN[\\s]*=[\\s]*[Nn][Oo]"
      string_required : NO
    </custom_item>
  </then>

  <else>
    <custom_item>
      type        : FILE_CHECK
      description : "O112-BP-026500 - Remote administration must be disabled for the Oracle connection manager."
      info        : "Remote administration provides a potential opportunity for malicious users to make unauthorized changes to the Connection Manager configuration or interrupt its service."
      solution    : "View the cman.ora file in the ORACLE_HOME/network/admin directory of the Connection Manager.

Include the following line in the file:

REMOTE_ADMIN = NO"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-68315r1_rule,STIG-ID|O112-BP-026500,SWIFT-CSCv1|2.3,Vuln-ID|V-54075"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
      file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/cman.ora"
    </custom_item>
  </else>
</if>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-BP-026600 - The SQLNet SQLNET.ALLOWED_LOGON_VERSION parameter must be set to a value of 12 or higher."
  info            : "Unsupported Oracle network client installations may introduce vulnerabilities to the database. Restriction to use of supported versions helps to protect the database and helps to enforce newer, more robust security controls."
  solution        : ": Deploy Oracle 11.2.0.4 with the January 2014 CPU patch.

Edit the SQLNET.ORA file to add or edit the entry:

SQLNET.ALLOWED_LOGON_VERSION = 12

Set the value to 12 or higher.

For more information on sqlnet.ora parameters refer to the following document:
'Database Net Services Reference'
https://docs.oracle.com/cd/E11882_01/network.112/e10835/sqlnet.htm#NETRF006"
  reference       : "800-171|3.14.1,800-171|3.4.8,800-53|CM-7(5),800-53|SI-2,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.4.4(e),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv6|2.2,CSF|ID.RA-1,CSF|PR.IP-1,CSF|PR.IP-12,CSF|PR.PT-3,HIPAA|164.308(a)(5)(ii)(A),ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,Rule-ID|SV-68317r4_rule,STIG-ID|O112-BP-026600,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3,Vuln-ID|V-54077"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET\\.ALLOWED_LOGON_VERSION[\\s]*="
  expect          : "^[\\s]*SQLNET\\.ALLOWED_LOGON_VERSION[\\s]*=[\\s]*1[2-9]"
  string_required : YES
</custom_item>

<custom_item>
  type        : CMD_EXEC
  description : "O112-BP-025101 - The directory assigned to the AUDIT_FILE_DEST parameter must be protected from unauthorized access and must be stored in a dedicated directory or disk partition separate from software or other application files - 'AUDIT_FILE_DEST not in ORACLEHOME'"
  info        : "The AUDIT_FILE_DEST parameter specifies the directory where the database audit trail file is stored (when AUDIT_TRAIL parameter is set to 'OS', 'xml' or 'xml, extended' where supported by the DBMS). Unauthorized access or loss of integrity of the audit trail could result in loss of accountability or the ability to detect suspicious
activity. This directory also contains the audit trail of the SYS and SYSTEM accounts that captures privileged database events when the database is not running (when AUDIT_SYS_OPERATIONS parameter is set to TRUE)."
  solution    : "Alter host system permissions to the AUDIT_FILE_DEST directory to the Oracle process and software owner accounts, DBAs, backup accounts, SAs (if required), and auditors.

Authorize and document user access requirements to the directory outside of the Oracle, DBA, and SA account list in the System Security Plan."
  reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),CAT|II,CCI|CCI-000366,CN-L3|8.1.4.3(d),CSF|PR.PT-1,ITSG-33|AU-9(4),NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,Rule-ID|SV-72025r3_rule,STIG-ID|O112-BP-025101,SWIFT-CSCv1|5.1,Vuln-ID|V-57615"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @AUDIT_FILE_DEST@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1/log" in field "cmd".
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "cmd".
  cmd         : "/bin/echo '/u01/app/oracle/product/11.2.0/dbhome_1/log' | /bin/grep '/u01/app/oracle/product/11.2.0/dbhome_1' | /bin/awk '{print} END {if (NR == 0) print \"none\"}'"
  expect      : "^none$"
</custom_item>

<custom_item>
  type        : FILE_CHECK
  description : "O112-BP-025101 - The directory assigned to the AUDIT_FILE_DEST parameter must be protected from unauthorized access and must be stored in a dedicated directory or disk partition separate from software or other application files - 'AUDIT_FILE_DEST Permissions'"
  info        : "The AUDIT_FILE_DEST parameter specifies the directory where the database audit trail file is stored (when AUDIT_TRAIL parameter is set to 'OS', 'xml' or 'xml, extended' where supported by the DBMS). Unauthorized access or loss of integrity of the audit trail could result in loss of accountability or the ability to detect suspicious
activity. This directory also contains the audit trail of the SYS and SYSTEM accounts that captures privileged database events when the database is not running (when AUDIT_SYS_OPERATIONS parameter is set to TRUE)."
  solution    : "Alter host system permissions to the AUDIT_FILE_DEST directory to the Oracle process and software owner accounts, DBAs, backup accounts, SAs (if required), and auditors.

Authorize and document user access requirements to the directory outside of the Oracle, DBA, and SA account list in the System Security Plan."
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-72025r3_rule,STIG-ID|O112-BP-025101,SWIFT-CSCv1|2.3,Vuln-ID|V-57615"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @AUDIT_FILE_DEST@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1/log" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/log"
  mask        : "137"
</custom_item>

<custom_item>
  type        : FILE_CHECK_NOT
  description : "O112-C2-011810 - Access to external executables must be disabled or restricted - 'extproc does not exist'"
  info        : "The Oracle external procedure capability provides use of the Oracle process account outside the operation of the DBMS process. You can use it to submit and execute applications stored externally from the database under operating system controls. The external procedure process is the subject of frequent and successful attacks as it allows unauthenticated use of the Oracle process account on the operating system. As of Oracle version 11.1, the external procedure agent may be run directly from the database and not require use of the Oracle listener. This reduces the risk of unauthorized access to the procedure from outside of the database process."
  solution    : "If the use of external procedure agent is required, then authorize and document the requirement in the System Security Plan.

If the external procedure agent must be accessible to the Oracle listener, then specify this and authorize it in the System Security Plan.

If use of the Oracle External Procedure agent is not required:

- Stop the Oracle Listener process
- Remove all references to extproc in the listener.ora and tnsnames.ora files
- Alter the permissions on the executable files:

UNIX - Remove read/write/execute permissions from owner, group and world
Windows - Remove Groups/Users from the executable (except groups SYSTEM and ADMINISTRATORS) and allow READ [only] for SYSTEM and ADMINISTRATORS groups

If required:

- Restrict extproc execution to only authorized applications.
- Specify EXTPROC_DLLS=ONLY: [list of authorized DLLS] in the extproc.ora and the listener.ora files
- Create a separate, dedicated listener for use by the external procedure agent

Please see the Oracle Net Services Administrators Guides, External Procedures section for detailed configuration information."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-74571r2_rule,STIG-ID|O112-C2-011810,SWIFT-CSCv1|2.3,Vuln-ID|V-60141"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/bin/extproc"
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-011810 - Access to external executables must be disabled or restricted - 'run_user=nobody'"
  info            : "The Oracle external procedure capability provides use of the Oracle process account outside the operation of the DBMS process. You can use it to submit and execute applications stored externally from the database under operating system controls. The external procedure process is the subject of frequent and successful attacks as it allows unauthenticated use of the Oracle process account on the operating system. As of Oracle version 11.1, the external procedure agent may be run directly from the database and not require use of the Oracle listener. This reduces the risk of unauthorized access to the procedure from outside of the database process."
  solution        : "If the use of external procedure agent is required, then authorize and document the requirement in the System Security Plan.

If the external procedure agent must be accessible to the Oracle listener, then specify this and authorize it in the System Security Plan.

If use of the Oracle External Procedure agent is not required:

- Stop the Oracle Listener process
- Remove all references to extproc in the listener.ora and tnsnames.ora files
- Alter the permissions on the executable files:

UNIX - Remove read/write/execute permissions from owner, group and world
Windows - Remove Groups/Users from the executable (except groups SYSTEM and ADMINISTRATORS) and allow READ [only] for SYSTEM and ADMINISTRATORS groups

If required:

- Restrict extproc execution to only authorized applications.
- Specify EXTPROC_DLLS=ONLY: [list of authorized DLLS] in the extproc.ora and the listener.ora files
- Create a separate, dedicated listener for use by the external procedure agent

Please see the Oracle Net Services Administrators Guides, External Procedures section for detailed configuration information."
  reference       : "800-171|3.4.7,800-53|CM-7(2),CAT|II,CCI|CCI-000381,CSCv6|8.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7(2),Rule-ID|SV-74571r2_rule,STIG-ID|O112-C2-011810,SWIFT-CSCv1|2.3,Vuln-ID|V-60141"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/rdbms/admin/externaljob.ora"
  regex           : "run_user[\\s]*="
  expect          : "run_user[\\s]*=[\\s]*nobody"
  string_required : NO
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-011810 - Access to external executables must be disabled or restricted - 'run_group=nobody'"
  info            : "The Oracle external procedure capability provides use of the Oracle process account outside the operation of the DBMS process. You can use it to submit and execute applications stored externally from the database under operating system controls. The external procedure process is the subject of frequent and successful attacks as it allows unauthenticated use of the Oracle process account on the operating system. As of Oracle version 11.1, the external procedure agent may be run directly from the database and not require use of the Oracle listener. This reduces the risk of unauthorized access to the procedure from outside of the database process."
  solution        : "If the use of external procedure agent is required, then authorize and document the requirement in the System Security Plan.

If the external procedure agent must be accessible to the Oracle listener, then specify this and authorize it in the System Security Plan.

If use of the Oracle External Procedure agent is not required:

- Stop the Oracle Listener process
- Remove all references to extproc in the listener.ora and tnsnames.ora files
- Alter the permissions on the executable files:

UNIX - Remove read/write/execute permissions from owner, group and world
Windows - Remove Groups/Users from the executable (except groups SYSTEM and ADMINISTRATORS) and allow READ [only] for SYSTEM and ADMINISTRATORS groups

If required:

- Restrict extproc execution to only authorized applications.
- Specify EXTPROC_DLLS=ONLY: [list of authorized DLLS] in the extproc.ora and the listener.ora files
- Create a separate, dedicated listener for use by the external procedure agent

Please see the Oracle Net Services Administrators Guides, External Procedures section for detailed configuration information."
  reference       : "800-171|3.4.7,800-53|CM-7(2),CAT|II,CCI|CCI-000381,CSCv6|8.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7(2),Rule-ID|SV-74571r2_rule,STIG-ID|O112-C2-011810,SWIFT-CSCv1|2.3,Vuln-ID|V-60141"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/rdbms/admin/externaljob.ora"
  regex           : "run_group[\\s]*="
  expect          : "run_group[\\s]*=[\\s]*nobody"
  string_required : NO
</custom_item>

<custom_item>
  type        : FILE_CHECK
  description : "O112-C2-011810 - Access to external executables must be disabled or restricted - 'ORACLE_HOME/hs/admin/extproc.ora exists'"
  info        : "The Oracle external procedure capability provides use of the Oracle process account outside the operation of the DBMS process. You can use it to submit and execute applications stored externally from the database under operating system controls. The external procedure process is the subject of frequent and successful attacks as it allows unauthenticated use of the Oracle process account on the operating system. As of Oracle version 11.1, the external procedure agent may be run directly from the database and not require use of the Oracle listener. This reduces the risk of unauthorized access to the procedure from outside of the database process."
  solution    : "If the use of external procedure agent is required, then authorize and document the requirement in the System Security Plan.

If the external procedure agent must be accessible to the Oracle listener, then specify this and authorize it in the System Security Plan.

If use of the Oracle External Procedure agent is not required:

- Stop the Oracle Listener process
- Remove all references to extproc in the listener.ora and tnsnames.ora files
- Alter the permissions on the executable files:

UNIX - Remove read/write/execute permissions from owner, group and world
Windows - Remove Groups/Users from the executable (except groups SYSTEM and ADMINISTRATORS) and allow READ [only] for SYSTEM and ADMINISTRATORS groups

If required:

- Restrict extproc execution to only authorized applications.
- Specify EXTPROC_DLLS=ONLY: [list of authorized DLLS] in the extproc.ora and the listener.ora files
- Create a separate, dedicated listener for use by the external procedure agent

Please see the Oracle Net Services Administrators Guides, External Procedures section for detailed configuration information."
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000381,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-74571r2_rule,STIG-ID|O112-C2-011810,SWIFT-CSCv1|2.3,Vuln-ID|V-60141"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/hs/admin/extproc.ora"
  required    : YES
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK_NOT
  description : "O112-C2-011810 - Access to external executables must be disabled or restricted - 'extproc.ora EXTPROC_DLLS=ANY does not exist'"
  info        : "The Oracle external procedure capability provides use of the Oracle process account outside the operation of the DBMS process. You can use it to submit and execute applications stored externally from the database under operating system controls. The external procedure process is the subject of frequent and successful attacks as it allows unauthenticated use of the Oracle process account on the operating system. As of Oracle version 11.1, the external procedure agent may be run directly from the database and not require use of the Oracle listener. This reduces the risk of unauthorized access to the procedure from outside of the database process."
  solution    : "If the use of external procedure agent is required, then authorize and document the requirement in the System Security Plan.

If the external procedure agent must be accessible to the Oracle listener, then specify this and authorize it in the System Security Plan.

If use of the Oracle External Procedure agent is not required:

- Stop the Oracle Listener process
- Remove all references to extproc in the listener.ora and tnsnames.ora files
- Alter the permissions on the executable files:

UNIX - Remove read/write/execute permissions from owner, group and world
Windows - Remove Groups/Users from the executable (except groups SYSTEM and ADMINISTRATORS) and allow READ [only] for SYSTEM and ADMINISTRATORS groups

If required:

- Restrict extproc execution to only authorized applications.
- Specify EXTPROC_DLLS=ONLY: [list of authorized DLLS] in the extproc.ora and the listener.ora files
- Create a separate, dedicated listener for use by the external procedure agent

Please see the Oracle Net Services Administrators Guides, External Procedures section for detailed configuration information."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-74571r2_rule,STIG-ID|O112-C2-011810,SWIFT-CSCv1|2.3,Vuln-ID|V-60141"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/hs/admin/extproc.ora"
  regex       : "SET EXTPROC_DLLS="
  expect      : "SET EXTPROC_DLLS=ANY"
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK_NOT
  description : "O112-C2-011810 - Access to external executables must be disabled or restricted - 'listener.ora EXTPROC is not in use'"
  info        : "The Oracle external procedure capability provides use of the Oracle process account outside the operation of the DBMS process. You can use it to submit and execute applications stored externally from the database under operating system controls. The external procedure process is the subject of frequent and successful attacks as it allows unauthenticated use of the Oracle process account on the operating system. As of Oracle version 11.1, the external procedure agent may be run directly from the database and not require use of the Oracle listener. This reduces the risk of unauthorized access to the procedure from outside of the database process."
  solution    : "If the use of external procedure agent is required, then authorize and document the requirement in the System Security Plan.

If the external procedure agent must be accessible to the Oracle listener, then specify this and authorize it in the System Security Plan.

If use of the Oracle External Procedure agent is not required:

- Stop the Oracle Listener process
- Remove all references to extproc in the listener.ora and tnsnames.ora files
- Alter the permissions on the executable files:

UNIX - Remove read/write/execute permissions from owner, group and world
Windows - Remove Groups/Users from the executable (except groups SYSTEM and ADMINISTRATORS) and allow READ [only] for SYSTEM and ADMINISTRATORS groups

If required:

- Restrict extproc execution to only authorized applications.
- Specify EXTPROC_DLLS=ONLY: [list of authorized DLLS] in the extproc.ora and the listener.ora files
- Create a separate, dedicated listener for use by the external procedure agent

Please see the Oracle Net Services Administrators Guides, External Procedures section for detailed configuration information."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-74571r2_rule,STIG-ID|O112-C2-011810,SWIFT-CSCv1|2.3,Vuln-ID|V-60141"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora"
  regex       : "\\(KEY[\\s]*="
  expect      : "\\(KEY[\\s[\\s*][Ee][Xx][Tt][Pp][Rr][Oo][Cc]"
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK_NOT
  description : "O112-C2-011810 - Access to external executables must be disabled or restricted - 'listener.ora EXTPROC_DLLS=ANY does not exist'"
  info        : "The Oracle external procedure capability provides use of the Oracle process account outside the operation of the DBMS process. You can use it to submit and execute applications stored externally from the database under operating system controls. The external procedure process is the subject of frequent and successful attacks as it allows unauthenticated use of the Oracle process account on the operating system. As of Oracle version 11.1, the external procedure agent may be run directly from the database and not require use of the Oracle listener. This reduces the risk of unauthorized access to the procedure from outside of the database process."
  solution    : "If the use of external procedure agent is required, then authorize and document the requirement in the System Security Plan.

If the external procedure agent must be accessible to the Oracle listener, then specify this and authorize it in the System Security Plan.

If use of the Oracle External Procedure agent is not required:

- Stop the Oracle Listener process
- Remove all references to extproc in the listener.ora and tnsnames.ora files
- Alter the permissions on the executable files:

UNIX - Remove read/write/execute permissions from owner, group and world
Windows - Remove Groups/Users from the executable (except groups SYSTEM and ADMINISTRATORS) and allow READ [only] for SYSTEM and ADMINISTRATORS groups

If required:

- Restrict extproc execution to only authorized applications.
- Specify EXTPROC_DLLS=ONLY: [list of authorized DLLS] in the extproc.ora and the listener.ora files
- Create a separate, dedicated listener for use by the external procedure agent

Please see the Oracle Net Services Administrators Guides, External Procedures section for detailed configuration information."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,Rule-ID|SV-74571r2_rule,STIG-ID|O112-C2-011810,SWIFT-CSCv1|2.3,Vuln-ID|V-60141"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora"
  regex       : "EXTPROC_DLLS="
  expect      : "EXTPROC_DLLS=ANY"
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013100 - The DBMS must use multifactor authentication for local access to privileged accounts - SQLNET.AUTHENTICATION_SERVICES"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A privileged account is defined as an information system account with authorizations of a privileged user.

Local Access is defined as access to an organizational information system by a user (or process acting on behalf of a user) communicating through a direct connection without the use of a network.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for local users logging into privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000767,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66475r5_rule,STIG-ID|O112-C2-013100,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52259"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SQLNET.AUTHENTICATION_SERVICES[\\s]*="
  expect          : "^[\\s]*SQLNET.AUTHENTICATION_SERVICES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013100 - The DBMS must use multifactor authentication for local access to privileged accounts - SSL_VERSION"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A privileged account is defined as an information system account with authorizations of a privileged user.

Local Access is defined as access to an organizational information system by a user (or process acting on behalf of a user) communicating through a direct connection without the use of a network.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for local users logging into privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-5(2),CAT|II,CCI|CCI-000767,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-5(2),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66475r5_rule,STIG-ID|O112-C2-013100,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52259"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  expect          : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013100 - The DBMS must use multifactor authentication for local access to privileged accounts - SSL_CLIENT_AUTHENTICATION"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A privileged account is defined as an information system account with authorizations of a privileged user.

Local Access is defined as access to an organizational information system by a user (or process acting on behalf of a user) communicating through a direct connection without the use of a network.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for local users logging into privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000767,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66475r5_rule,STIG-ID|O112-C2-013100,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52259"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  expect          : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type            : FILE_CONTENT_CHECK
  description     : "O112-C2-013100 - The DBMS must use multifactor authentication for local access to privileged accounts - SSL_CIPHER_SUITES"
  info            : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A privileged account is defined as an information system account with authorizations of a privileged user.

Local Access is defined as access to an organizational information system by a user (or process acting on behalf of a user) communicating through a direct connection without the use of a network.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution        : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for local users logging into privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of Smart Cards (CAC/PIV)."
  reference       : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000767,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-66475r5_rule,STIG-ID|O112-C2-013100,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-52259"
  see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file            : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex           : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  expect          : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  string_required : YES
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK
  description : "O112-C2-013200 - The DBMS must use multifactor authentication for local access to non-privileged accounts - SSL_CIPHER_SUITES"
  info        : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A non-privileged account is defined as an information system account with authorizations of a regular or non-privileged user.

Local Access is defined as access to an organizational information system by a user (or process acting on behalf of a user) communicating through a direct connection without the use of a network.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution    : "Configure DBMS, OS, and/or enterprise-level authentication/access mechanism to require multifactor authentication for local users logging in to non-privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of smart cards (CAC/PIV)."
  reference   : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000768,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-89705r3_rule,STIG-ID|O112-C2-013200,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-75031"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex       : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
  expect      : "^[\\s]*SSL_CIPHER_SUITES[\\s]*="
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK
  description : "O112-C2-013200 - The DBMS must use multifactor authentication for local access to non-privileged accounts - SSL_VERSION"
  info        : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A non-privileged account is defined as an information system account with authorizations of a regular or non-privileged user.

Local Access is defined as access to an organizational information system by a user (or process acting on behalf of a user) communicating through a direct connection without the use of a network.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution    : "Configure DBMS, OS, and/or enterprise-level authentication/access mechanism to require multifactor authentication for local users logging in to non-privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of smart cards (CAC/PIV)."
  reference   : "800-171|3.5.1,800-53|IA-5(2),CAT|II,CCI|CCI-000768,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-5(2),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-89705r3_rule,STIG-ID|O112-C2-013200,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-75031"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex       : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
  expect      : "^[\\s]*SSL_VERSION[\\s]*=[\\s]*1\.2"
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK
  description : "O112-C2-013200 - The DBMS must use multifactor authentication for local access to non-privileged accounts - SQLNET.AUTHENTICATION_SERVICES"
  info        : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A non-privileged account is defined as an information system account with authorizations of a regular or non-privileged user.

Local Access is defined as access to an organizational information system by a user (or process acting on behalf of a user) communicating through a direct connection without the use of a network.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution    : "Configure DBMS, OS, and/or enterprise-level authentication/access mechanism to require multifactor authentication for local users logging in to non-privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of smart cards (CAC/PIV)."
  reference   : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000768,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-89705r3_rule,STIG-ID|O112-C2-013200,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-75031"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex       : "^[\\s]*SQLNET\\.AUTHENTICATION_SERVICES[\\s]*="
  expect      : "^[\\s]*SQLNET\\.AUTHENTICATION_SERVICES[\\s]*="
</custom_item>

<custom_item>
  type        : FILE_CONTENT_CHECK
  description : "O112-C2-013200 - The DBMS must use multifactor authentication for local access to non-privileged accounts - SSL_CLIENT_AUTHENTICATION"
  info        : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

A non-privileged account is defined as an information system account with authorizations of a regular or non-privileged user.

Local Access is defined as access to an organizational information system by a user (or process acting on behalf of a user) communicating through a direct connection without the use of a network.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system."
  solution    : "Configure DBMS, OS, and/or enterprise-level authentication/access mechanism to require multifactor authentication for local users logging in to non-privileged accounts.

If appropriate, enable support for Transport Layer Security (TLS) protocols and multifactor authentication through the use of smart cards (CAC/PIV)."
  reference   : "800-171|3.5.1,800-53|IA-2,CAT|II,CCI|CCI-000768,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,ITSG-33|IA-2,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,Rule-ID|SV-89705r3_rule,STIG-ID|O112-C2-013200,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-75031"
  see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_11-2g_V1R18_STIG.zip"
# Note: Variable @ORACLE_HOME@ replaced with "/u01/app/oracle/product/11.2.0/dbhome_1" in field "file".
  file        : "/u01/app/oracle/product/11.2.0/dbhome_1/network/admin/sqlnet.ora"
  regex       : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
  expect      : "^[\\s]*SSL_CLIENT_AUTHENTICATION[\\s]*="
</custom_item>

</check_type>
