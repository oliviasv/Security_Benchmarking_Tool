#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.2 $
# $Date: 2020/07/14 $
#
# Description : This document implements the security configuration as recommended by the
#               CIS Google Chrome Benchmark v2.0.0
#
# Ref         : https://workbench.cisecurity.org/files/2385
#
#<ui_metadata>
#<display_name>CIS Google Chrome L2 v2.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS Google Chrome L2</name>
#  <version>2.0.0</version>
#  <link>https://workbench.cisecurity.org/files/2385</link>
#</spec>
#<labels>cis,google,chrome,windows</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7</benchmark_refs>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"Google Chrome">

<if>
  <condition type:"OR">
    <custom_item>
      type        : REG_CHECK
      description : "Check if Chrome is installed - ApplicationName"
      value_type  : POLICY_TEXT
      value_data  : "HKLM\Software\Clients\Startmenuinternet\Google Chrome\Capabilities"
      reg_option  : MUST_EXIST
      key_item    : "ApplicationName"
    </custom_item>

    <custom_item>
      type        : REG_CHECK
      description : "Check if Chrome is installed - DisplayName"
      value_type  : POLICY_TEXT
      value_data  : "HKLM\Software\Microsoft\Windows\Currentversion\Uninstall\Google Chrome"
      reg_option  : MUST_EXIST
      key_item    : "DisplayName"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Google_Chrome_L2_v2.0.0.audit from CIS Google Chrome Benchmark v2.0.0"
    </report>

    <custom_item>
      type        : REGISTRY_SETTING
      description : "2.2 Ensure 'Default notification setting' is set to 'Enabled' with 'Do not allow any site to show desktop notifications'"
      info        : "Google Chrome offers websites to display desktop notifications. These are push messages which are sent from the website operator through Google infrastructure to Chrome.
                    Rationale:
                    If the website operator decides to send messages unencrypted Google's servers may process it as plain text. Furthermore, potentially compromised or faked notifications might trick users into clicking on a malicious link."
      solution    : "To establish the recommended configuration via Group Policy, set the following UI path to Enabled with Do not allow any site to show desktop notifications selected from the drop down:
                    Computer Configuration\Administrative Templates\Google\Google Chrome\Content Settings\Default notification setting
                    Impact:
                    If this setting is enabled and set to Do not allow any site to show desktop notifications, notifications will not be displayed for any sites and the user will not be asked.
                    Default Value:
                    Enabled: AskNotifications."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|2S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2385"
      value_type  : POLICY_DWORD
      value_data  : 2
      reg_key     : "HKLM\Software\Policies\Google\Chrome"
      reg_item    : "DefaultNotificationsSetting"
      reg_option  : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type        : REGISTRY_SETTING
      description : "2.3 Ensure 'Control use of the Web Bluetooth API' is set to 'Enabled' with 'Do not allow any site to request access to Bluetooth devices via the Web Bluetooth API'"
      info        : "Google Chrome offers a API which allows the access to nearby Bluetooth devices from the browser with users consent.
                    Rationale:
                    A malicious website could exploit a vulnerable Bluetooth device."
      solution    : "To establish the recommended configuration via Group Policy, set the following UI path to Enabled with Do not allow any site to request access to Bluetooth devices via the Web Bluetooth API selected from the drop down:
                    Computer Configuration\Administrative Templates\Google\Google Chrome\Content Settings\Control use of the Web Bluetooth API
                    Impact:
                    If this setting is enabled and set to Do not allow any site to request access to Bluetooth devices via the Web Bluetooth API, websites no longer can access nearby Bluetooth device via the API and the user will never be asked.
                    Default Value:
                    Enabled: Allow sites to ask the user to grant access to a nearby Bluetooth device"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|2S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2385"
      value_type  : POLICY_DWORD
      value_data  : 2
      reg_key     : "HKLM\Software\Policies\Google\Chrome"
      reg_item    : "DefaultWebBluetoothGuardSetting"
      reg_option  : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type        : REGISTRY_SETTING
      description : "2.4 Ensure 'Control use of the WebUSB API' is set to 'Enabled' with 'Do not allow any site to request access to USB devices via the WebUSB API'"
      info        : "Google Chrome offers a API which allows the access to connected USB devices from the browser.
                    Rationale:
                    WebUSB is opening the doors for sophisticated phishing attacks that could bypass hardware-based two-factor authentication devices (e.g. Yubikey devices)."
      solution    : "To establish the recommended configuration via Group Policy, set the following UI path to Enabled with Do not allow any site to request access to USB devices via the WebUSB API selected from the drop down:
                    Computer Configuration\Administrative Templates\Google\Google Chrome\Content Settings\Control use of the WebUSB API
                    Impact:
                    If this setting is enabled and set to Do not allow any site to request access to USB devices via the WebUSB API, websites can no longer access connected USB devices via the API which could also prevent 2FA USB devices from working properly.
                    Default Value:
                    Enabled: Allow sites to ask the user to grant access to a connected USB device"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSCv7|7,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|2S,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2385"
      value_type  : POLICY_DWORD
      value_data  : 2
      reg_key     : "HKLM\Software\Policies\Google\Chrome"
      reg_item    : "DefaultWebUsbGuardSetting"
      reg_option  : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type        : REGISTRY_SETTING
      description : "2.7 Ensure 'Configure native messaging blacklist' is set to 'Enabled' ('*' for all messaging applications)"
      info        : "Allows you to specify which native messaging hosts that should not be loaded.
                    Note: This needs to be handled carefully. If an extension is enabled, yet can't communicate with its backend code, it could behave in strange ways which results in helpdesk tickets + support load.
                    Rationale:
                    For consistency with Plugin and Extension policies, native messaging should be blacklisted by default, requiring explicit administrative approval of applications for whitelisting. Examples of applications that use native messaging is the 1Password password manager."
      solution    : "To establish the recommended configuration via Group Policy, set the following UI path to Enabled with value * specified.
                    Computer Configuration\Administrative Templates\Google\Google Chrome\Native Messaging\Configure native messaging blacklist
                    Impact:
                    A blacklist value of '*' means all native messaging hosts are blacklisted unless they are explicitly listed in the whitelist.
                    Default Value:
                    If this policy is left not set Google Chrome will load all installed native messaging hosts."
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv6|7.2,CSCv7|7.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|2S,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2385"
      value_type  : POLICY_TEXT
      value_data  : "*"
      reg_key     : "HKLM\Software\Policies\Google\Chrome\NativeMessagingBlacklist"
      reg_item    : "1"
      reg_option  : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type        : REGISTRY_SETTING
      description : "2.18 Ensure 'Whether online OCSP/CRL checks are required for local trust anchors' is set to 'Enabled'"
      info        : "Google Chrome performs revocation checking for server certificates that successfully validate and are signed by locally-installed CA certificates. If Google Chrome is unable to obtain revocation status information, such certificates will be treated as revoked ('hard-fail').
                    Rationale:
                    Certificates shall always be validated."
      solution    : "To establish the recommended configuration via Group Policy, set the following UI path to Enabled:
                    Computer Configuration\Administrative Templates\Google\Google Chrome\Whether online OCSP/CRL checks are required for local trust anchors
                    Impact:
                    A revocation check will be performed for server certificates that successfully validate and are signed by locally-installed CA certificates. if the OCSP server goes down, then this will hard-fail and prevent browsing to those sites.
                    Default Value:
                    Disabled. Google Chrome will use the existing online revocation checking settings."
      reference   : "800-171|3.13.15,800-53|SC-23(5),CSCv7|7,LEVEL|2S"
      see_also    : "https://workbench.cisecurity.org/files/2385"
      value_type  : POLICY_DWORD
      value_data  : 1
      reg_key     : "HKLM\Software\Policies\Google\Chrome"
      reg_item    : "RequireOnlineRevocationChecksForLocalAnchors"
      reg_option  : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type        : REGISTRY_SETTING
      description : "2.20 Ensure 'Use built-in DNS client' is set to 'Disabled'"
      info        : "Google Chrome offers to use a built-in DNS client.
                    Rationale:
                    The built-in DNS client shall not be used to circumvent the usage of a trusted DNS server."
      solution    : "To establish the recommended configuration via Group Policy, set the following UI path to Disabled:
                    Computer Configuration\Administrative Templates\Google\Google Chrome\Use built-in DNS client
                    Impact:
                    Users will not be able to use Google DNS-over-TLS and (in future) DNS-over-HTTPS if you disable the Chrome DNS stack.
                    Default Value:
                    Enabled."
      reference   : "800-53|SC-20,CSCv7|7.7,ITSG-33|SC-20,LEVEL|2S"
      see_also    : "https://workbench.cisecurity.org/files/2385"
      value_type  : POLICY_DWORD
      value_data  : 0
      reg_key     : "HKLM\Software\Policies\Google\Chrome"
      reg_item    : "BuiltInDnsClientEnabled"
      reg_option  : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type        : REGISTRY_SETTING
      description : "3.1 Ensure 'Default cookies setting' is set to 'Enabled' (Keep cookies for the duration of the session)"
      info        : "Allows you to set whether websites are allowed to set local data. Setting local data can be either allowed for all websites or denied for all websites.
                    Rationale:
                    Permanently stored cookies may be used for malicious intent."
      solution    : "To establish the recommended configuration via Group Policy, set the following UI path to Enabled with Keep cookies for the duration of the session selected from the drop down.
                    Computer Configuration\Administrative Templates\Google\Google Chrome\Content Settings\Default cookies setting
                    Impact:
                    If this setting is enabled, cookies will be cleared when the session closes.
                    Default Value:
                    If this policy is left not set, AllowCookies will be used and the user will be able to change it."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|13,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|2S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2385"
      value_type  : POLICY_DWORD
      value_data  : 4
      reg_key     : "HKLM\Software\Policies\Google\Chrome"
      reg_item    : "DefaultCookiesSetting"
      reg_option  : CAN_NOT_BE_NULL
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Google_Chrome_L2_v2.0.0.audit from CIS Google Chrome Benchmark v2.0.0"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
    </report>
  </else>
</if>

</group_policy>
</check_type>
