#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.6 $
# $Date: 2020/04/22 $
#
#<ui_metadata>
#<display_name>TNS Oracle WebLogic Server 11 Windows Best Practices</display_name>
#<spec>
#  <type>TNS</type>
#  <name>Oracle WebLogic Server 11</name>
#  <version>1.0.0</version>
#</spec>
#<labels>windows,tenable,oracle,weblogic,weblogic_11</labels>
#<variables>
#  <variable>
#    <name>WEBLOGIC_DOMAIN_HOME</name>
#    <default>C:\Oracle\Middleware\user_projects\domains\base_domain</default>
#    <description>Domain Home Path</description>
#    <info>The full path to the domain home with no trailing slash.</info>
#  </variable>
#  <variable>
#    <name>WEBLOGIC_INSTALL_PATH</name>
#    <default>C:\Oracle\Middleware\</default>
#    <description>Weblogic Installation Path</description>
#    <info>The full path to the Weblogic installation.</info>
#  </variable>
#  <variable>
#    <name>WEBLOGIC_FILE_PERMS_USER</name>
#    <default>oracle</default>
#    <description>Weblogic File Owner Username</description>
#    <info>The OS user that has permissions for the weblogic install.</info>
#  </variable>
#  <variable>
#    <name>KEYSTORE_PATH</name>
#    <default>C:\Oracle\Middleware\user_projects\domains\base_domain\keystore</default>
#    <description>Weblogic Keystore Path</description>
#    <info>The full path to the keystore used for the domain.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"MS Windows">

<file_acl:"11_SerializedSystemINI_Path">
# Note: Variable @WEBLOGIC_FILE_PERMS_USER@ replaced with "oracle" in field "<user".
  <user:"oracle">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder only"
    acl_allow       : "full control"
  </user>

  <user:"Administrator">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder only"
    acl_allow       : "full control"
  </user>

  <user:"CREATOR OWNER">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder only"
    acl_allow       : "full control"
  </user>

  <user:"SYSTEM">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder only"
    acl_allow       : "full control"
  </user>
</file_acl>

<file_acl:"21_Weblogic_Path">
# Note: Variable @WEBLOGIC_FILE_PERMS_USER@ replaced with "oracle" in field "<user".
  <user:"oracle">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>

  <user:"Administrator">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>

  <user:"CREATOR OWNER">
    acl_inheritance : "not inherited"
    acl_apply       : "subfolders and files only"
    acl_allow       : "full control"
  </user>

  <user:"SYSTEM">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>
</file_acl>

<file_acl:"22_Weblogic_Path">
# Note: Variable @WEBLOGIC_FILE_PERMS_USER@ replaced with "oracle" in field "<user".
  <user:"oracle">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>

  <user:"Administrator">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>

  <user:"CREATOR OWNER">
    acl_inheritance : "not inherited"
    acl_apply       : "subfolders and files only"
    acl_allow       : "full control"
  </user>

  <user:"SYSTEM">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>
</file_acl>

<file_acl:"KeystoreDirectory">
  <user:"CREATOR OWNER">
    acl_inheritance : "not inherited"
    acl_apply       : "subfolders and files only"
    acl_allow       : "full control"
  </user>

  <user:"SYSTEM">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>
</file_acl>

<file_acl:"KeystoreFiles">
  <user:"CREATOR OWNER">
    acl_inheritance : "not inherited"
    acl_apply       : "subfolders and files only"
    acl_allow       : "read" | "write"
  </user>

  <user:"SYSTEM">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "read" | "write"
  </user>
</file_acl>

<file_acl:"Weblogic_Path">
# Note: Variable @WEBLOGIC_FILE_PERMS_USER@ replaced with "oracle" in field "<user".
  <user:"oracle">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>

  <user:"Administrator">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>

  <user:"CREATOR OWNER">
    acl_inheritance : "not inherited"
    acl_apply       : "subfolders and files only"
    acl_allow       : "full control"
  </user>

  <user:"SYSTEM">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder, subfolders and files"
    acl_allow       : "full control"
  </user>
</file_acl>

<if>
  <condition type:"AND">
    <custom_item>
      type        : FILE_CHECK
      description : "Check for WebLogic installation exists"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\"
      file_option : MUST_EXIST
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type        : FILE_PERMISSIONS
      description : "1.1 - SerializedSystemIni.dat Password File is not Protected"
      info        : "SerializedSystemIni.dat file contains the hashes for all the passwords in a WebLogic Server domain. It is associated with a specific WebLogic Server domain so it cannot be moved from domain to domain. If the SerializedSystemIni.dat file is destroyed or corrupted, the WebLogic Server domain would have to be configured again.

	Loss of this file would result in a denial of service. On loss of this file the Weblogic server domain would have to be configured again.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. Make a backup copy of the SerializedSystemIni.dat file and put it in a safe location.
2. Set permissions on the SerializedSystemIni.dat file such that the system administrator of a WebLogic Server deployment has write and read privileges and no other users have any privileges.
3. Go to <system_drive>\bea\wlserver_10.0\samples\domains\wl_server\security\SerializedSystemIni.dat and change the permissions."
      value_type  : FILE_ACL
      value_data  : "11_SerializedSystemINI_Path"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "file".
      file        : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\security\SerializedSystemIni.dat"
      acl_option  : CAN_NOT_BE_NULL
      reference   : "800-171|3.3.8,800-171|3.3.9,800-171|3.4.2,800-53|AC-6,800-53|AU-9,800-53|CM-6,CSCv6|3.1,CSF|PR.AC-4,CSF|PR.IP-1,CSF|PR.PT-1,ISO/IEC-27001|A.9.2.5,ITSG-33|AU-9,ITSG-33|CM-6,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.2.1,NESA|T5.1.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "1.2 - Strong Password policy should be implemented - Non-Alphanumeric Characters"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
      reference   : "800-171|3.5.7,800-53|IA-5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "pas:min-non-alphanumeric-characters"
      expect      : "([1-9]|[1-9][0-9])"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "1.2 - Strong Password policy should be implemented - Minimum Password Length"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
      reference   : "800-171|3.5.7,800-53|IA-5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "pas:min-password-length"
      expect      : "([8-9]|[1-9][0-9])"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "1.2 - Strong Password policy should be implemented - Minimum Numeric Characters"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
      reference   : "800-171|3.5.7,800-53|IA-5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "pas:min-numeric-characters"
      expect      : "([1-9]|[1-9][0-9])"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "1.2 - Strong Password policy should be implemented - Minimum Lowercase Characters"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
      reference   : "800-171|3.5.7,800-53|IA-5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "pas:min-lowercase-characters"
      expect      : "([1-9]|[1-9][0-9])"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "1.2 - Strong Password policy should be implemented - Minimum Uppercase Characters"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
      reference   : "800-171|3.5.7,800-53|IA-5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "pas:min-uppercase-characters"
      expect      : "([1-9]|[1-9][0-9])"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "1.2 - Strong Password policy should be implemented - Minimum Special Characters"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
      reference   : "800-171|3.5.7,800-53|IA-5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "pas:min-numeric-or-special-characters"
      expect      : "([1-9]|[1-9][0-9])"
    </custom_item>

    <report type:"WARNING">
      description : "1.2 - Strong Password policy should be implemented - Enforce Password History"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
    </report>

    <report type:"WARNING">
      description : "1.2 - Strong Password policy should be implemented - Maximum Password Age"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
    </report>

    <report type:"WARNING">
      description : "1.2 - Strong Password policy should be implemented - Minimum Password Age"
      info        : "Strong Password policy should be implemented to protect user access.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. Login to the Administration Console.
2. In the Change Centre, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Providers > Password Validation.
6. Select the name of the Password composition checks entry.
7. Select the Provider Specific tab.
8. Enter the suggested password settings
9. Save and confirm the change"
    </report>

    <report type:"WARNING">
      description : "1.3 - Default admin password should be changed"
      info        : "Change the Default Administrator password after the installation and follow the password recommendations in this benchmark.

	Application default passwords are widely known and typically initial targets for attacks. The risk that unauthorized access will be obtained is increased if these passwords are not changed.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. Expand Compatibility Security > Users.
2. Click the name of the system user.
3. In the Settings for system page, enter the old password.
4. Enter a new password in the New Password field.
5. Enter the new password again in the Confirm New Password field and click Save."
    </report>

    <custom_item>
      type        : FILE_PERMISSIONS
      description : "2.1 - Weak permissions on Weblogic directories"
      info        : "The BEA Home directory is a repository for common files that are used by multiple BEA products installed on the same machine. The WebLogic Server product installation directory contains all the WebLogic Server software components that you choose to install on your system, including program files. A domain directory contains the configuration files, security files, log files, J2EE applications, and other J2EE resources for a single WebLogic domain. If you install multiple domains on a WebLogic Server host computer, each domain directory must be protected.

	Improper permission on Weblogic home and domain directories may cause inadvertent/deliberate changes in configuration files. Only Weblogic administrator should have permission to access these directories."
      solution    : "No other user, other than the Weblogic administrator account should have Read, Write and execute access to the above Weblogic directories. Identify the location where Weblogic 11g is installed and the userdomains are located."
      value_type  : FILE_ACL
      value_data  : "21_Weblogic_Path"
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "file".
      file        : "C:\\Oracle\\Middleware\\"
      acl_option  : CAN_NOT_BE_NULL
      reference   : "800-171|3.3.8,800-171|3.3.9,800-171|3.4.2,800-53|AC-6,800-53|AU-9,800-53|CM-6,CSCv6|3.1,CSF|PR.AC-4,CSF|PR.IP-1,CSF|PR.PT-1,ISO/IEC-27001|A.9.2.5,ITSG-33|AU-9,ITSG-33|CM-6,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.2.1,NESA|T5.1.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1"
    </custom_item>

    <custom_item>
      type        : FILE_PERMISSIONS
      description : "2.2 - Weak permissions on Log files"
      info        : "Only root or web administrators must be able to write to log files.

	An attacker might be able to delete or alter logs and hence it would be difficult to track activities performed on the web server."
      solution    : "No other user, other than the Weblogic administrator account should have Read, Write and execute access to the Weblogic logs."
      value_type  : FILE_ACL
      value_data  : "22_Weblogic_Path"
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "file".
      file        : "C:\\Oracle\\Middleware\\\\servers\\AdminServer\\logs"
      acl_option  : CAN_NOT_BE_NULL
      reference   : "800-171|3.3.8,800-171|3.3.9,800-171|3.4.2,800-53|AC-6,800-53|AU-9,800-53|CM-6,CSCv6|3.1,CSF|PR.AC-4,CSF|PR.IP-1,CSF|PR.PT-1,ISO/IEC-27001|A.9.2.5,ITSG-33|AU-9,ITSG-33|CM-6,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.2.1,NESA|T5.1.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1"
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "2.3 - Administration Console Session Timeout is not set"
      info            : "The 'Administration Console Session Timeout' text field is used to log off users that are not active on the system. A user will be logged off of the Oracle WebLogic Server Console once the timer, as defined by the 'session-timeout' value, has expired.

	If the 'Administration Console Session Timeout' text field is not set then the Administration Console would not automatically log out, leaving an opportunity for a malicious user to gain access to the Oracle WebLogic Server."
      solution        : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Configuration > Genera, and then click Advanced at the bottom of the page.
5. In the 'Console Session Timeout' text field enter [900].
6. Click Save.
7. To activate these changes, in the Change Center of the Administration Console, click Activate Changes."
      reference       : "800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),ITSG-33|AC-12,NIAv2|NS49"
      value_type      : POLICY_TEXT
      value_data      : 900
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:admin-console/domain:session-timeout' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <report type:"WARNING">
      description : "2.4 - Limit access to production WebLogic application servers"
      info        : "Grant administrative access on WebLogic Server only to those users who require access.

	Having multiple users, especially those with high privileges, increases the risk of attack on the WebLogic Server.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "While granting the server access ensure that only a certain set of users have access to the system"
    </report>

    <report type:"WARNING">
      description : "2.5 - Unique X.509 Mapping should be present"
      info        : "X.509 specifies standard formats for certificates when the default Identity Asserter is used in WebLogic Server. The attribute value is a way of distinguishing user accounts from one another.

	If attribute values are not unique, a less privileged user could inadvertently be granted the access rights of a more trusted user with the same attribute value

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "It should be ensured that the attribute value used to map from X.509 certificates to user accounts is unique within the certificate authority's domain of users."
    </report>

    <report type:"WARNING">
      description : "2.6 - Security roles should be used to control access"
      info        : "Security roles should be used to limit user access based on certain conditions.

	A security role is an identity granted to users or groups based on specific conditions. Security roles are used by policies to determine who can access a WebLogic resource.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Firstly create a specific role if it has not been created onto the system.
To add the user to the role follow the steps specified below:
1. On Security Realms page, select the name of the realm that contains the role definition
2. On the Settings page, select the Roles and Policies tab. Then select the Roles subtab.
3. Access the role's Edit and Role page to check the role that best suits the user.
4. On the role's Edit Role page, create a role condition that adds a user to the role.
5. On the role's Edit Role page, click Save."
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.7 - Set check Roles and Policies to all Web applications and EJBs"
      info        : "Set the 'Check Roles and Policies' setting to [All Web applications and EJBs].

	Without checking all web applications and EJBs, roles and policies will not be enforced for the entire domain, leaving a malicious user opportunity to gain unauthorized access."
      solution    : "To enable 'Check Roles and Policies' follow the steps specified below:
1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Configuration > General tab.
6. Select Advanced.
7. Set the 'Check Roles and Policies' to [All Web applications and EJBs], click Save."
      reference   : "800-53|IA-9"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "sec:fully-delegate-authorization"
      expect      : "true"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "2.8 - Account lockout policy should be enabled - Lockout Enabled"
      info        : "The account lockout feature should be enabled and the related parameters should be set in accordance with corporate security standards and guidelines.

			Locking out accounts after a specified number of failed logon attempts decreases the risk that user accounts will be compromised through brute force attacks."
      solution    : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Configuration > User Lockout.
6 a) To enable account Lock out
Check the box next to the 'Lockout Enabled' attribute, click Save
6 b) To set Lockout Threshold
Set 'Lockout Threshold' to [No. of attempts]. click Save.
6 c) To enable Lockout Threshold, click Save.
Set 'Lockout Duration' to [Duration in minutes]."
      reference   : "800-171|3.1.8,800-53|AC-7,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "sec:lockout-enabled"
      expect      : "false"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.8 - Account lockout policy should be enabled - Lockout Threshold"
      info        : "The account lockout feature should be enabled and the related parameters should be set in accordance with corporate security standards and guidelines.

			Locking out accounts after a specified number of failed logon attempts decreases the risk that user accounts will be compromised through brute force attacks."
      solution    : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the active Security Realm.
5. Select Configuration > User Lockout.
6 a) To enable account Lock out
Check the box next to the 'Lockout Enabled' attribute, click Save
6 b) To set Lockout Threshold
Set 'Lockout Threshold' to [No. of attempts]. click Save.
6 c) To enable Lockout Threshold, click Save.
Set 'Lockout Duration' to [Duration in minutes]."
      reference   : "800-171|3.1.8,800-53|AC-7,CSF|PR.PT-1,ITSG-33|AC-7,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "sec:lockout-threshold"
      expect      : "3"
    </custom_item>

    <report type:"WARNING">
      description : "2.9 - Security Groups should be established"
      info        : "Ensure that only the users that require access have been added to the 'Operators', 'Deployers' or 'Monitors' security groups.

	If users are granted more privilege than necessary there are more chances for changes to the WebLogic Server configuration and the WebLogic Server could become less secure.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "To add users to one or more groups:
1. On the Summary of Security Realms page select the name of the realm (for example, myrealm).
2. On the Settings for Realm Name page select Users and Groups > Users.
3. In the Users table select the user you want to add to a group.
4. On the Settings for User Name page select Groups.
5. Select a group or groups from the Available list box:
- To locate a group in a large list, type the first few characters of the name.
- To select multiple groups, Ctrl-click each group.
- To add a user to a group, click the right arrow to move the selection to the Chosen list box.
- To remove a user from a group, select the group in the Chosen list box and click the left arrow.
6. Click Save."
    </report>

    <report type:"WARNING">
      description : "2.10 - Administrator Group should be set up"
      info        : "Assign only users who are going to administer the Oracle WebLogic Server to the Administrator Group.

	If a user is given privileges they should not have, it is possible that the Administration Server could be misconfigured and left open to attacks by malicious users.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "To setup the administrator groups:
1. Select the name of the active Security Realm.
2. Select Users and Groups > Users.
3. Select the user to add to the group.
4. On the Settings for User Name page, select Groups.
5. Select the Administrators group.
6. Click the right arrow to move the group to the user.
7. Click Save."
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.1 - Domain wide administration port is not enabled"
      info            : "It is a good practice to separate administration traffic from application traffic in the domain. In production environments, separating the two forms of traffic ensures that critical administration operations (starting and stopping servers, changing a server's configuration, and deploying applications) do not compete with high-volume application traffic on the same network connection. WebLogic Server provides the option to enable an SSL administration port for use with all servers in the domain. The administration port accepts only secure, SSL traffic, and all connections via the port require authentication by a server administrator.

	Sensitive data between managed servers and admin server can be sniffed."
      solution        : "1. Select the name of the active domain in the left pane to display the domain's configuration attributes.
2. Click the Configuration tab in the right pane.
3. Click the General tab in the right pane.
4. Select the Enable Domain Wide Administration Port attribute to enable the SSL administration port for this domain.
5. In the Administration Port box, enter the SSL port number that server instances in the domain use as the administration port.
6. Click Apply to apply your changes
The current unencrypted connection will be lost and the server will be accessible over SSL at the below URL: https://<IP Address>:9002/console (assuming that the Administration Port has been set to 9002)"
      reference       : "800-171|3.1.1,800-171|3.1.2,800-53|AC-17,CN-L3|7.1.2.2(h),CN-L3|7.1.3.7(a),CSF|PR.AC-3,CSF|PR.PT-4,ITSG-33|AC-17,NESA|T4.2.1,NESA|T4.5.1,NESA|T5.1.1,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.7.1,NESA|T5.7.2,NIAv2|AM40,NIAv2|AM41,NIAv2|NS48,NIAv2|NS51,NIAv2|NS5g,NIAv2|NS5h,SWIFT-CSCv1|2.6"
      value_type      : POLICY_TEXT
      value_data      : "true"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:administration-port-enabled' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type        : FILE_PERMISSIONS
      description : "3.2 - Keystore directory and file permissions should be set - Directory"
      info        : "Ensure that the permissions on the directories containing Keystores are set to 700 and keystrore files to 600

	If these files and directories are not set with the proper permissions, malicious users may gain sensitive information about the system."
      solution    : "To set the directory and the file permissions perform the following steps:
1. Login to the Linux machine running the Oracle WebLogic Server software.
2. Open a terminal window.
3. Navigate to the parent of the keystore directory.
4. chmod 700 [name of directory].
5. Navigate to the directory containing the keystore file.
6. chmod 600 [name of file]."
      value_type  : FILE_ACL
      value_data  : "KeystoreDirectory"
# Note: Variable @KEYSTORE_PATH@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\keystore" in field "file".
      file        : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\keystore"
      acl_option  : CAN_NOT_BE_NULL
      reference   : "800-171|3.4.2,800-53|AC-6,800-53|CM-6,CSCv6|3.1,CSF|PR.AC-4,CSF|PR.IP-1,ISO/IEC-27001|A.9.2.5,ITSG-33|CM-6,NESA|M1.1.3,NESA|T3.2.1,NESA|T5.1.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
    </custom_item>

    <custom_item>
      type        : FILE_PERMISSIONS
      description : "3.2 - Keystore directory and file permissions should be set - Files"
      info        : "Ensure that the permissions on the directories containing Keystores are set to 700 and keystrore files to 600

	If these files and directories are not set with the proper permissions, malicious users may gain sensitive information about the system."
      solution    : "To set the directory and the file permissions perform the following steps:
1. Login to the Linux machine running the Oracle WebLogic Server software.
2. Open a terminal window.
3. Navigate to the parent of the keystore directory.
4. chmod 700 [name of directory].
5. Navigate to the directory containing the keystore file.
6. chmod 600 [name of file]."
      value_type  : FILE_ACL
      value_data  : "KeystoreFiles"
# Note: Variable @KEYSTORE_PATH@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\keystore" in field "file".
      file        : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\keystore\\*"
      acl_option  : CAN_NOT_BE_NULL
      reference   : "800-171|3.4.2,800-53|AC-6,800-53|CM-6,CSCv6|3.1,CSF|PR.AC-4,CSF|PR.IP-1,ISO/IEC-27001|A.9.2.5,ITSG-33|CM-6,NESA|M1.1.3,NESA|T3.2.1,NESA|T5.1.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.3 - Connection Filtering is not configured - Filter enabled"
      info            : "Connection filters are particularly useful when using the Administration port. Use a connection filter to further restrict access to the Administration port to only the servers and machines in the domain. An attacker, who gets access to a machine inside the firewall, still cannot perform administration operations unless the attacker is on one of the permitted machines.

	An attacker can perform administrative operations if he gets access to the weblogic server."
      solution        : "Weblogic has default connection filter weblogic.security.net.ConnectionFilterImpl which can be customized to deny access, by using connection filters rules in the WebLogic Server Administration Console.
1. If you have not already done so, in the Change Centre of the Administration Console, click Lock & Edit.
2. In the left pane, select the domain that needs to be configured (for example, mydomain).
3. Select Security > Filter.
4. Select the Connection Logger Enabled checkbox to enable the logging of accepted messages.
5. In the Connection Filter field, specify the connection filter class to be used in the domain i.e. 'weblogic.security.net.ConnectionFilterImpl'.
6. In the Connection Filter Rules field, enter the syntax for the connection filter rules. Detailed information on how to configure connection filter rules can be found at Using Network Connection Filters.
7. Click Save.
8. To activate these changes, in the Change Centre of the Administration Console, click Activate Changes."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      value_type      : POLICY_TEXT
      value_data      : "true"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:connection-logger-enabled' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.3 - Connection Filtering is not configured - Connection Filter Specified"
      info            : "Connection filters are particularly useful when using the Administration port. Use a connection filter to further restrict access to the Administration port to only the servers and machines in the domain. An attacker, who gets access to a machine inside the firewall, still cannot perform administration operations unless the attacker is on one of the permitted machines.

	An attacker can perform administrative operations if he gets access to the weblogic server."
      solution        : "Weblogic has default connection filter weblogic.security.net.ConnectionFilterImpl which can be customized to deny access, by using connection filters rules in the WebLogic Server Administration Console.
1. If you have not already done so, in the Change Centre of the Administration Console, click Lock & Edit.
2. In the left pane, select the domain that needs to be configured (for example, mydomain).
3. Select Security > Filter.
4. Select the Connection Logger Enabled checkbox to enable the logging of accepted messages.
5. In the Connection Filter field, specify the connection filter class to be used in the domain i.e. 'weblogic.security.net.ConnectionFilterImpl'.
6. In the Connection Filter Rules field, enter the syntax for the connection filter rules. Detailed information on how to configure connection filter rules can be found at Using Network Connection Filters.
7. Click Save.
8. To activate these changes, in the Change Centre of the Administration Console, click Activate Changes."
      reference       : "800-171|3.1.1,800-171|3.1.2,800-53|AC-17,CN-L3|7.1.2.2(h),CN-L3|7.1.3.7(a),CSF|PR.AC-3,CSF|PR.PT-4,ITSG-33|AC-17,NESA|T4.2.1,NESA|T4.5.1,NESA|T5.1.1,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.7.1,NESA|T5.7.2,NIAv2|AM40,NIAv2|AM41,NIAv2|NS48,NIAv2|NS51,NIAv2|NS5g,NIAv2|NS5h,SWIFT-CSCv1|2.6"
      value_type      : POLICY_TEXT
      value_data      : ".+"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:connection-filter' | foreach-object { $_.node.'#text' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.3 - Connection Filtering is not configured - Filter Rules added"
      info            : "Connection filters are particularly useful when using the Administration port. Use a connection filter to further restrict access to the Administration port to only the servers and machines in the domain. An attacker, who gets access to a machine inside the firewall, still cannot perform administration operations unless the attacker is on one of the permitted machines.

	An attacker can perform administrative operations if he gets access to the weblogic server."
      solution        : "Weblogic has default connection filter weblogic.security.net.ConnectionFilterImpl which can be customized to deny access, by using connection filters rules in the WebLogic Server Administration Console.
1. If you have not already done so, in the Change Centre of the Administration Console, click Lock & Edit.
2. In the left pane, select the domain that needs to be configured (for example, mydomain).
3. Select Security > Filter.
4. Select the Connection Logger Enabled checkbox to enable the logging of accepted messages.
5. In the Connection Filter field, specify the connection filter class to be used in the domain i.e. 'weblogic.security.net.ConnectionFilterImpl'.
6. In the Connection Filter Rules field, enter the syntax for the connection filter rules. Detailed information on how to configure connection filter rules can be found at Using Network Connection Filters.
7. Click Save.
8. To activate these changes, in the Change Centre of the Administration Console, click Activate Changes."
      reference       : "800-171|3.1.1,800-171|3.1.2,800-53|AC-17,CN-L3|7.1.2.2(h),CN-L3|7.1.3.7(a),CSF|PR.AC-3,CSF|PR.PT-4,ITSG-33|AC-17,NESA|T4.2.1,NESA|T4.5.1,NESA|T5.1.1,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.7.1,NESA|T5.7.2,NIAv2|AM40,NIAv2|AM41,NIAv2|NS48,NIAv2|NS51,NIAv2|NS5g,NIAv2|NS5h,SWIFT-CSCv1|2.6"
      value_type      : POLICY_TEXT
      value_data      : ".+"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:connection-filter-rule' | foreach-object { $_.node.'#text' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.4 - Default Weblogic Keystores is used"
      info            : "Keystores ensure the secure storage and management of private keys and trusted certificate authorities (CAs).By default, WebLogic Server is configured with two keystores, to be used for development only.
DemoIdentity.jks: Contains a demonstration private key for WebLogic Server. This keystore establishes an identity for WebLogic Server.
DemoTrust.jks: Contains a list of certificate authorities trusted by WebLogic Server. This keystore establishes trust for WebLogic Server.
These keystores are located in the WL_HOME\server\lib directory and the JAVA_HOME\jre\lib\security directory. These Keystores are not be used in production environment because the digital certificates and trusted CA certificates in the demonstration keystores are signed by a WebLogic Server demonstration certificate authority.

If default keystores is used, the weblogic sever will trust any WebLogic Server installation that also uses the demonstration keystores."
      solution        : "1. In the left pane of the Console, expand Environment and select Servers.
2. Click the name of the server for which you want to configure the identity and trust keystores.
3. Select Configuration > Keystores.
4. In the Keystores field, select the method for storing and managing private keys/digital certificate pairs and trusted CA certificates. These options are available:
Demo Identity and Demo Trust: The demonstration identity and trust keystores, located in the BEA_HOME\server\lib directory and the JDK ca-certs keystore, are configured by default. Use for development only.
Custom Identity and Java Standard Trust: A keystore you create and the trusted CAs defined in the ca-certs file in the JAVA_HOME\jre\lib\security directory.
Custom Identity and Custom Trust: Identity and trust keystores you create.
Custom Identity and Command Line Trust: An identity keystore you create and command-line arguments that specify the location of the trust keystore.
5. In the Identity section, define attributes for the identity keystore.
Custom Identity Keystore: The fully qualified path to the identity keystore.
Custom Identity Keystore Type: The type of the keystore. Generally, this attribute is Java KeyStore (JKS); if left blank, it defaults to JKS.
Custom Identity Keystore Passphrase: The password you will enter when reading or writing to the keystore. This attribute is optional or required depending on the type of keystore.
6. In the Trust section, define properties for the trust keystore.
If you chose Java Standard Trust as your keystore, specify the password defined when creating the keystore. Confirm the password.
If you chose Custom Trust, define the following attributes:
Custom Trust Keystore: The fully qualified path to the trust keystore.
Custom Trust Keystore Type: The type of the keystore. Generally, this attribute is JKS; if left blank, it defaults to JKS.
Custom Trust Keystore Passphrase: The password you will enter when reading or writing to the keystore. This attribute is optional or required depending on the type of keystore. All keystores require the passphrase in order to write to the keystore. However, some keystores do not require the passphrase to read from the keystore. WebLogic Server only reads from the keystore so whether or not you define this property depends on the requirements of the keystore.
7. Click Save"
      reference       : "800-171|3.13.10,800-53|SC-12,ITSG-33|SC-12,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9"
      value_type      : POLICY_TEXT
      value_data      : "(CustomIdentityAndJavaStandardTrust|CustomIdentityAndCustomTrust|CustomIdentityAndCommandLineTrust)"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:key-stores' | foreach-object { $_.node.'#text' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "3.5 - Default weblogic account is used"
      info        : "The weblogic user account is the default system administrator account. As a best practice .Delete the default account after defining new admin account with strong password.

	An adversary can gain administrator level access by using the well known default credentials.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. In the left pane select Security Realms.
2. On the Summary of Security Realms page select the name of the realm.
3. On the Settings for Realm Name page select Users and Groups > Users
4. Go to New Tab and create a new administrator user
5. Delete the weblogic account"
    </report>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "3.6 - Insecure 'Idle Timeout' setting"
      info              : "The maximum number of seconds that a connection is allowed to be idle before it is closed by the server.

  Large number of idle connections consumes system resources. This may lead to a possible denial of service."
      solution          : "1. Open Administration Console, click Lock & Edit.
2. In the left pane select Environment->servers.
3. On the right pane select the corresponding server
4. Go to Protocols->General
5. Change the 'Idle Connection Timeout' setting to 65 seconds."
      reference         : "800-53|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
      value_type        : POLICY_TEXT
      value_data        : 65
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:server/domain:idle-connection-timeout' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.7 - Network Parameters are not tuned - Maximum Open Sockets"
      info            : "WebLogic Server performance and functionality can be tuned by configuring attributes such as Maximum Open Sockets that is the maximum number of open sockets allowed in server at a given point of time. When max threshold is reached, server stops accepting any more new requests until no of sockets drops below threshold. Other attributes that can be tuned are Login Timeout; it is the login timeout for the server's plain-text (non-SSL) port, in milliseconds; and Accept Backlog that is the allowed backlog of new TCP connection requests for both the plaintext and SSL port. Configuring these parameters would protect from Denial of service attacks.

  An attacker can cause a Denial of Service of the server if the network parameters are not tuned properly."
      solution        : "1. Open Administration Console
2. In the left pane select Environment->servers.
3. Select the corresponding server
4. Go to Tuning tab
5. Set the following parameters -
-Login Timeout - This is the maximum amount of time allowed for a new connection to establish. Set this to 5000
-Maximum Open Sockets - Set this value to a finite number.
-Accept Backlog - This is number of backlogged, new TCP connection requests that should be allowed for this server's regular and SSL ports. Set this to 300"
      reference       : "800-53|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
      value_type      : POLICY_TEXT
      value_data      : "([1-9]|[1-9][0-9]+)"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:server/domain:max-open-sock-count' | foreach-object { $_.node.'#text' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.7 - Network Parameters are not tuned - Accept Backlog"
      info            : "WebLogic Server performance and functionality can be tuned by configuring attributes such as Maximum Open Sockets that is the maximum number of open sockets allowed in server at a given point of time. When max threshold is reached, server stops accepting any more new requests until no of sockets drops below threshold. Other attributes that can be tuned are Login Timeout; it is the login timeout for the server's plain-text (non-SSL) port, in milliseconds; and Accept Backlog that is the allowed backlog of new TCP connection requests for both the plaintext and SSL port. Configuring these parameters would protect from Denial of service attacks.

  An attacker can cause a Denial of Service of the server if the network parameters are not tuned properly."
      solution        : "1. Open Administration Console
2. In the left pane select Environment->servers.
3. Select the corresponding server
4. Go to Tuning tab
5. Set the following parameters -
-Login Timeout - This is the maximum amount of time allowed for a new connection to establish. Set this to 5000
-Maximum Open Sockets - Set this value to a finite number.
-Accept Backlog - This is number of backlogged, new TCP connection requests that should be allowed for this server's regular and SSL ports. Set this to 300"
      reference       : "800-53|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
      value_type      : POLICY_TEXT
      value_data      : 300
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:server/domain:accept-backlog' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "3.7 - Network Parameters are not tuned - Login Timeout"
      info              : "WebLogic Server performance and functionality can be tuned by configuring attributes such as Maximum Open Sockets that is the maximum number of open sockets allowed in server at a given point of time. When max threshold is reached, server stops accepting any more new requests until no of sockets drops below threshold. Other attributes that can be tuned are Login Timeout; it is the login timeout for the server's plain-text (non-SSL) port, in milliseconds; and Accept Backlog that is the allowed backlog of new TCP connection requests for both the plaintext and SSL port. Configuring these parameters would protect from Denial of service attacks.

  An attacker can cause a Denial of Service of the server if the network parameters are not tuned properly."
      solution          : "1. Open Administration Console
2. In the left pane select Environment->servers.
3. Select the corresponding server
4. Go to Tuning tab
5. Set the following parameters -
-Login Timeout - This is the maximum amount of time allowed for a new connection to establish. Set this to 5000
-Maximum Open Sockets - Set this value to a finite number.
-Accept Backlog - This is number of backlogged, new TCP connection requests that should be allowed for this server's regular and SSL ports. Set this to 300"
      reference         : "800-53|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
      value_type        : POLICY_TEXT
      value_data        : 5000
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:server/domain:login-timeout-millis' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "3.8 - Http banner reveals server information - Send Server Header"
      info              : "By default, when an instance of WebLogic Server responds to an HTTP request, its HTTP response header includes the server's name and WebLogic Server version number.This poses a potential security risk if an attacker knows about vulnerability in the specific version of WebLogic Server.

  An attacker can enumerate the server make, version and technology used from the http banner. This information can be useful to an adversary to refine further attacks."
      solution          : "1. Open Administration Console, click Lock & Edit.
2. In the left pane select Environment > Servers > Nameof the server > Protocols > HTTP
3. Disable Send Server Header parameter
4. In the Administration Console, click on the domain name > Configuration > Web Applications
5. From the drop-down list, select value of X-Powered-By Header as 'X-Powered-By header will not be sent'"
      reference         : "800-53|SC-30,NIAv2|GS8f,NIAv2|NS1,NIAv2|NS28"
      value_type        : POLICY_TEXT
      value_data        : "false"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:web-server/domain:send-server-header-enabled' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.8 - Http banner reveals server information - X-Powered-By Header"
      info            : "By default, when an instance of WebLogic Server responds to an HTTP request, its HTTP response header includes the server's name and WebLogic Server version number.This poses a potential security risk if an attacker knows about vulnerability in the specific version of WebLogic Server.

  An attacker can enumerate the server make, version and technology used from the http banner. This information can be useful to an adversary to refine further attacks."
      solution        : "1. Open Administration Console, click Lock & Edit.
2. In the left pane select Environment > Servers > Nameof the server > Protocols > HTTP
3. Disable Send Server Header parameter
4. In the Administration Console, click on the domain name > Configuration > Web Applications
5. From the drop-down list, select value of X-Powered-By Header as 'X-Powered-By header will not be sent'"
      reference       : "800-53|SC-30,NIAv2|GS8f,NIAv2|NS1,NIAv2|NS28"
      value_type      : POLICY_TEXT
      value_data      : "NONE"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:web-app-container/domain:x-powered-by-header-level' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "3.9 - Default code and application examples and pointbase database are installed - eval directory"
      info        : "Certain options when installed with the Weblogic server can pose a security threat. These may contain security vulnerabilities, so not installing them makes the installation more secure. The Server Examples option during installation includes sample applications, code examples, and the PointBase database. The PointBase database is included for evaluation purposes and it is not supported in the production environments. Also, the installing development tools on the production server is a security risk as they may contain security vulnerabilities, therefore they should not exist on the Administration Server.

  Selecting this option could increase the attack surface and make the installation less secure."
      solution    : "For sample applications and code examples, ensure that when installing WebLogic Server, the option to install the Server Examples component is not selected. If it has been selected, navigate to the WL_HOME/common directory (e.g. /home/user/Oracle/Middleware/wlserver_10.3/common) and remove the directories 'samples' and 'eval'. Uninstall any development tools, if available on the production server."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\\wlserver_10.3\common\eval"
      file_option : MUST_NOT_EXIST
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "3.9 - Default code and application examples and pointbase database are installed - samples directory"
      info        : "Certain options when installed with the Weblogic server can pose a security threat. These may contain security vulnerabilities, so not installing them makes the installation more secure. The Server Examples option during installation includes sample applications, code examples, and the PointBase database. The PointBase database is included for evaluation purposes and it is not supported in the production environments. Also, the installing development tools on the production server is a security risk as they may contain security vulnerabilities, therefore they should not exist on the Administration Server.

  Selecting this option could increase the attack surface and make the installation less secure."
      solution    : "For sample applications and code examples, ensure that when installing WebLogic Server, the option to install the Server Examples component is not selected. If it has been selected, navigate to the WL_HOME/common directory (e.g. /home/user/Oracle/Middleware/wlserver_10.3/common) and remove the directories 'samples' and 'eval'. Uninstall any development tools, if available on the production server."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\\wlserver_10.3\common\samples"
      file_option : MUST_NOT_EXIST
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "3.9 - Default code and application examples and pointbase database are installed - ADFR Tools"
      info        : "Certain options when installed with the Weblogic server can pose a security threat. These may contain security vulnerabilities, so not installing them makes the installation more secure. The Server Examples option during installation includes sample applications, code examples, and the PointBase database. The PointBase database is included for evaluation purposes and it is not supported in the production environments. Also, the installing development tools on the production server is a security risk as they may contain security vulnerabilities, therefore they should not exist on the Administration Server.

  Selecting this option could increase the attack surface and make the installation less secure."
      solution    : "For sample applications and code examples, ensure that when installing WebLogic Server, the option to install the Server Examples component is not selected. If it has been selected, navigate to the WL_HOME/common directory (e.g. /home/user/Oracle/Middleware/wlserver_10.3/common) and remove the directories 'samples' and 'eval'. Uninstall any development tools, if available on the production server."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\\oracle_common\uninstall\adfr_uninstall.xml"
      file_option : MUST_NOT_EXIST
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "3.9 - Default code and application examples and pointbase database are installed - OEPE Tools"
      info              : "Certain options when installed with the Weblogic server can pose a security threat. These may contain security vulnerabilities, so not installing them makes the installation more secure. The Server Examples option during installation includes sample applications, code examples, and the PointBase database. The PointBase database is included for evaluation purposes and it is not supported in the production environments. Also, the installing development tools on the production server is a security risk as they may contain security vulnerabilities, therefore they should not exist on the Administration Server.

  Selecting this option could increase the attack surface and make the installation less secure."
      solution          : "For sample applications and code examples, ensure that when installing WebLogic Server, the option to install the Server Examples component is not selected. If it has been selected, navigate to the WL_HOME/common directory (e.g. /home/user/Oracle/Middleware/wlserver_10.3/common) and remove the directories 'samples' and 'eval'. Uninstall any development tools, if available on the production server."
      reference         : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      value_type        : POLICY_TEXT
      value_data        : ""
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "powershell_args".
      powershell_args   : "Get-ChildItem -Path C:\\Oracle\\Middleware\\ -Filter eclipse.exe -Recurse"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.10 - Domain is not running in production mode"
      info            : "A production domain uses full security and may use clusters or other advanced features.

  If the domain is not in production mode, then it is not possible to run at full security and the domain is therefore not as secure as possible."
      solution        : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name > Configuration > General.
4. Check the 'Production Mode' checkbox.
5. Click Save.
6. To activate these changes, in the Change Center of the Administration Console, click Activate Changes.
7. Shutdown any servers that are running.
8. Restart the Administrators Server with a Startup Script.
9. If the domain contains Managed Servers, start the Managed Servers."
      reference       : "800-171|3.4.2,800-53|CM-6,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      value_type      : POLICY_TEXT
      value_data      : "true"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:production-mode-enabled' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "3.11 - Domain HTTP Post Timeout is not set"
      info              : "The Post Timeout value is the amount of time servers in this domain wait between receiving chunks of data in an HTTP POST request before it times out. This setting is made at the domain level, but can also be made at the server level (see Server HTTP Post Timeout). A server level value will override the domain value, but if a server value has not been set, this domain level value is used.

  If this value is not set securely, a malicious user could succeed in a denial-of-service attack by overloading the server with POST data."
      solution          : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Configuration > Web Applications.
5. Ensure that the 'Post Timeout' value is set to [30].
6. If necessary, click Save.
7. To activate these changes, in the Change Center of the Administration Console, Click Activate Changes."
      reference         : "800-53|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
      value_type        : POLICY_TEXT
      value_data        : 30
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:web-app-container/domain:post-timeout-secs' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "3.12 - Security Interoperability Mode is not set"
      info              : "Security Interoperability Mode specifies the mode of the communication channel used for XA calls between servers that participate in a global transaction. All server instances in a domain must have the same security mode setting. The default option is the most secure, since it uses the kernel identity over an admin channel if it is enabled and 'anonymous' otherwise.

  Selecting either 'performance' or 'compatibility' as the Security Interoperability Mode is a security risk since a malicious user could implement a man-in-the-middle attack by affecting the outcome of transactions. The 'compatibility' setting also runs the risk of a malicious user gaining administrative control."
      solution          : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security > Advanced.
5. Set 'Security Interoperability Mode' to [default].
6. If necessary, select save. To activate these changes, in the Change Center of the Administration Console, click Activate Changes."
      reference         : "800-171|3.13.8,800-53|SC-8,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24"
      value_type        : POLICY_TEXT
      value_data        : "default"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:jta/domain:security-interop-mode' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.13 - Configuration Archive is not Enabled"
      info            : "Enabling the 'Configuration Archive Enabled' option will create backups of the configuration during server boot. Having a backup of the configuration is essential to having a working system in the event that a configuration file gets corrupted.

  If this option is not enabled and a configuration file is corrupted, the Oracle WebLogic Server will be unable to function."
      solution        : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Configuration > General and click Advanced at the bottom of the page.
5. Check the 'Configuration Archive Enabled' checkbox.
6. If necessary, click Save.
7. To activate these changes, in the Change Center of the Administration Console, click Activate-Changes."
      reference       : "800-171|3.8.9,800-53|CP-9,CSF|PR.IP-4,ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,NESA|M5.2.3,NESA|T2.2.4"
      value_type      : POLICY_TEXT
      value_data      : "Config Archive: true"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "Write-Host -NoNewLine 'Config Archive: '; select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:config-backup-enabled' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "3.14 - Maximum Message Size is not set - Maximum Message Size"
      info              : "Maximum Message Size sets the maximum number of bytes allowed in messages that are received over all supported protocols, unless overridden by a protocol-specific setting or a custom channel setting. Restricting the number of bytes allowed prevents the likelihood of a denial-of-service attack.

  If the allowed size of a message is too large, a malicious user can cause a denial-of-service attack by attempting to force the server to allocate more memory than is available, thus keeping the server from responding quickly to other requests."
      solution          : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name > Environment > Servers.
4. For each server in the domain, repeat steps 5-8.
5. Click on the Server name.
6. Click on Protocols > General.
7. Ensure that the 'Maximum Message Size' is set to [10000000].
8. Now select Protocols > HTTP.
9. Ensure that the HTTP Maximum Message Size is not greater than 10000000 bytes.
10. Click Save.
11. To activate these changes, in the Change Center of the Administration Console, click Activate Changes."
      reference         : "800-53|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
      value_type        : POLICY_TEXT
      value_data        : 10000000
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:server/domain:max-message-size' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.14 - Maximum Message Size is not set - Maximum HTTP Message Size"
      info            : "Maximum Message Size sets the maximum number of bytes allowed in messages that are received over all supported protocols, unless overridden by a protocol-specific setting or a custom channel setting. Restricting the number of bytes allowed prevents the likelihood of a denial-of-service attack.

  If the allowed size of a message is too large, a malicious user can cause a denial-of-service attack by attempting to force the server to allocate more memory than is available, thus keeping the server from responding quickly to other requests."
      solution        : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name > Environment > Servers.
4. For each server in the domain, repeat steps 5-8.
5. Click on the Server name.
6. Click on Protocols > General.
7. Ensure that the 'Maximum Message Size' is set to [10000000].
8. Now select Protocols > HTTP.
9. Ensure that the HTTP Maximum Message Size is not greater than 10000000 bytes.
10. Click Save.
11. To activate these changes, in the Change Center of the Administration Console, click Activate Changes."
      reference       : "800-53|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
      value_type      : POLICY_TEXT
      value_data      : "Maximum HTTP Message Size: 10000000"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "Write-Host -NoNewLine 'Maximum HTTP Message Size: '; select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:server/domain:max-http-message-size' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.15 - Archive Configuration Count is not set"
      info            : "The 'Archive Configuration Count' is the number of archival versions of config.xml saved by the Administration Server each time the domain configuration is modified.

  If the config.xml file becomes corrupt and no copies of this file are archived, then the Oracle WebLogic Server could become inoperable"
      solution        : "1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Configuration > General and click Advanced at the bottom of the page.
5. In the Archive Configuration Count Field, enter the number of archive files to retain. It must be greater than zero and click save.
6. To activate these changes, in the Change Center of the Administration Console, click Activate Changes"
      reference       : "800-171|3.8.9,800-53|CP-9,CSF|PR.IP-4,ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,NESA|M5.2.3,NESA|T2.2.4,NESA|T3.5.1"
      value_type      : POLICY_TEXT
      value_data      : "Archive Config Count: ([1-9]|[1-9][0-9]+)"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "Write-Host -NoNewLine 'Archive Config Count: ';select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:archive-configuration-count' | foreach-object { $_.node.'#text' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "3.16 - Delete Development Tools - ADFR Tools"
      info        : "Do not install development tools on the Administration Server.

	Development tools may contain security vulnerabilities, therefore they should not exist on the Administration Server. If these tools exist it could increase the surface of attack for the system."
      solution    : "Run a check to ensure that no development tools are on the system. If any such tools are present on the server they should be disabled."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\\oracle_common\uninstall\adfr_uninstall.xml"
      file_option : MUST_NOT_EXIST
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "3.16 - Delete Development Tools - OEPE Tools"
      info              : "Do not install development tools on the Administration Server.

	Development tools may contain security vulnerabilities, therefore they should not exist on the Administration Server. If these tools exist it could increase the surface of attack for the system."
      solution          : "Run a check to ensure that no development tools are on the system. If any such tools are present on the server they should be disabled."
      reference         : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      value_type        : POLICY_TEXT
      value_data        : ""
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "powershell_args".
      powershell_args   : "Get-ChildItem -Path C:\\Oracle\\Middleware\\ -Filter eclipse.exe -Recurse"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.17 - Deploy the WebLogic Platform  on a Dedicated System"
      info            : "Deploy the WebLogic Platform  is deployed dedicated system and allow communication to it only with systems that have a demonstrated need.

	Allowing every system access to the WebLogic Platform means that attackers would have more opportunities to compromise this critical system.

	NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "It should be ensured that web logic platform is deployed on a dedicated system."
      reference       : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      value_type      : POLICY_TEXT
      value_data      : "ServiceCheck"
      powershell_args : "Get-Service"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "3.18 - Secure SNMPv3 communication should be used"
      info            : "Secure SNMPv3 should be used  for secure communication between the agent and manager

  SNMP agent decodes SNMP credentials in requests and passes the SNMP user name to the security realm. The security realm maps the SNMP user name to a WebLogic Server user, authenticates the user, and authorizes access to monitoring data in the domain."
      solution        : "To set SNMP secure communications perform the following actions:
1. Create a WebLogic Server user
2. On the Create SNMP Credential Mapping page, from the Credential Mapping Type list, select Privacy enter the user name and password
3. On the Credential Mappings page, click the Agents tab and configure the agent."
      reference       : "800-171|3.5.2,800-53|IA-5,CN-L3|7.1.2.7(d),CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3"
      value_type      : POLICY_TEXT
      value_data      : "SNMP v3 Privacy: (AES_128|DES)"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "Write-Host -NoNewLine 'SNMP v3 Privacy: '; select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:snmp-agent/domain:privacy-protocol' | foreach-object { $_.node.'#text' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type        : FILE_PERMISSIONS
      description : "3.19 - Web Server Process should not run as root - directory permissions"
      info        : "Web Server used in conjunction with Weblogic should not be running under root

	If the system is attacked while the Web Server is running under 'root', the malicious user could gain full administrative access to the system by inheriting root's privileges. Also, if the files and directory structure for the Web Server are available to unprivileged users, then malicious code could be inserted and potentially executed by the Web Server"
      solution    : "Ensure that the Web Server used in conjunction with WebLogic Server is not run as 'root' and that its directory structure, including all files, is protected from access by unauthorized users."
      value_type  : FILE_ACL
      value_data  : "Weblogic_Path"
# Note: Variable @WEBLOGIC_INSTALL_PATH@ replaced with "C:\\Oracle\\Middleware\\" in field "file".
      file        : "C:\\Oracle\\Middleware\\"
      acl_option  : CAN_NOT_BE_NULL
      reference   : "800-171|3.3.8,800-171|3.3.9,800-171|3.4.2,800-53|AC-6,800-53|AU-9,800-53|CM-6,CSCv6|3.1,CSF|PR.AC-4,CSF|PR.IP-1,CSF|PR.PT-1,ISO/IEC-27001|A.9.2.5,ITSG-33|AU-9,ITSG-33|CM-6,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.2.1,NESA|T5.1.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1"
    </custom_item>

    <report type:"WARNING">
      description : "3.20 - Backup SSL Certificates, Private Keys, and Trust Keystores"
      info        : "Maintaining a backup of the SSL certificates, private keys, and trust keystores is essential to recovering from a system failure.

  If a backup does not exist it might not be possible to recover in the event of a system failure.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Ensure that a backup of the SSL certificates, private keys, and trust keystores exist and are stored in a secure location."
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "3.21 - FIPS Compliant cryptographic Module should be used - JAVA_PROPERTIES"
      info        : "Enable the WebLogic Server to use a FIPS-compliant (FIPS 140-2) cryptographic module.

	Failing to enable FIPS-compliant cryptographic modules could result in use of invalidated modules lacking compliance with FIPS 140-2, which may not be able to securely handle sensitive information."
      solution    : "1. Login to the Linux machine running the WebLogic Server software.
2. Open a terminal window.
3. Navigate to the domain home (e.g. cd /home/ows/Oracle/Middleware/user_projects/domains/domain1).
4. Navigate to the bin directory (e.g. cd /home/ows/Oracle/Middleware/user_projects/domains/domain1/bin).
5. Backup a version of the script 'setDomainEnv.sh'.
6. Make the edits in steps 7 & 8 to 'setDomainEnv.sh':
7. Within the double quotes, add the parameter '-Dweblogic.security.SSL.nojce=true' (without single quotes) to the line: JAVA_PROPERTIES='-Dplatform.home=${WL_HOME}... '
8. Directly under the line '# ADD EXTENSIONS TO CLASSPATHS', enter the following line exactly as written: PRE_CLASSPATH='${WL_HOME}/server/lib/jsafeFIPS.jar'
9. Save the file.
10. Restart the server for the changes to take place"
      reference   : "800-171|3.13.11,800-53|SC-13,CSF|PR.DS-5,ITSG-33|SC-13,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\bin\\setDomainEnv.cmd"
      regex       : "^[\s]*set[\s]*JAVA_PROPERTIES[\s]*=[\s]*.*-Dweblogic\.security\.SSL\.nojce=true.*"
      expect      : "^[\s]*set[\s]*JAVA_PROPERTIES[\s]*=[\s]*.*-Dweblogic\.security\.SSL\.nojce=true.*"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "3.21 - FIPS Compliant cryptographic Module should be used - PRE_CLASSPATH"
      info        : "Enable the WebLogic Server to use a FIPS-compliant (FIPS 140-2) cryptographic module.

	Failing to enable FIPS-compliant cryptographic modules could result in use of invalidated modules lacking compliance with FIPS 140-2, which may not be able to securely handle sensitive information."
      solution    : "1. Login to the Linux machine running the WebLogic Server software.
2. Open a terminal window.
3. Navigate to the domain home (e.g. cd /home/ows/Oracle/Middleware/user_projects/domains/domain1).
4. Navigate to the bin directory (e.g. cd /home/ows/Oracle/Middleware/user_projects/domains/domain1/bin).
5. Backup a version of the script 'setDomainEnv.sh'.
6. Make the edits in steps 7 & 8 to 'setDomainEnv.sh':
7. Within the double quotes, add the parameter '-Dweblogic.security.SSL.nojce=true' (without single quotes) to the line: JAVA_PROPERTIES='-Dplatform.home=${WL_HOME}... '
8. Directly under the line '# ADD EXTENSIONS TO CLASSPATHS', enter the following line exactly as written: PRE_CLASSPATH='${WL_HOME}/server/lib/jsafeFIPS.jar'
9. Save the file.
10. Restart the server for the changes to take place"
      reference   : "800-171|3.13.11,800-53|SC-13,CSF|PR.DS-5,ITSG-33|SC-13,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\bin\\setDomainEnv.cmd"
      regex       : '^[\\s]*PRE_CLASSPATH[\\s]*=[\\s]*"\\$\\{WL_HOME\\}/server/lib/jsafeFIPS\\.jar"'
      expect      : '^[\\s]*PRE_CLASSPATH[\\s]*=[\\s]*"\\$\\{WL_HOME\\}/server/lib/jsafeFIPS\\.jar"'
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "4.1 - Auditing is not enabled"
      info            : "A domain can be configured to generate log messages and Audit Events when a user changes the configuration or invokes management operations on any resource within a domain. For example, if a user disables SSL on a Managed Server in a domain, the domain writes a message to the Administration Server's local log file. If you have enabled the WebLogic Auditing provider, it writes the Audit Events to an additional security log. These messages and Audit Events provide an audit trail of changes within a domain's configuration (configuration auditing). Following are the configuration auditing events triggered on enabling configuration auditing -
Authorized user creates a resource.
Unauthorized user attempts to create a resource.
Authorized user deletes a resource.
Unauthorized user attempts to delete a resource.
Authorized user changes a resource's configuration.
Unauthorized user attempts to change a resource's configuration.
Authorized user invokes an operation on a resource(deploys an application)
Unauthorized user attempts to invoke an operation on a resource.
Authorized user enables configuration auditing.
Authorized user disables configuration auditing.

  All critical system events need to be audited. Unauthorized changes on the server will go unnoticed."
      solution        : "In the left pane of the Console, under Domain Structure, select the domain name. 1. Select Configuration > General and then click Advanced at the bottom of the page.
2. In the Configuration Audit Type field, select Change Log and Audit
3. Click Save."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      value_type      : POLICY_TEXT
      value_data      : "Config Audit Type: logaudit"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "Write-Host -NoNewLine 'Config Audit Type: ';select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:configuration-audit-type' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "4.2 - Anonymous Admin Lookup Disabled"
      info        : "Ensure that the 'Anonymous Admin Lookup Enabled' is [disabled].

	If the 'Anonymous Admin Lookup Enabled' option is enabled, users can see the value of any MBean attribute that is not explicitly marked as protected by the WebLogic Server MBean authorization process."
      solution    : "To disable Anonymous Admin Lookup perform the steps mentioned below:
1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select the Security tab.
5. Ensure that the 'Anonymous Admin Lookup Enabled' checkbox is not checked.
6. If necessary, click Save"
      reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,SWIFT-CSCv1|5.1"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "anonymous-admin-lookup-enabled"
      expect      : "true"
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "4.3 - HTTP logging parameters are not set - HTTP access log enabled"
      info              : "On each server enable HTTP logging. The HTTP subsystem keeps a log of all HTTP transactions in a text file in either common log format or extended log format. Common log format is the default, and follows a standard convention. Extended log format allows you to customize the information that is recorded. The default location and rotation policy for HTTP access logs is the same as the server log, in the logs directory below the server instance root directory.

  Unauthorized intrusions and malicious activities may go undetected."
      solution          : "1. In the left pane of the Console, expand Environment and select Servers.
2. In the Servers table, click the name of the server instance whose logging you want to configure.
3. Select Logging > HTTP
4. On the HTTP tab, click Enable HTTP access log file enabled
5. Configure the following parameters -
-Set Rotation Type as 'By Time'.
-Set Begin Rotation Time as '00:00'.
-Select Rotation Interval 24
-Select Limit Number of Retained Log Files
-Set Files to Retain as 60
6. Click Apply.
7. Restart the server."
      reference         : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      value_type        : POLICY_TEXT
      value_data        : "true"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:web-server/domain:web-server-log/domain:logging-enabled' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "4.3 - HTTP logging parameters are not set - Rotation Type"
      info            : "On each server enable HTTP logging. The HTTP subsystem keeps a log of all HTTP transactions in a text file in either common log format or extended log format. Common log format is the default, and follows a standard convention. Extended log format allows you to customize the information that is recorded. The default location and rotation policy for HTTP access logs is the same as the server log, in the logs directory below the server instance root directory.

  Unauthorized intrusions and malicious activities may go undetected."
      solution        : "1. In the left pane of the Console, expand Environment and select Servers.
2. In the Servers table, click the name of the server instance whose logging you want to configure.
3. Select Logging > HTTP
4. On the HTTP tab, click Enable HTTP access log file enabled
5. Configure the following parameters -
-Set Rotation Type as 'By Time'.
-Set Begin Rotation Time as '00:00'.
-Select Rotation Interval 24
-Select Limit Number of Retained Log Files
-Set Files to Retain as 60
6. Click Apply.
7. Restart the server."
      reference       : "800-53|AU-11,CSF|PR.PT-1,ITSG-33|AU-11,NESA|M5.2.3,NESA|T3.6.2,NIAv2|SM7"
      value_type      : POLICY_TEXT
      value_data      : "Rotation Type: byTime"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "Write-Host -NoNewLine 'Rotation Type: '; select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:web-server/domain:web-server-log/domain:rotation-type' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "4.3 - HTTP logging parameters are not set - Rotation Time"
      info              : "On each server enable HTTP logging. The HTTP subsystem keeps a log of all HTTP transactions in a text file in either common log format or extended log format. Common log format is the default, and follows a standard convention. Extended log format allows you to customize the information that is recorded. The default location and rotation policy for HTTP access logs is the same as the server log, in the logs directory below the server instance root directory.

  Unauthorized intrusions and malicious activities may go undetected."
      solution          : "1. In the left pane of the Console, expand Environment and select Servers.
2. In the Servers table, click the name of the server instance whose logging you want to configure.
3. Select Logging > HTTP
4. On the HTTP tab, click Enable HTTP access log file enabled
5. Configure the following parameters -
-Set Rotation Type as 'By Time'.
-Set Begin Rotation Time as '00:00'.
-Select Rotation Interval 24
-Select Limit Number of Retained Log Files
-Set Files to Retain as 60
6. Click Apply.
7. Restart the server."
      reference         : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      value_type        : POLICY_TEXT
      value_data        : "00:00"
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:web-server/domain:web-server-log/domain:rotation-time' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type              : AUDIT_POWERSHELL
      description       : "4.3 - HTTP logging parameters are not set - Rotation Interval"
      info              : "On each server enable HTTP logging. The HTTP subsystem keeps a log of all HTTP transactions in a text file in either common log format or extended log format. Common log format is the default, and follows a standard convention. Extended log format allows you to customize the information that is recorded. The default location and rotation policy for HTTP access logs is the same as the server log, in the logs directory below the server instance root directory.

  Unauthorized intrusions and malicious activities may go undetected."
      solution          : "1. In the left pane of the Console, expand Environment and select Servers.
2. In the Servers table, click the name of the server instance whose logging you want to configure.
3. Select Logging > HTTP
4. On the HTTP tab, click Enable HTTP access log file enabled
5. Configure the following parameters -
-Set Rotation Type as 'By Time'.
-Set Begin Rotation Time as '00:00'.
-Select Rotation Interval 24
-Select Limit Number of Retained Log Files
-Set Files to Retain as 60
6. Click Apply.
7. Restart the server."
      reference         : "800-53|AU-11,CSF|PR.PT-1,ITSG-33|AU-11,NESA|M5.2.3,NESA|T3.6.2,NIAv2|SM7"
      value_type        : POLICY_TEXT
      value_data        : 24
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args   : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:web-server/domain:web-server-log/domain:file-time-span' | foreach-object { $_.node.'#text' }"
      powershell_option : CAN_BE_NULL
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "4.3 - HTTP logging parameters are not set - Retain Number of Log Files"
      info            : "On each server enable HTTP logging. The HTTP subsystem keeps a log of all HTTP transactions in a text file in either common log format or extended log format. Common log format is the default, and follows a standard convention. Extended log format allows you to customize the information that is recorded. The default location and rotation policy for HTTP access logs is the same as the server log, in the logs directory below the server instance root directory.

  Unauthorized intrusions and malicious activities may go undetected."
      solution        : "1. In the left pane of the Console, expand Environment and select Servers.
2. In the Servers table, click the name of the server instance whose logging you want to configure.
3. Select Logging > HTTP
4. On the HTTP tab, click Enable HTTP access log file enabled
5. Configure the following parameters -
-Set Rotation Type as 'By Time'.
-Set Begin Rotation Time as '00:00'.
-Select Rotation Interval 24
-Select Limit Number of Retained Log Files
-Set Files to Retain as 60
6. Click Apply.
7. Restart the server."
      reference       : "800-53|AU-11,CSF|PR.PT-1,ITSG-33|AU-11,NESA|M5.2.3,NESA|T3.6.2,NIAv2|SM7"
      value_type      : POLICY_TEXT
      value_data      : 60
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "powershell_args".
      powershell_args : "select-xml -path 'C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\Config\Config.Xml' -namespace @{domain='http://xmlns.oracle.com/weblogic/domain'} -xpath '//domain:web-server/domain:web-server-log/domain:file-count' | foreach-object { $_.node.'#text' }"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "4.4 - Auditing provider should be present"
      info        : "Ensure that a WebLogic Auditing provider exists in the Domain's security realm.

	If auditing is not enabled, malicious activity could go undetected."
      solution    : "To ensure audit provider is present follow the steps mentioned below:
1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. Select 'Security Realms' on the left pane of the Administration Console.
4. Select the name of the active Security Realm.
5. Select Providers > Auditing
6. Check if an Auditing Provider exists. If not, follow steps 7-11.
7. Select New.
8. Enter the Name for the Auditing Provider.
9. Select the Type of Auditing Provider being created.
10. Select OK.
11. To activate these changes, in the Change Center of the Administration Console, click Activate Changes."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "sec:auditor xsi:type"
      expect      : 'sec:auditor xsi:type=".*"'
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "4.5 - Enable configuration Audit Logs"
      info        : "Configuration audit logs should be enabled

	If the 'Configuration Audit Type' is not set, then the system's configuration can be changed maliciously and it could go undetected."
      solution    : "To set the configuration Audit logs, perform the settings mentioned below:
1. Login to the Administration Console.
2.  In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Configuration > General, then click Advanced at the bottom of the page.
5. In the Configuration Audit Type field, select 'Change Log'. Click Save."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "configuration-audit-type"
      expect      : "configuration-audit-type>log"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "4.6 - Auditing Severity Setting should be set"
      info        : "Ensure that the 'Severity' setting for the WebLogic Auditing providers is ERROR.

	Failing to log audit events may cause malicious user activity to go undetected."
      solution    : "To set the severity level on the system perform the steps mentioned below:
1. Login to the Administration Console.
2. In the Change Center, click Lock & Edit.
3. In the left pane, select the Domain name.
4. Select Security Realms > Name of the Active Realm.
5. Select Providers > Auditing.
6. On the Auditing tab, select the name of the WebLogic Auditing Provider.
7. Select the Provider Specific tab.
8. Ensure that the 'Severity' setting is set to [ERROR], click Save."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      value_type  : POLICY_TEXT
# Note: Variable @WEBLOGIC_DOMAIN_HOME@ replaced with "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain" in field "value_data".
      value_data  : "C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\config\\config.xml"
      regex       : "wls:severity"
      expect      : "wls:severity>ERROR"
      file_option : CAN_BE_NULL
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "TNS_Oracle_WebLogic_11_Security_Guide_Windows.audit"
      info        : "WebLogic is not installed in the path specified or remote registry service is disabled.

      NOTE: Nessus has not identified that the chosen audit applies to the target device."
    </report>
  </else>
</if>

</group_policy>
</check_type>
