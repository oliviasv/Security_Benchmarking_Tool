#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2020/06/16 $
#
# Description : This document implements the security configuration as recommended by the
#               DISA Microsoft Windows 2012 Server Domain Name System v1r14 STIG.
#
#<ui_metadata>
#<display_name>DISA Microsoft Windows 2012 Server DNS STIG v1r14</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>Microsoft Windows 2012 Server DNS</name>
#  <version>1.14.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip</link>
#</spec>
#<labels>windows,disa,microsoft,server_2012,dns</labels>
#<benchmark_refs>STIG-ID,Rule-ID,Vuln-ID</benchmark_refs>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"MS Windows">

<if>
  <condition type:"AND">
    <custom_item>
      type        : REGISTRY_SETTING
      description : "Windows Server 2012 is installed"
      value_type  : POLICY_TEXT
      value_data  : "^[a-zA-Z0-9\(\)\s]*2012[a-zA-Z0-9\(\)\s]*$"
      reg_key     : "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion"
      reg_item    : "ProductName"
      check_type  : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "DNS Server is installed"
      value_type      : POLICY_TEXT
      value_data      : 'DNS Server.*Installed'
      powershell_args : "Get-WindowsFeature -Name DNS | Where {$_.InstallState -eq 'Installed'} | Select DisplayName, InstallState"
      check_type      : CHECK_REGEX
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_STIG_Windows_2012_Server_DNS_v1r14.audit from DISA Microsoft Windows 2012 Server Domain Name System v1r14 STIG"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AC-000001 - The Windows 2012 DNS Server must restrict incoming dynamic update requests to known clients."
      info            : "Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) on any system.

A DNS server's function requires it to be able to handle multiple sessions at a time so limiting concurrent sessions could potentially cause an impact to availability.
Primary name servers need to be configured to limit the actual hosts from which they will accept dynamic updates and from which they will accept zone transfer requests, and all name servers should be configured to limit the hosts from/to which they receive/send zone transfers. Restricting sessions to known hosts will mitigate the DoS vulnerability."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Once selected, right-click the name of the zone.

From the displayed context menu, click the 'Properties' option.

On the opened domain's properties box, click the 'General' tab.

If the Type: is not Active Directory-Integrated, configure the zone for AD-integration.

Select 'Secure only' from the Dynamic updates: drop-down list."
      reference       : "800-171|3.13.1,800-53|SC-7(11),CAT|II,CCI|CCI-000054,CSF|PR.AC-5,CSF|PR.PT-4,ITSG-33|SC-7(11),NIAv2|GS7c,Rule-ID|SV-72667r3_rule,STIG-ID|WDNS-AC-000001,TBA-FIISB|31.3,Vuln-ID|V-58237"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = @(); $zones = (Get-DnsServerZone | Select ZoneName, IsDsIntegrated, DynamicUpdate); foreach ($zone in $zones) { if (!($zone | Out-String | Select-String -Pattern '[\s]*True[\s]+Secure Only[\s]*$')) { $non_compliant_zones += $zone; } }; ''; if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { $zones; ''; 'All Zones Compliant'; };"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000001 - The Windows 2012 DNS Server must be configured to record, and make available to authorized personnel, who added/modified/deleted DNS zone information."
      info            : "Without a means for identifying the individual that produced the information, the information cannot be relied upon. Identifying the validity of information may be delayed or deterred.

This requirement ensures organizational personnel have a means to identify who produced or changed specific information in transfers, zone information, or DNS configuration changes."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

If not automatically started, initialize the 'Server Manager' window by clicking its icon from the bottom left corner of the screen.

On the opened 'Server Manager' window, from the left pane, click to select 'DNS'.

From the right pane, under the 'SERVERS' section, right-click the DNS server.

From the displayed context menu, click the 'DNS Manager' option.

Click on the 'Event Logging' tab.

Select the 'Errors and warnings' or 'All events' option.

Click on 'Apply'.

Click on 'OK'."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000366,CCI|CCI-001902,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72973r3_rule,STIG-ID|WDNS-AU-000001,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58543"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-AU-000003 - The Windows 2012 DNS Server must, in the event of an error validating another DNS servers identity, send notification to the DNS administrator."
      info        : "Failing to act on the validation errors may result in the use of invalid, corrupted, or compromised information. The validation of bindings can be achieved, for example, by the use of cryptographic checksums. Validations must be performed automatically.

At a minimum, the application must log the validation error. However, more stringent actions can be taken based on the security posture and value of the information. The organization should consider the system's environment and impact of the errors when defining the actions. Additional examples of actions include automated notification to administrators, halting system process, or halting the specific operation.

The DNS server should audit all failed attempts at server authentication through DNSSEC and TSIG/SIG(0). The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "To detect and notify the administrator, configure a third-party event monitoring system or, at a minimum, document and implement a procedure to require the administrator to check the DNS logs on a routine, daily basis."
      reference   : "CAT|II,CCI|CCI-000366,CCI|CCI-001906,Rule-ID|SV-72977r4_rule,STIG-ID|WDNS-AU-000003,Vuln-ID|V-58547"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000005 - The Windows 2012 DNS Server log must be enabled."
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select 'Properties'.

Click on the 'Event Logging' tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on 'Apply'.

Click 'OK'."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000169,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72979r3_rule,STIG-ID|WDNS-AU-000005,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58549"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000006 - The Windows 2012 DNS Server logging must be enabled to record events from all DNS server functions."
      info            : "DNS server performance can be affected when additional logging is enabled, however the enhanced DNS logging and diagnostics feature in Windows Server 2012 R2 is designed to have a very low impact on performance. Enhanced DNS logging and diagnostics in Windows Server 2012 R2 and later includes DNS Audit events and DNS Analytic events. DNS audit logs are enabled by default, and do not significantly affect DNS server performance. DNS analytical logs are not enabled by default and typically will only affect DNS server performance at very high DNS query rates.

Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Open an elevated Windows PowerShell prompt on the DNS server to which event logging needs to be enabled.

Use the 'Set-DnsServerDiagnostics' cmdlet to enable the required diagnostic events.

Set-DnsServerDiagnostics -<diagnostic event> $true <enter> for the required diagnostic events.
For example, to set EnableLoggingForLocalLookupEvent to true, enter the following at the command line:
Set-DnsServerDiagnostics -EnableLoggingForLocalLookupEvent $true <enter>"
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000169,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72981r6_rule,STIG-ID|WDNS-AU-000006,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58551"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Settings Compliant'
      powershell_args : "$settings = (Get-DnsServerDiagnostics | Out-String | Select-String -Pattern '(Queries|Answers|Notifications|Update|QuestionTransactions|UnmatchedResponse|SendPackets|ReceivePackets|TcpPackets|UdpPackets|FullPackets|UseSystemEventLog|EnableLoggingFor(LocalLookupEvent|PluginDllEvent|RecursiveLookupEvent|RemoteServerEvent|ServerStartStopEvent|TombstoneEvent|ZoneDataWriteEvent|ZoneLoadingEvent))[\s].*' -AllMatches | % { $_.Matches.Value }); $non_compliant = ($settings | Select-String -NotMatch -Pattern '(?s)[\s]*True'); if ($non_compliant) { 'Non Compliant Settings:'; $non_compliant } else { $settings; ''; 'All Settings Compliant' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type        : USER_RIGHTS_POLICY
      description : "WDNS-AU-000007 - The Windows 2012 DNS Server logging criteria must only be configured by the ISSM or individuals appointed by the ISSM - manage"
      info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

Since the configuration of the audit logs on the DNS server dictates which events are logged for the purposes of correlating events, the permissions for configuring the audit logs must be restricted to only those with the role of ISSM or those appointed by the ISSM."
      solution    : "Configure the permissions on the DNS logs.

Standard user accounts or groups must not have greater than READ access.

The default permissions listed below satisfy this requirement:

Eventlog - Full Control
SYSTEM - Full Control
Administrators - Full Control

The default locations are:

DNS Server %SystemRoot%\System32\Winevt\Logs\DNS Server.evtx"
      reference   : "800-53|AC-6(7),CAT|II,CCI|CCI-000171,CSCv6|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,NESA|M1.1.3,NESA|T5.1.1,Rule-ID|SV-72983r5_rule,STIG-ID|WDNS-AU-000007,Vuln-ID|V-58553"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type  : USER_RIGHT
      value_data  : "Administrators" || ("Administrators" && "Auditors")
      right_type  : SeSecurityPrivilege
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000007 - The Windows 2012 DNS Server logging criteria must only be configured by the ISSM or individuals appointed by the ISSM - permissions"
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

Since the configuration of the audit logs on the DNS server dictates which events are logged for the purposes of correlating events, the permissions for configuring the audit logs must be restricted to only those with the role of ISSM or those appointed by the ISSM."
      solution        : "Configure the permissions on the DNS logs.

Standard user accounts or groups must not have greater than READ access.

The default permissions listed below satisfy this requirement:

Eventlog - Full Control
SYSTEM - Full Control
Administrators - Full Control

The default locations are:

DNS Server %SystemRoot%\System32\Winevt\Logs\DNS Server.evtx"
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000171,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ITSG-33|AU-12,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-72983r5_rule,STIG-ID|WDNS-AU-000007,SWIFT-CSCv1|6.4,Vuln-ID|V-58553"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : "STATUS: PASSED"
      powershell_args : "$file = $env:SystemRoot+'\System32\Winevt\Logs\DNS Server.evtx'; $perms = 'NT SERVICE\EventLog:*(F)', 'NT AUTHORITY\SYSTEM:*(F)', 'BUILTIN\Administrators:*(F)'; $required = $false; $status = 'PASSED'; $acls = icacls $file; $file+':'; foreach ($acl in $acls) { $acl = $acl.Replace($file, '').Trim(); if ((!$acl) -or ($acl -like 'Successfully processed*')) { continue } elseif ($perms -contains $acl) { '   '+$acl; $perms = $perms | Where-Object { $_ -ne $acl }; continue } else { $status = 'FAILED'; '   '+$acl+' ** incorrect **' } }; if (($perms.length) -and ($required)) { foreach ($acl in $perms) { $status = 'FAILED'; '   '+$acl+' ** missing **' } }; ''; 'STATUS: '+$status"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000008 - The Windows 2012 DNS Server must generate audit records for the success and failure of all name server events - enabled"
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

If not automatically started, initialize the 'Server Manager' window by clicking its icon from the bottom left corner of the screen.

On the opened 'Server Manager' window, from the left pane, click to select DNS.

From the right pane, under the 'SERVERS' section, right-click the DNS server.

From the displayed context menu, click the 'DNS Manager' option.

Click on the 'Event Logging' tab.

Select the 'Errors and warnings' or 'All events' option.

Click on 'Apply'.

Click on 'OK'.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on 'Properties'.

Select the 'Enable logging' check box.

Click on 'OK'."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72985r5_rule,STIG-ID|WDNS-AU-000008,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58555"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : REGISTRY_SETTING
          description : "Windows Server 2012 R2 is installed"
          value_type  : POLICY_TEXT
          value_data  : "^[a-zA-Z0-9\(\)\s]*2012[\s]*R2[a-zA-Z0-9\(\)\s]*$"
          reg_key     : "HKLM\Software\Microsoft\Windows Nt\Currentversion"
          reg_item    : "ProductName"
          check_type  : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-AU-000008 - The Windows 2012 DNS Server must generate audit records for the success and failure of all name server events - enhanced"
          info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

If not automatically started, initialize the 'Server Manager' window by clicking its icon from the bottom left corner of the screen.

On the opened 'Server Manager' window, from the left pane, click to select DNS.

From the right pane, under the 'SERVERS' section, right-click the DNS server.

From the displayed context menu, click the 'DNS Manager' option.

Click on the 'Event Logging' tab.

Select the 'Errors and warnings' or 'All events' option.

Click on 'Apply'.

Click on 'OK'.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on 'Properties'.

Select the 'Enable logging' check box.

Click on 'OK'."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72985r5_rule,STIG-ID|WDNS-AU-000008,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58555"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'enabled: true'
          powershell_args : "$setting = (wevtutil get-log Microsoft-Windows-DNSServer/Analytical | Select-String -Pattern '^enabled:.*'); if ($setting) { $setting } else { 'enabled: false' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-AU-000008 - The Windows 2012 DNS Server must generate audit records for the success and failure of all name server events - enhanced"
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

If not automatically started, initialize the 'Server Manager' window by clicking its icon from the bottom left corner of the screen.

On the opened 'Server Manager' window, from the left pane, click to select DNS.

From the right pane, under the 'SERVERS' section, right-click the DNS server.

From the displayed context menu, click the 'DNS Manager' option.

Click on the 'Event Logging' tab.

Select the 'Errors and warnings' or 'All events' option.

Click on 'Apply'.

Click on 'OK'.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on 'Properties'.

Select the 'Enable logging' check box.

Click on 'OK'."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72985r5_rule,STIG-ID|WDNS-AU-000008,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58555"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000010 - The Windows 2012 DNS Server log must include event types within the log records - enabled"
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

From the right pane, under the SERVERS section, right-click the DNS server.

From the displayed context menu, click the DNS Manager option.

Click on the Event Logging tab.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.
Select the 'Enable logging' check box.

Click on OK."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000130,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72991r3_rule,STIG-ID|WDNS-AU-000010,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58561"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : REGISTRY_SETTING
          description : "Windows Server 2012 R2 is installed"
          value_type  : POLICY_TEXT
          value_data  : "^[a-zA-Z0-9\(\)\s]*2012[\s]*R2[a-zA-Z0-9\(\)\s]*$"
          reg_key     : "HKLM\Software\Microsoft\Windows Nt\Currentversion"
          reg_item    : "ProductName"
          check_type  : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-AU-000010 - The Windows 2012 DNS Server log must include event types within the log records - enhanced"
          info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

From the right pane, under the SERVERS section, right-click the DNS server.

From the displayed context menu, click the DNS Manager option.

Click on the Event Logging tab.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.
Select the 'Enable logging' check box.

Click on OK."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000130,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72991r3_rule,STIG-ID|WDNS-AU-000010,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58561"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'enabled: true'
          powershell_args : "$setting = (wevtutil get-log Microsoft-Windows-DNSServer/Analytical | Select-String -Pattern '^enabled:.*'); if ($setting) { $setting } else { 'enabled: false' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-AU-000010 - The Windows 2012 DNS Server log must include event types within the log records - enhanced"
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

From the right pane, under the SERVERS section, right-click the DNS server.

From the displayed context menu, click the DNS Manager option.

Click on the Event Logging tab.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.
Select the 'Enable logging' check box.

Click on OK."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000130,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72991r3_rule,STIG-ID|WDNS-AU-000010,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58561"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000011 - The Windows 2012 DNS Server log must include time stamps within the log records - enabled"
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000131,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72993r3_rule,STIG-ID|WDNS-AU-000011,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58563"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : REGISTRY_SETTING
          description : "Windows Server 2012 R2 is installed"
          value_type  : POLICY_TEXT
          value_data  : "^[a-zA-Z0-9\(\)\s]*2012[\s]*R2[a-zA-Z0-9\(\)\s]*$"
          reg_key     : "HKLM\Software\Microsoft\Windows Nt\Currentversion"
          reg_item    : "ProductName"
          check_type  : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-AU-000011 - The Windows 2012 DNS Server log must include time stamps within the log records - enhanced"
          info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000131,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72993r3_rule,STIG-ID|WDNS-AU-000011,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58563"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'enabled: true'
          powershell_args : "$setting = (wevtutil get-log Microsoft-Windows-DNSServer/Analytical | Select-String -Pattern '^enabled:.*'); if ($setting) { $setting } else { 'enabled: false' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-AU-000011 - The Windows 2012 DNS Server log must include time stamps within the log records - enhanced"
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000131,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72993r3_rule,STIG-ID|WDNS-AU-000011,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58563"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000012 - The Windows 2012 DNS Server log must include origin of events within the log records - enabled"
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000132,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72995r3_rule,STIG-ID|WDNS-AU-000012,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58565"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : REGISTRY_SETTING
          description : "Windows Server 2012 R2 is installed"
          value_type  : POLICY_TEXT
          value_data  : "^[a-zA-Z0-9\(\)\s]*2012[\s]*R2[a-zA-Z0-9\(\)\s]*$"
          reg_key     : "HKLM\Software\Microsoft\Windows Nt\Currentversion"
          reg_item    : "ProductName"
          check_type  : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-AU-000012 - The Windows 2012 DNS Server log must include origin of events within the log records - enhanced"
          info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000132,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72995r3_rule,STIG-ID|WDNS-AU-000012,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58565"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'enabled: true'
          powershell_args : "$setting = (wevtutil get-log Microsoft-Windows-DNSServer/Analytical | Select-String -Pattern '^enabled:.*'); if ($setting) { $setting } else { 'enabled: false' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-AU-000012 - The Windows 2012 DNS Server log must include origin of events within the log records - enhanced"
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000132,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72995r3_rule,STIG-ID|WDNS-AU-000012,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58565"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000013 - The Windows 2012 DNS Server log must include the source of events within the log records - enabled"
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000133,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72997r3_rule,STIG-ID|WDNS-AU-000013,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58567"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : REGISTRY_SETTING
          description : "Windows Server 2012 R2 is installed"
          value_type  : POLICY_TEXT
          value_data  : "^[a-zA-Z0-9\(\)\s]*2012[\s]*R2[a-zA-Z0-9\(\)\s]*$"
          reg_key     : "HKLM\Software\Microsoft\Windows Nt\Currentversion"
          reg_item    : "ProductName"
          check_type  : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-AU-000013 - The Windows 2012 DNS Server log must include the source of events within the log records - enhanced"
          info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000133,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72997r3_rule,STIG-ID|WDNS-AU-000013,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58567"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'enabled: true'
          powershell_args : "$setting = (wevtutil get-log Microsoft-Windows-DNSServer/Analytical | Select-String -Pattern '^enabled:.*'); if ($setting) { $setting } else { 'enabled: false' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-AU-000013 - The Windows 2012 DNS Server log must include the source of events within the log records - enhanced"
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000133,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72997r3_rule,STIG-ID|WDNS-AU-000013,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58567"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000014 - The Windows 2012 DNS Server log must include results of events within the log records - enabled"
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000134,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72999r3_rule,STIG-ID|WDNS-AU-000014,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58569"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : REGISTRY_SETTING
          description : "Windows Server 2012 R2 is installed"
          value_type  : POLICY_TEXT
          value_data  : "^[a-zA-Z0-9\(\)\s]*2012[\s]*R2[a-zA-Z0-9\(\)\s]*$"
          reg_key     : "HKLM\Software\Microsoft\Windows Nt\Currentversion"
          reg_item    : "ProductName"
          check_type  : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-AU-000014 - The Windows 2012 DNS Server log must include results of events within the log records - enhanced"
          info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000134,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72999r3_rule,STIG-ID|WDNS-AU-000014,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58569"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'enabled: true'
          powershell_args : "$setting = (wevtutil get-log Microsoft-Windows-DNSServer/Analytical | Select-String -Pattern '^enabled:.*'); if ($setting) { $setting } else { 'enabled: false' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-AU-000014 - The Windows 2012 DNS Server log must include results of events within the log records - enhanced"
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000134,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-72999r3_rule,STIG-ID|WDNS-AU-000014,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58569"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-AU-000015 - The Windows 2012 DNS Server log must include identity of individual or process associated with events within the log records - enabled"
      info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-001487,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-73001r3_rule,STIG-ID|WDNS-AU-000015,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58571"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : REGISTRY_SETTING
          description : "Windows Server 2012 R2 is installed"
          value_type  : POLICY_TEXT
          value_data  : "^[a-zA-Z0-9\(\)\s]*2012[\s]*R2[a-zA-Z0-9\(\)\s]*$"
          reg_key     : "HKLM\Software\Microsoft\Windows Nt\Currentversion"
          reg_item    : "ProductName"
          check_type  : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-AU-000015 - The Windows 2012 DNS Server log must include identity of individual or process associated with events within the log records - enhanced"
          info            : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-001487,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-73001r3_rule,STIG-ID|WDNS-AU-000015,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58571"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'enabled: true'
          powershell_args : "$setting = (wevtutil get-log Microsoft-Windows-DNSServer/Analytical | Select-String -Pattern '^enabled:.*'); if ($setting) { $setting } else { 'enabled: false' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-AU-000015 - The Windows 2012 DNS Server log must include identity of individual or process associated with events within the log records - enhanced"
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

In order to compile an accurate risk assessment, it is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis. It is important, therefore, to log all possible data related to events so that they can be correlated and analyzed to determine the risk.

Data required to be captured include: whether an event was successful or failed, the event type or category, timestamps for when the event occurred, where the event originated, who/what initiated the event,  affect the event had on the DNS implementation and any processes associated with the event."
          solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-001487,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-73001r3_rule,STIG-ID|WDNS-AU-000015,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58571"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <report type:"WARNING">
      description : "WDNS-AU-000016 - The Windows 2012 DNS Servers audit records must be backed up at least every seven days onto a different system or system component than the system or component being audited."
      info        : "Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on a defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained.

This helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records.

This requirement only applies to applications that have a native backup capability for audit records. Operating system backup requirements cover applications that do not provide native backup functions.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Document and implement a backup policy to back up the DNS Server's audit records at least every seven days."
      reference   : "CAT|II,CCI|CCI-001348,Rule-ID|SV-73003r4_rule,STIG-ID|WDNS-AU-000016,Vuln-ID|V-58573"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000001 - The validity period for the RRSIGs covering the DS RR for a zones delegated children must be no less than two days and no more than one week."
      info            : "The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.

To prevent the impact of a compromised KSK, a delegating parent should set the signature validity period for RRSIGs covering DS RRs in the range of a few days to 1 week. This re-signing does not require frequent rollover of the parent's ZSK, but scheduled ZSK rollover should still be performed at regular intervals."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Right-click on the zone, choose DNSSEC->Properties.

On the ZSK tab, for DS signature validity period (hours), choose more than 48 and less than 168."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73005r4_rule,STIG-ID|WDNS-CM-000001,SWIFT-CSCv1|2.3,Vuln-ID|V-58575"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Items Compliant'
      powershell_args : "$items = @(); $non_compliant = @(); $zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false -and $_.IsReverseLookupZone -eq $false }); foreach ($zone in $zones) { $keys = (dnscmd /ZoneEnumSKDs $zone.ZoneName | Select-String -Pattern '(^[\s]*$|(SKD GUID|DS signature|KSK flag))'); foreach ($key in $keys) { if (($key | Out-String).Trim()) { if ($key | Select-String -Pattern 'SKD GUID') { $guid = $key } if ($key | Select-String -Pattern 'DS signature') { if ($guid) { if ($key | Out-String | Select-String -Pattern 'DS signature validity period[\s]*=[\s]*(172800|172[8-9][0-9][0-9]|17[2-9][0-9][0-9][0-9]|1[7-9][0-9]{4}|[2-5][0-9][0-9][0-9][0-9][0-9]|60[0-3][0-9][0-9][0-9]|604[0-7][0-9][0-9]|604800)+[\s]*') { $items += $guid; $items += $key; '' } else { $non_compliant += $guid; $non_compliant += $key; '' } } } if ($key | Select-String -Pattern 'KSK flag[\s]*=[\s]*1') { $guid = ''; } } } } if ($non_compliant) { 'Non Compliant Items:'; $non_compliant } else { $items; ''; 'All Items Compliant'}"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-CM-000002 - The Windows DNS name servers for a zone must be geographically dispersed."
      info        : "In addition to network-based separation, authoritative name servers should be dispersed geographically as well. In other words, in addition to being located on different network segments, the authoritative name servers should not all be located within the same building. One approach that some organizations follow is to locate some authoritative name servers in their own premises and others in their ISPs' data centers or in partnering organizations.

A network administrator may choose to use a 'hidden' master authoritative server and only have secondary servers visible on the network. A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone.  If the master authoritative name server is 'hidden', a secondary authoritative name server may reside in the same building as the hidden master.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "For non-AD-integrated Windows DNS Servers, distribute secondary authoritative servers to be located in different buildings from the primary authoritative server."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-73007r4_rule,STIG-ID|WDNS-CM-000002,Vuln-ID|V-58577"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000003 - The Windows 2012 DNS Server must prohibit recursion on authoritative name servers for which forwarders have not been configured for external queries - root hints"
      info            : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, right-click on the server name for the DNS server and select 'Properties'.

Click on the 'Forwarders' tab.

If forwarders are not being used, click the 'Advanced' tab.

Select the 'Disable recursion (also disables forwarders)' check box."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73009r5_rule,STIG-ID|WDNS-CM-000003,SWIFT-CSCv1|2.3,Vuln-ID|V-58579"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'False'
      powershell_args : "(Get-DNSServerForwarder).UseRootHint"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000003 - The Windows 2012 DNS Server must prohibit recursion on authoritative name servers for which forwarders have not been configured for external queries - recursion"
      info            : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, right-click on the server name for the DNS server and select 'Properties'.

Click on the 'Forwarders' tab.

If forwarders are not being used, click the 'Advanced' tab.

Select the 'Disable recursion (also disables forwarders)' check box."
      reference       : "800-53|SC-22,CAT|II,CCI|CCI-000366,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-73009r5_rule,STIG-ID|WDNS-CM-000003,Vuln-ID|V-58579"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Settings Compliant'
      powershell_args : "$forwarders = ((Get-DNSServerForwarder).IPAddress).IPAddressToString; if ($forwarders) { 'Forwarders:'; $forwarders; ''; 'All Settings Compliant'} else { $recursion = (Get-DNSServerRecursion).Enable; if (!($recursion)) { 'Recursion: ' + $recursion; ''; 'All Settings Compliant'} else { 'Non Compliant Settings.'; ''; 'No Forwarders Configured, Recursion: ' + $recursion } }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000004 - Forwarders on an authoritative Windows 2012 DNS Server, if enabled for external resolution, must only forward to either an internal, non-AD-integrated DNS server or to the DoD Enterprise Recursive Services (ERS) - root hints"
      info            : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, right-click on the server name for the DNS server and select 'Properties'.

Click on the 'Forwarders' tab.

Replace the forwarders being used with another DoD-managed DNS server or the DoD Enterprise Recursive Services (ERS).

Deselect the 'Use root hints if no forwarders are available'."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73011r5_rule,STIG-ID|WDNS-CM-000004,SWIFT-CSCv1|2.3,Vuln-ID|V-58581"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'False'
      powershell_args : "(Get-DNSServerForwarder).UseRootHint"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000004 - Forwarders on an authoritative Windows 2012 DNS Server, if enabled for external resolution, must only forward to either an internal, non-AD-integrated DNS server or to the DoD Enterprise Recursive Services (ERS) - forwarders"
      info            : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, right-click on the server name for the DNS server and select 'Properties'.

Click on the 'Forwarders' tab.

Replace the forwarders being used with another DoD-managed DNS server or the DoD Enterprise Recursive Services (ERS).

Deselect the 'Use root hints if no forwarders are available'."
      reference       : "800-53|SC-22,CAT|II,CCI|CCI-000366,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-73011r5_rule,STIG-ID|WDNS-CM-000004,Vuln-ID|V-58581"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Settings Compliant'
      powershell_args : "$forwarders = ((Get-DNSServerForwarder).IPAddress).IPAddressToString; if ($forwarders) { 'Forwarders:'; $forwarders } else { $recursion = (Get-DNSServerRecursion).Enable; if (!($recursion)) { 'Recursion: ' + $recursion; ''; 'All Settings Compliant'} else { 'Non Compliant Settings.'; ''; 'No Forwarders Configured, Recursion: ' + $recursion } }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000005 - The Windows 2012 DNS Server with a caching name server role must restrict recursive query responses to only the IP addresses and IP address ranges of known supported clients."
      info            : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers specifically fulfilling the role of providing recursive query responses for external zones need to be segregated from name servers authoritative for internal zones.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Configure a local or network firewall to only allow specific IP addresses/ranges to send inbound TCP and UDP port 53 traffic to a DNS caching server."
      reference       : "800-53|SC-21,CAT|II,CCI|CCI-000366,ITSG-33|SC-21,NESA|T4.5.1,Rule-ID|SV-73013r5_rule,STIG-ID|WDNS-CM-000005,Vuln-ID|V-58583"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'Not an authoritative DNS server'
      powershell_args : "$authoritative = (Get-DNSServerZone | Where { $_.ZoneType -eq 'Primary' }); if (!($authoritative)) { 'Not an authoritative DNS server' } else { 'Manual Review Required' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000006 - The Windows 2012 DNS Server with a caching name server role must be secured against pollution by ensuring the authenticity and integrity of queried records."
      info            : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.

Windows 2012 DNS Servers with a caching name server role must be secured against pollution by ensuring that the authenticity and integrity of queried records are verified before any data is cached.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Implement DNSSEC on all non-AD-integrated, standalone, caching Windows 2012 DNS Servers."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73015r4_rule,STIG-ID|WDNS-CM-000006,SWIFT-CSCv1|2.3,Vuln-ID|V-58585"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $non_integrated } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000007 - The Windows 2012 DNS Server must implement cryptographic mechanisms to detect changes to information during transmission unless otherwise protected by alternative physical safeguards, such as, at a minimum, a Protected Distribution System (PDS)."
      info            : "Encrypting information for transmission protects information from unauthorized disclosure and modification. Cryptographic mechanisms implemented to protect information integrity include, for example, cryptographic hash functions which have common application in digital signatures, checksums, and message authentication codes.

Confidentiality is not an objective of DNS, but integrity is. DNSSEC and TSIG/SIG(0) both digitally sign DNS information to authenticate its source and ensure its integrity."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-000366,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73017r6_rule,STIG-ID|WDNS-CM-000007,Vuln-ID|V-58587"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000008 - The validity period for the RRSIGs covering a zones DNSKEY RRSet must be no less than two days and no more than one week."
      info            : "The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.

To minimize the impact of a compromised ZSK, a zone administrator should set a signature validity period of 1 week for RRSIGs covering the DNSKEY RRSet in the zone (the RRSet that contains the ZSK and KSK for the zone). The DNSKEY RRSet can be re-signed without performing a ZSK rollover, but scheduled ZSK rollovers should still be performed at regular intervals."
      solution        : "Log on to the DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Right-click the zone and select DNSSEC, Properties.

Select the KSK Tab. For the 'DNSKEY RRSET signature validity period (hours):' setting, configure to a value between 48-168 hours.

Select the ZSK Tab. For the 'DNSKEY signature validity period (hours):' setting, configure to a value between 48-168 hours."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73019r5_rule,STIG-ID|WDNS-CM-000008,SWIFT-CSCv1|2.3,Vuln-ID|V-58589"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Items Compliant'
      powershell_args : "$items = @(); $non_compliant = @(); $zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false -and $_.IsReverseLookupZone -eq $false }); foreach ($zone in $zones) { $keys = (dnscmd /ZoneEnumSKDs $zone.ZoneName | Select-String -Pattern '(^[\s]*$|(SKD GUID|DS signature))'); foreach ($key in $keys) { if (($key | Out-String).Trim()) { if ($key | Select-String -Pattern 'SKD GUID') { $guid = $key } if ($key | Select-String -Pattern 'DS signature') { if ($guid) { if ($key | Out-String | Select-String -Pattern 'DS signature validity period[\s]*=[\s]*(172800|172[8-9][0-9][0-9]|17[2-9][0-9][0-9][0-9]|1[7-9][0-9]{4}|[2-5][0-9][0-9][0-9][0-9][0-9]|60[0-3][0-9][0-9][0-9]|604[0-7][0-9][0-9]|604800)+[\s]*') { $items += $guid; $items += $key; '' } else { $non_compliant += $guid; $non_compliant += $key; '' } } } } } } if ($non_compliant) { 'Non Compliant Items:'; $non_compliant } else { $items; ''; 'All Items Compliant'}"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000009 - NSEC3 must be used for all internal DNS zones."
      info            : "NSEC records list the resource record types for the name, as well as the name of the next resource record. With this information it is revealed that the resource record type for the name queried, or the resource record name requested, does not exist. NSEC uses the actual resource record names, whereas NSEC3 uses a one-way hash of the name. In this way, walking zone data from one record to the next is prevented, at the expense of some CPU cycles both on the authoritative server as well as the resolver. To prevent giving access to an entire zone file, NSEC3 should be configured and in order to use NSEC3, RSA/SHA-1 should be used as the algorithm, as some resolvers that understand RSA/SHA-1 might not understand NSEC3. Using RSA/SHA-256 is a safe alternative."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

If not automatically started, initialize the Server Manager window by clicking its icon from the bottom left corner of the screen.

Once the Server Manager window is initialized, from the left pane, click to select the DNS category.

From the right pane, under the SERVERS section, right-click the DNS server.

From the context menu that appears, click DNS Manager.

On the opened DNS Manager snap-in from the left pane, expand the server name and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Right-click the zone, select DNSSEC, Sign the Zone.

Re-sign the zone, using an NSEC3 algorithm (RSA/SHA-1 (NSEC3), RSA/SHA-256, RSA/SHA-512)."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73021r4_rule,STIG-ID|WDNS-CM-000009,SWIFT-CSCv1|2.3,Vuln-ID|V-58591"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_nsec3 = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false} | Get-DnsServerDnsSecZoneSetting | Select ZoneName, DenialOfExistence | Where {$_.DenialOfExistence -ne 'NSec3'}); $non_dnssec = (Get-DnsServerZone | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_nsec3 -or $non_dnssec) { 'Non Compliant Zones:'; $non_nsec3; ''; $non_dnssec; } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false} | Get-DnsServerDnsSecZoneSetting | Select ZoneName, DenialOfExistence); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000010 - The Windows 2012 DNS Servers zone files must have NS records that point to active name servers authoritative for the domain specified in that record."
      info            : "Poorly constructed NS records pose a security risk because they create conditions under which an adversary might be able to provide the missing authoritative name services that are improperly specified in the zone file. The adversary could issue bogus responses to queries that clients would accept because they learned of the adversary's name server from a valid authoritative name server, one that need not be compromised for this attack to be successful. The list of slave servers must remain current within 72 hours of any changes to the zone architecture that would affect the list of slaves. If a slave server has been retired or is not operational but remains on the list, then an adversary might have a greater opportunity to impersonate that slave without detection, rather than if the slave was actually online. For example, the adversary may be able to spoof the retired slave's IP address without an IP address conflict, which would not be likely to occur if the true slave were active.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "If DNS servers are AD-integrated, troubleshoot and remedy the replication problem where the non-responsive name server is not getting updated.

If DNS servers are not AD-integrated, log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Review the NS records for the zone.

Select the NS record for the non-responsive name server and remove the record."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73023r5_rule,STIG-ID|WDNS-CM-000010,SWIFT-CSCv1|2.3,Vuln-ID|V-58593"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'MANUAL REVIEW'
      powershell_args : "'Records to review'; ''; foreach ($zone in Get-DnsServerZone) { 'Zone: ' + $zone.ZoneName + ':'; ''; Get-DnsServerResourceRecord -ZoneName $zone.ZoneName -RRType 'NS'; ''; }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000012 - All authoritative name servers for a zone must be located on different network segments."
      info            : "Most enterprises have an authoritative primary server and a host of authoritative secondary name servers. It is essential that these authoritative name servers for an enterprise be located on different network segments. This dispersion ensures the availability of an authoritative name server not only in situations in which a particular router or switch fails but also during events involving an attack on an entire network segment.

A network administrator may choose to use a 'hidden' master authoritative server and only have secondary servers visible on the network. A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone. If the master authoritative name server is 'hidden', a secondary authoritative name server may reside on the same network as the hidden master.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "For non-AD-integrated Windows DNS Servers, distribute secondary authoritative servers on separate network segments from the primary authoritative server."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73025r4_rule,STIG-ID|WDNS-CM-000012,SWIFT-CSCv1|2.3,Vuln-ID|V-58595"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $non_integrated } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000013 - All authoritative name servers for a zone must have the same version of zone information."
      info            : "The only protection approach for content control of a DNS zone file is the use of a zone file integrity checker. The effectiveness of integrity checking using a zone file integrity checker depends upon the database of constraints built into the checker. The deployment process consists of developing these constraints with the right logic, and the only determinant of the truth value of these logical predicates is the parameter values for certain key fields in the format of various RRTypes.

The serial number in the SOA RDATA is used to indicate to secondary name servers that a change to the zone has occurred and a zone transfer should be performed. It should always be increased whenever a change is made to the zone data. DNS NOTIFY must be enabled on the master authoritative name server.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "If all DNS servers are AD-integrated, troubleshoot why and mitigate the replication is not taking place to the out-of-sync secondary name servers.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Initiate a zone transfer to all secondary name servers for the zone."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73027r3_rule,STIG-ID|WDNS-CM-000013,SWIFT-CSCv1|2.3,Vuln-ID|V-58597"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $non_integrated } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000014 - The Windows 2012 DNS Server must be configured to enable DNSSEC Resource Records."
      info            : "The specification for a digital signature mechanism in the context of the DNS infrastructure is in IETF's DNSSEC standard.  In DNSSEC, trust in the public key (for signature verification) of the source is established not by going to a third party or a chain of third parties (as in public key infrastructure [PKI] chaining), but by starting from a trusted zone (such as the root zone) and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. The public key of the trusted zone is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. DNSSEC mechanisms involve two main processes: sign and serve, and verify signature.

Before a DNSSEC-signed zone can be deployed, a name server must be configured to enable DNSSEC processing."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|I,CCI|CCI-000366,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73029r5_rule,STIG-ID|WDNS-CM-000014,Vuln-ID|V-58599"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000015 - Digital signature algorithm used for DNSSEC-enabled zones must be FIPS-compatible."
      info            : "The choice of digital signature algorithm will be based on recommended algorithms in well-known standards. NIST's Digital Signature Standard (DSS) [FIPS186] provides three algorithm choices:
* Digital Signature Algorithm (DSA)
* RSA
* Elliptic Curve DSA (ECDSA).
Of these three algorithms, RSA and DSA are more widely available and hence are considered candidates of choice for DNSSEC. In terms of performance, both RSA and DSA have comparable signature generation speeds, but DSA is much slower for signature verification.

RSA is the recommended algorithm as far as this guideline is concerned. RSA with SHA-1 is currently the only cryptographic algorithm mandated to be implemented with DNSSEC, although other algorithm suites (i.e. RSA/SHA-256, ECDSA) are also specified. It can be expected that name servers and clients will be able to use the RSA algorithm at the minimum. It is suggested that at least one ZSK for a zone use the RSA algorithm.

NIST's Secure Hash Standard (SHS) (FIPS 180-3) specifies SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 as approved hash algorithms to be used as part of the algorithm suite for generating digital signatures using the digital signature algorithms in NIST's DSS[FIPS186]. It is expected that there will be support for Elliptic Curve Cryptography in the DNSSEC. The migration path for USG DNSSEC operation will be to ECDSA (or similar) from RSA/SHA-1 and RSA/SHA-256 before September 30th, 2015."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-000366,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73031r4_rule,STIG-ID|WDNS-CM-000015,Vuln-ID|V-58601"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-CM-000016 - For zones split between the external and internal sides of a network, the RRs for the external hosts must be separate from the RRs for the internal hosts."
      info        : "Authoritative name servers for an enterprise may be configured to receive requests from both external and internal clients.

External clients need to receive RRs that pertain only to public services (public Web server, mail server, etc.)

Internal clients need to receive RRs pertaining to public services as well as internal hosts.

The zone information that serves the RRs on both the inside and the outside of a firewall should be split into different physical files for these two types of clients (one file for external clients and one file for internal clients).

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Remove any RRs from the internal zones for which the resolution is for an external IP address.

Remove any RRs from the external zones for which the resolution is for an internal IP address."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-73033r3_rule,STIG-ID|WDNS-CM-000016,Vuln-ID|V-58603"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "WDNS-CM-000017 - In a split DNS configuration, where separate name servers are used between the external and internal networks, the external name server must be configured to not be reachable from inside resolvers."
      info        : "Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers.

One set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.)

The other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure the external DNS server's firewall policy, or the network firewall, to block queries from internal hosts."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-73035r4_rule,STIG-ID|WDNS-CM-000017,Vuln-ID|V-58605"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "WDNS-CM-000018 - In a split DNS configuration, where separate name servers are used between the external and internal networks, the internal name server must be configured to not be reachable from outside resolvers."
      info        : "Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers.

One set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.)

The other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure the internal DNS server's firewall policy, or the network firewall, to block queries from external hosts."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-73037r4_rule,STIG-ID|WDNS-CM-000018,Vuln-ID|V-58607"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000019 - Primary authoritative name servers must be configured to only receive zone transfer requests from specified secondary name servers."
      info            : "Authoritative name servers (especially primary name servers) should be configured with an allow-transfer access control sub statement designating the list of hosts from which zone transfer requests can be accepted. These restrictions address the denial-of-service threat and potential exploits from unrestricted dissemination of information about internal resources. Based on the need-to-know, the only name servers that need to refresh their zone files periodically are the secondary name servers. Zone transfer from primary name servers should be restricted to secondary name servers. The zone transfer should be completely disabled in the secondary name servers. The address match list argument for the allow-transfer sub statement should consist of IP addresses of secondary name servers and stealth secondary name servers."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Right-click the zone and select 'Properties'.

Select the 'Zone Transfers' tab.

Select the 'Only to servers listed on the Name Server tab' or 'Only to the following servers' check box or deselect the 'Allow zone transfers' check box.

Click 'OK'."
      reference       : "800-53|SC-20,CAT|II,CCI|CCI-000366,ITSG-33|SC-20,Rule-ID|SV-73039r3_rule,STIG-ID|WDNS-CM-000019,Vuln-ID|V-58609"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant = (Get-DnsServerZone | Where { $_.SecureSecondaries -eq 'TransferAnyServer' } | Format-Table -Property ZoneName, SecureSecondaries); if ($non_compliant) { 'Non Compliant Zones:'; $non_compliant } else { Get-DnsServerZone | Format-Table -Property ZoneName, SecureSecondaries; ''; 'All Zones Compliant' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000020 - The Windows 2012 DNS Servers zone database files must not be accessible for edit/write by users and/or processes other than the Windows 2012 DNS Server service account and/or the DNS database administrator."
      info            : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly.

The primary objective of DNS authentication and access control is the integrity of DNS records; only authorized personnel must be able to create and modify resource records, and name servers should only accept updates from authoritative master servers for the relevant zones. Integrity is best assured through authentication and access control features within the name server software and the file system the name server resides on. In order to protect the zone files and configuration data, which should only be accessed by the name service or an administrator, access controls need to be implemented on files, and rights should not be easily propagated to other users. Lack of a stringent access control policy places the DNS infrastructure at risk to malicious persons and attackers, in addition to potential denial of service to network resources.

DAC allows the owner to determine who will have access to objects they control. An example of DAC includes user-controlled file permissions. DAC models have the potential for the access controls to propagate without limit, resulting in unauthorized access to said objects.

When applications provide a DAC mechanism, the DNS implementation must be able to limit the propagation of those access rights."
      solution        : "For a file-back Windows DNS implementation, log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select each zone.

Right-click each zone and select 'Properties'.

Select the 'Security' tab.

Downgrade to READ privileges assigned to any group or user which has greater than READ privileges."
      reference       : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-73041r4_rule,STIG-ID|WDNS-CM-000020,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-58611"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Permissions Compliant'
      powershell_args : "$review = @(); $zones = Get-DnsServerZone; foreach ($zone in $zones) { if ($zone.ZoneFile) { ''; $f = $env:SystemRoot + '\system32\dns\' + $zone.ZoneFile; $acls = (icacls $f | Select-String -Pattern '^((?!(BUILTIN\\Administrators|NT AUTHORITY\\SYSTEM)).)*(\(F\)|\(M\)|\(W\))'); if ($acls) { $review += icacls $f } } } if ($review) { $review } else { 'All Permissions Compliant' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-CM-000021 - The Windows 2012 DNS Server must implement internal/external role separation."
      info        : "DNS servers with an internal role only process name/address resolution requests from within the organization (i.e., internal clients). DNS servers with an external role only process name/address resolution information requests from clients external to the organization (i.e., on the external networks, including the Internet). The set of clients that can access an authoritative DNS server in a particular role is specified by the organization using address ranges, explicit access control lists, etc. In order to protect internal DNS resource information, it is important to isolate the requests to internal DNS servers. Separating internal and external roles in DNS prevents address space that is private (e.g., 10.0.0.0/24) or is otherwise concealed by some form of Network Address Translation from leaking into the public DNS system.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure separate DNS servers for each of the external and internal networks."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-73043r3_rule,STIG-ID|WDNS-CM-000021,Vuln-ID|V-58613"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000022 - The Windows 2012 DNS Server authoritative for local zones must only point root hints to the DNS servers that host the internal root domain."
      info            : "All caching name servers must be authoritative for the root zone because, without this starting point, they would have no knowledge of the DNS infrastructure and thus would be unable to respond to any queries. The security risk is that an adversary could change the root hints and direct the caching name server to a bogus root server. At that point, every query response from that name server is suspect, which would give the adversary substantial control over the network communication of the name servers' clients. When authoritative servers are sent queries for zones that they are not authoritative for, and they are configured as a non-caching server (as recommended), they can either be configured to return a referral to the root servers or they can be configured to refuse to answer the query. The recommendation is to configure authoritative servers to refuse to answer queries for any zones for which they are not authoritative. This is more efficient for the server and allows it to spend more of its resources doing what its intended purpose is, answering authoritatively for its zone.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Log on to the authoritative DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.
Right-click the DNS server, select 'Properties'.
Select the 'Root Hints' tab.
Remove the root hints from the DNS Manager, the CACHE.DNS file and from Active Directory for name servers outside of the internal network.
Replace the existing root hints with new root hints of internal servers.
If the DNS server is forwarding, click to select the : 'Do not use recursion for this domain' check box on the 'Forwarders' tab in DNS Manager to make sure that the root hints will not be used."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73045r5_rule,STIG-ID|WDNS-CM-000022,SWIFT-CSCv1|2.3,Vuln-ID|V-58615"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(Not an authoritative DNS server|Root Hints Empty)'
      powershell_args : "$authoritative = (Get-DNSServerZone | Where { $_.ZoneType -eq 'Primary' }); if (!($authoritative)) { 'Not an authoritative DNS server' } else { $root_hints = Get-DnsServerRootHint; if (!($root_hints)) { 'Root Hints Empty' } else { $root_hints } }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-CM-000023 - The DNS name server software must be at the latest version."
      info        : "Each newer version of the name server software, especially the BIND software, generally is devoid of vulnerabilities found in earlier versions because it has design changes incorporated to take care of those vulnerabilities. These vulnerabilities have been exploited (i.e., some form of attack was launched), and sufficient information has been generated with respect to the nature of those exploits. It makes good business sense to run the latest version of name server software because theoretically it is the safest version. Even if the software is the latest version, it is not safe to run it in default mode. The security administrator should always configure the software to run in the recommended secure mode of operation after becoming familiar with the new security settings for the latest version.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Apply all related Microsoft Operating System IAVM patches to the DNS server."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-73047r4_rule,STIG-ID|WDNS-CM-000023,Vuln-ID|V-58617"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000024 - The Windows 2012 DNS Servers zone files must not include resource records that resolve to a fully qualified domain name residing in another zone."
      info            : "If a name server were able to claim authority for a resource record in a domain for which it was not authoritative, this would pose a security risk. In this environment, an adversary could use illicit control of a name server to impact IP address resolution beyond the scope of that name server (i.e., by claiming authority for records outside of that server's zones). Fortunately, all but the oldest versions of BIND and most other DNS implementations do not allow for this behavior. Nevertheless, the best way to eliminate this risk is to eliminate from the zone files any records for hosts in another zone.

The exceptions are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms.  In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Remove any resource records in a zone file if the resource record resolves to a fully qualified domain name residing in another zone."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73049r3_rule,STIG-ID|WDNS-CM-000024,SWIFT-CSCv1|2.3,Vuln-ID|V-58619"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All records compliant'
      powershell_args : "$review = @(); $records = Get-DnsServerZone | Get-DnsServerResourceRecord; foreach ($record in $records) { $ext = ($record | Out-String | Select-String -Pattern '([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}'); if ($ext) { $review += $record } } if ($review) { 'Review the following records:'; $review } else { 'All records compliant' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000025 - The Windows 2012 DNS Servers zone files must not include CNAME records pointing to a zone with lesser security for more than six months."
      info            : "The use of CNAME records for exercises, tests, or zone-spanning (pointing to zones with lesser security) aliases should be temporary (e.g., to facilitate a migration) and not be in place for more than six months. When a host name is an alias for a record in another zone, an adversary has two points of attack: the zone in which the alias is defined and the zone authoritative for the alias's canonical name. This configuration also reduces the speed of client resolution because it requires a second lookup after obtaining the canonical name. Furthermore, in the case of an authoritative name server, this information is promulgated throughout the enterprise to caching servers and thus compounds the vulnerability.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Remove any zone-spanning CNAME records that have been active for more than six months, which are not supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms.

In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated (AO approval of use of a commercial cloud offering would satisfy this requirement)."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73051r4_rule,STIG-ID|WDNS-CM-000025,SWIFT-CSCv1|2.3,Vuln-ID|V-58621"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'No CNAME records found'
      powershell_args : "$review = @(); foreach ($zone in Get-DnsServerZone) { $records = Get-DnsServerResourceRecord -ZoneName $zone.ZoneName -RRType 'CNAME'; if ($records) { $review += $zone.ZoneName + ':'; $review += ''; $review += $records } } if ($review) { 'Records to review'; ''; $review } else { 'No CNAME records found' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000026 - Non-routable IPv6 link-local scope addresses must not be configured in any zone."
      info            : "IPv6 link-local scope addresses are not globally routable and must not be configured in any DNS zone.  Similar to RFC1918 addresses, if a link-local scope address is inserted into a zone provided to clients, most routers will not forward this traffic beyond the local subnet."
      solution        : "The SA should remove any link-local addresses and replace with appropriate Site-Local or Global scope addresses."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73053r3_rule,STIG-ID|WDNS-CM-000026,SWIFT-CSCv1|2.3,Vuln-ID|V-58623"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Records Compliant'
      powershell_args : "$non_compliant = @(); $records = Get-DnsServerZone | Get-DnsServerResourceRecord; foreach ($record in $records) { $match = ($record | Out-String | Select-String -Pattern '[\s]*(fe8|fe9|fea|feb)[0-9a-f]:'); if ($match) { $non_compliant += $match } } if ($non_compliant) { 'Non Compliant Records:'; $non_compliant; } else { 'All Records Compliant' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000027 - AAAA addresses must not be configured in a zone for hosts that are not IPv6-aware."
      info            : "DNS is only responsible for resolving a domain name to an IP address.  Applications and operating systems are responsible for processing the IPv6 or IPv4 record that may be returned.  With this in mind, a denial of service could easily be implemented for an application that is not IPv6-aware.  When the application receives an IP address in hexadecimal, it is up to the application/operating system to decide how to handle the response.  Combining both IPv6 and IPv4 records into the same domain can lead to application problems that are beyond the scope of the DNS administrator.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Remove any IPv6 records for hosts which are not IPv6-aware."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73055r3_rule,STIG-ID|WDNS-CM-000027,SWIFT-CSCv1|2.3,Vuln-ID|V-58625"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'No IPv6 Records'
      powershell_args : "$non_compliant = @(); $records = Get-DnsServerZone | Get-DnsServerResourceRecord; foreach ($record in $records) { $match = ($record | Out-String | Select-String -Pattern '[\s]*(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))'); if ($match) { $non_compliant += $match } } if ($non_compliant) { 'IPv6 Records:'; $non_compliant; } else { 'No IPv6 Records' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000028 - IPv6 protocol must be disabled unless the Windows 2012 DNS server is configured to answer for and hosting IPv6 AAAA records."
      info            : "To prevent the possibility of a denial of service in relation to an IPv4 DNS server trying to respond to IPv6 requests, the server should be configured not to listen on any of its IPv6 interfaces unless it does contain IPv6 AAAA resource records in one of the zones."
      solution        : "Log onto the DNS server.

Access Group Policy Management.

Edit Default Domain Policy, go to Computer Configuration >> Policies >> Administrative Templates >> Network >> IPv6 Configuration, Open IPv6 Configuration Policy and set on 'Disable all IPv6 components'.

As an alternative to using the GPO setting, the registry setting may also be altered directly to reflect:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters \
Set the value for 'DisabledComponents' to '255 (0xff)'."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73057r7_rule,STIG-ID|WDNS-CM-000028,SWIFT-CSCv1|2.3,Vuln-ID|V-58627"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(No IPv6 Records/Interfaces found|Server configured with IPv6 Records/Interfaces)'
      powershell_args : "$records = Get-DnsServerZone | Get-DnsServerResourceRecord; foreach ($record in $records) { $match = ($record | Select-String -Pattern '[\s]*(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))'); if ($match) { $ipv6_records += $match } } if ($ipv6_interfaces -And $ipv6_records) { 'IPv6 Records:'; $ipv6_records; ''; 'Interfaces:'; $ipv6_interfaces; 'Server configured with IPv6 Records/Interfaces'; } elseif ($ipv6_interfaces -Or $ipv6_records) { 'IPv6 Records:'; $ipv6_records; ''; 'Interfaces:'; $ipv6_interfaces; } else { 'No IPv6 Records/Interfaces found' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-CM-000029 - The Windows 2012 DNS Server must be configured to prohibit or restrict unapproved ports and protocols."
      info            : "In order to prevent unauthorized connection of devices, unauthorized transfer of information, or unauthorized tunneling (i.e., embedding of data types within data types), organizations must disable or restrict unused or unnecessary physical and logical ports/protocols on information systems.

Applications are capable of providing a wide variety of functions and services. Some of the functions and services provided by default may not be necessary to support essential organizational operations. Additionally, it is sometimes convenient to provide multiple services from a single component (e.g., email and web services); however, doing so increases risk over limiting the services provided by any one component.

To support the requirements and principles of least functionality, the application must support the organizational requirements by providing only essential capabilities and limiting the use of ports, protocols, and/or services to only those required, authorized, and approved to conduct official business or to address authorized quality of life issues.

On Windows 2012 DNS Server, during DNS resolution, DNS messages are sent from DNS clients to DNS servers or between DNS servers. Messages are sent over UDP and DNS servers bind to UDP port 53. When the message length exceeds the default message size for a User Datagram Protocol (UDP) datagram (512 octets), the first response to the message is sent with as much data as the UDP datagram will allow, and then the DNS server sets a flag indicating a truncated response. The message sender can then choose to reissue the request to the DNS server using TCP (over TCP port 53). The benefit of this approach is that it takes advantage of the performance of UDP but also has a backup failover solution for longer queries.

In general, all DNS queries are sent from a high-numbered source port (49152 or above) to destination port 53, and responses are sent from source port 53 to a high-numbered destination port."
      solution        : "Re-install DNS."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000382,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73059r4_rule,STIG-ID|WDNS-CM-000029,SWIFT-CSCv1|2.3,Vuln-ID|V-58629"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'Only listening on port 53'
      powershell_args : "$nc = @(); $pids = Get-Process -Name 'dns'; foreach ($p in $pids) { $ports = (Get-NetTCPConnection -State Listen -OwningProcess $p.Id | Select State, LocalPort, LocalAddress | Where {$_.LocalPort -ne 53}); if ($ports) { $nc += $ports } } if ($nc) { 'Non Compliant Ports:'; ''; $nc } else { 'Only listening on port 53' }"
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-IA-000001 - The Windows 2012 DNS Server must require devices to re-authenticate for each dynamic update request connection attempt."
      info            : "Without re-authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

In addition to the re-authentication requirements associated with session locks, organizations may require re-authentication of devices, including, but not limited to, the following other situations:
(i) When authenticators change;
(ii) When roles change;
(iii) When security categories of information systems change;
(iv) After a fixed period of time; or
(v) Periodically.

DNS does perform server authentication when DNSSEC or TSIG/SIG(0) are used, but this authentication is transactional in nature (each transaction has its own authentication performed). So this requirement is applicable for every server-to-server transaction request."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Once selected, right-click the name of the zone, and from the displayed context menu, go to Properties.

On the opened domain's properties box, click the General tab.

If the Type: is not Active Directory-Integrated, configure the zone for AD-integration.

Select 'Secure only' from the Dynamic updates: drop-down list."
      reference       : "800-171|3.13.1,800-53|SC-7(11),CAT|II,CCI|CCI-002039,CSF|PR.AC-5,CSF|PR.PT-4,ITSG-33|SC-7(11),NIAv2|GS7c,Rule-ID|SV-73061r4_rule,STIG-ID|WDNS-IA-000001,TBA-FIISB|31.3,Vuln-ID|V-58631"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = @(); $zones = (Get-DnsServerZone | Select ZoneName, IsDsIntegrated, DynamicUpdate); foreach ($zone in $zones) { if (!($zone | Out-String | Select-String -Pattern '[\s]*True[\s]+Secure Only[\s]*$')) { $non_compliant_zones += $zone; } }; ''; if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { $zones; ''; 'All Zones Compliant'; };"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-IA-000002 - The Windows 2012 DNS Server must uniquely identify the other DNS server before responding to a server-to-server transaction."
      info        : "Without identifying devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. This applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)), thus uniquely identifying the other server.

TSIG and SIG(0) are not configurable in Windows 2012 DNS Server.

To meet the requirement for authentication between Windows DNS servers, IPsec will be implemented between the Windows DNS servers which host any non-AD-integrated zones.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Complete the following procedures twice for each pair of name servers.

First create a rule for TCP connections.

Refer to the U_Windows_Domain_Name_Service_2008_Overview.pdf for Microsoft links for this procedure.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute gpme.msc to open the Group Policy Management feature.

In the Browse for 'Group Policy Object' dialog box, double-click 'Domain Controllers.domain.com'.

Click 'Default Domain Controllers Policy' and click 'OK'.

In the console tree, open Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security - LDAP.

Right-Click 'Connection Security Rules' and select 'New'.

For Rule Type, select the 'Server-to-server' radio button, click 'Next'.

For Endpoint 1 and Endpoint 2, select 'These IP addresses:' and add the IP addresses of all DNS servers, click 'Next'.

For Requirements, select 'Request authentication for inbound and outbound connections', click 'Next'.

For Authentication Method, select Computer certificate and from the 'Signing Algorithm:' drop-down, select 'RSA (default)'.

From the 'Certificate store type:' drop-down, select 'Root CA (default)'.

From the 'CA name:', click 'Browse' and select the certificate for the CA, click 'Next'.

On Profile, accept default selections, click 'Next'.

On Name, enter a name applicable to the rule's function, click 'Finish'."
      reference   : "CAT|II,CCI|CCI-000778,Rule-ID|SV-73063r4_rule,STIG-ID|WDNS-IA-000002,Vuln-ID|V-58633"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-IA-000003 - The secondary Windows DNS name servers must cryptographically authenticate zone transfers from primary name servers."
      info            : "Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Device authentication is a solution enabling an organization to manage devices. It is an additional layer of authentication ensuring only specific pre-authorized devices can access the system.

This requirement applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0))."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the account designated as Administrator or DNS Administrator.
If not automatically started, initialize the Server Manager window by clicking its icon from the bottom left corner of the screen.

Once the Server Manager window is initialized, from the left pane, click to select the DNS category.

From the right pane, under the SERVERS section, right-click the DNS server.

From the context menu that appears, click DNS Manager.

In the DNS Manager console tree on the DNS server being validated, navigate to Forward Lookup Zones.

Right-click the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-001958,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73065r4_rule,STIG-ID|WDNS-IA-000003,Vuln-ID|V-58635"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-IA-000004 - The Windows DNS primary server must only send zone transfers to a specific list of secondary name servers."
      info            : "Primary name servers also make outbound connection to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users.

AD-integrated DNS servers replicate zone information via AD replication. Non-AD-integrated DNS servers replicate zone information via zone transfers."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

From the displayed context menu, click the 'Properties' option.

On the opened zone's properties box, go to the 'Zone Transfers' tab.

On the displayed interface, select the 'Allow zone transfers' check box.

Select the 'Only to servers listed on the Name Servers tab' radio button OR select the 'Only to the following servers' radio button.

Click on 'Apply'.

Click on 'OK'."
      reference       : "800-53|SC-20,CAT|II,CCI|CCI-001958,ITSG-33|SC-20,Rule-ID|SV-73067r3_rule,STIG-ID|WDNS-IA-000004,Vuln-ID|V-58637"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant = (Get-DnsServerZone | Where { $_.SecureSecondaries -eq 'TransferAnyServer' -And $_.IsDsIntegrated -eq $false} | Format-Table -Property ZoneName, SecureSecondaries); if ($non_compliant) { 'Non Compliant Zones:'; $non_compliant } else { (Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false} | Format-Table -Property ZoneName, SecureSecondaries); 'All Zones Compliant' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-IA-000005 - The Windows 2012 DNS Server must provide its identity with returned DNS information by enabling DNSSEC and TSIG/SIG(0)."
      info            : "Weakly bound credentials can be modified without invalidating the credential; therefore, non-repudiation can be violated.

This requirement supports audit requirements that provide organizational personnel with the means to identify who produced specific information in the event of an information transfer. Organizations and/or data owners determine and approve the strength of the binding between the information producer and the information based on the security category of the information and relevant risk factors.

DNSSEC and TSIG/SIG(0) both use digital signatures to establish the identity of the producer of particular pieces of information."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.
Log on to the DNS server using the account designated as Administrator or DNS Administrator.

In the DNS Manager console tree on the DNS server being validated, navigate to Forward Lookup Zones.

Right-click the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using saved parameters or custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-001958,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73069r5_rule,STIG-ID|WDNS-IA-000005,Vuln-ID|V-58639"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "Verify Crypto folder exist"
          value_type  : POLICY_TEXT
          value_data  : "%ALLUSERSPROFILE%\Microsoft\Crypto"
          file_option  : MUST_EXIST
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-IA-000006 - The Windows 2012 DNS Server must be configured to enforce authorized access to the corresponding private key."
          info            : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information. If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and pretend to be the authorized user. Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys.

SIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable."
          solution        : "Access Windows Explorer.

Navigate to the following location:

%ALLUSERSPROFILE%\Microsoft\Crypto

Modify permissions on the keys folder, sub-folders, and files to be limited to SYSTEM and Administrators FULL CONTROL and to all other Users/Groups to READ."
          reference       : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000186,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-73071r4_rule,STIG-ID|WDNS-IA-000006,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-58641"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'All Permissions Compliant'
          powershell_args : "$review = @(); $d = $env:AllUsersProfile + '\Microsoft\Crypto'; $files = Get-ChildItem -Recurse $d; $acls = (icacls $d | Select-String -Pattern '^((?!(BUILTIN\\Administrators|NT AUTHORITY\\SYSTEM)).)*(\(F\)|\(M\)|\(W\))'); if ($acls) { $review += icacls $d } foreach ($f in $files) { $acls = (icacls $f.FullName | Select-String -Pattern '^((?!(BUILTIN\\Administrators|NT AUTHORITY\\SYSTEM)).)*(\(F\)|\(M\)|\(W\))'); if ($acls) { $review += icacls $f.FullName } } if ($review) { $review } else { 'All Permissions Compliant' }"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-IA-000007 - The Windows 2012 DNS Server key file must be owned by the account under which the Windows 2012 DNS Server service is run."
          info            : "To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message."
          solution        : "Access Windows Explorer.

Navigate to the following location:

%ALLUSERSPROFILE%\Microsoft\Crypto

Right-click on each sub-folder, choose 'Properties', click on the 'Security' tab, and click on the 'Advanced' button.

Click on 'Change' next to the listed Owner and change to be the account under which the DNS Server Service is running."
          reference       : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000186,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-73073r4_rule,STIG-ID|WDNS-IA-000007,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-58643"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'All files owned by'
          powershell_args : "$review = @(); $d = $env:AllUsersProfile + '\Microsoft\Crypto'; $user = (Get-Process -Name dns -IncludeUserName | Select UserName).UserName; $review += Get-Acl -Path $d | Where {$_.Owner -ne $user}; $files = Get-ChildItem -Recurse $d; foreach ($f in $files) { $review += Get-Acl -Path $f.FullName | Where {$_.Owner -ne $user} } if ($review) { 'The following files are not owned by ' + $user + ':'; ''; $review } else { 'All files owned by ' + $user }"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-IA-000008 - The Windows 2012 DNS Server permissions must be set so that the key file can only be read or modified by the account that runs the name server software."
          info            : "To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message."
          solution        : "Access Windows Explorer.

Navigate to the following location:
%ALLUSERSPROFILE%\Microsoft\Crypto

Modify permissions on the folder, sub-folders and files to 'FULL CONTROL' for 'SYSTEM' and Administrators  and to 'READ' for all other Users/Groups."
          reference       : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000186,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-73075r6_rule,STIG-ID|WDNS-IA-000008,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-58645"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'All Permissions Compliant'
          powershell_args : "$review = @(); $d = $env:AllUsersProfile + '\Microsoft\Crypto'; $files = Get-ChildItem -Recurse $d; $acls = (icacls $d | Select-String -Pattern '^((?!(BUILTIN\\Administrators|NT AUTHORITY\\SYSTEM)).)*(\(F\)|\(M\)|\(W\))'); if ($acls) { $review += icacls $d } foreach ($f in $files) { $acls = (icacls $f.FullName | Select-String -Pattern '^((?!(BUILTIN\\Administrators|NT AUTHORITY\\SYSTEM)).)*(\(F\)|\(M\)|\(W\))'); if ($acls) { $review += icacls $f.FullName } } if ($review) { $review } else { 'All Permissions Compliant' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-IA-000006 - The Windows 2012 DNS Server must be configured to enforce authorized access to the corresponding private key."
          info        : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information. If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and pretend to be the authorized user. Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys.

SIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable."
          solution    : "Access Windows Explorer.

Navigate to the following location:

%ALLUSERSPROFILE%\Microsoft\Crypto

Modify permissions on the keys folder, sub-folders, and files to be limited to SYSTEM and Administrators FULL CONTROL and to all other Users/Groups to READ."
          reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000186,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-73071r4_rule,STIG-ID|WDNS-IA-000006,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-58641"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "WDNS-IA-000007 - The Windows 2012 DNS Server key file must be owned by the account under which the Windows 2012 DNS Server service is run."
          info        : "To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message."
          solution    : "Access Windows Explorer.

Navigate to the following location:

%ALLUSERSPROFILE%\Microsoft\Crypto

Right-click on each sub-folder, choose 'Properties', click on the 'Security' tab, and click on the 'Advanced' button.

Click on 'Change' next to the listed Owner and change to be the account under which the DNS Server Service is running."
          reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000186,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-73073r4_rule,STIG-ID|WDNS-IA-000007,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-58643"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "WDNS-IA-000008 - The Windows 2012 DNS Server permissions must be set so that the key file can only be read or modified by the account that runs the name server software."
          info        : "To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message."
          solution    : "Access Windows Explorer.

Navigate to the following location:
%ALLUSERSPROFILE%\Microsoft\Crypto

Modify permissions on the folder, sub-folders and files to 'FULL CONTROL' for 'SYSTEM' and Administrators  and to 'READ' for all other Users/Groups."
          reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000186,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-73075r6_rule,STIG-ID|WDNS-IA-000008,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-58645"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-IA-000009 - The private key corresponding to the ZSK must only be stored on the name server that does support dynamic updates."
      info            : "The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy.

This strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Ensure the private key corresponding to the ZSK is only stored on the name server accepting dynamic updates."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000186,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73077r4_rule,STIG-ID|WDNS-IA-000009,SWIFT-CSCv1|2.3,Vuln-ID|V-58647"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Integrated and/or Dynamic Updates disabled.'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false } | Select ZoneName, IsDsIntegrated, DynamicUpdate; $dynamic = Get-DnsServerZone | Where { $_.DynamicUpdate -ne 'None' } | Select ZoneName, IsDsIntegrated, DynamicUpdate; if ($non_integrated -Or $dynamic) { 'Non Ds Integrated Zones:'; $non_integrated; ''; 'Dynamic Update Zones:'; $dynamic } else { Get-DnsServerZone | Select ZoneName, IsDsIntegrated, DynamicUpdate; ''; 'All Zones Integrated and/or Dynamic Updates disabled.' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-IA-000011 - The Windows 2012 DNS Server must implement a local cache of revocation data for PKIauthentication in the event revocation information via the network is not accessible."
      info        : "Without configuring a local cache of revocation data, there is the potential to allow access to users who are no longer authorized (users with revoked certificates).

SIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure local revocation data to be used in the event access to Certificate Authorities is hindered."
      reference   : "CAT|II,CCI|CCI-001991,Rule-ID|SV-73079r3_rule,STIG-ID|WDNS-IA-000011,Vuln-ID|V-58649"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000001 - The salt value for zones signed using NSEC3 RRs must be changed every time the zone is completely re-signed."
      info            : "NSEC records list the resource record types for the name, as well as the name of the next resource record. With this information it is revealed that the resource record type for the name queried, or the resource record name requested, does not exist. NSEC uses the actual resource record names, whereas NSEC3 uses a one-way hash of the name. In this way, walking zone data from one record to the next is prevented, at the expense of some CPU cycles both on the authoritative server as well as on the resolver. To prevent giving access to an entire zone file, NSEC3 should be configured, and, in order to use NSEC3, RSA/SHA-1 should be used as the algorithm, as some resolvers that understand RSA/SHA-1 might not understand NSEC3. Using RSA/SHA-256 is a safe alternative.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters.

Re-validate the NSEC3PARAM Inception date and time against the DNSKEY date and time."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-002450,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73081r4_rule,STIG-ID|WDNS-SC-000001,SWIFT-CSCv1|2.3,Vuln-ID|V-58651"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $non_integrated } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000002 - The Windows 2012 DNS Server must include data origin with authoritative data the system returns in response to external name/address resolution queries."
      info            : "The underlying feature in the major threat associated with DNS query/response (i.e., forged response or response failure) is the integrity of DNS data returned in the response. The security objective is to verify the integrity of each response received. An integral part of integrity verification is to ensure that valid data has originated from the right source. Establishing trust in the source is called data origin authentication.

The security objectives--and consequently the security services--that are required for securing the DNS query/response transaction are data origin authentication and data integrity verification.

The specification for a digital signature mechanism in the context of the DNS infrastructure is in IETF's DNSSEC standard. In DNSSEC, trust in the public key (for signature verification) of the source is established not by going to a third party or a chain of third parties (as in public key infrastructure [PKI] chaining), but by starting from a trusted zone (such as the root zone) and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. The public key of the trusted zone is called the trust anchor."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the account designated as Administrator or DNS Administrator.

If not automatically started, initialize the Server Manager window by clicking its icon from the bottom left corner of the screen.

Once the Server Manager window is initialized, from the left pane, click to select the DNS category.

From the right pane, under the SERVERS section, right-click the DNS server.

From the context menu that appears, click DNS Manager.

In the DNS Manager console tree on the DNS server being validated, navigate to Forward Lookup Zones.

Right-click the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-001178,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73083r5_rule,STIG-ID|WDNS-SC-000002,Vuln-ID|V-58653"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000003 - The Windows 2012 DNS Servers IP address must be statically defined and configured locally on the server."
      info            : "The major threat associated with DNS forged responses or failures are the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. By requiring remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service, data origin is validated.

Ensuring all name servers have static IP addresses makes it possible to configure restricted DNS communication, such as with DNSSEC, between the name servers."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Locate the 'Network Internet Access' icon, right-click on it and select 'Open Network & Sharing Center'.

Click on 'Change adapter settings'.

Right-click on the Ethernet and click 'Properties'.

Select Internet Protocol Version 4 (TCP/IPv4) and click 'Properties'.

Select the 'Use the following IP address' and populate with an IP address, subnet mask, and default gateway."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CCI|CCI-002463,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73085r3_rule,STIG-ID|WDNS-SC-000003,SWIFT-CSCv1|2.3,Vuln-ID|V-58655"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Adapters Compliant'
      powershell_args : "$dhcp = Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter 'IPEnabled=TRUE and DHCPEnabled=True'; if ($dhcp) { 'Non Compliant Adapters:'; $dhcp } else { Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=TRUE; ''; 'All Adapters Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000004 - The Windows 2012 DNS Server must return data information in responses to internal name/address resolution queries."
      info            : "The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. By requiring remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service, data origin is validated."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-000366,CCI|CCI-002463,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73087r5_rule,STIG-ID|WDNS-SC-000004,Vuln-ID|V-58657"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000005 - The Windows 2012 DNS Server must use DNSSEC data within queries to confirm data origin to DNS resolvers."
      info            : "The major threat associated with DNS forged responses or failures are the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. By requiring remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service, data origin is validated.

A DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data.

In the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-000366,CCI|CCI-002464,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73089r5_rule,STIG-ID|WDNS-SC-000005,Vuln-ID|V-58659"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000006 - WINS lookups must be disabled on the Windows 2012 DNS Server."
      info            : "The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. By requiring remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service, data origin is validated.

A DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data.

In the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.

If/when WINS lookups are enabled, the validity of the data becomes questionable since the WINS data is provided to the requestor, unsigned and invalidated. In order to be assured only the DNSSEC-signed data is being returned, WINS lookups must be disabled."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click each zone, and then click 'Properties'.

In the 'Properties' dialog box for the zone, click the 'WINS' tab.

Uncheck the 'Use WINS forward' lookup check box.

Click 'OK'."
      reference       : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-002462,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-73091r3_rule,STIG-ID|WDNS-SC-000006,SWIFT-CSCv1|2.3,Vuln-ID|V-58661"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$wins = (Get-DnsServerZone | Select ZoneName, IsWinsEnabled | Where {$_.IsWinsEnabled -eq $true}); if ($wins) { 'Non Compliant Zones:'; $wins } else { (Get-DnsServerZone | Select ZoneName, IsWinsEnabled); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000007 - The Windows 2012 DNS Server must use DNSSEC data within queries to confirm data integrity to DNS resolvers."
      info            : "The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. By requiring remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service, data origin is validated.

A DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data.

In the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002462,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73093r5_rule,STIG-ID|WDNS-SC-000007,Vuln-ID|V-58663"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000008 - The Windows 2012 DNS Server must be configured with the DS RR carrying the signature for the RR that contains the public key of the child zone."
      info            : "If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its sub domain, from the top of the DNS hierarchy down.

A DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data.

In DNS, trust in the public key of the source is established by starting from a trusted name server and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent.

A trust anchor is an authoritative entity represented via a public key and associated data. It is used in the context of public key infrastructures, X.509 digital certificates, and Domain Name System Security Extensions (DNSSEC).

When there is a chain of trust, usually the top entity to be trusted becomes the trust anchor. A certification path starts with the subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate. In DNS, a trust anchor is a DNSKEY that is placed into a validating resolver so the validator can cryptographically validate the results for a given request back to a known public key (the trust anchor).

An example means to indicate the security status of child subspaces is through the use of delegation signer (DS) resource records in the DNS.

Path validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted. Without path validation and a chain of trust, there can be no trust that the data integrity authenticity has been maintained during a transaction."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.
Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-001179,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73095r5_rule,STIG-ID|WDNS-SC-000008,Vuln-ID|V-58665"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000009 - The Windows 2012 DNS Server must enforce approved authorizations between DNS servers through the use of digital signatures in the RRSet."
      info            : "A mechanism to detect and prevent unauthorized communication flow must be configured or provided as part of the system design. If information flow is not enforced based on approved authorizations, the system may become compromised. Information flow control regulates where information is allowed to travel within a system and between interconnected systems. The flow of all application information must be monitored and controlled so it does not introduce any unacceptable risk to the systems or data.

Application-specific examples of enforcement occur in systems that employ rule sets or establish configuration settings that restrict information system services or provide a message filtering capability based on message content (e.g., implementing key word searches or using document characteristics).

Applications providing information flow control must be able to enforce approved authorizations for controlling the flow of information between interconnected systems in accordance with applicable policy.

Within the context of DNS, this is applicable in terms of controlling the flow of DNS information between systems, such as DNS zone transfers."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Right-click the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-001663,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73097r4_rule,STIG-ID|WDNS-SC-000009,Vuln-ID|V-58667"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000010 - The Name Resolution Policy Table (NRPT) must be configured in Group Policy to enforce clients to request DNSSEC validation for a domain."
      info            : "The Name Resolution Policy Table (NRPT) is used to require DNSSEC validation. The NRPT can be configured in local Group Policy for a single computer or domain Group Policy for some or all computers in the domain."
      solution        : "On Domain Controller, on the Server Manager menu bar, click Tools, and then click Group Policy Management.

In the Group Policy Management console tree, under Domains >; domainname >; Group Policy Objects, right-click Default Domain Policy, and then click Edit.

In the Group Policy Management Editor console tree, navigate to Computer Configuration >; Policies >; Windows Settings >; Name Resolution Policy.

In the details pane, under Create Rules and to which part of the namespace does this rule apply, choose Suffix from the drop-down list and type domain.mil next to Suffix.

On the DNSSEC tab, select the Enable DNSSEC in this rule check box and then under Validation select the Require DNS clients to check that name and address data has been validated by the DNS server check box.

In the bottom right corner, click Create and then verify that a rule for domain.mil was added under Name Resolution Policy Table.

Click Apply, and then close the Group Policy Management Editor.

Open a Windows PowerShell prompt and enter the following commands:
gpupdate /force <enter>
get-dnsclientnrptpolicy <enter>
In the results, select the True for 'DnsSecValidationRequired' setting for the domain.mil namespace."
      reference       : "800-53|SC-20,CAT|II,CCI|CCI-001663,ITSG-33|SC-20,Rule-ID|SV-73099r4_rule,STIG-ID|WDNS-SC-000010,Vuln-ID|V-58669"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Settings Compliant'
      powershell_args : "$exist = Get-DnsClientNrptPolicy; $no_validate = (Get-DnsClientNrptPolicy | Where {$_.DnsSecValidationRequired -ne $true} | Select Namespace, DnsSecValidationRequired); if (!($exist)) { 'No DNS Client NRPT Policies defined' } elseif ($no_validate) { 'The following rules are missing DnsSecValidationRequired'; ''; $no_validate } else { Get-DnsClientNrptPolicy | Select Namespace, DnsSecValidationRequired; ''; 'All Settings Compliant' }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000011 - The Windows 2012 DNS Server must be configured to validate an authentication chain of parent and child domains via response data."
      info            : "If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its sub domain, from the top of the DNS hierarchy down.
Like the DNSKEY resource record, the delegation signer (DS) resource record can be used to create a trust anchor for a signed zone. The DS record is smaller in size than a DNSKEY record because it contains only a hash of the public key.
The DS record is not added to a zone during the signing process like some DNSSEC-related resource records, even if a delegation already exists in the zone. To add a DS record, you must manually add or import it. Fortunately, the DS resource record set (DSSET) is automatically added as a file to the Key Master when a zone is signed. The DSSET file can be used with the Import-DnsServerResourceRecordDS cmdlet to import DS records to the parent zone.

A DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data.

DNSSEC provides the means to verify integrity assurances for the host/service name to network address resolution information obtained through the service. By using the delegation signer (DS) resource records in the DNS, the security status of a child domain can be validated. The DS resource record is used to identify the DNSSEC signing key of a delegated zone.

Starting from a trusted name server (such as the root name server) and down to the current source of response through successive verifications of signature of the public key of a child by its parent, the chain of trust is established. The public key of the trusted name servers is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. This requires that responses consist of not only the requested RRs but also an authenticator associated with them. In DNSSEC, this authenticator is the digital signature of a Resource Record (RR) Set. The digital signature of an RRSet is encapsulated through a special RRType called RRSIG. The DNS client using the trusted public key of the source (whose trust has just been established) then verifies the digital signature to detect if the response is valid or bogus.

This control enables the DNS to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. Without indication of the security status of a child domain and enabling verification of a chain of trust, integrity and availability of the DNS infrastructure cannot be assured."
      solution        : "A DS records must be added manually or imported.

The DS resource record set (DSSET) is automatically added as a file to the Key Master when a zone is signed.

This file can be used with the Import-DnsServerResourceRecordDS cmdlet to import DS records to the parent zone.

Example:
PS C:\> Import-DnsServerResourceRecordDS -ZoneName adatum.com -DSSetFile 'c:\windows\system32\dns\dsset-corp.adatum.com'"
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001663,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73101r6_rule,STIG-ID|WDNS-SC-000011,SWIFT-CSCv1|2.3,Vuln-ID|V-58671"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$no_ds = @(); $records = @(); $zones = Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false}; foreach ($zone in $zones) { $ds = Get-DnsServerResourceRecord -ZoneName $zone.ZoneName -RRType 'DS'; $records += $zone.ZoneName; $records += ''; $records += $ds; $recoreds += ''; if (!($ds)) { $no_ds += $zone.ZoneName } } if ($no_ds) { 'The following zones are missing DS records:'; ''; $no_ds } else { $ds; ''; 'All Zones Compliant'} $records"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000012 - Trust anchors must be exported from authoritative Windows 2012 DNS Servers and distributed to validating Windows 2012 DNS Servers."
      info            : "If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its sub domain, from the top of the DNS hierarchy down.

A DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data.

DNSSEC provides the means to verify integrity assurances for the host/service name to network address resolution information obtained through the service. By using the delegation signer (DS) resource records in the DNS, the security status of a child domain can be validated.  The DS resource record is used to identify the DNSSEC signing key of a delegated zone.

Starting from a trusted name server (such as the root name server) and down to the current source of response through successive verifications of signature of the public key of a child by its parent, the chain of trust is established. The public key of the trusted name servers is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. This requires that responses consist of not only the requested RRs but also an authenticator associated with them. In DNSSEC, this authenticator is the digital signature of a Resource Record (RR) Set. The digital signature of an RRSet is encapsulated through a special RRType called RRSIG. The DNS client using the trusted public key of the source (whose trust has just been established) then verifies the digital signature to detect if the response is valid or bogus.

This control enables the DNS to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service.  Without indication of the security status of a child domain and enabling verification of a chain of trust, integrity and availability of the DNS infrastructure cannot be assured.

A trust anchor is a preconfigured public key associated with a specific zone. A validating DNS server must be configured with one or more trust anchors in order to perform validation. If the DNS server is running on a domain controller, trust anchors are stored in the forest directory partition in Active Directory Domain Services (AD DS) and can be replicated to all domain controllers in the forest. On standalone DNS servers, trust anchors are stored in a file named TrustAnchors.dns. A DNS server running Windows Server 2012 or Windows Server 2012 R2 also displays configured trust anchors in the DNS Manager console tree in the Trust Points container. Trust anchors can also be viewed by executing Windows PowerShell commands or Dnscmd.exe at a Windows command prompt.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Log onto the primary DNS server and click Windows Explorer on the taskbar.

Navigate to C:\Windows\System32, right-click the dns folder, point to Share with, and then click Advanced sharing.

In the dns Properties dialog box, click Advanced Sharing, select the Share this folder check box, verify the Share name is dns, and then click OK.

Click Close and then close Windows Explorer.

Log onto each of the validating Windows 2012 DNS Servers.

In the DNS Manager console tree, navigate to the Trust Points folder.

Right-click Trust Points, point to Import, and then click DNSKEY.

In the Import DNSKEY dialog box, type \\primaryhost\dns\keyset-domain.mil (where primaryhost represent the FQDN of the Primary DNS Server and domain.mil represents the zone(s)).

Click OK."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001663,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73103r5_rule,STIG-ID|WDNS-SC-000012,SWIFT-CSCv1|2.3,Vuln-ID|V-58673"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $non_integrated } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000013 - Automatic Update of Trust Anchors must be enabled on key rollover."
      info            : "A trust anchor is a preconfigured public key associated with a specific zone. A validating DNS server must be configured with one or more trust anchors in order to perform validation. If the DNS server is running on a domain controller, trust anchors are stored in the forest directory partition in Active Directory Domain Services (AD DS) and can be replicated to all domain controllers in the forest. On standalone DNS servers, trust anchors are stored in a file named TrustAnchors.dns. A DNS server running Windows Server 2012 or Windows Server 2012 R2 also displays configured trust anchors in the DNS Manager console tree in the Trust Points container. Trust anchors can also be viewed by executing Windows PowerShell commands or Dnscmd.exe at a Windows command prompt."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

If not automatically started, initialize the Server Manager window by clicking its icon from the bottom left corner of the screen.

Once the Server Manager window is initialized, from the left pane, click to select the DNS category.

From the right pane, under the SERVERS section, right-click the DNS server.

From the context menu that appears, click DNS Manager.

On the opened DNS Manager snap-in from the left pane, expand the server name and then expand Forward Lookup Zones.

From the expanded list, click to select and then right-click the zone name.

From the displayed context menu, click DNSSEC>>Properties.

Click the KSK tab.

For each KSK that is listed under Key signing keys (KSKs), click the KSK, click Edit, and in the Key Rollover section, select the 'Enable automatic rollover' check box."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001663,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73105r4_rule,STIG-ID|WDNS-SC-000013,SWIFT-CSCv1|2.3,Vuln-ID|V-58675"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Items Compliant'
      powershell_args : "$items = @(); $non_compliant = @(); $zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false -and $_.IsReverseLookupZone -eq $false }); foreach ($zone in $zones) { $keys = (dnscmd /ZoneEnumSKDs $zone.ZoneName | Select-String -Pattern '(^[\s]*$|(SKD GUID|rollover period|KSK flag))'); foreach ($key in $keys) { if (($key | Out-String).Trim()) { if ($key | Select-String -Pattern 'SKD GUID') { $guid = $key } if ($key | Select-String -Pattern 'rollover period') { if ($guid) { if ($key | Select-String -Pattern 'rollover period[\s]*=[\s]*-1') { $non_compliant += $guid; $non_compliant += $key; '' } else { $items += $guid; $items += $key; '' } } } if ($key | Select-String -Pattern 'KSK flag[\s]*=[\s]*0') { $guid = ''; } } } } if ($non_compliant) { 'Non Compliant Items:'; $non_compliant } else { $items; ''; 'All Items Compliant'}"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000014 - The Windows DNS secondary servers must request data origin authentication verification from the primary server when requesting name/address resolution."
      info            : "If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data origin authentication must be performed to thwart these types of attacks.

Each client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002465,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73107r4_rule,STIG-ID|WDNS-SC-000014,Vuln-ID|V-58677"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000015 - The Windows DNS secondary server must request data integrity verification from the primary server when requesting name/address resolution."
      info            : "If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data integrity verification must be performed to thwart these types of attacks.

Each client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002466,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73109r5_rule,STIG-ID|WDNS-SC-000015,Vuln-ID|V-58679"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000017 - The Windows DNS secondary server must validate data integrity verification on the name/address resolution responses received from primary name servers."
      info            : "If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data integrity verification must be performed to thwart these types of attacks.

Each client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002467,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73111r5_rule,STIG-ID|WDNS-SC-000017,Vuln-ID|V-58681"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000018 - The Windows DNS secondary server must validate data origin verification authentication on the name/address resolution responses received from primary name servers."
      info            : "If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data origin authentication verification must be performed to thwart these types of attacks.

Each client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002468,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73113r5_rule,STIG-ID|WDNS-SC-000018,Vuln-ID|V-58683"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000019 - The Windows 2012 DNS Server must protect the authenticity of zone transfers via transaction signing."
      info            : "Without identifying devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. This applies to server-to-server (zone transfer) transactions and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)), thus uniquely identifying the other server.

TSIG and SIG(0) are not configurable in Windows 2012 DNS Server.

To meet the requirement for authentication between Windows DNS servers, IPsec will be implemented between the Windows DNS servers which hosts any non-AD-integrated zones.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Complete the following procedures twice for each pair of name servers.

First create a rule for UDP connections, and then create a rule for TCP connections.

Refer to the U_Windows_Domain_Name_Service_2012_Overview.pdf for Microsoft links for this procedure.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute gpme.msc to open the Group Policy Management feature.

In the Browse for Group Policy Object dialog box, double-click Domain Controllers.domain.com.

Click Default Domain Controllers Policy and click OK.

In the console tree, open Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security - LDAP.

Right-Click Connection Security Rules and select New.

For Rule Type, select the 'Server-to-server' radio button, click Next.

For Endpoint 1 and Endpoint 2, select 'These IP addresses:' and add the IP addresses of all DNS servers, click Next.

For Requirements, select 'Request authentication for inbound and outbound connections', click Next.

For Authentication Method, select Computer certificate and from the 'Signing Algorithm:' drop-down, select 'RSA (default)'.

From the 'Certificate store type:' drop-down, select 'Root CA (default).

From the 'CA name:', click Browse and select the certificate generated by the internally-managed server performing the Active Directory Certificate Services (AD CS) role, click Next.

On Profile, accept default selections, click Next.

On Name, enter a name applicable to the rule's function (i.e., DNSSEC UDP), click Finish."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001184,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73115r3_rule,STIG-ID|WDNS-SC-000019,SWIFT-CSCv1|2.3,Vuln-ID|V-58685"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $non_integrated } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000020 - The Windows 2012 DNS Server must protect the authenticity of dynamic updates via transaction signing."
      info            : "DNS is a fundamental network service that is prone to various attacks, such as cache poisoning and man-in-the middle attacks. If communication sessions are not provided appropriate validity protections, such as the employment of DNSSEC, the authenticity of the data cannot be guaranteed.

The combination of signing DNS zones by DNSSEC and requiring clients to send their dynamic updates securely assures the authenticity of those DNS records when providing query responses for them."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

If not automatically started, initialize the Server Manager window by clicking its icon from the bottom left corner of the screen.

Once the Server Manager window is initialized, from the left pane, click to select the DNS category.

From the right pane, under the SERVERS section, right-click the DNS server.

From the context menu that appears, click DNS Manager.

In the DNS Manager console tree on the DNS server being validated, navigate to Forward Lookup Zones.

Right-click the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|I,CCI|CCI-001184,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73117r6_rule,STIG-ID|WDNS-SC-000020,Vuln-ID|V-58687"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000021 - The Windows 2012 DNS Server must protect the authenticity of query responses via DNSSEC."
      info            : "The underlying feature in the major threat associated with DNS query/response (i.e., forged response or response failure) is the integrity of DNS data returned in the response. An integral part of integrity verification is to ensure that valid data has originated from the right source. DNSSEC is required for securing the DNS query/response transaction by providing data origin authentication and data integrity verification through signature verification and the chain of trust."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

In the DNS Manager console tree on the DNS server being validated, navigate to Forward Lookup Zones.

Right-click the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using saved parameters or custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-001184,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73119r5_rule,STIG-ID|WDNS-SC-000021,Vuln-ID|V-58689"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000022 - The Windows 2012 DNS Server must only allow the use of an approved DoD PKI-established certificate authorities for verification of the establishment of protected transactions."
      info            : "Untrusted Certificate Authorities (CA) can issue certificates, but they may be issued by organizations or individuals that seek to compromise DoD systems or by organizations with insufficient security controls. If the CA used for verifying the certificate is not a DoD-approved CA, trust of this CA has not been established.

The DoD will only accept PKI certificates obtained from a DoD-approved internal or external certificate authority. Reliance on CAs for the establishment of secure sessions includes, for example, the use of SSL/TLS certificates.

TSIG and SIG(0) are not configurable in Windows 2012 DNS Server. To meet the requirement for authentication between Windows DNS servers, IPsec must be implemented between the Windows DNS servers.

NOTE: If multiple certificates from the same CA are present on the DNS server, IPsec authentication might fail due to an incorrect certificate being chosen. For this purpose, an Active Directory Certificate Services (AD CS) role must be installed and configured as an Enterprise certification authority (CA).

Refer to the U_Windows_Domain_Name_Service_2012_Overview.pdf for references on deploying certificates for this procedure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Complete the following procedures twice for each pair of name servers.

First create a rule for UDP connections, and then create a rule for TCP connections.

Refer to the U_Windows_Domain_Name_Service_2012_Overview.pdf for Microsoft links for this procedure.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute gpme.msc to open the Group Policy Management feature.

In the Browse for Group Policy Object dialog box, double-click Domain Controllers.domain.com.

Click Default Domain Controllers Policy and click OK.

In the console tree, open Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security - LDAP.

Right-Click Connection Security Rules and select New.

For Rule Type, select the 'Server-to-server' radio button, click Next.

For Endpoint 1 and Endpoint 2, select 'These IP addresses:' and add the IP addresses of all DNS servers, click Next.

For Requirements, select 'Request authentication for inbound and outbound connections', click Next.

For Authentication Method, select Computer certificate and from the 'Signing Algorithm:' drop-down, select 'RSA (default)'.

From the 'Certificate store type:' drop-down, select 'Root CA (default).

From the 'CA name:', click Browse and select the certificate generated by the internally-managed server performing the Active Directory Certificate Services (AD CS) role, click Next.

On Profile, accept default selections, click Next.

On Name, enter a name applicable to the rule's function (i.e., DNSSEC UDP), click Finish."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-002470,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73121r3_rule,STIG-ID|WDNS-SC-000022,SWIFT-CSCv1|2.3,Vuln-ID|V-58691"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $non_integrated } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-SC-000024 - The Windows 2012 DNS Server must protect secret/private cryptographic keys while at rest."
      info        : "Information at rest refers to the state of information when it is located on a secondary storage device within an organizational information system. Mobile devices, laptops, desktops, and storage devices can be either lost or stolen, and the contents of their data storage (e.g., hard drives and non-volatile memory) can be read, copied, or altered. Applications and application users generate information throughout the course of their application use.

The DNS server must protect the confidentiality and integrity of shared keys (for TSIG) and private keys (for SIG(0)) and must protect the integrity of DNS information. There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "To ensure the cryptographic keys are protected after being backed up to tape or other medium, develop a backup policy to include the protection of backup date to be at or above the same level as the DNS server itself."
      reference   : "CAT|II,CCI|CCI-001199,Rule-ID|SV-73123r4_rule,STIG-ID|WDNS-SC-000024,Vuln-ID|V-58693"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000025 - The Windows 2012 DNS Server must not contain zone records that have not been validated in over a year."
      info            : "If zone information has not been validated in over a year, then there is no assurance that it is still valid.  If invalid records are in a zone, then an adversary could potentially use their existence for improper purposes. An SOP detailing this process can resolve this requirement.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Create a separate database to maintain record documentation for non-AD-integrated zones.

Develop a procedure to validate annually all zone information on the DNS server against the separately maintained database.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Select the zone records which have not been validated in over a year and revalidate."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-002475,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73125r4_rule,STIG-ID|WDNS-SC-000025,SWIFT-CSCv1|2.3,Vuln-ID|V-58695"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $zones = Get-DnsServerZone; foreach ($zone in $zones) { $zone.ZoneName + ':'; ''; Get-DnsServerResourceRecord -ZoneName $zone.ZoneName } } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type        : USER_RIGHTS_POLICY
      description : "WDNS-SC-000026 - The Windows 2012 DNS Server must restrict individuals from using it for launching Denial of Service (DoS) attacks against other information systems - SeRemoteInteractiveLogonRight"
      info        : "Applications and application developers must take the steps needed to ensure users cannot use an authorized application to launch DoS attacks against other systems and networks. For example, applications may include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks."
      solution    : "Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Allow log on through Remote Desktop Services' to only include the following accounts or groups:

Administrators

Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Deny access to this computer from the network' to include the following:

Guests Group

Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Deny log on locally' to include the following:

Guests Group"
      reference   : "800-53|AC-6(7),CAT|II,CCI|CCI-001094,CSCv6|16,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,NESA|M1.1.3,NESA|T5.1.1,Rule-ID|SV-73127r3_rule,STIG-ID|WDNS-SC-000026,Vuln-ID|V-58697"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type  : USER_RIGHT
      value_data  : "Administrators"
      right_type  : SeRemoteInteractiveLogonRight
    </custom_item>

    <custom_item>
      type        : USER_RIGHTS_POLICY
      description : "WDNS-SC-000026 - The Windows 2012 DNS Server must restrict individuals from using it for launching Denial of Service (DoS) attacks against other information systems - SeDenyNetworkLogonRight"
      info        : "Applications and application developers must take the steps needed to ensure users cannot use an authorized application to launch DoS attacks against other systems and networks. For example, applications may include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks."
      solution    : "Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Allow log on through Remote Desktop Services' to only include the following accounts or groups:

Administrators

Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Deny access to this computer from the network' to include the following:

Guests Group

Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Deny log on locally' to include the following:

Guests Group"
      reference   : "800-53|AC-6(7),CAT|II,CCI|CCI-001094,CSCv6|16,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,NESA|M1.1.3,NESA|T5.1.1,Rule-ID|SV-73127r3_rule,STIG-ID|WDNS-SC-000026,Vuln-ID|V-58697"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type  : USER_RIGHT
      value_data  : "Guests"
      right_type  : SeDenyNetworkLogonRight
    </custom_item>

    <custom_item>
      type        : USER_RIGHTS_POLICY
      description : "WDNS-SC-000026 - The Windows 2012 DNS Server must restrict individuals from using it for launching Denial of Service (DoS) attacks against other information systems - SeDenyInteractiveLogonRight"
      info        : "Applications and application developers must take the steps needed to ensure users cannot use an authorized application to launch DoS attacks against other systems and networks. For example, applications may include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks."
      solution    : "Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Allow log on through Remote Desktop Services' to only include the following accounts or groups:

Administrators

Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Deny access to this computer from the network' to include the following:

Guests Group

Configure the policy value for Computer Configuration >> Windows Settings >> Security Settings >> Local Policies >> User Rights Assignment >> 'Deny log on locally' to include the following:

Guests Group"
      reference   : "800-53|AC-6(7),CAT|II,CCI|CCI-001094,CSCv6|16,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,NESA|M1.1.3,NESA|T5.1.1,Rule-ID|SV-73127r3_rule,STIG-ID|WDNS-SC-000026,Vuln-ID|V-58697"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type  : USER_RIGHT
      value_data  : "Guests"
      right_type  : SeDenyInteractiveLogonRight
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000027 - The Windows 2012 DNS Server must use DNS Notify to prevent denial of service through increase in workload."
      info            : "In the case of application DoS attacks, care must be taken when designing the application to ensure the application makes the best use of system resources. SQL queries have the potential to consume large amounts of CPU cycles if they are not tuned for optimal performance. Web services containing complex calculations requiring large amounts of time to complete can bog down if too many requests for the service are encountered within a short period of time."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

In the list of hosts, review the Name Server (NS) records. Determine if any of the hosts listed as NS records are non-AD-integrated servers.

If the DNS server only hosts AD-integrated zones and there are not any non-AD-integrated DNS servers acting as secondary DNS servers for the zones, this check is Not Applicable.

For a non-AD-integrated DNS server, log on to the DNS server using the Domain Admin or Enterprise Admin account.

On the opened DNS Manager snap-in from the left pane, expand the server name and then expand Forward Lookup Zones.

From the expanded list, click to select and then right-click the zone name.

From the displayed context menu, click the 'Properties' option.

On the opened zone's properties box, go to the 'Zone Transfers' tab.

On the displayed interface, verify if the 'Allow zone transfers' check box is selected.

If the 'Allow zone transfers' check box is selected, click on the 'Notify' button and enable Notify to the non-AD-integrated DNS servers."
      reference       : "800-53|SC-5,CAT|II,CCI|CCI-001095,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e,Rule-ID|SV-73129r3_rule,STIG-ID|WDNS-SC-000027,Vuln-ID|V-58699"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Select ZoneName, IsDsIntegrated, Notify | Where { $_.IsDsIntegrated -eq $false -And $_.Notify -eq 'NoNotify' }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { Get-DnsServerZone | Select ZoneName, IsDsIntegrated, Notify; ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000028 - The Windows 2012 DNS Server must protect the integrity of transmitted information."
      info            : "Without protection of the transmitted information, confidentiality and integrity may be compromised since unprotected communications can be intercepted and either read or altered.

Communication paths outside the physical protection of a controlled boundary are exposed to the possibility of interception and modification. Protecting the confidentiality and integrity of organizational information can be accomplished by physical means (e.g., employing physical distribution systems) or by logical means (e.g., employing cryptographic techniques). If physical means of protection are employed, then logical means (cryptography) do not have to be employed, and vice versa.

Confidentiality is not an objective of DNS, but integrity is. DNSSEC and TSIG/SIG(0) both digitally sign DNS information to authenticate its source and ensure its integrity."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002418,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73131r5_rule,STIG-ID|WDNS-SC-000028,Vuln-ID|V-58701"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000029 - The Windows 2012 DNS Server must maintain the integrity of information during preparation for transmission."
      info            : "Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the account designated as Administrator or DNS Administrator.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002421,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73133r5_rule,STIG-ID|WDNS-SC-000029,Vuln-ID|V-58703"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000030 - The Windows 2012 DNS Server must maintain the integrity of information during reception."
      info            : "Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information."
      solution        : "Sign, or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the Windows 2012 DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click Sign the Zone, either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002420,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-73135r5_rule,STIG-ID|WDNS-SC-000030,Vuln-ID|V-58705"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SC-000031 - The Windows 2012 DNS Server must implement NIST FIPS-validated cryptography for provisioning digital signatures, generating cryptographic hashes, and protecting unclassified information requiring confidentiality."
      info            : "Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.

The choice of digital signature algorithm will be based on recommended algorithms in well-known standards. NIST's Digital Signature Standard (DSS) [FIPS186] provides three algorithm choices:
* Digital Signature Algorithm (DSA)
* RSA
* Elliptic Curve DSA (ECDSA).

Of these three algorithms, RSA and DSA are more widely available and considered candidates of choice for DNSSEC. In terms of performance, both RSA and DSA have comparable signature generation speeds, but DSA is much slower for signature verification. RSA is the recommended algorithm as far as this guideline is concerned.

RSA with SHA-1 is currently the only cryptographic algorithm mandated to be implemented with DNSSEC, although other algorithm suites (i.e. RSA/SHA-256, ECDSA) are also specified.

It can be expected that name servers and clients will be able to use the RSA algorithm at the minimum. It is suggested that at least one ZSK for a zone use the RSA algorithm.

NIST's Secure Hash Standard (SHS) (FIPS 180-3) specifies SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 as approved hash algorithms to be used as part of the algorithm suite for generating digital signatures using the digital signature algorithms in the NIST's DSS[FIPS186]. It is expected that there will be support for Elliptic Curve Cryptography in the DNSSEC. The migration path for USG DNSSEC operation will be to ECDSA (or similar) from RSA/SHA-1 and RSA/SHA-256 before September 30th, 2015."
      solution        : "Sign or re-sign, the hosted zone(s) on the DNS server being validated.

Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, right-click to select the zone (repeat for each hosted zone), point to DNSSEC, and then click 'Sign the Zone', either using approved saved parameters or approved custom parameters."
      reference       : "800-171|3.13.8,800-53|SC-8,CAT|II,CCI|CCI-002450,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,ITSG-33|SC-8,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE12,NIAv2|IE8,NIAv2|IE9,NIAv2|NS29,NIAv2|SS24,Rule-ID|SV-72987r5_rule,STIG-ID|WDNS-SC-000031,Vuln-ID|V-58557"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones Compliant'
      powershell_args : "$non_compliant_zones = (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription | Where { $_.ValidationErrorCode -ne 0 }); if ($non_compliant_zones) { 'Non Compliant Zones:'; $non_compliant_zones } else { (Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false } | Test-DnsServerDnsSecZoneSetting | Select ZoneName, ValidationErrorCode, ValidationErrorCodeDescription ); ''; 'All Zones Compliant'; }"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-SI-000001 - The Windows 2012 DNS Server must be configured to only allow zone information that reflects the environment for which it is authoritative, to include IP ranges and IP versions."
      info        : "DNS zone data for which a Windows 2012 DNS server is authoritative should represent the network for which it is responsible. If a Windows 2012 DNS server hosts zone records for other networks or environments, there is the possibility for the records to become invalid or stale or be redundant/conflicting with a DNS server truly authoritative for the other network environment.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

If not automatically started, initialize the 'Server Manager' window by clicking its icon from the bottom left corner of the screen.

Once the 'Server Manager' window is initialized, from the left pane, click to select the DNS category.

From the right pane, under the 'SERVERS' section, right-click the DNS server.

From the context menu that appears, click DNS Manager.

On the opened DNS Manager snap-in from the left pane, expand the server name and then expand Forward Lookup Zones.

Remove any zone information which is not part of the environment."
      reference   : "CAT|II,CCI|CCI-001310,Rule-ID|SV-73137r3_rule,STIG-ID|WDNS-SI-000001,Vuln-ID|V-58707"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SI-000002 - The Windows 2012 DNS Server must follow procedures to re-role a secondary name server as the master name server should the master name server permanently lose functionality."
      info            : "Failing to an unsecure condition negatively impacts application security and can lead to system compromise. Failure conditions include, for example, loss of communications among critical system components or between system components and operational facilities. Fail-safe procedures include, for example, alerting operator personnel and providing specific instructions on subsequent steps to take (e.g., do nothing, reestablish system settings, shutdown processes, restart the system, or contact designated organizational personnel).

If a component such as the DNSSEC or TSIG/SIG(0) signing capabilities were to fail, the DNS server should shut itself down to prevent continued execution without the necessary security components in place. Transactions such as zone transfers would not be able to work correctly anyway in this state.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution        : "Active Directory-integrated DNS servers will handle the promotion of a secondary DNS server whenever a primary DNS server loses functionality.

Develop, test, and implement documented procedures for re-roling a non-AD-integrated secondary name server to a master name server role in the event a master name server loses functionality."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-002754,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73139r3_rule,STIG-ID|WDNS-SI-000002,SWIFT-CSCv1|2.3,Vuln-ID|V-58709"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'All Zones AD Integrated'
      powershell_args : "$non_integrated = Get-DnsServerZone | Where { $_.IsDsIntegrated -eq $false }; if ($non_integrated) { $non_integrated } else { 'All Zones AD Integrated' }"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SI-000003 - The DNS Name Server software must be configured to refuse queries for its version information."
      info            : "Each newer version of the name server software, especially the BIND software, generally is devoid of vulnerabilities found in earlier versions because it has design changes incorporated to take care of those vulnerabilities. Of course, these vulnerabilities have been exploited (i.e., some form of attack was launched), and sufficient information has been generated with respect to the nature of those exploits. Thus, it makes good business sense to run the latest version of name server software because theoretically it is the safest version.

In some installations, it may not be possible to switch over to the latest version of name server software immediately. If the version of the name server software is revealed in queries, this information may be used by attackers who are looking for a specific version of the software which has a discovered weakness. To prevent information about which version of name server software is running on a system, name servers should be configured to refuse queries for its version information."
      solution        : "To disable the version being returned in queries, execute the following command:

dnscmd /config /EnableVersionQuery 0 <enter>"
      reference       : "800-53|SC-30(5),CAT|II,CCI|CCI-001312,NIAv2|GS8f,NIAv2|NS1,NIAv2|NS28,Rule-ID|SV-73167r3_rule,STIG-ID|WDNS-SI-000003,Vuln-ID|V-58737"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '0'
      powershell_args : "(Get-DnsServerSetting -All).EnableVersionQuery"
      check_type      : CHECK_REGEX
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SI-000004 - The HINFO, RP, TXT and LOC RR types must not be used in the zone SOA."
      info            : "There are several types of RRs in the DNS that are meant to convey information to humans and applications about the network, hosts, or services. These RRs include the Responsible Person (RP) record, the Host Information (HINFO) record, the Location (LOC) record, and the catch-all text string resource record (TXT) [RFC1035]. Although these record types are meant to provide information to users in good faith, they also allow attackers to gain knowledge about network hosts before attempting to exploit them. For example, an attacker may query for HINFO records, looking for hosts that list an OS or platform known to have exploits.

Therefore, great care should be taken before including these record types in a zone. In fact, they are best left out altogether.

More careful consideration should be taken with the TXT resource record type. A DNS administrator will have to decide if the data contained in a TXT RR constitutes an information leak or is a necessary piece of information. For example, several authenticated email technologies use TXT RR's to store email sender policy information such as valid email senders for a domain. These judgments will have to be made on a case-by-case basis.

A DNS administrator should take care when including HINFO, RP, TXT, LOC, or other RR types that could divulge information that would be useful to an attacker or the external view of a zone if using split DNS.

RRs such as HINFO and TXT provide information about software name and versions (e.g., for resources such as Web servers and mail servers) that will enable the well-equipped attacker to exploit the known vulnerabilities in those software versions and launch attacks against those resources."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

On the opened DNS Manager snap-in from the left pane, expand the server name for the DNS server, and then expand Forward Lookup Zones.

From the expanded list, click to select the zone.

Remove all HINFO, RP, TXT, and LOC RRs from all zones hosted by the DNS Server."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001312,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73169r4_rule,STIG-ID|WDNS-SI-000004,SWIFT-CSCv1|2.3,Vuln-ID|V-58739"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : 'No HINFO, RP, TXT or LOC records found'
      powershell_args : "$records = (Get-DnsServerZone | Get-DnsServerResourceRecord | Where {$_.RecordType -eq 'HINFO' -Or $_.RecordType -eq 'RP' -Or $_.RecordType -eq 'LOC' -Or $_.RecordType -eq 'TXT' }); if ($records) { 'The following records were found:'; $records } else { 'No HINFO, RP, TXT or LOC records found'}"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "WDNS-SI-000005 - The Windows 2012 DNS Server must, when a component failure is detected, activate a notification to the system administrator."
      info        : "Predictable failure prevention requires organizational planning to address system failure issues. If components key to maintaining systems security fail to function, the system could continue operating in an insecure state. The organization must be prepared, and the application must support requirements that specify if the application must alarm for such conditions and/or automatically shut down the application or the system.

This can include conducting a graceful application shutdown to avoid losing information. Automatic or manual transfer of components from standby to active mode can occur, for example, upon detection of component failures.

If a component such as the DNSSEC or TSIG/SIG(0) signing capabilities were to fail, the DNS server should shut itself down to prevent continued execution without the necessary security components in place. Transactions such as zone transfers would not be able to work correctly anyway in this state.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement a third-party monitoring system to detect and notify the system administrator upon component failure or, at a minimum, document and implement a procedure to review the diagnostic logs on a routine basis every day."
      reference   : "CAT|II,CCI|CCI-000366,CCI|CCI-001328,Rule-ID|SV-73141r4_rule,STIG-ID|WDNS-SI-000005,Vuln-ID|V-58711"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SI-000006 - The Windows 2012 DNS Server must perform verification of the correct operation of security functions: upon system start-up and/or restart; upon command by a user with privileged access; and/or every 30 days."
      info            : "Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Without verification, security functions may not operate correctly and this failure may go unnoticed.

Notifications provided by information systems include, for example, electronic alerts to system administrators, messages to local computer consoles, and/or hardware indications, such as lights.

The DNS server should perform self-tests, such as at server start-up, to confirm that its security functions are working properly."
      solution        : "Follow the HBSS guidance to install all HBSS products to the Windows DNS Server."
      reference       : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CCI|CCI-002775,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-73143r4_rule,STIG-ID|WDNS-SI-000006,SWIFT-CSCv1|2.3,Vuln-ID|V-58713"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : "HBSS is installed and running"
      powershell_args : "IAAkAHMAZQByAHYAaQBjAGUAIAA9ACAAKABHAGUAdAAtAFcATQBJAE8AYgBqAGUAYwB0ACAAVwBpAG4AMwAyAF8AUwBlAHIAdgBpAGMAZQAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwB0AG8AcAAgAHwAIABXAGgAZQByAGUALQBPAGIAagBlAGMAdAAgAC0AUAByAG8AcABlAHIAdAB5ACAATgBhAG0AZQAgAC0AbABpAGsAZQAgACcAbQBhAHMAdgBjACcAIAB8ACAAUwBlAGwAZQBjAHQALQBPAGIAagBlAGMAdAAgAE4AYQBtAGUALAAgAEQAaQBzAHAAbABhAHkATgBhAG0AZQAsACAAUwB0AGEAcgB0AGUAZAAsACAAUwB0AGEAdABlACkADQAKAA0ACgAkAGEAZwBlAG4AdAAgAD0AIAAoAEcAZQB0AC0AVwBNAEkATwBiAGoAZQBjAHQAIABXAGkAbgAzADIAXwBQAHIAbwBkAHUAYwB0ACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAHQAbwBwACAAfAAgAFcAaABlAHIAZQAtAE8AYgBqAGUAYwB0ACAALQBQAHIAbwBwAGUAcgB0AHkAIABOAGEAbQBlACAALQBsAGkAawBlACAAJwBNAGMAQQBmAGUAZQAgAEEAZwBlAG4AdAAnACAAfAAgAFMAZQBsAGUAYwB0AC0ATwBiAGoAZQBjAHQAIABOAGEAbQBlACwAIABWAGUAcgBzAGkAbwBuACkADQAKAA0ACgANAAoAaQBmACAAKAAhACQAcwBlAHIAdgBpAGMAZQAgAC0AbwByACAAIQAkAGEAZwBlAG4AdAAgACkAIAB7AA0ACgANAAoAIAAgACAAIABXAHIAaQB0AGUALQBIAG8AcwB0ACAAJwBIAEIAUwBTACAAaQBzACAAbgBvAHQAIABpAG4AcwB0AGEAbABsAGUAZAAnACAAIAANAAoAfQANAAoADQAKAA0ACgBlAGwAcwBlAGkAZgAgACgAJABzAGUAcgB2AGkAYwBlAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAFIAdQBuAG4AaQBuAGcAJwAgAC0AQQBuAGQAIAAkAHMAZQByAHYAaQBjAGUALgBTAHQAYQByAHQAZQBkACAALQBlAHEAIAAnAFQAcgB1AGUAJwAgAC0AQQBuAGQAIAAkAGEAZwBlAG4AdAAuAHYAZQByAHMAaQBvAG4AIAAtAGcAZQAgACcANAAnACkAIAB7ACAADQAKAA0ACgAgACAAIAAgAFcAcgBpAHQAZQAtAEgAbwBzAHQAIAAnAEgAQgBTAFMAIABpAHMAIABpAG4AcwB0AGEAbABsAGUAZAAgAGEAbgBkACAAcgB1AG4AbgBpAG4AZwAnACAADQAKAA0ACgB9ACAADQAKAA0ACgBlAGwAcwBlAGkAZgAgACgAJABzAGUAcgB2AGkAYwBlAC4AUwB0AGEAdABlACAALQBuAGUAIAAnAFIAdQBuAG4AaQBuAGcAJwAgAC0AbwByACAAJABzAGUAcgB2AGkAYwBlAC4AUwB0AGEAcgB0AGUAZAAgAC0AZQBxACAAJwBGAGEAbABzAGUAJwApACAAewANAAoADQAKACAAIAAgACAAVwByAGkAdABlAC0ASABvAHMAdAAgACcASABCAFMAUwAgAGkAcwAgAG4AbwB0ACAAcgB1AG4AbgBpAG4AZwAnAA0ACgANAAoAfQANAAoADQAKAGUAbABzAGUAIAB7ACAADQAKACAAIAAgACAAVwByAGkAdABlAC0ASABvAHMAdAAgACcAUwBvAG0AZQB0AGgAaQBuAGcAIABlAGwAcwBlACAAaQBzACAAdwByAG8AbgBnACcADQAKAH0AIAA="
      ps_encoded_args : YES
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "Check if non Active Directory integrated zone exist"
          value_type      : POLICY_TEXT
          value_data      : "Non AD Integrated zones exist"
          powershell_args : "$non_integrated = Get-DnsServerZone | Where {$_.IsDsIntegrated -eq $false} ); if ($non_integrated) {'Non AD Integrated zones exist'}"
          check_type      : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <report type:"WARNING">
          description : "WDNS-SI-000007 - The Windows 2012 DNS Server must log the event and notify the system administrator when anomalies in the operation of the signed zone transfers are discovered."
          info        : "Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.

If anomalies are not acted upon, security functions may fail to secure the system.

The DNS server does not have the capability of shutting down or restarting the information system. The DNS server can be configured to generate audit records when anomalies are discovered, and the OS/NDM can then trigger notification messages to the system administrator based on the presence of those audit records.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
          solution    : "Implement a third-party monitoring system to detect and notify the ISSO/ISSM/DNS administrator if functionality of DNSSEC/TSIG has been removed or broken or, at a minimum, document and implement a procedure to review the diagnostic logs on a routine basis every day."
          reference   : "CAT|II,CCI|CCI-002699,Rule-ID|SV-73145r4_rule,STIG-ID|WDNS-SI-000007,Vuln-ID|V-58715"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-SI-000007 - The Windows 2012 DNS Server must log the event and notify the system administrator when anomalies in the operation of the signed zone transfers are discovered."
          info        : "Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.

If anomalies are not acted upon, security functions may fail to secure the system.

The DNS server does not have the capability of shutting down or restarting the information system. The DNS server can be configured to generate audit records when anomalies are discovered, and the OS/NDM can then trigger notification messages to the system administrator based on the presence of those audit records."
          solution    : "Implement a third-party monitoring system to detect and notify the ISSO/ISSM/DNS administrator if functionality of DNSSEC/TSIG has been removed or broken or, at a minimum, document and implement a procedure to review the diagnostic logs on a routine basis every day."
          reference   : "CAT|II,CCI|CCI-002699,Rule-ID|SV-73145r4_rule,STIG-ID|WDNS-SI-000007,Vuln-ID|V-58715"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>

    <report type:"WARNING">
      description : "WDNS-SI-000008 - The Windows 2012 DNS Server must be configured to notify the ISSO/ISSM/DNS administrator when functionality of DNSSEC/TSIG has been removed or broken."
      info        : "Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. If personnel are not notified of failed security verification tests, they will not be able to take corrective action and the unsecure condition(s) will remain. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.

The DNS server should be configured to generate audit records whenever a self-test fails. The OS/NDM is responsible for generating notification messages related to this audit record.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement a third-party monitoring system to detect and notify the ISSO/ISSM/DNS administrator if functionality of Secure Updates has been removed or broken or, at a minimum, document and implement a procedure to review the diagnostic logs on a routine basis every day."
      reference   : "CAT|II,CCI|CCI-001294,Rule-ID|SV-73147r5_rule,STIG-ID|WDNS-SI-000008,Vuln-ID|V-58717"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "WDNS-SI-000009 - The Windows 2012 DNS Server must generate audit records for the success and failure of start and stop of the DNS Server service - enabled"
      info            : "Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, to recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis."
      solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-002702,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-73149r3_rule,STIG-ID|WDNS-SI-000009,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58719"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
      value_type      : POLICY_TEXT
      value_data      : '(2|4)'
      powershell_args : "(Get-DnsServerDiagnostics).EventLogLevel"
      check_type      : CHECK_REGEX
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : REGISTRY_SETTING
          description : "Windows Server 2012 R2 is installed"
          value_type  : POLICY_TEXT
          value_data  : "^[a-zA-Z0-9\(\)\s]*2012[\s]*R2[a-zA-Z0-9\(\)\s]*$"
          reg_key     : "HKLM\Software\Microsoft\Windows Nt\Currentversion"
          reg_item    : "ProductName"
          check_type  : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_POWERSHELL
          description     : "WDNS-SI-000009 - The Windows 2012 DNS Server must generate audit records for the success and failure of start and stop of the DNS Server service - enhanced"
          info            : "Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, to recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis."
          solution        : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-002702,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-73149r3_rule,STIG-ID|WDNS-SI-000009,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58719"
          see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
          value_type      : POLICY_TEXT
          value_data      : 'enabled: true'
          powershell_args : "$setting = (wevtutil get-log Microsoft-Windows-DNSServer/Analytical | Select-String -Pattern '^enabled:.*'); if ($setting) { $setting } else { 'enabled: false' }"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "WDNS-SI-000009 - The Windows 2012 DNS Server must generate audit records for the success and failure of start and stop of the DNS Server service - enhanced"
          info        : "Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, to recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis."
          solution    : "Log on to the DNS server using the Domain Admin or Enterprise Admin account.

Press Windows Key + R, execute dnsmgmt.msc.

Right-click the DNS server, select Properties.

Click on the Event Logging tab. By default, all events are logged.

Select the 'Errors and warnings' or 'All events' option.

Click on Apply.

Click on OK.

For Windows 2012 R2 DNS Server, run eventvwr.msc at an elevated command prompt.

In the Event viewer, navigate to the applications and Services Logs\Microsoft\Windows\DNS Server.

Right-click DNS Server, point to View, and then click 'Show Analytic and Debug Logs'.

Right-click Analytical and then click on Properties.

Select the 'Enable logging' check box.

Click on OK."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-002702,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-73149r3_rule,STIG-ID|WDNS-SI-000009,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-58719"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
        </report>
      </else>
    </if>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_STIG_Windows_2012_Server_DNS_v1r14.audit from DISA Microsoft Windows 2012 Server Domain Name System v1r14 STIG"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_Windows_2012_Server_DNS_V1R14_STIG.zip"
    </report>
  </else>
</if>

</group_policy>
</check_type>
