#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
#
# $Revision: 1.2 $
# $Date: 2020/07/14 $
#
# Description	: This document consists of a list of best practice checks for a host running the Debian operating system.
# 			based on: https://workbench.cisecurity.org/files/2429
#
# NOTE			: Some items in this .audit require site-specific data to be known to the user in order to function properly.
#
# 	 		Please update the following items and edit their values accordingly.
#
#<ui_metadata>
#<display_name>CIS Debian 8 Workstation L2 v2.0.1</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Debian 8 Workstation L2</name>
#  <version>2.0.1</version>
#  <link>https://workbench.cisecurity.org/files/2429</link>
#</spec>
#<labels>unix,cis,debian,debian_8,agent</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7</benchmark_refs>
#<variables>
#  <variable>
#    <name>MAX_AUDIT_LOG_FILE_SIZE</name>
#    <default>32</default>
#    <description>Log file size</description>
#    <info>The max size, in MBs, each audit log can be before log file rotation.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "Debian found"
      file        : "/etc/debian_version"
      regex       : "^8"
      expect      : "^8"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Debian_Linux_8_Workstation_v2.0.1_L2.audit Level 2"
    </report>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.5 Ensure separate partition exists for /var"
      info        : "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.
    Rationale:
    Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion if it is not bound to a separate partition."
      solution    : "For new installations, during installation create a custom partition setup and specify a separate partition for /var.
    For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
    Impact:
    Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|2S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/bin/mount | /bin/grep /var"
      expect      : ".*on[\\s]+/var[\\s]+type.*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.6 Ensure separate partition exists for /var/tmp"
      info        : "The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications.
    Rationale:
    Since the /var/tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. In addition, making /var/tmp its own file system allows an administrator to set the noexec option on the mount, making /var/tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw."
      solution    : "For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp .
    For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
    Impact:
    Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|2S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/bin/mount | /bin/grep /var/tmp"
      expect      : ".*on[\\s]+/var/tmp[\\s]+type.*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.10 Ensure separate partition exists for /var/log"
      info        : "The /var/log directory is used by system services to store log data .
    Rationale:
    There are two important reasons to ensure that system logs are stored on a separate partition: protection against resource exhaustion (since logs can grow quite large) and protection of audit data."
      solution    : "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log.
    For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
    Impact:
    Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|6.3,CSCv7|6.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|2S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/bin/mount | /bin/grep /var/log"
      expect      : ".*on[\\s]+/var/log[\\s]+type.*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.11 Ensure separate partition exists for /var/log/audit"
      info        : "The auditing daemon, auditd, stores log data in the /var/log/audit directory.
    Rationale:
    There are two important reasons to ensure that data gathered by auditdis stored on a separate partition: protection against resource exhaustion (since the audit.logfile can grow quite large) and protection of audit data. The audit daemon calculates how much free space is left and performs actions based on the results. If other processes (such as syslog) consume space in the same partition as auditd, it may not perform as desired."
      solution    : "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit.
    For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
    Impact:
    Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
      reference   : "800-171|3.3.8,800-171|3.4.2,800-53|AU-9,800-53|CM-6,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.10.6(d),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSCv6|6.3,CSCv7|6.4,CSF|PR.IP-1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,ITSG-33|CM-6,LEVEL|2S,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.2.1,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/bin/mount | /bin/grep /var/log/audit"
      expect      : ".*on[\\s]+/var/log/audit[\\s]+type.*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.12 Ensure separate partition exists for /home"
      info        : "The /home directory is used to support disk storage needs of local users.
    Rationale:
    If the system is intended to support local users, create a separate partition for the /home directory to protect against resource exhaustion and restrict the type of files that can be stored under /home."
      solution    : "For new installations, during installation create a custom partition setup and specify a separate partition for /home.
    For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
    Impact:
    Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|2S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/bin/mount | /bin/grep /home"
      expect      : ".*on[\\s]+/home[\\s]+type.*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.6.1.1 Ensure SELinux is not disabled in bootloader configuration - selinux = 0"
      info        : "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters.
    Rationale:
    SELinux must be enabled at boot time in your grub configuration to ensure that the controls it provides are not overridden."
      solution    : "Edit /etc/default/grub and remove all instances of selinux=0 and enforcing=0 from all CMDLINE_LINUX parameters:
    GRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"
    GRUB_CMDLINE_LINUX=\"\"
    Run the following command to update the grub2 configuration:
    # update-grub
    Notes:
    This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.DS-6,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/boot/grub/grub.cfg"
      regex       : "^[\\s]*linux.*"
      expect      : "[\\s]*[Ss][Ee][Ll][Ii][Nn][Uu][Xx][\\s]*=[\\s]*0"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.6.1.1 Ensure SELinux is not disabled in bootloader configuration - enforcing = 0"
      info        : "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters.
    Rationale:
    SELinux must be enabled at boot time in your grub configuration to ensure that the controls it provides are not overridden."
      solution    : "Edit /etc/default/grub and remove all instances of selinux=0 and enforcing=0 from all CMDLINE_LINUX parameters:
    GRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"
    GRUB_CMDLINE_LINUX=\"\"
    Run the following command to update the grub2 configuration:
    # update-grub
    Notes:
    This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.DS-6,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/boot/grub/grub.cfg"
      regex       : "^[\\s]*linux.*"
      expect      : "[\\s]*[Ee][Nn][Ff][Oo][Rr][Cc][Ii][Nn][Gg][\\s]*=[\\s]*0"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.6.1.2 Ensure the SELinux state is enforcing - /etc/selinux/config"
      info        : "Set SELinux to enable when the system is booted.
    Rationale:
    SELinux must be enabled at boot time in to ensure that the controls it provides are in effect at all times."
      solution    : "Edit the /etc/selinux/configfile to set the SELINUX parameter:
    SELINUX=enforcing"
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/selinux/config"
      regex       : "^[\\s]*[sS][eE][lL][iI][nN][uU][xX][\\s]*="
      expect      : "^[\\s]*[sS][eE][lL][iI][nN][uU][xX][\\s]*=[\\s]*[eE][nN][fF][oO][rR][cC][iI][nN][gG][\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1.2 Ensure the SELinux state is enforcing - sestatus"
      info        : "Set SELinux to enable when the system is booted.
    Rationale:
    SELinux must be enabled at boot time in to ensure that the controls it provides are in effect at all times."
      solution    : "Edit the /etc/selinux/configfile to set the SELINUX parameter:
    SELINUX=enforcing"
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/usr/sbin/sestatus"
      expect      : "^[\\s]*SELinux[\\s]+status:[\\s]+[Ee][Nn][Aa][Bb][Ll][Ee][Dd]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.6.1.3 Ensure SELinux policy is configured"
      info        : "Configure SELinux to meet or exceed the default targeted policy, which constrains daemons and system software only.
    Rationale:
    Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that at least the default recommendations are met."
      solution    : "Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:
    SELINUXTYPE=default
    Notes:
    If your organization requires stricter policies, ensure that they are set in the /etc/selinux/configfile."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/selinux/config"
      regex       : "^[\\s]*[sS][eE][lL][iI][nN][uU][xX][tT][yY][pP][eE]\\s*="
      expect      : "^[\\s]*[sS][eE][lL][iI][nN][uU][xX][tT][yY][pP][eE]\\s*=\\s*([Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Mm][Ll][Ss])\\s*$"
    </custom_item>

    <custom_item>
      type          : CMD_EXEC
      description   : "1.6.1.4 Ensure no unconfined daemons exist"
      info          : "Daemons that are not defined in SELinux policy will inherit the security context of their parent process.
    Rationale:
    Since daemons are launched and descend from the initprocess, they will inherit the security context label initrc\_t. This could cause the unintended consequence of giving the process more permission than it requires."
      solution      : "Investigate any unconfined daemons found during the audit action. They may need to have an existing security context assigned to them or a policy built for them.
    Notes:
    Occasionally certain daemons such as backup or centralized management software may require running unconfined. Any such software should be carefully analyzed and documented before such an exception is made."
      reference     : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also      : "https://workbench.cisecurity.org/files/2429"
      cmd           : "/bin/ps -eZ | /bin/egrep \"initrc\" | /bin/egrep -vw \"tr|ps|egrep|bash|awk\" | /usr/bin/awk -F: \'{ print $NF } END {if (NR == 0) print \"none\"}\'"
      expect        : "none"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.6.2.1 Ensure AppArmor is enabled in the bootloader configuration - apparmor=1"
      info        : "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.
    Rationale:
    AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden."
      solution    : "edit /etc/default/grub and add the appermor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line
    GRUB_CMDLINE_LINUX=\"apparmor=1 security=apparmor\"
    update the grub configuration
    # update-grub
    Notes:
    This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings."
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv6|14.4,CSCv7|14.6,CSF|PR.DS-6,LEVEL|2S"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/boot/grub/grub.cfg"
      regex       : "^[\\s]*linux.*"
      expect      : "[\\s]*[Aa][Pp][Pp][Aa][Rr][Mm][Oo][Rr][\\s]*=[\\s]*1"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.6.2.1 Ensure AppArmor is enabled in the bootloader configuration - security=apparmor"
      info        : "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.
    Rationale:
    AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden."
      solution    : "edit /etc/default/grub and add the appermor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line
    GRUB_CMDLINE_LINUX=\"apparmor=1 security=apparmor\"
    update the grub configuration
    # update-grub
    Notes:
    This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings."
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv6|14.4,CSCv7|14.6,CSF|PR.DS-6,LEVEL|2S"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/boot/grub/grub.cfg"
      regex       : "^[\\s]*linux.*"
      expect      : "[\\s]*[Ss][Ee][Cc][Uu][Rr][Ii][Tt][Yy][\\s]*=[\\s]*[Aa][Pp][Pp][Aa][Rr][Mm][Oo][Rr]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.2.2 Ensure all AppArmor Profiles are enforcing - complain mode"
      info        : "AppArmor profiles define what resources applications are able to access.
    Rationale:
    Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated."
      solution    : "Run the following command to set all profiles to enforce mode:
    # aa-enforce /etc/apparmor.d/*
    Any unconfined processes may need to have a profile created or activated for them and then be restarted."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/usr/sbin/apparmor_status"
      expect      : "^[\\s]*0[\\s]+profiles[\\s]+are[\\s]+in[\\s]+complain[\\s]+mode"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.2.2 Ensure all AppArmor Profiles are enforcing - profiles loaded"
      info        : "AppArmor profiles define what resources applications are able to access.
    Rationale:
    Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated."
      solution    : "Run the following command to set all profiles to enforce mode:
    # aa-enforce /etc/apparmor.d/*
    Any unconfined processes may need to have a profile created or activated for them and then be restarted."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/usr/sbin/apparmor_status"
      expect      : "^[\\s]*[1-9][0-9]*[\\s]+profiles[\\s]+are[\\s]+loaded"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.2.2 Ensure all AppArmor Profiles are enforcing - 0 processes are unconfined"
      info        : "AppArmor profiles define what resources applications are able to access.
    Rationale:
    Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated."
      solution    : "Run the following command to set all profiles to enforce mode:
    # aa-enforce /etc/apparmor.d/*
    Any unconfined processes may need to have a profile created or activated for them and then be restarted."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/usr/sbin/apparmor_status"
      expect      : "^[\\s]*0[\\s]+processes[\\s]+are[\\s]+unconfined"
    </custom_item>

    <if>
      <condition type:"OR">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "SELinux is installed"
          cmd         : "/usr/bin/dpkg -s selinux 2>&1"
          expect      : "^[\\s]*Status: install ok installed[\\s]*"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "AppArmor is installed"
          cmd         : "/usr/bin/dpkg -s apparmor 2>&1"
          expect      : "^[\\s]*Status: install ok installed[\\s]*"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "1.6.3 Ensure SELinux or AppArmor are installed"
          info        : "SELinux and AppArmor provide Mandatory Access Controls.
    Rationale:
    Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
          solution    : "Run one of the following commands to install SELinux or apparmor:
    # apt-get install selinux-basics
    Or
    # apt-get install apparmor apparmor-profiles apparmor-utils"
          reference   : "LEVEL|2S"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </then>

      <else>
        <report type:"FAILED">
          description : "1.6.3 Ensure SELinux or AppArmor are installed"
          info        : "SELinux and AppArmor provide Mandatory Access Controls.
    Rationale:
    Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
          solution    : "Run one of the following commands to install SELinux or apparmor:
    # apt-get install selinux-basics
    Or
    # apt-get install apparmor apparmor-profiles apparmor-utils"
          reference   : "LEVEL|2S"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "1.1.21 Disable Automounting"
      info          : "autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.
        Rationale:
        With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves."
      solution      : "Run the following command to disable autofs:
        # systemctl disable autofs
        Impact:
        The use portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.
        Notes:
        This control should align with the tolerance of the use of portable drives and optical media in the organization. On a server requiring an admin to manually mount media can be part of defense-in-depth to reduce the risk of unapproved software or information being introduced or proprietary software or information being exfiltrated. If admins commonly use flash drives and Server access has sufficient physical controls, requiring manual mounting may not increase security."
      reference     : "CIP|007-6-R1,CSCv6|8.3,CSCv7|8.4,CSCv7|8.5,LEVEL|1S,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
      see_also      : "https://workbench.cisecurity.org/files/2429"
      cmd           : "/bin/systemctl is-enabled autofs | /usr/bin/awk \'{print} END {if(NR==0) print \"disabled\" }\'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.4 Ensure CUPS is not enabled"
      info          : "The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.
    Rationale:
    If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be disabled to reduce the potential attack surface."
      solution      : "Run the following command to disable cups:
    # systemctl disable cups
    Impact:
    Disabling CUPS will prevent printing from the system, a common task for workstation systems."
      reference     : "CIP|007-6-R1,CSCv6|9.1,CSCv7|9.2,LEVEL|1S,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
      see_also      : "https://workbench.cisecurity.org/files/2429"
      cmd           : "/bin/systemctl is-enabled cups | /usr/bin/awk \'{print} END { if(NR==0) print \"disabled\" }\'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.6 Ensure wireless interfaces are disabled"
      info        : "Wireless networking is used when wired networks are unavailable. Debian contains a wireless tool kit to allow system administrators to configure and use wireless networks.
    Rationale:
    If wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.
    NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Run the following command to disable any wireless interfaces:
    # ip link set <interface> down
    Disable any wireless interfaces in your network configuration.
    Impact:
    Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled."
      reference   : "800-53|AC-18(3),CSCv6|15.4,CSCv7|15.5,CSF|PR.PT-4,ITSG-33|AC-18(3),LEVEL|1NS,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/iwconfig | /usr/bin/awk \'{print} END {if (NR == 0) print \"none\"}\'"
      expect      : "none"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.1.1 Ensure audit log storage size is configured"
      info        : "Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.
    Rationale:
    It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost."
      solution    : "Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:
    max_log_file = <MB>
    Notes:
    The max_log_file parameter is measured in megabytes."
      reference   : "800-53|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/auditd.conf"
      regex       : "^[\\s]*max_log_file[\\s]*="
# Note: Variable @MAX_AUDIT_LOG_FILE_SIZE@ replaced with "32" in field "expect".
      expect      : "^[\\s]*max_log_file[\\s]*=[\\s]*32[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.1.2 Ensure system is disabled when audit logs are full - space_left_action"
      info        : "The auditddaemon can be configured to halt the system when the audit logs are full.
    Rationale:
    In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability."
      solution    : "Set the following parameters in /etc/audit/auditd.conf:
    space_left_action = email
    action_mail_acct = root
    admin_space_left_action = halt"
      reference   : "800-53|AU-5,CSCv6|6.3,CSCv7|6.4,CSF|PR.PT-1,ITSG-33|AU-5,LEVEL|2S,NIAv2|GS7f"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/auditd.conf"
      regex       : "^[\\s]*space_left_action[\\s]*"
      expect      : "^[\\s]*space_left_action[\\s]*=[\\s]*email[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.1.2 Ensure system is disabled when audit logs are full - admin_space_left_action"
      info        : "The auditddaemon can be configured to halt the system when the audit logs are full.
    Rationale:
    In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability."
      solution    : "Set the following parameters in /etc/audit/auditd.conf:
    space_left_action = email
    action_mail_acct = root
    admin_space_left_action = halt"
      reference   : "800-53|AU-5,CSCv6|6.3,CSCv7|6.4,CSF|PR.PT-1,ITSG-33|AU-5,LEVEL|2S"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/auditd.conf"
      regex       : "^[\\s]*admin_space_left_action[\\s]*="
      expect      : "^[\\s]*admin_space_left_action[\\s]*=[\\s]*halt[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.1.2 Ensure system is disabled when audit logs are full - action_mail_acct"
      info        : "The auditddaemon can be configured to halt the system when the audit logs are full.
    Rationale:
    In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability."
      solution    : "Set the following parameters in /etc/audit/auditd.conf:
    space_left_action = email
    action_mail_acct = root
    admin_space_left_action = halt"
      reference   : "800-171|3.3.4,800-53|AU-5,CN-L3|7.1.3.3(e),CSCv6|6.3,CSCv7|6.4,CSF|PR.PT-1,ITSG-33|AU-5,LEVEL|2S,NESA|T3.6.2"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/auditd.conf"
      regex       : "^[\\s]*action_mail_acct[\\s]*="
      expect      : "^[\\s]*action_mail_acct[\\s]*=[\\s]*root[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.1.3 Ensure audit logs are not automatically deleted"
      info        : "The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.
    Rationale:
    In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history."
      solution    : "Set the following parameter in /etc/audit/auditd.conf:
    max_log_file_action = keep_logs"
      reference   : "800-171|3.3.4,800-53|AU-5,CN-L3|7.1.3.3(e),CSCv6|6.3,CSCv7|6.4,CSF|PR.PT-1,ITSG-33|AU-5,LEVEL|2S,NESA|T3.6.2"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/auditd.conf"
      regex       : "^[\\s]*max_log_file_action[\\s]*="
      expect      : "^[\\s]*max_log_file_action[\\s]*=[\\s]*keep_logs[\\s]*$"
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "4.1.2 Ensure auditd service is enabled"
      info          : "Turn on the auditddaemon to record system events.
    Rationale:
    The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring."
      solution      : "Run the following command to enable auditd:
    # systemctl enable auditd"
      reference     : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CIP|007-6-R1,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also      : "https://workbench.cisecurity.org/files/2429"
      cmd           : "/bin/systemctl is-enabled auditd | /usr/bin/awk \'{print} END {if(NR==0) print \"disabled\" }\'"
      expect        : "enabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.3 Ensure auditing for processes that start prior to auditd is enabled"
      info        : "Configure grub so that processes that are capable of being audited can be audited even if they start up prior to auditdstartup.
    Rationale:
    Audit events need to be captured on processes that start up prior to auditd, so that potential malicious activity cannot go undetected."
      solution    : "Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX:
    GRUB_CMDLINE_LINUX=\"audit=1\"
    Run the following command to update the grub2 configuration:
    # update-grub
    Notes:
    This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings."
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv6|6.2,CSCv7|6.2,CSCv7|6.3,CSF|PR.DS-6,LEVEL|2S"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/bin/grep \'^[[:space:]]*linux\' /boot/grub/grub.cfg"
      expect      : "audit[\\s]*=[\\s]*1"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.4 Ensure events that modify date and time information are collected - adjtimex settimeofday stime"
      info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*adjtimex)(?=.*settimeofday)(?=.*stime).*[\\s]+-k[\\s]+time-change[\\s]*$"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*adjtimex)(?=.*settimeofday)(?=.*stime).*[\\s]+-k[\\s]+time-change[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.4 Ensure events that modify date and time information are collected - auditctl adjtimex"
      info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep time-change"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*adjtimex)(?=.*settimeofday)(?=.*stime).*[\\s]+-F[\\s]+key=time-change[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.4 Ensure events that modify date and time information are collected - clock_settime"
      info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+.*clock_settime"
      expect      : "-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+.*clock_settime"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.4 Ensure events that modify date and time information are collected - auditctl clock_settime"
      info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep time-change"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+clock_settime[\\s]+-F[\\s]+key=time-change[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.4 Ensure events that modify date and time information are collected - /etc/localtime"
      info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "-w[\\s]+/etc/localtime[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+.*time-change"
      expect      : "-w[\\s]+/etc/localtime[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+.*time-change"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.4 Ensure events that modify date and time information are collected - auditctl /etc/localtime"
      info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep time-change"
      expect      : "^[\\s]*-w[\\s]+/etc/localtime[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+time-change[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "OS is 64 bit"
          cmd         : "/bin/uname -m"
          expect      : "^x86_64$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.4 Ensure events that modify date and time information are collected - settimeofday,adjtimex x64"
          info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*adjtimex)(?=.*settimeofday).*[\\s]+-k[\\s]+time-change[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*adjtimex)(?=.*settimeofday).*[\\s]+-k[\\s]+time-change[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.4 Ensure events that modify date and time information are collected - auditctl settimeofday,adjtimex x64"
          info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep time-change"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+(?=.*adjtimex)(?=.*settimeofday).*[\\s]+-F[\\s]+key=time-change[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.4 Ensure events that modify date and time information are collected - clock_settime x64"
          info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+.*clock_settime"
          expect      : "-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+.*clock_settime"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.4 Ensure events that modify date and time information are collected - auditctl clock_settime x64"
          info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep time-change"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+clock_settime[\\s]+-F[\\s]+key=time-change[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.1.4 Ensure events that modify date and time information are collected - settimeofday,adjtimex x64"
          info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.4 Ensure events that modify date and time information are collected - auditctl settimeofday,adjtimex x64"
          info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.4 Ensure events that modify date and time information are collected - clock_settime x64"
          info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.4 Ensure events that modify date and time information are collected - auditctl clock_settime x64"
          info        : "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"
    Rationale:
    Unexpected changes in system date and/or time could be a sign of malicious activity on the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change
    -w /etc/localtime -p wa -k time-change
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.5 Ensure events that modify user/group information are collected - /etc/group"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/etc\\/group[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/etc\\/group[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/group"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep identity"
      expect      : "^[\\s]*-w[\\s]+/etc/group[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.5 Ensure events that modify user/group information are collected - /etc/passwd"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/etc\\/passwd[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/etc\\/passwd[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/passwd"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep identity"
      expect      : "^[\\s]*-w[\\s]+/etc/passwd[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.5 Ensure events that modify user/group information are collected - /etc/gshadow"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/etc\\/gshadow[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/etc\\/gshadow[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/gshadow"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep identity"
      expect      : "^[\\s]*-w[\\s]+/etc/gshadow[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.5 Ensure events that modify user/group information are collected - /etc/shadow"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/etc\\/shadow[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/etc\\/shadow[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/shadow"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep identity"
      expect      : "^[\\s]*-w[\\s]+/etc/shadow[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.5 Ensure events that modify user/group information are collected - /etc/security/opasswd"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|5.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/etc\\/security\/opasswd[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/etc\\/security\/opasswd[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/security/opasswd"
      info        : "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.
    Rationale:
    Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|4.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep identity"
      expect      : "^[\\s]*-w[\\s]+/etc/security/opasswd[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+identity[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.6 Ensure events that modify the system's network environment are collected - sethostname setdomainname"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*sethostname)(?=.*setdomainname).*[\\s]+-k[\\s]+system-locale[\\s]*$"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*sethostname)(?=.*setdomainname).*[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.6 Ensure events that modify the system's network environment are collected - auditctl 'sethostname setdomainname'"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep system-locale"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*sethostname)(?=.*setdomainname).*[\\s]+-F[\\s]+key=system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.6 Ensure events that modify the system's network environment are collected - /etc/issue"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/etc\\/issue[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/etc\\/issue[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.6 Ensure events that modify the system's network environment are collected - auditctl '/etc/issue'"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep system-locale"
      expect      : "^[\\s]*-w[\\s]+\\/etc\\/issue[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.6 Ensure events that modify the system's network environment are collected - issue.net"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/etc/issue\\.net[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/etc/issue\\.net[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.6 Ensure events that modify the system's network environment are collected - auditctl 'issue.net'"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep system-locale"
      expect      : "^[\\s]*-w[\\s]+/etc/issue\\.net[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.6 Ensure events that modify the system's network environment are collected - /etc/hosts"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/etc/hosts[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/etc/hosts[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.6 Ensure events that modify the system's network environment are collected - auditctl '/etc/hosts'"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep system-locale"
      expect      : "^[\\s]*-w[\\s]+/etc/hosts[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.6 Ensure events that modify the system's network environment are collected - /etc/network"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/etc/network[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/etc/network[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.6 Ensure events that modify the system's network environment are collected - auditctl '/etc/network'"
      info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep system-locale"
      expect      : "^[\\s]*-w[\\s]+/etc/network/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+system-locale[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "OS is 64 bit"
          cmd         : "/bin/uname -m"
          expect      : "^x86_64$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.6 Ensure events that modify the system's network environment are collected - sethostname setdomainname x64"
          info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*sethostname)(?=.*setdomainname).*[\\s]+-k[\\s]+system-locale[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*sethostname)(?=.*setdomainname).*[\\s]+-k[\\s]+system-locale[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.6 Ensure events that modify the system's network environment are collected - auditctl 'sethostname setdomainname' x64"
          info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep system-locale"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+(?=.*sethostname)(?=.*setdomainname).*[\\s]+-F[\\s]+key=system-locale[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.1.6 Ensure events that modify the system's network environment are collected - sethostname setdomainname x64"
          info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.6 Ensure events that modify the system's network environment are collected - auditctl 'sethostname setdomainname' x64"
          info        : "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/network (directory containing network interface scripts and configurations) files.
    Rationale:
    Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\""
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale
    -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale
    -w /etc/network -p wa -k system-locale
    Notes:
    /etc/network is common to Debian based distributions. You should expand or replace this coverage to any network configuration files on your system.
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "AppArmor is installed"
          cmd         : "/usr/bin/dpkg -s apparmor 2>&1"
          expect      : "^[\\s]*Status: install ok installed[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/apparmor"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-w[\\s]+/etc/apparmor/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
          expect      : "^[\\s]*-w[\\s]+/etc/apparmor/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/apparmor"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep MAC-policy"
          expect      : "^[\\s]*-w[\\s]+/etc/apparmor/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/apparmor.d"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-w[\\s]+/etc/apparmor.d/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
          expect      : "^[\\s]*-w[\\s]+/etc/apparmor.d/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/apparmor.d"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep MAC-policy"
          expect      : "^[\\s]*-w[\\s]+/etc/apparmor.d/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/apparmor"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/apparmor"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/apparmor.d"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/apparmor.d"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "SELinux is installed"
          cmd         : "/usr/bin/dpkg -s selinux 2>&1"
          expect      : "^[\\s]*Status: install ok installed[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/selinux"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-w[\\s]+/etc/selinux/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
          expect      : "^[\\s]*-w[\\s]+/etc/selinux/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/selinux"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep MAC-policy"
          expect      : "^[\\s]*-w[\\s]+/etc/selinux/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /usr/share/selinux/"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-w[\\s]+/usr/share/selinux/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
          expect      : "^[\\s]*-w[\\s]+/usr/share/selinux/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /usr/share/selinux"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep MAC-policy"
          expect      : "^[\\s]*-w[\\s]+/usr/share/selinux[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+MAC-policy[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/selinux"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/selinux"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /usr/share/selinux"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "LEVEL|2S"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /usr/share/selinux"
          info        : "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.
    Rationale:
    Changes to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system."
          solution    : "On systems using SELinux add the following line to the /etc/audit/audit.rules file:
    -w /etc/selinux/ -p wa -k MAC-policy
    -w /usr/share/selinux/ -p wa -k MAC-policy
    On systems using AppArmor add the following line to the /etc/audit/audit.rules file:
    -w /etc/apparmor/ -p wa -k MAC-policy
    -w /etc/apparmor.d/ -p wa -k MAC-policy
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.8 Ensure login and logout events are collected - faillog"
      info        : "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains records of failures via the pam_tally2 module
    Rationale:
    Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/log/faillog -p wa -k logins
    -w /var/log/lastlog -p wa -k logins
    -w /var/log/tallylog -p wa -k logins
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/var/log/faillog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/var/log/faillog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.8 Ensure login and logout events are collected - auditctl faillog"
      info        : "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains records of failures via the pam_tally2 module
    Rationale:
    Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/log/faillog -p wa -k logins
    -w /var/log/lastlog -p wa -k logins
    -w /var/log/tallylog -p wa -k logins
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep logins"
      expect      : "^[\\s]*-w[\\s]+/var/log/faillog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.8 Ensure login and logout events are collected - lastlog"
      info        : "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains records of failures via the pam_tally2 module
    Rationale:
    Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/log/faillog -p wa -k logins
    -w /var/log/lastlog -p wa -k logins
    -w /var/log/tallylog -p wa -k logins
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/var/log/lastlog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/var/log/lastlog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.8 Ensure login and logout events are collected - auditctl lastlog"
      info        : "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains records of failures via the pam_tally2 module
    Rationale:
    Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/log/faillog -p wa -k logins
    -w /var/log/lastlog -p wa -k logins
    -w /var/log/tallylog -p wa -k logins
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep logins"
      expect      : "^[\\s]*-w[\\s]+/var/log/lastlog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.8 Ensure login and logout events are collected - tallylog"
      info        : "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains records of failures via the pam_tally2 module
    Rationale:
    Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/log/faillog -p wa -k logins
    -w /var/log/lastlog -p wa -k logins
    -w /var/log/tallylog -p wa -k logins
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/var/log/tallylog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/var/log/tallylog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.8 Ensure login and logout events are collected - auditctl tallylog"
      info        : "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains records of failures via the pam_tally2 module
    Rationale:
    Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/log/faillog -p wa -k logins
    -w /var/log/lastlog -p wa -k logins
    -w /var/log/tallylog -p wa -k logins
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep logins"
      expect      : "^[\\s]*-w[\\s]+/var/log/tallylog[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.9 Ensure session initiation information is collected - /var/run/utmp"
      info        : "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"
    Rationale:
    Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in)."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/run/utmp -p wa -k session
    -w /var/log/wtmp -p wa -k logins
    -w /var/log/btmp -p wa -k logins
    Notes:
    The last command can be used to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/var/run/utmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+session[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/var/run/utmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+session[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.9 Ensure session initiation information is collected - auditctl /var/run/utmp"
      info        : "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"
    Rationale:
    Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in)."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/run/utmp -p wa -k session
    -w /var/log/wtmp -p wa -k logins
    -w /var/log/btmp -p wa -k logins
    Notes:
    The last command can be used to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep session"
      expect      : "^[\\s]*-w[\\s]+/var/run/utmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+session[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.9 Ensure session initiation information is collected - /var/log/wtmp"
      info        : "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"
    Rationale:
    Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in)."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/run/utmp -p wa -k session
    -w /var/log/wtmp -p wa -k logins
    -w /var/log/btmp -p wa -k logins
    Notes:
    The last command can be used to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/var/log/wtmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/var/log/wtmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.9 Ensure session initiation information is collected - auditctl /var/log/wtmp"
      info        : "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"
    Rationale:
    Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in)."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/run/utmp -p wa -k session
    -w /var/log/wtmp -p wa -k logins
    -w /var/log/btmp -p wa -k logins
    Notes:
    The last command can be used to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep logins"
      expect      : "^[\\s]*-w[\\s]+/var/log/wtmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.9 Ensure session initiation information is collected - /var/log/btmp"
      info        : "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"
    Rationale:
    Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in)."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/run/utmp -p wa -k session
    -w /var/log/wtmp -p wa -k logins
    -w /var/log/btmp -p wa -k logins
    Notes:
    The last command can be used to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+/var/log/btmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+/var/log/btmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.9 Ensure session initiation information is collected - auditctl /var/log/btmp"
      info        : "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"
    Rationale:
    Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in)."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/run/utmp -p wa -k session
    -w /var/log/wtmp -p wa -k logins
    -w /var/log/btmp -p wa -k logins
    Notes:
    The last command can be used to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|16.10,CSCv6|16.4,CSCv6|5.5,CSCv7|16.11,CSCv7|16.13,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep logins"
      expect      : "^[\\s]*-w[\\s]+/var/log/btmp[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+logins[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.10 Ensure discretionary access control permission modification events are collected - chmod fchmod fchmodat"
      info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*chmod)(?=.*fchmod)(?=.*fchmodat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*chmod)(?=.*fchmod)(?=.*fchmodat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chmod fchmod fchmodat"
      info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep perm_mod"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*chmod)(?=.*fchmod)(?=.*fchmodat).*-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=perm_mod[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.10 Ensure discretionary access control permission modification events are collected - chown fchown fchownat lchown"
      info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*chown)(?=.*fchown)(?=.*fchownat)(?=.*lchown).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*chown)(?=.*fchown)(?=.*fchownat)(?=.*lchown).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chown fchown fchownat lchown"
      info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep perm_mod"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*chown)(?=.*fchown)(?=.*fchownat)(?=.*lchown).*-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=perm_mod[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.10 Ensure discretionary access control permission modification events are collected - lsetxattr setxattr fsetxattr removexattr"
      info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*setxattr)(?=.*lsetxattr)(?=.*fsetxattr)(?=.*removexattr)(?=.*lremovexattr)(?=.*fremovexattr).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*setxattr)(?=.*lsetxattr)(?=.*fsetxattr)(?=.*removexattr)(?=.*lremovexattr)(?=.*fremovexattr).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl lsetxattr setxattr fsetxattr removexattr"
      info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep perm_mod"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*setxattr)(?=.*lsetxattr)(?=.*fsetxattr)(?=.*removexattr)(?=.*lremovexattr)(?=.*fremovexattr).*-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=perm_mod[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "OS is 64 bit"
          cmd         : "/bin/uname -m"
          expect      : "^x86_64$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - chmod fchmod fchmodat x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*chmod)(?=.*fchmod)(?=.*fchmodat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*chmod)(?=.*fchmod)(?=.*fchmodat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chmod fchmod fchmodat x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep perm_mod"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+(?=.*chmod)(?=.*fchmod)(?=.*fchmodat).*-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=perm_mod[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - chown fchown fchownat lchown x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*chown)(?=.*fchown)(?=.*fchownat)(?=.*lchown).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*chown)(?=.*fchown)(?=.*fchownat)(?=.*lchown).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chown fchown fchownat lchown x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep perm_mod"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+(?=.*chown)(?=.*fchown)(?=.*fchownat)(?=.*lchown).*-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=perm_mod[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - lsetxattr setxattr fsetxattr removexattr x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*setxattr)(?=.*lsetxattr)(?=.*fsetxattr)(?=.*removexattr)(?=.*lremovexattr)(?=.*fremovexattr).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*setxattr)(?=.*lsetxattr)(?=.*fsetxattr)(?=.*removexattr)(?=.*lremovexattr)(?=.*fremovexattr).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+perm_mod[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl setxattr x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep perm_mod"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*setxattr)(?=.*lsetxattr)(?=.*fsetxattr)(?=.*removexattr)(?=.*lremovexattr)(?=.*fremovexattr).*-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=perm_mod[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - chmod fchmod fchmodat x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chmod fchmod fchmodat x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - chown fchown fchownat lchown x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chown fchown fchownat lchown x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - lsetxattr setxattr fsetxattr removexattr x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl setxattr x64"
          info        : "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"
    Rationale:
    Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|3.6,CSCv7|5.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EACCES"
      info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*[\\s]+-F[\\s]+exit=-EACCES[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+access[\\s]*$"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*[\\s]+-F[\\s]+exit=-EACCES[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+access[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EACCES"
      info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep access"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*-F[\\s]+exit=-EACCES[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=access[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EPERM"
      info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*[\\s]+-F[\\s]+exit=-EPERM[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+access[\\s]*$"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*[\\s]+-F[\\s]+exit=-EPERM[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+access[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EPERM"
      info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep access"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*-F[\\s]+exit=-EPERM[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=access[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "OS is 64 bit"
          cmd         : "/bin/uname -m"
          expect      : "^x86_64$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EACCES x64"
          info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*[\\s]+-F[\\s]+exit=-EACCES[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+access[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*[\\s]+-F[\\s]+exit=-EACCES[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+access[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EACCES x64"
          info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep access"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*-F[\\s]+exit=-EACCES[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=access[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EPERM x64"
          info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*[\\s]+-F[\\s]+exit=-EPERM[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+access[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*[\\s]+-F[\\s]+exit=-EPERM[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+access[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EPERM x64"
          info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep access"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate).*-F[\\s]+exit=-EPERM[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=access[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EACCES x64"
          info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EACCES x64"
          info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EPERM x64"
          info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EPERM x64"
          info        : "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"
    Rationale:
    Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.12 Ensure use of privileged commands is collected"
      info        : "Monitor privileged programs (those that have the setuid and/or setgid bit set on execution) to determine if unprivileged users are running these commands.
    Rationale:
    Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system."
      solution    : "To remediate this issue, the system administrator will have to execute a find command to locate all the privileged programs and then add an audit line for each one of them. The audit parameters associated with this are as follows:
    -F path=\" $1 \" - will populate each file name found through the find command and processed by awk. -F perm=x - will write an audit record if the file is executed. -F auid>=1000 - will write a record if the user executing the command is not a privileged user. -F auid!= 4294967295 - will ignore Daemon events
    All audit records should be tagged with the identifier \"privileged\".
    Run the following command replacing with a list of partitions where programs can be executed from on your system:
    # find <partition> -xdev \( -perm -4000 -o -perm -2000 \) -type f | awk '{print \
    \"-a always,exit -F path=\" $1 \" -F perm=x -F auid>=1000 -F auid!=4294967295 \
    -k privileged\" }'
    Add all resulting lines to the /etc/audit/audit.rules file.
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.1,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "(/usr/bin/find / -xdev \\( -perm -4000 -o -perm -2000 \\) -type f && cat /etc/audit/audit.rules) | /usr/bin/awk \'/^\\// { a[$1] = 1 } /^-a .*perm=x/ { p=$0; gsub(/^.*path=/, \"\", p); gsub(/ .*$/, \"\", p); a[p] = 0 } END { for (p in a) { if (a[p] == 1) { print p; f++ } }; if (!f) print \"none\" }\'"
      expect      : "^none$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.13 Ensure successful file system mounts are collected - mounts"
      info        : "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user
    Rationale:
    It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    Notes:
    This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS).
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|13,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+mount[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+mount[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+mounts[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.13 Ensure successful file system mounts are collected - auditctl mount"
      info        : "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user
    Rationale:
    It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    Notes:
    This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS).
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|13,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep mounts"
      expect      : "^\\-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+mount[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=mounts[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "OS is 64 bit"
          cmd         : "/bin/uname -m"
          expect      : "^x86_64$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.13 Ensure successful file system mounts are collected - mounts x64"
          info        : "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user
    Rationale:
    It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    Notes:
    This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS).
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|13,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+mount[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+mount[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+mounts[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.13 Ensure successful file system mounts are collected - auditctl mount x64"
          info        : "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user
    Rationale:
    It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    Notes:
    This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS).
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|13,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep mounts"
          expect      : "^\\-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+mount[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=mounts[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.1.13 Ensure successful file system mounts are collected - mounts x64"
          info        : "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user
    Rationale:
    It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    Notes:
    This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS).
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|13,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.13 Ensure successful file system mounts are collected - auditctl mount x64"
          info        : "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user
    Rationale:
    It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    Notes:
    This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS).
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|13,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.14 Ensure file deletion events by users are collected - delete"
      info        : "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".
    Rationale:
    Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    Notes:
    At a minimum, configure the audit system to collect file deletion events for all users and root.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*unlink)(?=.*unlinkat)(?=.*rename)(?=.*renameat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+delete[\\s]*$"
      expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+(?=.*unlink)(?=.*unlinkat)(?=.*rename)(?=.*renameat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+delete[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.14 Ensure file deletion events by users are collected - auditctl delete"
      info        : "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".
    Rationale:
    Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    Notes:
    At a minimum, configure the audit system to collect file deletion events for all users and root.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep delete"
      expect      : "^\\-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*unlink)(?=.*unlinkat)(?=.*rename)(?=.*renameat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=delete[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "OS is 64 bit"
          cmd         : "/bin/uname -m"
          expect      : "^x86_64$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.14 Ensure file deletion events by users are collected - delete x64"
          info        : "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".
    Rationale:
    Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    Notes:
    At a minimum, configure the audit system to collect file deletion events for all users and root.
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*unlink)(?=.*unlinkat)(?=.*rename)(?=.*renameat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+delete[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+(?=.*unlink)(?=.*unlinkat)(?=.*rename)(?=.*renameat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=4294967295[\\s]+-k[\\s]+delete[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.14 Ensure file deletion events by users are collected - auditctl delete x64"
          info        : "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".
    Rationale:
    Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    Notes:
    At a minimum, configure the audit system to collect file deletion events for all users and root.
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep delete"
          expect      : "^\\-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+(?=.*unlink)(?=.*unlinkat)(?=.*rename)(?=.*renameat).*[\\s]+-F[\\s]+auid>=1000[\\s]+-F[\\s]+auid!=-1[\\s]+-F[\\s]+key=delete[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.1.14 Ensure file deletion events by users are collected - delete x64"
          info        : "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".
    Rationale:
    Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    Notes:
    At a minimum, configure the audit system to collect file deletion events for all users and root.
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>

        <report type:"PASSED">
          description : "4.1.14 Ensure file deletion events by users are collected - auditctl delete x64"
          info        : "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".
    Rationale:
    Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    Notes:
    At a minimum, configure the audit system to collect file deletion events for all users and root.
    Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.15 Ensure changes to system administration scope (sudoers) is collected - /etc/sudoers"
      info        : "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\"
    Rationale:
    Changes in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity."
      solution    : "Add the following line to the /etc/audit/audit.rules file:
    -w /etc/sudoers -p wa -k scope
    -w /etc/sudoers.d/ -p wa -k scope
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|4.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\/etc\/sudoers[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+scope[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\/etc\/sudoers[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+scope[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.15 Ensure changes to system administration scope (sudoers) is collected - auditctl /etc/sudoers"
      info        : "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\"
    Rationale:
    Changes in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity."
      solution    : "Add the following line to the /etc/audit/audit.rules file:
    -w /etc/sudoers -p wa -k scope
    -w /etc/sudoers.d/ -p wa -k scope
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|4.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep scope"
      expect      : "^[\\s]*-w[\\s]+\/etc\/sudoers[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+scope[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.15 Ensure changes to system administration scope (sudoers) is collected - /etc/sudoers.d/"
      info        : "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\"
    Rationale:
    Changes in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity."
      solution    : "Add the following line to the /etc/audit/audit.rules file:
    -w /etc/sudoers -p wa -k scope
    -w /etc/sudoers.d/ -p wa -k scope
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|4.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\/etc\/sudoers\.d\/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+scope[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\/etc\/sudoers\.d\/[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+scope[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.15 Ensure changes to system administration scope (sudoers) is collected - auditctl /etc/sudoers.d/"
      info        : "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\"
    Rationale:
    Changes in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity."
      solution    : "Add the following line to the /etc/audit/audit.rules file:
    -w /etc/sudoers -p wa -k scope
    -w /etc/sudoers.d/ -p wa -k scope
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.4,CSCv7|4.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep scope"
      expect      : "^[\\s]*-w[\\s]+\/etc\/sudoers\.d[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+scope[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.16 Ensure system administrator actions (sudolog) are collected - /var/log/sudo.log"
      info        : "Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log . Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log.
    Rationale:
    Changes in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/log/sudo.log -p wa -k actions
    Notes:
    The system must be configured with sudisabled (See Item 5.6 Ensure access to the su command is restricted) to force all command execution through sudo. This will not be effective on the console, as administrators can log in as root.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.1,CSCv6|5.5,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/var\\/log\\/sudo\\.log[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+actions[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/var\\/log\\/sudo\\.log[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+actions[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.16 Ensure system administrator actions (sudolog) are collected - auditctl /var/log/sudo.log"
      info        : "Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log . Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log.
    Rationale:
    Changes in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed."
      solution    : "Add the following lines to the /etc/audit/audit.rules file:
    -w /var/log/sudo.log -p wa -k actions
    Notes:
    The system must be configured with sudisabled (See Item 5.6 Ensure access to the su command is restricted) to force all command execution through sudo. This will not be effective on the console, as administrators can log in as root.
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|5.1,CSCv6|5.5,CSCv7|4.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep actions"
      expect      : "^[\\s]*-w[\\s]+/var/log/sudo\\.log[\\s]+-p[\\s]+wa[\\s]+-k[\\s]+actions[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "OS is 64 bit"
          cmd         : "/bin/uname -m"
          expect      : "x86_64"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.17 Ensure kernel module loading and unloading is collected - init_module"
          info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
      Rationale:
      Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
      For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
      Notes:
      Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+init_module[\\s]+-S[\\s]+delete_module[\\s]+-k[\\s]+modules[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b64[\\s]+-S[\\s]+init_module[\\s]+-S[\\s]+delete_module[\\s]+-k[\\s]+modules[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.17 Ensure kernel module loading and unloading is collected - auditctl init_module"
          info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
      Rationale:
      Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
      For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
      Notes:
      Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep modules"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=x86_64[\\s]+-S[\\s]+(?=.*init_module)(?=.*delete_module).*[\\s]+-F[\\s]+key=modules[\\s]*$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.1.17 Ensure kernel module loading and unloading is collected - init_module"
          info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
      Rationale:
      Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
      For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
      Notes:
      Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          file        : "/etc/audit/audit.rules"
          regex       : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+init_module[\\s]+-S[\\s]+delete_module[\\s]+-k[\\s]+modules[\\s]*$"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=b32[\\s]+-S[\\s]+init_module[\\s]+-S[\\s]+delete_module[\\s]+-k[\\s]+modules[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.1.17 Ensure kernel module loading and unloading is collected - auditctl init_module"
          info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
      Rationale:
      Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
          solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
      For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
      Notes:
      Reloading the auditd config to set active settings may require a system reboot."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/2429"
          cmd         : "/sbin/auditctl -l | /bin/grep modules"
          expect      : "^[\\s]*-a[\\s]+always,exit[\\s]+-F[\\s]+arch=i386[\\s]+-S[\\s]+(?=.*init_module)(?=.*delete_module).*[\\s]+-F[\\s]+key=modules[\\s]*$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.17 Ensure kernel module loading and unloading is collected - /sbin/insmod"
      info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
    Rationale:
    Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/sbin\\/insmod[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/sbin\\/insmod[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.17 Ensure kernel module loading and unloading is collected - auditctl /sbin/insmod"
      info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
    Rationale:
    Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep modules"
      expect      : "^[\\s]*-w[\\s]+/sbin/insmod[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.17 Ensure kernel module loading and unloading is collected - /sbin/rmmod"
      info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
    Rationale:
    Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/sbin\\/rmmod[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/sbin\\/rmmod[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.17 Ensure kernel module loading and unloading is collected - auditctl /sbin/rmmod"
      info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
    Rationale:
    Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep modules"
      expect      : "^[\\s]*-w[\\s]+/sbin/rmmod[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.17 Ensure kernel module loading and unloading is collected - /sbin/modprobe"
      info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
    Rationale:
    Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/audit/audit.rules"
      regex       : "^[\\s]*-w[\\s]+\\/sbin\\/modprobe[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
      expect      : "^[\\s]*-w[\\s]+\\/sbin\\/modprobe[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1.17 Ensure kernel module loading and unloading is collected - auditctl /sbin/modprobe"
      info        : "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".
    Rationale:
    Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules."
      solution    : "For 32 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
    For 64 bit systems add the following lines to the /etc/audit/audit.rules file:
    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules
    -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
    Notes:
    Reloading the auditd config to set active settings may require a system reboot."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|3,CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      cmd         : "/sbin/auditctl -l | /bin/grep modules"
      expect      : "^[\\s]*-w[\\s]+/sbin/modprobe[\\s]+-p[\\s]+x[\\s]+-k[\\s]+modules[\\s]*$"
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "4.1.18 Ensure the audit configuration is immutable"
      info          : "Set system audit so that audit rules cannot be modified with auditctl . Setting the flag \"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.
    Rationale:
    In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes."
      solution      : "Add the following line to the end of the /etc/audit/audit.rules file.
    -e 2
    Notes:
    This setting will ensure reloading the auditd config to set active settings requires a system reboot."
      reference     : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3,CSCv6|6,CSCv7|6.2,CSCv7|6.3,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|2S,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also      : "https://workbench.cisecurity.org/files/2429"
      cmd           : "/bin/grep -v \"^$\" /etc/audit/audit.rules | /usr/bin/tail -1"
      expect        : "^[\\s]*-e[\\s]+2[\\s]*$"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.5 Ensure default user shell timeout is 900 seconds or less - /etc/bashrc"
      info        : "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in seconds.
    Rationale:
    Having no timeout value associated with a shell could allow an unauthorized user access to another user's shell session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening."
      solution    : "Edit the /etc/bashrc, /etc/profile, and /etc/profile.d*.sh files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows:
    TMOUT=600
    Notes:
    The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked. Other methods of setting a timeout exist for other shells not covered here."
      reference   : "800-171|3.1.10,800-53|AC-11,CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-11,LEVEL|2S,NIAv2|AM23c,NIAv2|AM23d"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/bashrc"
      regex       : "^[\\s]*TMOUT[\\s]*=[\\s]*"
      expect      : "^[\\s]*TMOUT[\\s]*=[\\s]*\\b([1-9]|[1-8][0-9]|9[0-9]|[1-5][0-9]{2}|600)\\b[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.5 Ensure default user shell timeout is 900 seconds or less - /etc/profile"
      info        : "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in seconds.
    Rationale:
    Having no timeout value associated with a shell could allow an unauthorized user access to another user's shell session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening."
      solution    : "Edit the /etc/bashrc, /etc/profile, and /etc/profile.d*.sh files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows:
    TMOUT=600
    Notes:
    The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked. Other methods of setting a timeout exist for other shells not covered here."
      reference   : "800-171|3.1.10,800-53|AC-11,CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-11,LEVEL|2S,NIAv2|AM23c,NIAv2|AM23d"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/profile"
      regex       : "^[\\s]*TMOUT[\\s]*=[\\s]*"
      expect      : "^[\\s]*TMOUT[\\s]*=[\\s]*\\b([1-9]|[1-8][0-9]|9[0-9]|[1-5][0-9]{2}|600)\\b[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.5 Ensure default user shell timeout is 900 seconds or less - /etc/profile.d/*.sh"
      info        : "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in seconds.
    Rationale:
    Having no timeout value associated with a shell could allow an unauthorized user access to another user's shell session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening."
      solution    : "Edit the /etc/bashrc, /etc/profile, and /etc/profile.d*.sh files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows:
    TMOUT=600
    Notes:
    The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked. Other methods of setting a timeout exist for other shells not covered here."
      reference   : "800-171|3.1.10,800-53|AC-11,CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-11,LEVEL|2S,NIAv2|AM23c,NIAv2|AM23d"
      see_also    : "https://workbench.cisecurity.org/files/2429"
      file        : "/etc/profile.d/*.sh"
      regex       : "^[\\s]*TMOUT[\\s]*=[\\s]*"
      expect      : "^[\\s]*TMOUT[\\s]*=[\\s]*\\b([1-9]|[1-8][0-9]|9[0-9]|[1-5][0-9]{2}|600)\\b[\\s]*$"
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "6.1.1 Audit system file permissions"
      info          : "The Debian package manager has a number of useful options. One of these, the --verify option, can be used to verify that system packages are correctly installed. The --verify option can be used to verify a particular package or to verify all system packages. If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option:
    Code   Meaning
    S      File size differs.
    M      File mode differs (includes permissions and file type).
    5      The MD5 checksum differs.
    D      The major and minor version numbers differ on a device file.
    L      A mismatch occurs in a link.
    U      The file ownership differs.
    G      The file group owner differs.
    T      The file time (mtime) differs.
    The dpkg -S command can be used to determine which package a particular file belongs to. For example the following commands determines which package the /bin/bash file belongs to:
    # dpkg -S /bin/bash
    bash: /bin/bash
    To verify the settings for the package that controls the /bin/bash file, run the following:
    # dpkg --verify bash
    ??5?????? c /etc/bash.bashrc
    Rationale:
    It is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS vendor."
      solution      : "Correct any discrepancies found and rerun the audit until output is clean or risk is mitigated or accepted.
    Notes:
    Since packages and important files may change with new updates and releases, it is recommended to verify everything, not just a finite list of files. This can be a time consuming task and results may depend on site policy therefore it is not a scorable benchmark item, but is provided for those interested in additional security measures.
    Some of the recommendations of this benchmark alter the state of files audited by this recommendation. The audit command will alert for all changes to a file permissions even if the new state is more secure than the default."
      reference     : "800-53|SI-7(1),CN-L3|7.1.3.5(b),CSCv6|14.4,CSCv7|14.6,CSF|PR.DS-6,ITSG-33|SI-7(1),LEVEL|2NS,NESA|T7.3.3,SWIFT-CSCv1|6.2"
      see_also      : "https://workbench.cisecurity.org/files/2429"
      cmd           : "/usr/bin/dpkg --verify | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
      expect        : "none"
      dont_echo_cmd : YES
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Debian_Linux_8_Workstation_v2.0.1_L2.audit Level 2"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/2429"
    </report>
  </else>
</if>

</check_type>
