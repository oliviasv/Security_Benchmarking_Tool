#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2020/07/14 $
#
# Description : This document implements the security configuration as recommended by the
#               DISA BIND 9.x v1r9 STIG.
#
#<ui_metadata>
#<display_name>DISA BIND 9.x STIG v1r9</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>BIND 9.x V1R9</name>
#  <version>1.9.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip</link>
#</spec>
#<labels>unix,disa,bind,dns,agent</labels>
#<benchmark_refs>CAT,CCI,Rule-ID,STIG-ID,Vuln-ID,Group-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>SYSLOG_SERVER</name>
#    <default>@@loghost\.example\.com</default>
#    <description>Syslog host address</description>
#    <info>The IP address or FQDN of the central syslog server for your organization as it appears in rsyslog.conf.</info>
#  </variable>
#  <variable>
#    <name>NAMED_CONF</name>
#    <default>/var/named/chroot/etc/named.conf</default>
#    <description>named.conf file path</description>
#    <info>The path to the named.conf file for BIND.</info>
#  </variable>
#  <variable>
#    <name>TSIG_KEY_FILE_FULL_PATH</name>
#    <default>/var/named/chroot/etc/tsig.key</default>
#    <description>TSIG key file full path</description>
#    <info>The full path to the TSIG key files.</info>
#  </variable>
#  <variable>
#    <name>DNSSEC_KEY_FILE_FULL_PATH</name>
#    <default>/var/named/chroot/etc/dnssec.key</default>
#    <description>DNSSEC key file full path</description>
#    <info>The full path to the DNSSEC key files.</info>
#  </variable>
#  <variable>
#    <name>ROOT_HINTS</name>
#    <default>/var/named/chroot/var/named/named.ca</default>
#    <description>Root hints file path</description>
#    <info>The name of the root hints file is defined in named.conf. Common names for the file are root.hints, named.cache, or db.cache.</info>
#  </variable>
#  <variable>
#    <name>ZONE_FILE_PATH</name>
#    <default>/var/named/chroot/etc/</default>
#    <description>Zone files path</description>
#    <info>The full path to the zone files.</info>
#  </variable>
#  <variable>
#    <name>SIGNED_ZONE_FILE_NAME</name>
#    <default>/var/named/chroot/etc/</default>
#    <description>Signed zone file name</description>
#    <info>The full path and name of signed zone files.</info>
#  </variable>
#  <variable>
#    <name>DNS_ADMIN_GROUP</name>
#    <default>named</default>
#    <description>DNS administrators group.</description>
#    <info>The group used  for designated DNS administrators. Default is named.</info>
#  </variable>
#  <variable>
#    <name>ERS_IP_ADDRESSES</name>
#    <default>10.2.3.4; 10.2.3.5;</default>
#    <description>ERS IP Address list</description>
#    <info>DISA Enterprise Recursive Service (ERS) anycast IP addresses, used for caching servers.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check for BIND 9 installation"
      cmd         : "/usr/sbin/named -v"
      expect      : "^[\\s]*BIND 9\.[0-9]+.*"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_STIG_BIND_9_v1r9.audit from DISA BIND 9.x v1r9 STIG"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-000001 - A BIND 9.x server implementation must be running in a chroot(ed) directory structure."
      info        : "With any network service, there is the potential that an attacker can exploit a vulnerability within the program that allows the attacker to gain control of the process and even run system commands with that control. One possible defense against this attack is to limit the software to particular quarantined areas of the file system, memory or both. This effectively restricts the service so that it will not have access to the full file system. If such a defense were in place, then even if an attacker gained control of the process, the attacker would be unable to reach other commands or files on the system. This approach often is referred to as a padded cell, jail, or sandbox. All of these terms allude to the fact that the software is contained in an area where it cannot harm either itself or others. A more technical term is a chroot(ed) directory structure.

BIND should be configured to run in a padded cell or chroot(ed) directory structure."
      solution    : "Configure the BIND 9.x server to operate in a chroot(ed) directory structure."
      reference   : "800-171|3.4.8,800-53|CM-7(5),CAT|III,CCI|CCI-001090,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,Rule-ID|SV-86987r1_rule,STIG-ID|BIND-9X-000001,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3,Vuln-ID|V-72363"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
      cmd         : "/usr/bin/ps -ef | /usr/bin/grep named | /usr/bin/grep -v grep"
      expect      : "named.*-t /.*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001000 - A BIND 9.x server implementation must be operating on a Current-Stable version as defined by ISC."
      info        : "The BIND STIG was written to incorporate capabilities and features provided in BIND version 9.9.x. However, it is recognized that security vulnerabilities in BIND are identified and then addressed on a regular, ongoing basis. Therefore it is required that the product be maintained at the latest stable versions in order to address vulnerabilities that are subsequently identified and can then be remediated via updates to the product.

Failure to run a version of BIND that has the capability to implement all of the required security features and that does provide services compliant to the DNS RFCs can have a severe impact on the security posture of a DNS infrastructure. Without the required security in place, a DNS implementation is vulnerable to many types of attacks and could be used as a launching point for further attacks on the organizational network that is utilizing the DNS implementation.

Satisfies: SRG-APP-000516-DNS-000097, SRG-APP-000516-DNS-000103

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Update the BIND 9.x server to a version that is listed as 'Current-Stable' by ISC or latest supported version of BIND when BIND is installed as part of a specific vendor implementation where the vendor maintains the BIND patches."
      reference   : "800-171|3.14.1,800-53|SI-2,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.4.4(e),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|PR9,NIAv2|SS14b,Rule-ID|SV-86989r2_rule,STIG-ID|BIND-9X-001000,SWIFT-CSCv1|2.2,Vuln-ID|V-72365"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
      cmd         : "/usr/sbin/named -v"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001002 - The platform on which the name server software is hosted must only run processes and services needed to support the BIND 9.x implementation."
      info        : "Hosts that run the name server software should not provide any other services. Unnecessary services running on the DNS server can introduce additional attack vectors leading to the compromise of an organization's DNS architecture.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Disable or uninstall all non-DNS related applications from the BIND 9.x server."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-86991r1_rule,STIG-ID|BIND-9X-001002,SWIFT-CSCv1|2.3,Vuln-ID|V-72367"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
      cmd         : "/usr/bin/ps -ef"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001003 - The BIND 9.x server software must run with restricted privileges."
      info        : "Failure to provide logical access restrictions associated with changes to application configuration may have significant effects on the overall security of the system. When dealing with access restrictions pertaining to change control, it should be noted that any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system. Accordingly, only qualified and authorized individuals should be allowed to obtain access to application components for the purposes of initiating changes, including upgrades and modifications."
      solution    : "Configure the BIND 9.x process to run as a non-privileged user.

Restart the BIND 9.x process."
      reference   : "800-171|3.1.5,800-53|AC-6,CAT|II,CCI|CCI-000366,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,Rule-ID|SV-86993r1_rule,STIG-ID|BIND-9X-001003,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-72369"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
      cmd         : "/usr/bin/ps -ef | /usr/bin/grep named | /usr/bin/grep -v grep"
      expect      : "named.*-u (!?root).*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001004 - The host running a BIND 9.X implementation must implement a set of firewall rules that restrict traffic on the DNS interface - tcp"
      info        : "Configuring hosts that run a BIND 9.X implementation to only accept DNS traffic on a DNS interface allows a system firewall to be configured to limit the allowed incoming ports/protocols to 53/tcp and 53/udp. Sending outgoing DNS messages from a random port minimizes the risk of an attacker guessing the outgoing message port and sending forged replies.

The TCP/IP stack in DNS hosts (stub resolver, caching/resolving/recursive name server, authoritative name server, etc.) could be subjected to packet flooding attacks (such as SYNC and smurf), resulting in disruption of communication. By implementing a specific set of firewall rules that limit accepted traffic to the interface, these risk of packet flooding and other TCP/IP based attacks is reduced."
      solution    : "Configure the OS firewall to only allow incoming DNS traffic on ports 53/tcp and 53/udp.
Add the following rules to the host firewall rule set:

# iptables -A INPUT -i [DNS Interface] -p tcp --dport 53 -j ACCEPT
# iptables -A INPUT -i [DNS Interface] -p udp --dport 53 -j ACCEPT
# iptables -A INPUT -i [DNS Interface] -j DROP

Note: If the system is not using an IPTables firewall, the appropriate firewall rules that limit traffic to ports 53/tcp and 53/udp should be configured on the active firewall."
      reference   : "800-171|3.13.1,800-53|SC-7(12),CAT|II,CCI|CCI-000366,ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,Rule-ID|SV-86995r1_rule,STIG-ID|BIND-9X-001004,Vuln-ID|V-72371"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
      cmd         : "/usr/sbin/iptables --list -n | /usr/bin/grep 'tcp dpt:53'"
      expect      : "ACCEPT.*tcp dpt:53"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001004 - The host running a BIND 9.X implementation must implement a set of firewall rules that restrict traffic on the DNS interface - udp"
      info        : "Configuring hosts that run a BIND 9.X implementation to only accept DNS traffic on a DNS interface allows a system firewall to be configured to limit the allowed incoming ports/protocols to 53/tcp and 53/udp. Sending outgoing DNS messages from a random port minimizes the risk of an attacker guessing the outgoing message port and sending forged replies.

The TCP/IP stack in DNS hosts (stub resolver, caching/resolving/recursive name server, authoritative name server, etc.) could be subjected to packet flooding attacks (such as SYNC and smurf), resulting in disruption of communication. By implementing a specific set of firewall rules that limit accepted traffic to the interface, these risk of packet flooding and other TCP/IP based attacks is reduced."
      solution    : "Configure the OS firewall to only allow incoming DNS traffic on ports 53/tcp and 53/udp.
Add the following rules to the host firewall rule set:

# iptables -A INPUT -i [DNS Interface] -p tcp --dport 53 -j ACCEPT
# iptables -A INPUT -i [DNS Interface] -p udp --dport 53 -j ACCEPT
# iptables -A INPUT -i [DNS Interface] -j DROP

Note: If the system is not using an IPTables firewall, the appropriate firewall rules that limit traffic to ports 53/tcp and 53/udp should be configured on the active firewall."
      reference   : "800-171|3.13.1,800-53|SC-7(12),CAT|II,CCI|CCI-000366,ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,Rule-ID|SV-86995r1_rule,STIG-ID|BIND-9X-001004,Vuln-ID|V-72371"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
      cmd         : "/usr/sbin/iptables --list -n | /usr/bin/grep 'udp dpt:53'"
      expect      : "ACCEPT.*udp dpt:53"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001004 - The host running a BIND 9.X implementation must implement a set of firewall rules that restrict traffic on the DNS interface - drop"
      info        : "Configuring hosts that run a BIND 9.X implementation to only accept DNS traffic on a DNS interface allows a system firewall to be configured to limit the allowed incoming ports/protocols to 53/tcp and 53/udp. Sending outgoing DNS messages from a random port minimizes the risk of an attacker guessing the outgoing message port and sending forged replies.

The TCP/IP stack in DNS hosts (stub resolver, caching/resolving/recursive name server, authoritative name server, etc.) could be subjected to packet flooding attacks (such as SYNC and smurf), resulting in disruption of communication. By implementing a specific set of firewall rules that limit accepted traffic to the interface, these risk of packet flooding and other TCP/IP based attacks is reduced."
      solution    : "Configure the OS firewall to only allow incoming DNS traffic on ports 53/tcp and 53/udp.
Add the following rules to the host firewall rule set:

# iptables -A INPUT -i [DNS Interface] -p tcp --dport 53 -j ACCEPT
# iptables -A INPUT -i [DNS Interface] -p udp --dport 53 -j ACCEPT
# iptables -A INPUT -i [DNS Interface] -j DROP

Note: If the system is not using an IPTables firewall, the appropriate firewall rules that limit traffic to ports 53/tcp and 53/udp should be configured on the active firewall."
      reference   : "800-171|3.13.1,800-53|SC-7(12),CAT|II,CCI|CCI-000366,ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,Rule-ID|SV-86995r1_rule,STIG-ID|BIND-9X-001004,Vuln-ID|V-72371"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
      cmd         : "/usr/sbin/iptables --list INPUT"
      expect      : "DROP[\\s]*all"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Determine number of interfaces"
          cmd         : "/usr/bin/ls -A /sys/class/net | /usr/bin/grep -v lo | /usr/bin/wc -l"
          expect      : "2"
        </custom_item>
      </condition>

      <then>
        <report type:"FAILED">
          description : "BIND-9X-001005 - The host running a BIND 9.x implementation must use a dedicated management interface in order to separate management traffic from DNS specific traffic."
          info        : "Providing Out-Of-Band (OOB) management is the best first step in any management strategy. No production traffic resides on an out-of-band network. The biggest advantage to implementation of an OOB network is providing support and maintenance to the network that has become degraded or compromised. During an outage or degradation period the in band management link may not be available.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "On the host machine, configure an interface that is dedicated to management traffic.

Restart the host machine."
          reference   : "800-171|3.13.2,800-171|3.13.5,800-53|SC-7(22),CAT|II,CCI|CCI-000366,CSF|PR.AC-5,CSF|PR.PT-4,Rule-ID|SV-86997r1_rule,STIG-ID|BIND-9X-001005,Vuln-ID|V-72373"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"FAILED">
          description : "BIND-9X-001006 - The host running a BIND 9.x implementation must use an interface that is configured to process only DNS traffic."
          info        : "Configuring hosts that run a BIND 9.X implementation to only accept DNS traffic on a DNS interface allows a system to be configured to segregate DNS traffic from all other host traffic.

The TCP/IP stack in DNS hosts (stub resolver, caching/resolving/recursive name server, authoritative name server, etc.) could be subjected to packet flooding attacks (such as SYNC and smurf), resulting in disruption of communication.

The use of a dedicated interface for DNS traffic allows for these threats to be mitigated by creating a means to limit what types of traffic can be processed using a host based firewall solution.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "On the host machine, configure an interface to only process DNS traffic.

Restart the host machine."
          reference   : "800-171|3.13.2,800-171|3.13.5,800-53|SC-7(22),CAT|II,CCI|CCI-000366,CSF|PR.AC-5,CSF|PR.PT-4,Rule-ID|SV-86999r1_rule,STIG-ID|BIND-9X-001006,Vuln-ID|V-72375"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </then>

      <else>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001005 - The host running a BIND 9.x implementation must use a dedicated management interface in order to separate management traffic from DNS specific traffic."
          info        : "Providing Out-Of-Band (OOB) management is the best first step in any management strategy. No production traffic resides on an out-of-band network. The biggest advantage to implementation of an OOB network is providing support and maintenance to the network that has become degraded or compromised. During an outage or degradation period the in band management link may not be available.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "On the host machine, configure an interface that is dedicated to management traffic.

Restart the host machine."
          reference   : "800-171|3.13.2,800-171|3.13.5,800-53|SC-7(22),CAT|II,CCI|CCI-000366,CSF|PR.AC-5,CSF|PR.PT-4,Rule-ID|SV-86997r1_rule,STIG-ID|BIND-9X-001005,Vuln-ID|V-72373"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
          cmd         : "/usr/sbin/ifconfig -a"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001006 - The host running a BIND 9.x implementation must use an interface that is configured to process only DNS traffic."
          info        : "Configuring hosts that run a BIND 9.X implementation to only accept DNS traffic on a DNS interface allows a system to be configured to segregate DNS traffic from all other host traffic.

The TCP/IP stack in DNS hosts (stub resolver, caching/resolving/recursive name server, authoritative name server, etc.) could be subjected to packet flooding attacks (such as SYNC and smurf), resulting in disruption of communication.

The use of a dedicated interface for DNS traffic allows for these threats to be mitigated by creating a means to limit what types of traffic can be processed using a host based firewall solution.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "On the host machine, configure an interface to only process DNS traffic.

Restart the host machine."
          reference   : "800-171|3.13.2,800-171|3.13.5,800-53|SC-7(22),CAT|II,CCI|CCI-000366,CSF|PR.AC-5,CSF|PR.PT-4,Rule-ID|SV-86999r1_rule,STIG-ID|BIND-9X-001006,Vuln-ID|V-72375"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
          cmd         : "/usr/sbin/ifconfig -a"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001010 - A BIND 9.x server implementation must be configured to allow DNS administrators to audit all DNS server components, based on selectable event criteria, and produce audit records within all DNS server components that contain information for failed security verification tests, information to establish the outcome and source of the events, any information necessary to determine cause of failure, and any information necessary to return to operations with least disruption to mission processes - logging"
      info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.

The DoD has defined the list of events for which the application will provide an audit record generation capability as the following:

(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);

(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and

(iii) All account creation, modification, disabling, and termination actions.

The DoD has defined the data which the application will provide an audit record generation capability for an event as the following:

(i) Establish the source of the event;

(ii) The outcome of the event; and

(iii) Identify the application itself as the source of the event.

Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack. Associating information about the source of the event within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application.

Without information about the outcome of events, security personnel cannot make an accurate assessment about whether an attack was successful or if changes were made to the security state of the system.

Event outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response.'
Failure to a known state can address safety or security in accordance with the mission/business needs of the organization. Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. Preserving application state information helps to facilitate application restart and return to the operational mode of the organization with less disruption to mission-essential processes.

The DNS server should be configured to generate audit records whenever a self-test fails. The OS/NDM is responsible for generating notification messages related to this audit record.

If authorized individuals do not have the ability to modify auditing parameters in response to a changing threat environment, the organization may not be able to effectively respond, and important forensic information may be lost.

This requirement enables organizations to extend or limit auditing as necessary to meet organizational requirements. Auditing that is limited to conserve information system resources may be extended to address certain threat situations. In addition, auditing may be limited to a specific set of events to facilitate audit reduction, analysis, and reporting. Organizations can establish time thresholds in which audit actions are changed, for example, near real-time, within minutes, or within hours.

In addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know the source of the event, particularly in the case of centralized logging. In the case of centralized logging, the source would be the application name accompanied by the host or client name.

Satisfies: SRG-APP-000089-DNS-000004, SRG-APP-000098-DNS-000009, SRG-APP-000099-DNS-000010, SRG-APP-000226-DNS-000032, SRG-APP-000275-DNS-000040, SRG-APP-000353-DNS-000045"
      solution    : "Configure the logging statement in the 'named.conf' file:

logging {
channel <channel_name> {
file '<file_name>';
severity info;
};
category default { <channel_name>; };
};

Replace <channel_name> and <file_name> with names that distinctively identify the purpose of the channel and the log file.

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000169,CCI|CCI-001294,CCI|CCI-001665,CCI|CCI-001914,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87001r2_rule,STIG-ID|BIND-9X-001010,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72377"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*logging[\\s]*{"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001010 - A BIND 9.x server implementation must be configured to allow DNS administrators to audit all DNS server components, based on selectable event criteria, and produce audit records within all DNS server components that contain information for failed security verification tests, information to establish the outcome and source of the events, any information necessary to determine cause of failure, and any information necessary to return to operations with least disruption to mission processes - channel"
      info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.

The DoD has defined the list of events for which the application will provide an audit record generation capability as the following:

(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);

(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and

(iii) All account creation, modification, disabling, and termination actions.

The DoD has defined the data which the application will provide an audit record generation capability for an event as the following:

(i) Establish the source of the event;

(ii) The outcome of the event; and

(iii) Identify the application itself as the source of the event.

Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack. Associating information about the source of the event within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application.

Without information about the outcome of events, security personnel cannot make an accurate assessment about whether an attack was successful or if changes were made to the security state of the system.

Event outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response.'
Failure to a known state can address safety or security in accordance with the mission/business needs of the organization. Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. Preserving application state information helps to facilitate application restart and return to the operational mode of the organization with less disruption to mission-essential processes.

The DNS server should be configured to generate audit records whenever a self-test fails. The OS/NDM is responsible for generating notification messages related to this audit record.

If authorized individuals do not have the ability to modify auditing parameters in response to a changing threat environment, the organization may not be able to effectively respond, and important forensic information may be lost.

This requirement enables organizations to extend or limit auditing as necessary to meet organizational requirements. Auditing that is limited to conserve information system resources may be extended to address certain threat situations. In addition, auditing may be limited to a specific set of events to facilitate audit reduction, analysis, and reporting. Organizations can establish time thresholds in which audit actions are changed, for example, near real-time, within minutes, or within hours.

In addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know the source of the event, particularly in the case of centralized logging. In the case of centralized logging, the source would be the application name accompanied by the host or client name.

Satisfies: SRG-APP-000089-DNS-000004, SRG-APP-000098-DNS-000009, SRG-APP-000099-DNS-000010, SRG-APP-000226-DNS-000032, SRG-APP-000275-DNS-000040, SRG-APP-000353-DNS-000045"
      solution    : "Configure the logging statement in the 'named.conf' file:

logging {
channel <channel_name> {
file '<file_name>';
severity info;
};
category default { <channel_name>; };
};

Replace <channel_name> and <file_name> with names that distinctively identify the purpose of the channel and the log file.

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000169,CCI|CCI-001294,CCI|CCI-001665,CCI|CCI-001914,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87001r2_rule,STIG-ID|BIND-9X-001010,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72377"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*channel[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001010 - A BIND 9.x server implementation must be configured to allow DNS administrators to audit all DNS server components, based on selectable event criteria, and produce audit records within all DNS server components that contain information for failed security verification tests, information to establish the outcome and source of the events, any information necessary to determine cause of failure, and any information necessary to return to operations with least disruption to mission processes - category"
      info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.

The DoD has defined the list of events for which the application will provide an audit record generation capability as the following:

(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);

(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and

(iii) All account creation, modification, disabling, and termination actions.

The DoD has defined the data which the application will provide an audit record generation capability for an event as the following:

(i) Establish the source of the event;

(ii) The outcome of the event; and

(iii) Identify the application itself as the source of the event.

Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack. Associating information about the source of the event within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application.

Without information about the outcome of events, security personnel cannot make an accurate assessment about whether an attack was successful or if changes were made to the security state of the system.

Event outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response.'
Failure to a known state can address safety or security in accordance with the mission/business needs of the organization. Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. Preserving application state information helps to facilitate application restart and return to the operational mode of the organization with less disruption to mission-essential processes.

The DNS server should be configured to generate audit records whenever a self-test fails. The OS/NDM is responsible for generating notification messages related to this audit record.

If authorized individuals do not have the ability to modify auditing parameters in response to a changing threat environment, the organization may not be able to effectively respond, and important forensic information may be lost.

This requirement enables organizations to extend or limit auditing as necessary to meet organizational requirements. Auditing that is limited to conserve information system resources may be extended to address certain threat situations. In addition, auditing may be limited to a specific set of events to facilitate audit reduction, analysis, and reporting. Organizations can establish time thresholds in which audit actions are changed, for example, near real-time, within minutes, or within hours.

In addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know the source of the event, particularly in the case of centralized logging. In the case of centralized logging, the source would be the application name accompanied by the host or client name.

Satisfies: SRG-APP-000089-DNS-000004, SRG-APP-000098-DNS-000009, SRG-APP-000099-DNS-000010, SRG-APP-000226-DNS-000032, SRG-APP-000275-DNS-000040, SRG-APP-000353-DNS-000045"
      solution    : "Configure the logging statement in the 'named.conf' file:

logging {
channel <channel_name> {
file '<file_name>';
severity info;
};
category default { <channel_name>; };
};

Replace <channel_name> and <file_name> with names that distinctively identify the purpose of the channel and the log file.

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000169,CCI|CCI-001294,CCI|CCI-001665,CCI|CCI-001914,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87001r2_rule,STIG-ID|BIND-9X-001010,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72377"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*category[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001017 - The BIND 9.x server implementation must not be configured with a channel to send audit records to null."
      info        : "DNS software administrators require DNS transaction logs for a wide variety of reasons including troubleshooting, intrusion detection, and forensics. Ensuring that the DNS transaction logs are recorded on the local system will provide the capability needed to support these actions. Sending DNS transaction data to the null channel would cause a loss of important data."
      solution    : "Edit the 'named.conf' file.

Remove any instance of the following:

category null { null; };

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-001348,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87003r1_rule,STIG-ID|BIND-9X-001017,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72379"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk 'BEGIN { o=0; r=1; } /^\\s*category.*{/ { n=0; s=1; } /{/ { b += 1; } /}/ { b -= 1; } s == 1 { print; o=1; } s == 1 && /null/ { n=1; } s == 1 && b == 1 { if (n == 0) r = 0; s=0; } END { if (o == 0) { print \"fail - category Not Found\" } else if (n == 1) { print \"fail - null channel found\" } else { print \"Pass\" } }' /var/named/chroot/etc/named.conf"
      expect      : "^Pass$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001020 - The BIND 9.x server logging configuration must be configured to generate audit records for all DoD-defined auditable events to a local file by enabling triggers for all events with a severity of info, notice, warning, error, and critical for all DNS components."
      info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.

The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.

The DoD has defined the list of events for which the application will provide an audit record generation capability as the following:

(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);

(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and

(iii) All account creation, modification, disabling, and termination actions."
      solution    : "Edit the 'named.conf' file.

Add the 'severity' sub statement to the 'channel' statement.

Configure the 'severity' sub statement to 'info'

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000169,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87005r2_rule,STIG-ID|BIND-9X-001020,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72381"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*severity[\\s]*info"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001021 - In the event of an error when validating the binding of other DNS servers identity to the BIND 9.x information, when anomalies in the operation of the signed zone transfers are discovered, for the success and failure of start and stop of the name server service or daemon, and for the success and failure of all name server events, a BIND 9.x server implementation must generate a log entry."
      info        : "Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, to recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis.

The DNS server should audit all failed attempts at server authentication through DNSSEC and TSIG. The actual auditing is performed by the OS/NDM but the configuration to trigger the auditing is controlled by the DNS server.

Failing to act on the validation errors may result in the use of invalid, corrupted, or compromised information. The validation of bindings can be achieved, for example, by the use of cryptographic checksums. Validations must be performed automatically.

The DNS server does not have the capability of shutting down or restarting the information system. The DNS server can be configured to generate audit records when anomalies are discovered.

Satisfies: SRG-APP-000350-DNS-000044, SRG-APP-000474-DNS-000073, SRG-APP-000504-DNS-000074, SRG-APP-000504-DNS-000082"
      solution    : "Edit the 'named.conf' file.

Add the 'severity' sub statement to the 'channel' statement.

Configure the 'severity' sub statement to 'info'

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000172,CCI|CCI-000366,CCI|CCI-001906,CCI|CCI-002702,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87007r2_rule,STIG-ID|BIND-9X-001021,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72383"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*severity[\\s]*info"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001030 - The print-severity variable for the configuration of BIND 9.x server logs must be configured to produce audit records containing information to establish what type of events occurred."
      info        : "Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS implementation. Without log records that aid in the establishment of what types of events occurred and when those events occurred, there is no traceability for forensic or analytical purposes, and the cause of events is severely hindered."
      solution    : "Edit the 'named.conf' file.

Add the 'print-severity' sub statement to the 'channel' statement.

Configure the 'print-severity' sub statement to 'yes'

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000130,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87009r1_rule,STIG-ID|BIND-9X-001030,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72385"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*print-severity[\\s]*yes"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001031 - The print-time variable for the configuration of BIND 9.x server logs must be configured to establish when (date and time) the events occurred."
      info        : "Without establishing when events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident.

Associating event types with detected events in the application and audit logs provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know when events occurred (date and time)."
      solution    : "Edit the 'named.conf' file.

Add the 'print-time' sub statement to the 'channel' statement.

Configure the 'print-time' sub statement to 'yes'

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000131,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87011r1_rule,STIG-ID|BIND-9X-001031,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72387"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*print-time[\\s]*yes"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001032 - The print-category variable for the configuration of BIND 9.x server logs must be configured to record information indicating which process generated the events."
      info        : "Without establishing where events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident. Associating information about where the event occurred within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as application components, modules, session identifiers, filenames, host names, and functionality."
      solution    : "Edit the 'named.conf' file.

Add the 'print-category' sub statement to the 'channel' statement.

Configure the 'print-category' sub statement to 'yes'

Restart the BIND 9.x process."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-000132,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87013r1_rule,STIG-ID|BIND-9X-001032,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72389"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*print-category[\\s]*yes"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "Check for rsyslog server configuration file exist."
          file        : "/etc/rsyslog.conf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "BIND-9X-001040 - The BIND 9.x server implementation must be configured with a channel to send audit records to a remote syslog - rsyslog/syslog"
          info        : "Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on a defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained.

This helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records."
          solution    : "Configure the 'logging' statement to send audit logs to the syslog daemon.

logging {
channel <syslog_channel> {
syslog <syslog_facility>;
};
category <category_name> { <syslog_channel>; };
};

Note: It is recommended to use a local syslog facility (i.e. local0 -7) when configuring the syslog channel.

Restart the BIND 9.x process.

Configure the (r)syslog daemon to send audit logs to a remote server."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-001348,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87015r1_rule,STIG-ID|BIND-9X-001040,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72391"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
          file        : "/etc/rsyslog.conf"
# Note: Variable @SYSLOG_SERVER@ replaced with "@@loghost\\.example\\.com" in field "regex".
          regex       : "@@loghost\\.example\\.com"
# Note: Variable @SYSLOG_SERVER@ replaced with "@@loghost\\.example\\.com" in field "expect".
          expect      : "^[\\s]*\\*\.\\*[\\s]+@@loghost\\.example\\.com.*$"
        </custom_item>
      </then>

      <else>
        <if>
          <condition type:"OR">
            <custom_item>
              type        : FILE_CHECK
              description : "Check for syslog server configuration file exist."
              file        : "/etc/syslog.conf"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "BIND-9X-001040 - The BIND 9.x server implementation must be configured with a channel to send audit records to a remote syslog - rsyslog/syslog"
              info        : "Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on a defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained.

    This helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records."
              solution    : "Configure the 'logging' statement to send audit logs to the syslog daemon.

logging {
channel <syslog_channel> {
syslog <syslog_facility>;
};
category <category_name> { <syslog_channel>; };
};

Note: It is recommended to use a local syslog facility (i.e. local0 -7) when configuring the syslog channel.

Restart the BIND 9.x process.

Configure the (r)syslog daemon to send audit logs to a remote server."
              reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-001348,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87015r1_rule,STIG-ID|BIND-9X-001040,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72391"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
              file        : "/etc/syslog.conf"
# Note: Variable @SYSLOG_SERVER@ replaced with "@@loghost\\.example\\.com" in field "regex".
              regex       : "@@loghost\\.example\\.com"
# Note: Variable @SYSLOG_SERVER@ replaced with "@@loghost\\.example\\.com" in field "expect".
              expect      : "^[\\s]*\\*\.\\*[\\s]+@@loghost\\.example\\.com.*$"
            </custom_item>
          </then>

          <else>
            <report type:"FAILED">
              description : "BIND-9X-001040 - The BIND 9.x server implementation must be configured with a channel to send audit records to a remote syslog - rsyslog/syslog"
              info        : "Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on a defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained.

This helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records."
              solution    : "Configure the 'logging' statement to send audit logs to the syslog daemon.

logging {
channel <syslog_channel> {
syslog <syslog_facility>;
};
category <category_name> { <syslog_channel>; };
};

Note: It is recommended to use a local syslog facility (i.e. local0 -7) when configuring the syslog channel.

Restart the BIND 9.x process.

Configure the (r)syslog daemon to send audit logs to a remote server."
              reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|III,CCI|CCI-001348,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-87015r1_rule,STIG-ID|BIND-9X-001040,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-72391"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
            </report>
          </else>
        </if>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001040 - The BIND 9.x server implementation must be configured with a channel to send audit records to a remote syslog - named syslog"
      info        : "Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on a defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained.

This helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records."
      solution    : "Configure the 'logging' statement to send audit logs to the syslog daemon.

logging {
channel <syslog_channel> {
syslog <syslog_facility>;
};
category <category_name> { <syslog_channel>; };
};

Note: It is recommended to use a local syslog facility (i.e. local0 -7) when configuring the syslog channel.

Restart the BIND 9.x process.

Configure the (r)syslog daemon to send audit logs to a remote server."
      reference   : "800-171|3.3.8,800-53|AU-9(2),CAT|III,CCI|CCI-001348,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSF|PR.PT-1,ITSG-33|AU-9(2),NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,Rule-ID|SV-87015r1_rule,STIG-ID|BIND-9X-001040,Vuln-ID|V-72391"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*syslog[\\s]*local[0-7]"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001041 - The BIND 9.x server implementation must be configured with a channel to send audit records to a local file."
      info        : "DNS software administrators require DNS transaction logs for a wide variety of reasons including troubleshooting, intrusion detection, and forensics. Ensuring that the DNS transaction logs are recorded on the local system will provide the capability needed to support these actions."
      solution    : "Edit the 'named.conf' file and add the following:

logging {
channel local_file_channel {
file 'path_name' versions 3;
print-time yes;
print-severity yes;
print-category yes;
};
category category_name { local_file_channel; };
};

Restart the BIND 9.x process."
      reference   : "800-53|AU-11,CAT|III,CCI|CCI-001348,CSF|PR.PT-1,ITSG-33|AU-11,NESA|M5.2.3,NESA|T3.6.2,NIAv2|SM7,Rule-ID|SV-87017r1_rule,STIG-ID|BIND-9X-001041,Vuln-ID|V-72393"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*file[\\s]*.*[\\s]*versions"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001042 - The BIND 9.x server implementation must maintain at least 3 file versions of the local log file."
      info        : "DNS software administrators require DNS transaction logs for a wide variety of reasons including troubleshooting, intrusion detection, and forensics. Ensuring that the DNS transaction logs are recorded on the local system will provide the capability needed to support these actions."
      solution    : "Edit the 'named.conf' file.

Add the 'versions' variable to the end of the 'file' sub statement in the channel statement.

Configure the 'versions' sub statement to a number that is greater or equal to 3.

Restart the BIND 9.x process."
      reference   : "800-53|AU-11,CAT|III,CCI|CCI-001348,CSF|PR.PT-1,ITSG-33|AU-11,NESA|M5.2.3,NESA|T3.6.2,NIAv2|SM7,Rule-ID|SV-87019r1_rule,STIG-ID|BIND-9X-001042,Vuln-ID|V-72395"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*logging\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"logging Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*file[\\s]*.*[\\s]*versions[\\s]*(3|[4-9]|[1-9][0-9]+)"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "Check for 'masters' in config file on secondary/slave DNS'"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*masters[\\s]*"
          expect      : "^[\\s]*masters[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001050 - The BIND 9.x secondary name server must limit the number of zones requested from a single master name server."
          info        : "Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation.

Name servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements."
          solution    : "Edit the 'named.conf' file.

Add the 'transfers-per-ns' sub statement to the 'options' statement block.

The value of the 'transfers-per-ns' option can be increased to a value greater than two based on organizational requirements needed to support DNS operations.

Restart the BIND 9.x process."
          reference   : "800-53|SC-5(2),CAT|II,CCI|CCI-000054,CSF|PR.DS-4,ITSG-33|SC-5(2),Rule-ID|SV-87021r1_rule,STIG-ID|BIND-9X-001050,SWIFT-CSCv1|6.4,Vuln-ID|V-72397"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "^[\\s]*transfers-per-ns[\\s]*([2-9]|[1-9][0-9])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001051 - The BIND 9.x secondary name server must limit the total number of zones the name server can request at any one time."
          info        : "Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation.

Name servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements."
          solution    : "Edit the 'named.conf' file.

Add the 'transfers-in' sub statement to the 'options' statement block.

The value of the 'transfers-in' will be based on organizational requirements needed to support DNS operations.

Restart the BIND 9.x process."
          reference   : "800-53|SC-5(2),CAT|II,CCI|CCI-000054,CSF|PR.DS-4,ITSG-33|SC-5(2),Rule-ID|SV-87023r1_rule,STIG-ID|BIND-9X-001051,SWIFT-CSCv1|6.4,Vuln-ID|V-72399"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "^[\\s]*transfers-in[\\s]*"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "BIND-9X-001050 - The BIND 9.x secondary name server must limit the number of zones requested from a single master name server."
          info        : "Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation.

Name servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements."
          solution    : "Edit the 'named.conf' file.

Add the 'transfers-per-ns' sub statement to the 'options' statement block.

The value of the 'transfers-per-ns' option can be increased to a value greater than two based on organizational requirements needed to support DNS operations.

Restart the BIND 9.x process."
          reference   : "800-53|SC-5(2),CAT|II,CCI|CCI-000054,CSF|PR.DS-4,ITSG-33|SC-5(2),Rule-ID|SV-87021r1_rule,STIG-ID|BIND-9X-001050,SWIFT-CSCv1|6.4,Vuln-ID|V-72397"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "BIND-9X-001051 - The BIND 9.x secondary name server must limit the total number of zones the name server can request at any one time."
          info        : "Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation.

Name servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements."
          solution    : "Edit the 'named.conf' file.

Add the 'transfers-in' sub statement to the 'options' statement block.

The value of the 'transfers-in' will be based on organizational requirements needed to support DNS operations.

Restart the BIND 9.x process."
          reference   : "800-53|SC-5(2),CAT|II,CCI|CCI-000054,CSF|PR.DS-4,ITSG-33|SC-5(2),Rule-ID|SV-87023r1_rule,STIG-ID|BIND-9X-001051,SWIFT-CSCv1|6.4,Vuln-ID|V-72399"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001052 - The BIND 9.x server implementation must limit the number of concurrent session client connections to the number of allowed dynamic update clients."
      info        : "Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation.

Name servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements."
      solution    : "Edit the 'named.conf' file.

Add the 'transfers-out' sub statement to the 'options' statement block.

The value of the 'transfers-out' will be based on organizational requirements needed to support DNS operations.

Restart the BIND 9.x process."
      reference   : "800-53|SC-5(2),CAT|II,CCI|CCI-000054,CSF|PR.DS-4,ITSG-33|SC-5(2),Rule-ID|SV-87025r1_rule,STIG-ID|BIND-9X-001052,SWIFT-CSCv1|6.4,Vuln-ID|V-72401"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*transfers-out[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001053 - The BIND 9.x server implementation must be configured to use only approved ports and protocols."
      info        : "In order to prevent unauthorized connection of devices, unauthorized transfer of information, or unauthorized tunneling (i.e., embedding of data types within data types), organizations must disable or restrict unused or unnecessary physical and logical ports/protocols on information systems.

Applications are capable of providing a wide variety of functions and services. Some of the functions and services provided by default may not be necessary to support essential organizational operations.

To support the requirements and principles of least functionality, the application must support the organizational requirements by providing only essential capabilities and limiting the use of ports, protocols, and/or services."
      solution    : "Edit the 'named.conf' file.

Add the following line to the 'options' statement:

listen-on port 53 { <ip_address>; };

Replace '<ip_address>' with the IP of the name server.

Restart the BIND 9.x process."
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000382,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87027r1_rule,STIG-ID|BIND-9X-001053,SWIFT-CSCv1|2.3,Vuln-ID|V-72403"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*listen-on[\\s]*port[\\s]*53"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001054 - A BIND 9.x server implementation must manage excess capacity, bandwidth, or other redundancy to limit the effects of information flooding types of Denial of Service (DoS) attacks - recursion"
      info        : "A DoS is a condition when a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity.

A denial of service (DoS) attack against the DNS infrastructure has the potential to cause a DoS to all network users. As the DNS is a distributed backbone service of the Internet, various forms of amplification attacks resulting in DoS, while utilizing the DNS, are still prevalent on the Internet today. Some potential DoS flooding attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS. Without the DNS, users and systems would not have the ability to perform simple name to IP resolution.

Configuring the DNS implementation to defend against cache poisoning, employing increased capacity and bandwidth, building redundancy into the DNS architecture, utilizing DNSSEC, limiting and securing recursive services, DNS black holes, etc., may reduce the susceptibility to some flooding types of DoS attacks."
      solution    : "Configure the authoritative name server to prohibit recursion.

Edit the 'named.conf' file and add the following sub statements to the options statement:

recursion no;
allow-query { none };

Configure each zone to limit queries to authorized hosts:

Edit the 'named.conf' file and add the following sub statement to each zone definition:

allow-query { address_match_list; };

Restart the BIND 9.x process"
      reference   : "800-53|SC-20,CAT|II,CCI|CCI-001095,ITSG-33|SC-20,Rule-ID|SV-87029r1_rule,STIG-ID|BIND-9X-001054,Vuln-ID|V-72405"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*recursion[\\s]*no"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001054 - A BIND 9.x server implementation must manage excess capacity, bandwidth, or other redundancy to limit the effects of information flooding types of Denial of Service (DoS) attacks - options allow-query"
      info        : "A DoS is a condition when a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity.

A denial of service (DoS) attack against the DNS infrastructure has the potential to cause a DoS to all network users. As the DNS is a distributed backbone service of the Internet, various forms of amplification attacks resulting in DoS, while utilizing the DNS, are still prevalent on the Internet today. Some potential DoS flooding attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS. Without the DNS, users and systems would not have the ability to perform simple name to IP resolution.

Configuring the DNS implementation to defend against cache poisoning, employing increased capacity and bandwidth, building redundancy into the DNS architecture, utilizing DNSSEC, limiting and securing recursive services, DNS black holes, etc., may reduce the susceptibility to some flooding types of DoS attacks."
      solution    : "Configure the authoritative name server to prohibit recursion.

Edit the 'named.conf' file and add the following sub statements to the options statement:

recursion no;
allow-query { none };

Configure each zone to limit queries to authorized hosts:

Edit the 'named.conf' file and add the following sub statement to each zone definition:

allow-query { address_match_list; };

Restart the BIND 9.x process"
      reference   : "800-53|SC-5(2),CAT|II,CCI|CCI-001095,CSF|PR.DS-4,ITSG-33|SC-5(2),Rule-ID|SV-87029r1_rule,STIG-ID|BIND-9X-001054,SWIFT-CSCv1|6.4,Vuln-ID|V-72405"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*allow-query[\\s]*{[\\s]*none;?[\\s]*};"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001054 - A BIND 9.x server implementation must manage excess capacity, bandwidth, or other redundancy to limit the effects of information flooding types of Denial of Service (DoS) attacks - zone allow-query"
      info        : "A DoS is a condition when a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity.

A denial of service (DoS) attack against the DNS infrastructure has the potential to cause a DoS to all network users. As the DNS is a distributed backbone service of the Internet, various forms of amplification attacks resulting in DoS, while utilizing the DNS, are still prevalent on the Internet today. Some potential DoS flooding attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS. Without the DNS, users and systems would not have the ability to perform simple name to IP resolution.

Configuring the DNS implementation to defend against cache poisoning, employing increased capacity and bandwidth, building redundancy into the DNS architecture, utilizing DNSSEC, limiting and securing recursive services, DNS black holes, etc., may reduce the susceptibility to some flooding types of DoS attacks.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure the authoritative name server to prohibit recursion.

Edit the 'named.conf' file and add the following sub statements to the options statement:

recursion no;
allow-query { none };

Configure each zone to limit queries to authorized hosts:

Edit the 'named.conf' file and add the following sub statement to each zone definition:

allow-query { address_match_list; };

Restart the BIND 9.x process"
      reference   : "800-171|3.4.2,800-53|SC-22,CAT|II,CCI|CCI-001095,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87029r1_rule,STIG-ID|BIND-9X-001054,Vuln-ID|V-72405"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
      regex       : "^[\\s]*allow-query.*"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001055 - A BIND 9.x server implementation must prohibit recursion on authoritative name servers - recursion"
      info        : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.

DNSSEC ensures that the answer received when querying for name resolution actually comes from a trusted name server. Since DNSSEC is still far from being globally deployed external to DoD, and many resolvers either have not been updated or do not support DNSSEC, maintaining cached zone data separate from authoritative zone data mitigates the gap until all DNS data is validated with DNSSEC.

Since DNS forwarding of queries can be accomplished in some DNS applications without caching locally, DNS forwarding is the method to be used when providing external DNS resolution to internal clients.

Satisfies: SRG-APP-000246-DNS-000035, SRG-APP-000383-DNS-000047"
      solution    : "Configure the authoritative name server to prohibit recursion.

Edit the 'named.conf' file and add the following sub statements to the options statement:

recursion no;
allow-recursion {none;};
allow-query { none };

Configure each zone to limit queries to authorized hosts:

Edit the 'named.conf' file and add the following sub statement to each zone definition:

allow-query { address_match_list; };

Restart the BIND 9.x process"
      reference   : "800-53|SC-20,CAT|II,CCI|CCI-000366,CCI|CCI-001094,ITSG-33|SC-20,Rule-ID|SV-87031r2_rule,STIG-ID|BIND-9X-001055,Vuln-ID|V-72407"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*recursion[\\s]*no"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001055 - A BIND 9.x server implementation must prohibit recursion on authoritative name servers - options allow-query"
      info        : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.

DNSSEC ensures that the answer received when querying for name resolution actually comes from a trusted name server. Since DNSSEC is still far from being globally deployed external to DoD, and many resolvers either have not been updated or do not support DNSSEC, maintaining cached zone data separate from authoritative zone data mitigates the gap until all DNS data is validated with DNSSEC.

Since DNS forwarding of queries can be accomplished in some DNS applications without caching locally, DNS forwarding is the method to be used when providing external DNS resolution to internal clients.

Satisfies: SRG-APP-000246-DNS-000035, SRG-APP-000383-DNS-000047"
      solution    : "Configure the authoritative name server to prohibit recursion.

Edit the 'named.conf' file and add the following sub statements to the options statement:

recursion no;
allow-recursion {none;};
allow-query { none };

Configure each zone to limit queries to authorized hosts:

Edit the 'named.conf' file and add the following sub statement to each zone definition:

allow-query { address_match_list; };

Restart the BIND 9.x process"
      reference   : "800-53|SC-5(2),CAT|II,CCI|CCI-000366,CCI|CCI-001094,CSF|PR.DS-4,ITSG-33|SC-5(2),Rule-ID|SV-87031r2_rule,STIG-ID|BIND-9X-001055,SWIFT-CSCv1|6.4,Vuln-ID|V-72407"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*allow-query[\\s]*{[\\s]*none;?[\\s]*};"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001055 - A BIND 9.x server implementation must prohibit recursion on authoritative name servers - zone allow-query"
      info        : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.

DNSSEC ensures that the answer received when querying for name resolution actually comes from a trusted name server. Since DNSSEC is still far from being globally deployed external to DoD, and many resolvers either have not been updated or do not support DNSSEC, maintaining cached zone data separate from authoritative zone data mitigates the gap until all DNS data is validated with DNSSEC.

Since DNS forwarding of queries can be accomplished in some DNS applications without caching locally, DNS forwarding is the method to be used when providing external DNS resolution to internal clients.

Satisfies: SRG-APP-000246-DNS-000035, SRG-APP-000383-DNS-000047

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure the authoritative name server to prohibit recursion.

Edit the 'named.conf' file and add the following sub statements to the options statement:

recursion no;
allow-recursion {none;};
allow-query { none };

Configure each zone to limit queries to authorized hosts:

Edit the 'named.conf' file and add the following sub statement to each zone definition:

allow-query { address_match_list; };

Restart the BIND 9.x process"
      reference   : "800-171|3.4.2,800-53|SC-22,CAT|II,CCI|CCI-000366,CCI|CCI-001094,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87031r2_rule,STIG-ID|BIND-9X-001055,Vuln-ID|V-72407"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
      regex       : "^[\\s]*allow-query.*"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001055 - A BIND 9.x server implementation must prohibit recursion on authoritative name servers - allow-recursion"
      info        : "A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.

DNSSEC ensures that the answer received when querying for name resolution actually comes from a trusted name server. Since DNSSEC is still far from being globally deployed external to DoD, and many resolvers either have not been updated or do not support DNSSEC, maintaining cached zone data separate from authoritative zone data mitigates the gap until all DNS data is validated with DNSSEC.

Since DNS forwarding of queries can be accomplished in some DNS applications without caching locally, DNS forwarding is the method to be used when providing external DNS resolution to internal clients.

Satisfies: SRG-APP-000246-DNS-000035, SRG-APP-000383-DNS-000047"
      solution    : "Configure the authoritative name server to prohibit recursion.

Edit the 'named.conf' file and add the following sub statements to the options statement:

recursion no;
allow-recursion {none;};
allow-query { none };

Configure each zone to limit queries to authorized hosts:

Edit the 'named.conf' file and add the following sub statement to each zone definition:

allow-query { address_match_list; };

Restart the BIND 9.x process"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CCI|CCI-001094,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87031r2_rule,STIG-ID|BIND-9X-001055,SWIFT-CSCv1|2.3,Vuln-ID|V-72407"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*allow-recursion[\\s]*{[\\s]*none;?[\\s]*;[\\s]*};"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "Check for no 'masters' in config file on secondary/slave DNS'"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*masters[\\s]*"
          expect      : "^[\\s]*masters[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001057 - The master servers in a BIND 9.x implementation must notify authorized secondary name servers when zone files are updated - notify"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process"
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87033r3_rule,STIG-ID|BIND-9X-001057,SWIFT-CSCv1|2.3,Vuln-ID|V-72409"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "^[\\s]*notify[\\s]*no;"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001057 - The master servers in a BIND 9.x implementation must notify authorized secondary name servers when zone files are updated - zone also-notify"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process"
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87033r3_rule,STIG-ID|BIND-9X-001057,Vuln-ID|V-72409"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*also-notify.*"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001057 - The master servers in a BIND 9.x implementation must notify authorized secondary name servers when zone files are updated - zone notify explicit"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process"
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87033r3_rule,STIG-ID|BIND-9X-001057,Vuln-ID|V-72409"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*notify explicit.*"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "BIND-9X-001057 - The master servers in a BIND 9.x implementation must notify authorized secondary name servers when zone files are updated - notify"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process"
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87033r3_rule,STIG-ID|BIND-9X-001057,SWIFT-CSCv1|2.3,Vuln-ID|V-72409"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "BIND-9X-001057 - The master servers in a BIND 9.x implementation must notify authorized secondary name servers when zone files are updated - zone also-notify"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process"
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87033r3_rule,STIG-ID|BIND-9X-001057,Vuln-ID|V-72409"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "BIND-9X-001057 - The master servers in a BIND 9.x implementation must notify authorized secondary name servers when zone files are updated - zone notify explicit"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process"
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87033r3_rule,STIG-ID|BIND-9X-001057,Vuln-ID|V-72409"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "Check for 'masters' in config file on secondary/slave DNS'"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*masters[\\s]*"
          expect      : "^[\\s]*masters[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001058 - The secondary name servers in a BIND 9.x implementation must be configured to initiate zone update notifications to other authoritative zone name servers - options notify"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87035r2_rule,STIG-ID|BIND-9X-001058,SWIFT-CSCv1|2.3,Vuln-ID|V-72411"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "^[\\s]*notify[\\s]*no;"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001058 - The secondary name servers in a BIND 9.x implementation must be configured to initiate zone update notifications to other authoritative zone name servers - zone notify explicit"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87035r2_rule,STIG-ID|BIND-9X-001058,Vuln-ID|V-72411"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*notify explicit.*"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001058 - The secondary name servers in a BIND 9.x implementation must be configured to initiate zone update notifications to other authoritative zone name servers - zone allow-notify"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87035r2_rule,STIG-ID|BIND-9X-001058,Vuln-ID|V-72411"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*allow-notify.*"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "BIND-9X-001058 - The secondary name servers in a BIND 9.x implementation must be configured to initiate zone update notifications to other authoritative zone name servers - options notify"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87035r2_rule,STIG-ID|BIND-9X-001058,SWIFT-CSCv1|2.3,Vuln-ID|V-72411"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "BIND-9X-001058 - The secondary name servers in a BIND 9.x implementation must be configured to initiate zone update notifications to other authoritative zone name servers - zone notify explicit"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87035r2_rule,STIG-ID|BIND-9X-001058,Vuln-ID|V-72411"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "BIND-9X-001058 - The secondary name servers in a BIND 9.x implementation must be configured to initiate zone update notifications to other authoritative zone name servers - zone allow-notify"
          info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.
When a primary master name server notices that the serial number of a zone has changed, it sends a special announcement to all of the slave name servers for that zone. The primary master name server determines which servers are the slaves for the zone by looking at the list of NS records in the zone and taking out the record that points to the name server listed in the MNAME field of the zone's SOA record as well as the domain name of the local host.
When a secondary name server receives a NOTIFY announcement for a zone from one of its configured master name servers, it responds with a NOTIFY response. The response tells the master that the slave received the NOTIFY announcement so that the master can stop sending it NOTIFY announcements for the zone. Then the slave proceeds just as if the refresh timer for that zone had expired: it queries the master name server for the SOA record for the zone that the master claims has changed. If the serial number is higher, the slave transfers the zone.
The slave should next issue its own NOTIFY announcements to the other authoritative name servers for the zone. The idea is that the primary master may not be able to notify all of the slave name servers for the zone itself, since it's possible some slaves can't communicate directly with the primary master (they use another slave as their master). Older BIND 8 slaves don't send NOTIFY messages unless explicitly configured to do so."
          solution    : "Edit the 'named.conf' file.

Configure the 'notify' sub statement in the 'options' statement block to 'no':

options {
notify no;
};

Configure the 'notify explicit' and 'also-notify' sub statements in the zone statement block to limit zone transfer notifications to authorized secondary name servers:

zone example.com {
notify explicit;
also-notify { <ip_address>; | <address_match_list>; };

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87035r2_rule,STIG-ID|BIND-9X-001058,Vuln-ID|V-72411"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001059 - On the BIND 9.x server the platform on which the name server software is hosted must be configured to send outgoing DNS messages from a random port - listen-on"
      info        : "Hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. Outgoing DNS messages should be sent from a random port to minimize the risk of an attacker's guessing the outgoing message port and sending forged replies."
      solution    : "Edit the 'named.conf' file.

Configure the BIND 9.x server to only use the 'port' flag with the 'listen-on' and 'listen-on-v6' statements:

options {
listen-on port 53 { <ip_address>; };
listen-on-v6 port 53 { <ip_v6_address>; };
};

Restart the BIND 9.x process."
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87043r1_rule,STIG-ID|BIND-9X-001059,SWIFT-CSCv1|2.3,Vuln-ID|V-72419"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/grep 'listen-on port' /var/named/chroot/etc/named.conf | /bin/awk '{print} END {if (NR == 1) print \"Pass\"; else print \"Fail\"}'"
      expect      : "^Pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for IPv6 support"
          cmd         : "/usr/bin/test -f /proc/net/if_inet6 && /usr/bin/echo 'IPv6 supported' || /usr/bin/echo 'IPv6 not supported'"
          expect      : "IPv6 supported"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001059 - On the BIND 9.x server the platform on which the name server software is hosted must be configured to send outgoing DNS messages from a random port - listen-on-v6"
          info        : "Hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. Outgoing DNS messages should be sent from a random port to minimize the risk of an attacker's guessing the outgoing message port and sending forged replies."
          solution    : "Edit the 'named.conf' file.

Configure the BIND 9.x server to only use the 'port' flag with the 'listen-on' and 'listen-on-v6' statements:

options {
listen-on port 53 { <ip_address>; };
listen-on-v6 port 53 { <ip_v6_address>; };
};

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87043r1_rule,STIG-ID|BIND-9X-001059,SWIFT-CSCv1|2.3,Vuln-ID|V-72419"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/grep 'listen-on-v6 port' /var/named/chroot/etc/named.conf | /bin/awk '{print} END {if (NR == 1) print \"Pass\"; else print \"Fail\"}'"
          expect      : "^Pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "BIND-9X-001059 - On the BIND 9.x server the platform on which the name server software is hosted must be configured to send outgoing DNS messages from a random port - listen-on-v6"
          info        : "Hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. Outgoing DNS messages should be sent from a random port to minimize the risk of an attacker's guessing the outgoing message port and sending forged replies."
          solution    : "Edit the 'named.conf' file.

Configure the BIND 9.x server to only use the 'port' flag with the 'listen-on' and 'listen-on-v6' statements:

options {
listen-on port 53 { <ip_address>; };
listen-on-v6 port 53 { <ip_v6_address>; };
};

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87043r1_rule,STIG-ID|BIND-9X-001059,SWIFT-CSCv1|2.3,Vuln-ID|V-72419"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001060 - A BIND 9.x caching name server must implement DNSSEC validation to check all DNS queries for invalid input - dnssec"
      info        : "A common vulnerability of applications is unpredictable behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state.

Attacks may be generated by entering invalid data into DNS transactions, in the hopes that the data will not be handled correctly and will allow a vulnerable condition to be exploited. To safeguard against this, all untrusted data entered in DNS transactions (e.g., DNS queries) should be checked for validity before being processed further."
      solution    : "Enable DNSSEC validation on the name server.

Set the 'dnssec-validation' sub statement in the global options block to 'yes'.

Configure the 'managed-keys' statement to use the root domains trust anchor.

Restart the BIND 9.x process."
      reference   : "800-53|SC-20,CAT|II,CCI|CCI-002754,ITSG-33|SC-20,Rule-ID|SV-87045r3_rule,STIG-ID|BIND-9X-001060,Vuln-ID|V-72421"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*dnssec-validation[\\s]*yes;"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "BIND-9X-001060 - A BIND 9.x caching name server must implement DNSSEC validation to check all DNS queries for invalid input - managed-keys"
      info        : "A common vulnerability of applications is unpredictable behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state.

Attacks may be generated by entering invalid data into DNS transactions, in the hopes that the data will not be handled correctly and will allow a vulnerable condition to be exploited. To safeguard against this, all untrusted data entered in DNS transactions (e.g., DNS queries) should be checked for validity before being processed further."
      solution    : "Enable DNSSEC validation on the name server.

Set the 'dnssec-validation' sub statement in the global options block to 'yes'.

Configure the 'managed-keys' statement to use the root domains trust anchor.

Restart the BIND 9.x process."
      reference   : "800-53|SC-20,CAT|II,CCI|CCI-002754,ITSG-33|SC-20,Rule-ID|SV-87045r3_rule,STIG-ID|BIND-9X-001060,Vuln-ID|V-72421"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
      file        : "/var/named/chroot/etc/named.conf"
      regex       : "^[\\s]*managed-keys[\\s]*{"
      expect      : "^[\\s]*managed-keys[\\s]*{"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "Check for no 'masters' in config file on primary/master DNS'"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*masters[\\s]*"
          expect      : "^[\\s]*masters[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001070 - A BIND 9.x master name server must limit the number of concurrent zone transfers between authorized secondary name servers."
          info        : "Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation.

Name servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements.

Primary name servers also make outbound connection to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users. Primary name servers should be configured to limit the hosts from which they will accept dynamic updates.

Additionally, the number of concurrent clients, especially TCP clients, needs to be kept to a level that does not risk placing the system in a DoS state."
          solution    : "Edit the 'named.conf' file.

Add the 'transfers' sub statement to each 'server' statement block.

The value of the 'transfers' option can be increased to a value greater than two based on organizational requirements needed to support DNS operations.

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|II,CCI|CCI-000054,CSF|PR.DS-4,ITSG-33|SC-20,Rule-ID|SV-87047r1_rule,STIG-ID|BIND-9X-001070,SWIFT-CSCv1|6.4,Vuln-ID|V-72423"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk 'BEGIN { o=0; r=1; } /^\\s*server.*{/ { k=0; s=1; } /{/ { b += 1; } /}/ { b -= 1; } s == 1 { print; o=1; } s == 1 && /^\\s*transfers\\s*([2-9]|[1-9][0-9])/ { k=1; } s == 1 && b == 0 { if (k == 0) r = 0; s=0; } END { if (o == 0) { print \"fail - server Not Found\" } else if (r == 0) { print \"fail - Not all servers have transfer statements over 2.\" } else { print \"Pass\" } }' /var/named/chroot/etc/named.conf"
          expect      : "^Pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "BIND-9X-001070 - A BIND 9.x master name server must limit the number of concurrent zone transfers between authorized secondary name servers."
          info        : "Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation.

Name servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements.

Primary name servers also make outbound connection to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users. Primary name servers should be configured to limit the hosts from which they will accept dynamic updates.

Additionally, the number of concurrent clients, especially TCP clients, needs to be kept to a level that does not risk placing the system in a DoS state."
          solution    : "Edit the 'named.conf' file.

Add the 'transfers' sub statement to each 'server' statement block.

The value of the 'transfers' option can be increased to a value greater than two based on organizational requirements needed to support DNS operations.

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|II,CCI|CCI-000054,CSF|PR.DS-4,ITSG-33|SC-20,Rule-ID|SV-87047r1_rule,STIG-ID|BIND-9X-001070,SWIFT-CSCv1|6.4,Vuln-ID|V-72423"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001080 - A BIND 9.x implementation configured as a caching name server must restrict recursive queries to only the IP addresses and IP address ranges of known supported clients - allow-query"
      info        : "Any host that can query a resolving name server has the potential to poison the servers name cache or take advantage of other vulnerabilities that may be accessed through the query service. The best way to prevent this type of attack is to limit queries to internal hosts, which need to have this service available to them.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine; one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure the caching name server to accept recursive queries only from the IP addresses and address ranges of known supported clients.

Edit the 'named.conf' file and add the following to the options statement:

allow-query {trustworthy_hosts;};
allow-recursion {trustworthy_hosts;};

Restart the BIND 9.x process"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CAT|II,CCI|CCI-001094,ITSG-33|SC-7(12),NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,Rule-ID|SV-87049r1_rule,STIG-ID|BIND-9X-001080,Vuln-ID|V-72425"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*allow-query\\s*{/,/};/ { print; o=1 } END { if (o == 0) print \"allow-query Not Found\" }' /var/named/chroot/etc/named.conf"
      regex       : ".*"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001080 - A BIND 9.x implementation configured as a caching name server must restrict recursive queries to only the IP addresses and IP address ranges of known supported clients - allow-recursion"
      info        : "Any host that can query a resolving name server has the potential to poison the servers name cache or take advantage of other vulnerabilities that may be accessed through the query service. The best way to prevent this type of attack is to limit queries to internal hosts, which need to have this service available to them.

To guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine; one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure the caching name server to accept recursive queries only from the IP addresses and address ranges of known supported clients.

Edit the 'named.conf' file and add the following to the options statement:

allow-query {trustworthy_hosts;};
allow-recursion {trustworthy_hosts;};

Restart the BIND 9.x process"
      reference   : "800-53|SC-22,CAT|II,CCI|CCI-001094,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87049r1_rule,STIG-ID|BIND-9X-001080,Vuln-ID|V-72425"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*allow-recursion\\s*{/,/};/ { print; o=1 } END { if (o == 0) print \"allow-recursion Not Found\" }' /var/named/chroot/etc/named.conf"
      regex       : ".*"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for allow-transfer none."
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "^[\\s]*allow-transfer[\\s]*{[\\s]*none;?[\\s]*}"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "BIND-9X-001100 - The BIND 9.x server implementation must uniquely identify and authenticate the other DNS server before responding to a server-to-server transaction, zone transfer and/or dynamic update request using cryptographically based bidirectional authentication to protect the integrity of the information in transit - allow-transfer none"
          info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server. DNS does perform server authentication when TSIG is used, but this authentication is transactional in nature (each transaction has its own authentication performed).

Enforcing mutually authenticated communication sessions during zone transfers provides the assurance that only authorized servers are requesting and receiving DNS zone data. Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

Failure to properly implement transactional security may have significant effects on the overall security of the DNS infrastructure. The lack of mutual authentication between name servers during a DNS transaction would allow a threat actor to launch a Man-In-The-Middle attack against the DNS infrastructure. This attack could lead to unauthorized DNS zone data being introduced, resulting in network traffic being redirected to a rogue site.

Satisfies: SRG-APP-000158-DNS-000015, SRG-APP-000390-DNS-000048, SRG-APP-000394-DNS-000049, SRG-APP-000395-DNS-000050, SRG-APP-000439-DNS-000063, SRG-APP-000440-DNS-000065"
          solution    : "Configure the BIND 9.x server to use TSIG keys.

Add a key statement to the 'named.conf' file for TSIG that is being used:

key tsig_example. {
algorithm hmac-SHA1;
include 'tsig-example.key';
};

Add key statements to the allow-transfer statements on a master name server:

allow-transfer { key tsig_example.; };

Add key statements to the server statements on a secondary name server:

server <ip_address> {
keys { tsig_example };
};

Restart the BIND 9.x process."
          reference   : "CAT|I,CCI|CCI-000778,CCI|CCI-001958,CCI|CCI-001967,CCI|CCI-002039,CCI|CCI-002418,CCI|CCI-002421,Rule-ID|SV-87053r2_rule,STIG-ID|BIND-9X-001100,Vuln-ID|V-72429"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "BIND-9X-001100 - The BIND 9.x server implementation must uniquely identify and authenticate the other DNS server before responding to a server-to-server transaction, zone transfer and/or dynamic update request using cryptographically based bidirectional authentication to protect the integrity of the information in transit - master allow-transfer"
          info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server. DNS does perform server authentication when TSIG is used, but this authentication is transactional in nature (each transaction has its own authentication performed).

Enforcing mutually authenticated communication sessions during zone transfers provides the assurance that only authorized servers are requesting and receiving DNS zone data. Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

Failure to properly implement transactional security may have significant effects on the overall security of the DNS infrastructure. The lack of mutual authentication between name servers during a DNS transaction would allow a threat actor to launch a Man-In-The-Middle attack against the DNS infrastructure. This attack could lead to unauthorized DNS zone data being introduced, resulting in network traffic being redirected to a rogue site.

Satisfies: SRG-APP-000158-DNS-000015, SRG-APP-000390-DNS-000048, SRG-APP-000394-DNS-000049, SRG-APP-000395-DNS-000050, SRG-APP-000439-DNS-000063, SRG-APP-000440-DNS-000065"
          solution    : "Configure the BIND 9.x server to use TSIG keys.

Add a key statement to the 'named.conf' file for TSIG that is being used:

key tsig_example. {
algorithm hmac-SHA1;
include 'tsig-example.key';
};

Add key statements to the allow-transfer statements on a master name server:

allow-transfer { key tsig_example.; };

Add key statements to the server statements on a secondary name server:

server <ip_address> {
keys { tsig_example };
};

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|I,CCI|CCI-000778,CCI|CCI-001958,CCI|CCI-001967,CCI|CCI-002039,CCI|CCI-002418,CCI|CCI-002421,ITSG-33|SC-20,Rule-ID|SV-87053r2_rule,STIG-ID|BIND-9X-001100,Vuln-ID|V-72429"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "BIND-9X-001100 - The BIND 9.x server implementation must uniquely identify and authenticate the other DNS server before responding to a server-to-server transaction, zone transfer and/or dynamic update request using cryptographically based bidirectional authentication to protect the integrity of the information in transit - secondary keys"
          info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server. DNS does perform server authentication when TSIG is used, but this authentication is transactional in nature (each transaction has its own authentication performed).

Enforcing mutually authenticated communication sessions during zone transfers provides the assurance that only authorized servers are requesting and receiving DNS zone data. Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

Failure to properly implement transactional security may have significant effects on the overall security of the DNS infrastructure. The lack of mutual authentication between name servers during a DNS transaction would allow a threat actor to launch a Man-In-The-Middle attack against the DNS infrastructure. This attack could lead to unauthorized DNS zone data being introduced, resulting in network traffic being redirected to a rogue site.

Satisfies: SRG-APP-000158-DNS-000015, SRG-APP-000390-DNS-000048, SRG-APP-000394-DNS-000049, SRG-APP-000395-DNS-000050, SRG-APP-000439-DNS-000063, SRG-APP-000440-DNS-000065"
          solution    : "Configure the BIND 9.x server to use TSIG keys.

Add a key statement to the 'named.conf' file for TSIG that is being used:

key tsig_example. {
algorithm hmac-SHA1;
include 'tsig-example.key';
};

Add key statements to the allow-transfer statements on a master name server:

allow-transfer { key tsig_example.; };

Add key statements to the server statements on a secondary name server:

server <ip_address> {
keys { tsig_example };
};

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|I,CCI|CCI-000778,CCI|CCI-001958,CCI|CCI-001967,CCI|CCI-002039,CCI|CCI-002418,CCI|CCI-002421,ITSG-33|SC-20,Rule-ID|SV-87053r2_rule,STIG-ID|BIND-9X-001100,Vuln-ID|V-72429"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </then>

      <else>
        <report type:"PASSED">
          description : "BIND-9X-001100 - The BIND 9.x server implementation must uniquely identify and authenticate the other DNS server before responding to a server-to-server transaction, zone transfer and/or dynamic update request using cryptographically based bidirectional authentication to protect the integrity of the information in transit - allow-transfer none"
          info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server. DNS does perform server authentication when TSIG is used, but this authentication is transactional in nature (each transaction has its own authentication performed).

Enforcing mutually authenticated communication sessions during zone transfers provides the assurance that only authorized servers are requesting and receiving DNS zone data. Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

Failure to properly implement transactional security may have significant effects on the overall security of the DNS infrastructure. The lack of mutual authentication between name servers during a DNS transaction would allow a threat actor to launch a Man-In-The-Middle attack against the DNS infrastructure. This attack could lead to unauthorized DNS zone data being introduced, resulting in network traffic being redirected to a rogue site.

Satisfies: SRG-APP-000158-DNS-000015, SRG-APP-000390-DNS-000048, SRG-APP-000394-DNS-000049, SRG-APP-000395-DNS-000050, SRG-APP-000439-DNS-000063, SRG-APP-000440-DNS-000065"
          solution    : "Configure the BIND 9.x server to use TSIG keys.

Add a key statement to the 'named.conf' file for TSIG that is being used:

key tsig_example. {
algorithm hmac-SHA1;
include 'tsig-example.key';
};

Add key statements to the allow-transfer statements on a master name server:

allow-transfer { key tsig_example.; };

Add key statements to the server statements on a secondary name server:

server <ip_address> {
keys { tsig_example };
};

Restart the BIND 9.x process."
          reference   : "CAT|I,CCI|CCI-000778,CCI|CCI-001958,CCI|CCI-001967,CCI|CCI-002039,CCI|CCI-002418,CCI|CCI-002421,Rule-ID|SV-87053r2_rule,STIG-ID|BIND-9X-001100,Vuln-ID|V-72429"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK_NOT
              description : "Check for no 'masters' in config file on primary/master DNS'"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
              file        : "/var/named/chroot/etc/named.conf"
              regex       : "^[\\s]*masters[\\s]*"
              expect      : "^[\\s]*masters[\\s]*"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              type        : CMD_EXEC
              description : "BIND-9X-001100 - The BIND 9.x server implementation must uniquely identify and authenticate the other DNS server before responding to a server-to-server transaction, zone transfer and/or dynamic update request using cryptographically based bidirectional authentication to protect the integrity of the information in transit - master allow-transfer"
              info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server. DNS does perform server authentication when TSIG is used, but this authentication is transactional in nature (each transaction has its own authentication performed).

Enforcing mutually authenticated communication sessions during zone transfers provides the assurance that only authorized servers are requesting and receiving DNS zone data. Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

Failure to properly implement transactional security may have significant effects on the overall security of the DNS infrastructure. The lack of mutual authentication between name servers during a DNS transaction would allow a threat actor to launch a Man-In-The-Middle attack against the DNS infrastructure. This attack could lead to unauthorized DNS zone data being introduced, resulting in network traffic being redirected to a rogue site.

Satisfies: SRG-APP-000158-DNS-000015, SRG-APP-000390-DNS-000048, SRG-APP-000394-DNS-000049, SRG-APP-000395-DNS-000050, SRG-APP-000439-DNS-000063, SRG-APP-000440-DNS-000065"
              solution    : "Configure the BIND 9.x server to use TSIG keys.

Add a key statement to the 'named.conf' file for TSIG that is being used:

key tsig_example. {
algorithm hmac-SHA1;
include 'tsig-example.key';
};

Add key statements to the allow-transfer statements on a master name server:

allow-transfer { key tsig_example.; };

Add key statements to the server statements on a secondary name server:

server <ip_address> {
keys { tsig_example };
};

Restart the BIND 9.x process."
              reference   : "800-53|SC-20,CAT|I,CCI|CCI-000778,CCI|CCI-001958,CCI|CCI-001967,CCI|CCI-002039,CCI|CCI-002418,CCI|CCI-002421,ITSG-33|SC-20,Rule-ID|SV-87053r2_rule,STIG-ID|BIND-9X-001100,Vuln-ID|V-72429"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
              cmd         : "/usr/bin/awk 'BEGIN { o=0; r=1; } /^\\s*zone.*{/ { k=0; s=1; } /{/ { b += 1; } /}/ { b -= 1; } s == 1 { print; o=1; } s == 1 && /^\\s*allow-transfer\\s*{\\s*key.*;/ { k=1; } s == 1 && b == 0 { if (k == 0) r = 0; s=0; } END { if (o == 0) { print \"allow-transfer Not Found\" } else if (r == 0) { print \"Not all zones have allow-transfer.\" } else { print \"Pass\" } }' /var/named/chroot/etc/named.conf"
              expect      : "^Pass$"
            </custom_item>

            <report type:"PASSED">
              description : "BIND-9X-001100 - The BIND 9.x server implementation must uniquely identify and authenticate the other DNS server before responding to a server-to-server transaction, zone transfer and/or dynamic update request using cryptographically based bidirectional authentication to protect the integrity of the information in transit - secondary keys"
              info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server. DNS does perform server authentication when TSIG is used, but this authentication is transactional in nature (each transaction has its own authentication performed).

Enforcing mutually authenticated communication sessions during zone transfers provides the assurance that only authorized servers are requesting and receiving DNS zone data. Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

Failure to properly implement transactional security may have significant effects on the overall security of the DNS infrastructure. The lack of mutual authentication between name servers during a DNS transaction would allow a threat actor to launch a Man-In-The-Middle attack against the DNS infrastructure. This attack could lead to unauthorized DNS zone data being introduced, resulting in network traffic being redirected to a rogue site.

Satisfies: SRG-APP-000158-DNS-000015, SRG-APP-000390-DNS-000048, SRG-APP-000394-DNS-000049, SRG-APP-000395-DNS-000050, SRG-APP-000439-DNS-000063, SRG-APP-000440-DNS-000065"
              solution    : "Configure the BIND 9.x server to use TSIG keys.

Add a key statement to the 'named.conf' file for TSIG that is being used:

key tsig_example. {
algorithm hmac-SHA1;
include 'tsig-example.key';
};

Add key statements to the allow-transfer statements on a master name server:

allow-transfer { key tsig_example.; };

Add key statements to the server statements on a secondary name server:

server <ip_address> {
keys { tsig_example };
};

Restart the BIND 9.x process."
              reference   : "800-53|SC-20,CAT|I,CCI|CCI-000778,CCI|CCI-001958,CCI|CCI-001967,CCI|CCI-002039,CCI|CCI-002418,CCI|CCI-002421,ITSG-33|SC-20,Rule-ID|SV-87053r2_rule,STIG-ID|BIND-9X-001100,Vuln-ID|V-72429"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
            </report>
          </then>

          <else>
            <report type:"PASSED">
              description : "BIND-9X-001100 - The BIND 9.x server implementation must uniquely identify and authenticate the other DNS server before responding to a server-to-server transaction, zone transfer and/or dynamic update request using cryptographically based bidirectional authentication to protect the integrity of the information in transit - master allow-transfer"
              info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server. DNS does perform server authentication when TSIG is used, but this authentication is transactional in nature (each transaction has its own authentication performed).

Enforcing mutually authenticated communication sessions during zone transfers provides the assurance that only authorized servers are requesting and receiving DNS zone data. Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

Failure to properly implement transactional security may have significant effects on the overall security of the DNS infrastructure. The lack of mutual authentication between name servers during a DNS transaction would allow a threat actor to launch a Man-In-The-Middle attack against the DNS infrastructure. This attack could lead to unauthorized DNS zone data being introduced, resulting in network traffic being redirected to a rogue site.

Satisfies: SRG-APP-000158-DNS-000015, SRG-APP-000390-DNS-000048, SRG-APP-000394-DNS-000049, SRG-APP-000395-DNS-000050, SRG-APP-000439-DNS-000063, SRG-APP-000440-DNS-000065"
              solution    : "Configure the BIND 9.x server to use TSIG keys.

Add a key statement to the 'named.conf' file for TSIG that is being used:

key tsig_example. {
algorithm hmac-SHA1;
include 'tsig-example.key';
};

Add key statements to the allow-transfer statements on a master name server:

allow-transfer { key tsig_example.; };

Add key statements to the server statements on a secondary name server:

server <ip_address> {
keys { tsig_example };
};

Restart the BIND 9.x process."
              reference   : "800-53|SC-20,CAT|I,CCI|CCI-000778,CCI|CCI-001958,CCI|CCI-001967,CCI|CCI-002039,CCI|CCI-002418,CCI|CCI-002421,ITSG-33|SC-20,Rule-ID|SV-87053r2_rule,STIG-ID|BIND-9X-001100,Vuln-ID|V-72429"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
            </report>

            <custom_item>
              type        : CMD_EXEC
              description : "BIND-9X-001100 - The BIND 9.x server implementation must uniquely identify and authenticate the other DNS server before responding to a server-to-server transaction, zone transfer and/or dynamic update request using cryptographically based bidirectional authentication to protect the integrity of the information in transit - secondary keys"
              info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server. DNS does perform server authentication when TSIG is used, but this authentication is transactional in nature (each transaction has its own authentication performed).

Enforcing mutually authenticated communication sessions during zone transfers provides the assurance that only authorized servers are requesting and receiving DNS zone data. Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.

Failure to properly implement transactional security may have significant effects on the overall security of the DNS infrastructure. The lack of mutual authentication between name servers during a DNS transaction would allow a threat actor to launch a Man-In-The-Middle attack against the DNS infrastructure. This attack could lead to unauthorized DNS zone data being introduced, resulting in network traffic being redirected to a rogue site.

Satisfies: SRG-APP-000158-DNS-000015, SRG-APP-000390-DNS-000048, SRG-APP-000394-DNS-000049, SRG-APP-000395-DNS-000050, SRG-APP-000439-DNS-000063, SRG-APP-000440-DNS-000065"
              solution    : "Configure the BIND 9.x server to use TSIG keys.

Add a key statement to the 'named.conf' file for TSIG that is being used:

key tsig_example. {
algorithm hmac-SHA1;
include 'tsig-example.key';
};

Add key statements to the allow-transfer statements on a master name server:

allow-transfer { key tsig_example.; };

Add key statements to the server statements on a secondary name server:

server <ip_address> {
keys { tsig_example };
};

Restart the BIND 9.x process."
              reference   : "800-53|SC-20,CAT|I,CCI|CCI-000778,CCI|CCI-001958,CCI|CCI-001967,CCI|CCI-002039,CCI|CCI-002418,CCI|CCI-002421,ITSG-33|SC-20,Rule-ID|SV-87053r2_rule,STIG-ID|BIND-9X-001100,Vuln-ID|V-72429"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
              cmd         : "/usr/bin/awk 'BEGIN { o=0; r=1; } /^\\s*server.*{/ { k=0; s=1; } /{/ { b += 1; } /}/ { b -= 1; } s == 1 { print; o=1; } s == 1 && /^\\s*keys\\s*{/ { k=1; } s == 1 && b == 0 { if (k == 0) r = 0; s=0; } END { if (o == 0) { print \"Server Not Found\" } else if (r == 0) { print \"Not all servers have keys.\" } else { print \"Pass\" } }' /var/named/chroot/etc/named.conf"
              expect      : "^Pass$"
            </custom_item>
          </else>
        </if>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001106 - The BIND 9.x server implementation must utilize separate TSIG key-pairs when securing server-to-server transactions - key"
      info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server.

Enforcing separate TSIG key-pairs provides another layer of protection for the BIND implementation in the event that a TSIG key is compromised. This additional layer of security provides the DNS administrators with the ability to change a compromised TSIG key with a minimal disruption to DNS operations.

Failure to identify devices and authenticate devices can lead to malicious activity, such as a Man-In-The-Middle attack where an attacker could pose as an authorized name server, and redirect legitimate customers to malicious websites. A failure on this part could also lead to a Denial of Service of any and all DNS services provided to an organizations network infrastructure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a separate TSIG key-pair for each key statement listed in the named.conf file.

Configure the name server to utilize separate TSIG key-pairs for each key statement listed in the named.conf file.

Restart the BIND 9.x process."
      reference   : "800-53|SC-20,CAT|II,CCI|CCI-000778,ITSG-33|SC-20,Rule-ID|SV-87055r1_rule,STIG-ID|BIND-9X-001106,Vuln-ID|V-72431"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*key\\s.*{/,/};/ { print; o=1 } END { if (o == 0) print \"key Not Found\" }' /var/named/chroot/etc/named.conf"
      regex       : ".*"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "Check for no 'masters' in config file on primary/master DNS'"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*masters[\\s]*"
          expect      : "^[\\s]*masters[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001106 - The BIND 9.x server implementation must utilize separate TSIG key-pairs when securing server-to-server transactions - zone keys"
          info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server.

Enforcing separate TSIG key-pairs provides another layer of protection for the BIND implementation in the event that a TSIG key is compromised. This additional layer of security provides the DNS administrators with the ability to change a compromised TSIG key with a minimal disruption to DNS operations.

Failure to identify devices and authenticate devices can lead to malicious activity, such as a Man-In-The-Middle attack where an attacker could pose as an authorized name server, and redirect legitimate customers to malicious websites. A failure on this part could also lead to a Denial of Service of any and all DNS services provided to an organizations network infrastructure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Create a separate TSIG key-pair for each key statement listed in the named.conf file.

Configure the name server to utilize separate TSIG key-pairs for each key statement listed in the named.conf file.

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|II,CCI|CCI-000778,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87055r1_rule,STIG-ID|BIND-9X-001106,Vuln-ID|V-72431"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001106 - The BIND 9.x server implementation must utilize separate TSIG key-pairs when securing server-to-server transactions - zone keys"
          info        : "Server-to-server (zone transfer) transactions are provided by TSIG, which enforces mutual server authentication using a key that is unique to each server pair (TSIG), thus uniquely identifying the other server.

Enforcing separate TSIG key-pairs provides another layer of protection for the BIND implementation in the event that a TSIG key is compromised. This additional layer of security provides the DNS administrators with the ability to change a compromised TSIG key with a minimal disruption to DNS operations.

Failure to identify devices and authenticate devices can lead to malicious activity, such as a Man-In-The-Middle attack where an attacker could pose as an authorized name server, and redirect legitimate customers to malicious websites. A failure on this part could also lead to a Denial of Service of any and all DNS services provided to an organizations network infrastructure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Create a separate TSIG key-pair for each key statement listed in the named.conf file.

Configure the name server to utilize separate TSIG key-pairs for each key statement listed in the named.conf file.

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|II,CCI|CCI-000778,ITSG-33|SC-20,Rule-ID|SV-87055r1_rule,STIG-ID|BIND-9X-001106,Vuln-ID|V-72431"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*server.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"server Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001110 - The TSIG keys used with the BIND 9.x implementation must be owned by a privileged account."
      info        : "Incorrect ownership of a TSIG key file could allow an adversary to modify the file, thus defeating the security objective.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the ownership of the TSIG keys to the named process is running as.

# chown <named_proccess_owner> <TSIG_key_file>."
      reference   : "800-53|IA-5(2),CAT|II,CCI|CCI-000186,CSF|PR.AC-1,ITSG-33|IA-5(2),Rule-ID|SV-87061r1_rule,STIG-ID|BIND-9X-001110,Vuln-ID|V-72437"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @TSIG_KEY_FILE_FULL_PATH@ replaced with "/var/named/chroot/etc/tsig.key" in field "cmd".
      cmd         : "ps_user=`/usr/bin/ps -ef | /usr/bin/grep named | /usr/bin/grep -v grep | /usr/bin/awk '{print $1}'`; chmod_user=`/usr/bin/ls -l /var/named/chroot/etc/tsig.key | /usr/bin/awk '{print $3}'`; if [[ $ps_user == $chmod_user ]]; then /usr/bin/echo passed; else /usr/bin/echo failed; fi"
      expect      : "^passed$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001111 - The TSIG keys used with the BIND 9.x implementation must be group owned by a privileged account."
      info        : "Incorrect ownership of a TSIG key file could allow an adversary to modify the file, thus defeating the security objective.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the group ownership of the TSIG keys to the named process group.

# chgrp <named_proccess_group> <TSIG_key_file>"
      reference   : "800-53|IA-5(2),CAT|II,CCI|CCI-000186,CSF|PR.AC-1,ITSG-33|IA-5(2),Rule-ID|SV-87063r1_rule,STIG-ID|BIND-9X-001111,Vuln-ID|V-72439"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @TSIG_KEY_FILE_FULL_PATH@ replaced with "/var/named/chroot/etc/tsig.key" in field "cmd".
      cmd         : "ps_user=`/usr/bin/ps -ef | /usr/bin/grep named | /usr/bin/grep -v grep | /usr/bin/awk '{print $1}'`; chmod_user=`/usr/bin/ls -l /var/named/chroot/etc/tsig.key | /usr/bin/awk '{print $4}'`; if [[ $ps_user == $chmod_user ]]; then /usr/bin/echo passed; else /usr/bin/echo failed; fi"
      expect      : "^passed$"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001112 - The read and write access to a TSIG key file used by a BIND 9.x server must be restricted to only the account that runs the name server software."
      info        : "Weak permissions of a TSIG key file could allow an adversary to modify the file, thus defeating the security objective.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the permissions of the TSIG key files:

# chmod 600 <TSIG_key_file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000186,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87065r1_rule,STIG-ID|BIND-9X-001112,SWIFT-CSCv1|2.3,Vuln-ID|V-72441"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @TSIG_KEY_FILE_FULL_PATH@ replaced with "/var/named/chroot/etc/tsig.key" in field "file".
      file        : "/var/named/chroot/etc/tsig.key"
      mask        : "177"
    </custom_item>

    <report type:"WARNING">
      description : "BIND-9X-001113 - The BIND 9.X implementation must not utilize a TSIG or DNSSEC key for more than one year."
      info        : "Cryptographic keys are the backbone of securing DNS information over the wire, maintaining DNS data integrity, and the providing the ability to validate DNS information that is received.

When a cryptographic key is utilized by a DNS server for a long period of time, the likelihood of compromise increases. A compromised key set would allow an attacker to intercept and possibly inject comprised data into the DNS server. In this compromised state, the DNS server would be vulnerable to DoS attacks, as well as being vulnerable to becoming a launching pad for further attacks on an organizations network.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Generate new DNSSEC and TSIG keys.

For DNSSEC keys:

Use the newly generated keys to resign all of the zone files on the name server.

For TSIG keys:

Update the named.conf file with the new keys.

Restart the BIND 9.X process."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87067r2_rule,STIG-ID|BIND-9X-001113,Vuln-ID|V-72443"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001120 - A BIND 9.x server must implement NIST FIPS-validated cryptography for provisioning digital signatures and generating cryptographic hashes - zones"
      info        : "The use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.

The choice of digital signature algorithm will be based on recommended algorithms in well-known standards. NIST's Digital Signature Standard (DSS) [FIPS186] provides three algorithm choices:

- Digital Signature Algorithm (DSA)
- RSA
- Elliptic Curve DSA (ECDSA)

Of these three algorithms, RSA and DSA are more widely available and hence are considered candidates of choice for DNSSEC. In terms of performance, both RSA and DSA have comparable signature generation speeds, but DSA is much slower for signature verification. Hence, RSA is the recommended algorithm as far as this guideline is concerned. It can be expected that name servers and clients will be able to use the RSA algorithm at the minimum.

NIST's Secure Hash Standard (SHS) (FIPS 180-3) specifies SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 as approved hash algorithms to be used as part of the algorithm suite for generating digital signatures using the digital signature algorithms in NIST's DSS[FIPS186].

Satisfies: SRG-APP-000514-DNS-000075, SRG-APP-000516-DNS-000090

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create new DNSSEC and TSIG keys using a FIPS 180-3 approved cryptographic algorithm that meets or exceeds the strength of SHA256"
      reference   : "800-171|3.4.2,800-53|SC-22,CAT|I,CCI|CCI-002450,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87069r3_rule,STIG-ID|BIND-9X-001120,Vuln-ID|V-72445"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001120 - A BIND 9.x server must implement NIST FIPS-validated cryptography for provisioning digital signatures and generating cryptographic hashes - key"
      info        : "The use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.

The choice of digital signature algorithm will be based on recommended algorithms in well-known standards. NIST's Digital Signature Standard (DSS) [FIPS186] provides three algorithm choices:

- Digital Signature Algorithm (DSA)
- RSA
- Elliptic Curve DSA (ECDSA)

Of these three algorithms, RSA and DSA are more widely available and hence are considered candidates of choice for DNSSEC. In terms of performance, both RSA and DSA have comparable signature generation speeds, but DSA is much slower for signature verification. Hence, RSA is the recommended algorithm as far as this guideline is concerned. It can be expected that name servers and clients will be able to use the RSA algorithm at the minimum.

NIST's Secure Hash Standard (SHS) (FIPS 180-3) specifies SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 as approved hash algorithms to be used as part of the algorithm suite for generating digital signatures using the digital signature algorithms in NIST's DSS[FIPS186].

Satisfies: SRG-APP-000514-DNS-000075, SRG-APP-000516-DNS-000090"
      solution    : "Create new DNSSEC and TSIG keys using a FIPS 180-3 approved cryptographic algorithm that meets or exceeds the strength of SHA256"
      reference   : "800-53|SC-20,CAT|I,CCI|CCI-002450,ITSG-33|SC-20,Rule-ID|SV-87069r3_rule,STIG-ID|BIND-9X-001120,Vuln-ID|V-72445"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk 'BEGIN { o=0; r=1; } /^\\s*key\\s.*{/ { k=0; s=1; } /{/ { b += 1; } /}/ { b -= 1; } s == 1 { print; o=1; } s == 1 && /^\\s*algorithm\\s*hmac-SHA(256|384|512);/ { k=1; } s == 1 && b == 0 { if (k == 0) r = 0; s=0; } END { if (o == 0) { print \"key Not Found\" } else if (r == 0) { print \"Not all keys have algorithms or are compliant.\" } else { print \"Pass\" } }' /var/named/chroot/etc/named.conf"
      expect      : "^Pass$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001130 - The DNSSEC keys used with the BIND 9.x implementation must be owned by a privileged account."
      info        : "Information at rest refers to the state of information when it is located on a secondary storage device within an organizational information system. Mobile devices, laptops, desktops, and storage devices can be either lost or stolen, and the contents of their data storage (e.g., hard drives and non-volatile memory) can be read, copied, or altered. Applications and application users generate information throughout the course of their application use.

The DNS server must protect the confidentiality and integrity of the DNSSEC keys and must protect the integrity of DNS information. There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the ownership of the DNSSEC keys to the named process is running as.

# chown <named_proccess_owner> <DNSSEC_key_file>."
      reference   : "800-171|3.13.16,800-53|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,ITSG-33|SC-28,Rule-ID|SV-87071r2_rule,STIG-ID|BIND-9X-001130,Vuln-ID|V-72447"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @DNSSEC_KEY_FILE_FULL_PATH@ replaced with "/var/named/chroot/etc/dnssec.key" in field "cmd".
      cmd         : "ps_user=`/usr/bin/ps -ef | /usr/bin/grep named | /usr/bin/grep -v grep | /usr/bin/awk '{print $1}'`; chmod_user=`/usr/bin/ls -l /var/named/chroot/etc/dnssec.key | /usr/bin/awk '{print $3}'`; if [[ $ps_user == $chmod_user ]]; then /usr/bin/echo passed; else /usr/bin/echo failed; fi"
      expect      : "^passed$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001131 - The DNSSEC keys used with the BIND 9.x implementation must be group owned by a privileged account."
      info        : "Information at rest refers to the state of information when it is located on a secondary storage device within an organizational information system. Mobile devices, laptops, desktops, and storage devices can be either lost or stolen, and the contents of their data storage (e.g., hard drives and non-volatile memory) can be read, copied, or altered. Applications and application users generate information throughout the course of their application use.

The DNS server must protect the confidentiality and integrity of the DNSSEC keys and must protect the integrity of DNS information. There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the group ownership of the DNSSEC keys to the named process is running as.

# chgrp <named_proccess_group> <DNSSEC_key_file>."
      reference   : "800-171|3.13.16,800-53|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,ITSG-33|SC-28,Rule-ID|SV-87073r2_rule,STIG-ID|BIND-9X-001131,Vuln-ID|V-72449"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @DNSSEC_KEY_FILE_FULL_PATH@ replaced with "/var/named/chroot/etc/dnssec.key" in field "cmd".
      cmd         : "ps_user=`/usr/bin/ps -ef | /usr/bin/grep named | /usr/bin/grep -v grep | /usr/bin/awk '{print $1}'`; chmod_user=`/usr/bin/ls -l /var/named/chroot/etc/dnssec.key | /usr/bin/awk '{print $4}'`; if [[ $ps_user == $chmod_user ]]; then /usr/bin/echo passed; else /usr/bin/echo failed; fi"
      expect      : "^passed$"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001132 - Permissions assigned to the DNSSEC keys used with the BIND 9.x implementation must enforce read-only access to the key owner and deny access to all other users."
      info        : "Information at rest refers to the state of information when it is located on a secondary storage device within an organizational information system. Mobile devices, laptops, desktops, and storage devices can be either lost or stolen, and the contents of their data storage (e.g., hard drives and non-volatile memory) can be read, copied, or altered. Applications and application users generate information throughout the course of their application use.

The DNS server must protect the confidentiality and integrity of the DNSSEC keys and must protect the integrity of DNS information. There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the permissions of the DNSSEC key files:

# chmod 400 <DNSSEC_key_file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001199,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87075r2_rule,STIG-ID|BIND-9X-001132,SWIFT-CSCv1|2.3,Vuln-ID|V-72451"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @DNSSEC_KEY_FILE_FULL_PATH@ replaced with "/var/named/chroot/etc/dnssec.key" in field "file".
      file        : "/var/named/chroot/etc/dnssec.key"
      mask        : "377"
    </custom_item>

    <report type:"WARNING">
      description : "BIND-9X-001133 - The BIND 9.x server private key corresponding to the ZSK pair must be the only DNSSEC key kept on a name server that supports dynamic updates."
      info        : "The private key in the ZSK key pair must be protected from unauthorized access. If possible, the private key should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy.

This strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets.

Failure to protect the private ZSK opens it to being maliciously obtained and opens the DNS zone to being populated with invalid data. The integrity of the DNS zone would be compromised leading to a loss of trust whether a DNS response has originated from an authentic source, the response is complete, and has not been tampered with during transit.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Remove any ZSK private keys existing on the server other than the one corresponding to the active ZSK pair"
      reference   : "CAT|I,CCI|CCI-000186,Rule-ID|SV-87077r4_rule,STIG-ID|BIND-9X-001133,Vuln-ID|V-72453"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001134 - On the BIND 9.x server the private keys corresponding to both the ZSK and the KSK must not be kept on the BIND 9.x DNSSEC-aware primary authoritative name server when the name server does not support dynamic updates."
      info        : "The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy.

This strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Remove any ZSK or KSK private key from any BIND 9.x server that does not support dynamic updates.

Note: Any ZSK or KSK that is not needed to support dynamic updates should be stored offline in a secure location."
      reference   : "800-171|3.13.10,800-53|SC-12,CAT|II,CCI|CCI-000366,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,Rule-ID|SV-87079r2_rule,STIG-ID|BIND-9X-001134,Vuln-ID|V-72455"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/allow-update/ {print \"Line: \" NR,$0}' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "BIND-9X-001140 - The two files generated by the BIND 9.x server dnssec-keygen program must be owned by the root account, or deleted, after they have been copied to the key file in the name server."
      info        : "To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. A TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the ownership of the keys to the root account.

# chown root <key_file>."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87081r2_rule,STIG-ID|BIND-9X-001140,Vuln-ID|V-72457"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "BIND-9X-001141 - The two files generated by the BIND 9.x server dnssec-keygen program must be group owned by the server administrator account, or deleted, after they have been copied to the key file in the name server."
      info        : "To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. A TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the group ownership of the keys to the root group.

# chgrp root <key_file>."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87083r2_rule,STIG-ID|BIND-9X-001141,Vuln-ID|V-72459"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "BIND-9X-001142 - Permissions assigned to the dnssec-keygen keys used with the BIND 9.x implementation must enforce read-only access to the key owner and deny access to all other users."
      info        : "To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. A TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message. Weak permissions could allow an adversary to modify the file(s), thus defeating the security objective.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the permissions of the dnssec-keygen key files:

# chmod 400 <key_file>"
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87085r2_rule,STIG-ID|BIND-9X-001142,Vuln-ID|V-72461"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "BIND-9X-001150 - The BIND 9.x server signature generation using the KSK must be done off-line, using the KSK-private key stored off-line."
      info        : "The private key in the KSK key pair must be protected from unauthorized access. The private key should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy.

Failure to protect the private KSK may have significant effects on the overall security of the DNS infrastructure. A compromised KSK could lead to an inability to detect unauthorized DNS zone data resulting in network traffic being redirected to a rogue site.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Remove all private KSKs from the name server and ensure that they are stored offline in a secure location."
      reference   : "CAT|I,CCI|CCI-000186,Rule-ID|SV-87093r3_rule,STIG-ID|BIND-9X-001150,Vuln-ID|V-72469"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001200 - A BIND 9.x server implementation must maintain the integrity and confidentiality of DNS information while it is being prepared for transmission, in transmission, and in use and t must perform integrity verification and data origin verification for all DNS information - dnssec-enable"
      info        : "DNSSEC is required for securing the DNS query/response transaction by providing data origin authentication and data integrity verification through signature verification and the chain of trust

Failure to accomplish data origin authentication and data integrity verification could have significant effects on DNS Infrastructure. The resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service

Failure to validate name server replies would cause many networking functions and communications to be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.

Failure to validate the chain of trust used with DNSSEC would have a significant impact on the security posture of the DNS server. Non-validated trust chains may contain rouge DNS servers and allow those unauthorized servers to introduce invalid data into an organizations DNS infrastructure. A compromise of this type would be difficult to detect and may have devastating effects on the validity and integrity of DNS zone information.

Satisfies: SRG-APP-000213-DNS-000024, SRG-APP-000215-DNS-000026, SRG-APP-000219-DNS-000028, SRG-APP-000219-DNS-000029, SRG-APP-000219-DNS-000030, SRG-APP-000347-DNS-000041, SRG-APP-000348-DNS-000042, SRG-APP-000349-DNS-000043, SRG-APP-000420-DNS-000053, SRG-APP-000421-DNS-000054, SRG-APP-000422-DNS-000055, SRG-APP-000423-DNS-000056, SRG-APP-000424-DNS-000057, SRG-APP-000425-DNS-000058, SRG-APP-000426-DNS-000059, SRG-APP-000441-DNS-000066, SRG-APP-000442-DNS-000067, SRG-APP-000516-DNS-000089"
      solution    : "Set the 'dnssec-enable' option to yes.

Sign each zone file that the name server is responsible for.

Configure each zone the name server is responsible for to use a DNSSEC signed zone."
      reference   : "800-53|SC-20,CAT|I,CCI|CCI-001178,CCI|CCI-001184,CCI|CCI-001663,CCI|CCI-001901,CCI|CCI-001902,CCI|CCI-001904,CCI|CCI-002420,CCI|CCI-002422,CCI|CCI-002462,CCI|CCI-002463,CCI|CCI-002464,CCI|CCI-002465,CCI|CCI-002466,CCI|CCI-002467,CCI|CCI-002468,ITSG-33|SC-20,Rule-ID|SV-87095r4_rule,STIG-ID|BIND-9X-001200,Vuln-ID|V-72471"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*options\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"options Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "^[\\s]*dnssec-enable[\\s]*yes;"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001200 - A BIND 9.x server implementation must maintain the integrity and confidentiality of DNS information while it is being prepared for transmission, in transmission, and in use and t must perform integrity verification and data origin verification for all DNS information - zone"
      info        : "DNSSEC is required for securing the DNS query/response transaction by providing data origin authentication and data integrity verification through signature verification and the chain of trust

Failure to accomplish data origin authentication and data integrity verification could have significant effects on DNS Infrastructure. The resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service

Failure to validate name server replies would cause many networking functions and communications to be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.

Failure to validate the chain of trust used with DNSSEC would have a significant impact on the security posture of the DNS server. Non-validated trust chains may contain rouge DNS servers and allow those unauthorized servers to introduce invalid data into an organizations DNS infrastructure. A compromise of this type would be difficult to detect and may have devastating effects on the validity and integrity of DNS zone information.

Satisfies: SRG-APP-000213-DNS-000024, SRG-APP-000215-DNS-000026, SRG-APP-000219-DNS-000028, SRG-APP-000219-DNS-000029, SRG-APP-000219-DNS-000030, SRG-APP-000347-DNS-000041, SRG-APP-000348-DNS-000042, SRG-APP-000349-DNS-000043, SRG-APP-000420-DNS-000053, SRG-APP-000421-DNS-000054, SRG-APP-000422-DNS-000055, SRG-APP-000423-DNS-000056, SRG-APP-000424-DNS-000057, SRG-APP-000425-DNS-000058, SRG-APP-000426-DNS-000059, SRG-APP-000441-DNS-000066, SRG-APP-000442-DNS-000067, SRG-APP-000516-DNS-000089

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Set the 'dnssec-enable' option to yes.

Sign each zone file that the name server is responsible for.

Configure each zone the name server is responsible for to use a DNSSEC signed zone."
      reference   : "800-171|3.4.2,800-53|SC-22,CAT|I,CCI|CCI-001178,CCI|CCI-001184,CCI|CCI-001663,CCI|CCI-001901,CCI|CCI-001902,CCI|CCI-001904,CCI|CCI-002420,CCI|CCI-002422,CCI|CCI-002462,CCI|CCI-002463,CCI|CCI-002464,CCI|CCI-002465,CCI|CCI-002466,CCI|CCI-002467,CCI|CCI-002468,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87095r4_rule,STIG-ID|BIND-9X-001200,Vuln-ID|V-72471"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "BIND-9X-001200 - A BIND 9.x server implementation must maintain the integrity and confidentiality of DNS information while it is being prepared for transmission, in transmission, and in use and t must perform integrity verification and data origin verification for all DNS information - KSK"
      info        : "DNSSEC is required for securing the DNS query/response transaction by providing data origin authentication and data integrity verification through signature verification and the chain of trust

Failure to accomplish data origin authentication and data integrity verification could have significant effects on DNS Infrastructure. The resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service

Failure to validate name server replies would cause many networking functions and communications to be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.

Failure to validate the chain of trust used with DNSSEC would have a significant impact on the security posture of the DNS server. Non-validated trust chains may contain rouge DNS servers and allow those unauthorized servers to introduce invalid data into an organizations DNS infrastructure. A compromise of this type would be difficult to detect and may have devastating effects on the validity and integrity of DNS zone information.

Satisfies: SRG-APP-000213-DNS-000024, SRG-APP-000215-DNS-000026, SRG-APP-000219-DNS-000028, SRG-APP-000219-DNS-000029, SRG-APP-000219-DNS-000030, SRG-APP-000347-DNS-000041, SRG-APP-000348-DNS-000042, SRG-APP-000349-DNS-000043, SRG-APP-000420-DNS-000053, SRG-APP-000421-DNS-000054, SRG-APP-000422-DNS-000055, SRG-APP-000423-DNS-000056, SRG-APP-000424-DNS-000057, SRG-APP-000425-DNS-000058, SRG-APP-000426-DNS-000059, SRG-APP-000441-DNS-000066, SRG-APP-000442-DNS-000067, SRG-APP-000516-DNS-000089

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Set the 'dnssec-enable' option to yes.

Sign each zone file that the name server is responsible for.

Configure each zone the name server is responsible for to use a DNSSEC signed zone."
      reference   : "800-171|3.13.15,800-53|AU-10(1),800-53|AU-10(2),800-53|SC-20,800-53|SC-20(2),800-53|SC-21,800-53|SC-23,800-53|SC-8(2),CAT|I,CCI|CCI-001178,CCI|CCI-001184,CCI|CCI-001663,CCI|CCI-001901,CCI|CCI-001902,CCI|CCI-001904,CCI|CCI-002420,CCI|CCI-002422,CCI|CCI-002462,CCI|CCI-002463,CCI|CCI-002464,CCI|CCI-002465,CCI|CCI-002466,CCI|CCI-002467,CCI|CCI-002468,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-1,ITSG-33|AU-10(1),ITSG-33|AU-10(2),ITSG-33|SC-20,ITSG-33|SC-21,ITSG-33|SC-23,ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87095r4_rule,STIG-ID|BIND-9X-001200,SWIFT-CSCv1|2.1,Vuln-ID|V-72471"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @SIGNED_ZONE_FILE_NAME@ replaced with "/var/named/chroot/etc/" in field "file".
      file        : "/var/named/chroot/etc/"
      regex       : "DNSKEY.*KSK"
      expect      : "KSK"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "BIND-9X-001200 - A BIND 9.x server implementation must maintain the integrity and confidentiality of DNS information while it is being prepared for transmission, in transmission, and in use and t must perform integrity verification and data origin verification for all DNS information - ZSK"
      info        : "DNSSEC is required for securing the DNS query/response transaction by providing data origin authentication and data integrity verification through signature verification and the chain of trust

Failure to accomplish data origin authentication and data integrity verification could have significant effects on DNS Infrastructure. The resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service

Failure to validate name server replies would cause many networking functions and communications to be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.

Failure to validate the chain of trust used with DNSSEC would have a significant impact on the security posture of the DNS server. Non-validated trust chains may contain rouge DNS servers and allow those unauthorized servers to introduce invalid data into an organizations DNS infrastructure. A compromise of this type would be difficult to detect and may have devastating effects on the validity and integrity of DNS zone information.

Satisfies: SRG-APP-000213-DNS-000024, SRG-APP-000215-DNS-000026, SRG-APP-000219-DNS-000028, SRG-APP-000219-DNS-000029, SRG-APP-000219-DNS-000030, SRG-APP-000347-DNS-000041, SRG-APP-000348-DNS-000042, SRG-APP-000349-DNS-000043, SRG-APP-000420-DNS-000053, SRG-APP-000421-DNS-000054, SRG-APP-000422-DNS-000055, SRG-APP-000423-DNS-000056, SRG-APP-000424-DNS-000057, SRG-APP-000425-DNS-000058, SRG-APP-000426-DNS-000059, SRG-APP-000441-DNS-000066, SRG-APP-000442-DNS-000067, SRG-APP-000516-DNS-000089

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Set the 'dnssec-enable' option to yes.

Sign each zone file that the name server is responsible for.

Configure each zone the name server is responsible for to use a DNSSEC signed zone."
      reference   : "800-171|3.13.15,800-53|AU-10(1),800-53|AU-10(2),800-53|SC-20,800-53|SC-20(2),800-53|SC-21,800-53|SC-23,800-53|SC-8(2),CAT|I,CCI|CCI-001178,CCI|CCI-001184,CCI|CCI-001663,CCI|CCI-001901,CCI|CCI-001902,CCI|CCI-001904,CCI|CCI-002420,CCI|CCI-002422,CCI|CCI-002462,CCI|CCI-002463,CCI|CCI-002464,CCI|CCI-002465,CCI|CCI-002466,CCI|CCI-002467,CCI|CCI-002468,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-1,ITSG-33|AU-10(1),ITSG-33|AU-10(2),ITSG-33|SC-20,ITSG-33|SC-21,ITSG-33|SC-23,ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87095r4_rule,STIG-ID|BIND-9X-001200,SWIFT-CSCv1|2.1,Vuln-ID|V-72471"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @SIGNED_ZONE_FILE_NAME@ replaced with "/var/named/chroot/etc/" in field "file".
      file        : "/var/named/chroot/etc/"
      regex       : "DNSKEY.*ZSK"
      expect      : "ZSK"
    </custom_item>

    <report type:"WARNING">
      description : "BIND-9X-001310 - A BIND 9.x server implementation must provide the means to indicate the security status of child zones."
      info        : "If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.

A DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data.

In DNS, trust in the public key of the source is established by starting from a trusted name server and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent.

A trust anchor is an authoritative entity represented via a public key and associated data. It is used in the context of public key infrastructures, X.509 digital certificates, and Domain Name System Security Extensions (DNSSEC).

When there is a chain of trust, usually the top entity to be trusted becomes the trust anchor. A certification path starts with the subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate. In DNS, a trust anchor is a DNSKEY that is placed into a validating resolver so the validator can cryptographically validate the results for a given request back to a known public key (the trust anchor).

An example means to indicate the security status of child subspaces is through the use of delegation signer (DS) resource records in the DNS.

Path validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted. Without path validation and a chain of trust, there can be no trust that the data integrity authenticity has been maintained during a transaction.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Sign each child zone. During the zone signing process, ensure that a DS record is created and is stored on the Parent zone name server."
      reference   : "CAT|II,CCI|CCI-001179,Rule-ID|SV-87097r2_rule,STIG-ID|BIND-9X-001310,Vuln-ID|V-72473"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "BIND-9X-001311 - The BIND 9.x server validity period for the RRSIGs covering the DS RR for zones delegated children must be no less than two days and no more than one week."
      info        : "The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.

To prevent the impact of a compromised KSK, a delegating parent should set the signature validity period for RRSIGs covering DS RRs in the range of a few days to 1 week. This re-signing does not require frequent rollover of the parent's ZSK, but scheduled ZSK rollover should still be performed at regular intervals.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Resign the child zone files and have the zone administrator provide updated DS resource records for the child zone."
      reference   : "CAT|II,CCI|CCI-001179,Rule-ID|SV-87099r3_rule,STIG-ID|BIND-9X-001311,Vuln-ID|V-72475"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001320 - The core BIND 9.x server files must be owned by the root or BIND 9.x process account - named.conf"
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
      solution    : "Change the ownership of the files to the root or BIND 9.x process account.

# chown <account_name> <file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87101r2_rule,STIG-ID|BIND-9X-001320,SWIFT-CSCv1|2.3,Vuln-ID|V-72477"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
      file        : "/var/named/chroot/etc/named.conf"
      owner       : "root"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001320 - The core BIND 9.x server files must be owned by the root or BIND 9.x process account - root hints"
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
      solution    : "Change the ownership of the files to the root or BIND 9.x process account.

# chown <account_name> <file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87101r2_rule,STIG-ID|BIND-9X-001320,SWIFT-CSCv1|2.3,Vuln-ID|V-72477"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @ROOT_HINTS@ replaced with "/var/named/chroot/var/named/named.ca" in field "file".
      file        : "/var/named/chroot/var/named/named.ca"
      owner       : "root"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001320 - The core BIND 9.x server files must be owned by the root or BIND 9.x process account - zone files"
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
      solution    : "Change the ownership of the files to the root or BIND 9.x process account.

# chown <account_name> <file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87101r2_rule,STIG-ID|BIND-9X-001320,SWIFT-CSCv1|2.3,Vuln-ID|V-72477"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @ZONE_FILE_PATH@ replaced with "/var/named/chroot/etc/" in field "file".
      file        : "/var/named/chroot/etc//*"
      owner       : "root"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001321 - The core BIND 9.x server files must be group owned by a group designated for DNS administration only - named.conf"
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
      solution    : "Change the ownership of the core BIND 9.x server files to the process account group.

# chgrp (BIND 9.x process account) <file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87103r1_rule,STIG-ID|BIND-9X-001321,SWIFT-CSCv1|2.3,Vuln-ID|V-72479"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
      file        : "/var/named/chroot/etc/named.conf"
# Note: Variable @DNS_ADMIN_GROUP@ replaced with "named" in field "group".
      group       : "named"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001321 - The core BIND 9.x server files must be group owned by a group designated for DNS administration only - root hints"
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
      solution    : "Change the ownership of the core BIND 9.x server files to the process account group.

# chgrp (BIND 9.x process account) <file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87103r1_rule,STIG-ID|BIND-9X-001321,SWIFT-CSCv1|2.3,Vuln-ID|V-72479"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @ROOT_HINTS@ replaced with "/var/named/chroot/var/named/named.ca" in field "file".
      file        : "/var/named/chroot/var/named/named.ca"
# Note: Variable @DNS_ADMIN_GROUP@ replaced with "named" in field "group".
      group       : "named"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001321 - The core BIND 9.x server files must be group owned by a group designated for DNS administration only - zone files"
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
      solution    : "Change the ownership of the core BIND 9.x server files to the process account group.

# chgrp (BIND 9.x process account) <file>"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87103r1_rule,STIG-ID|BIND-9X-001321,SWIFT-CSCv1|2.3,Vuln-ID|V-72479"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @ZONE_FILE_PATH@ replaced with "/var/named/chroot/etc/" in field "file".
      file        : "/var/named/chroot/etc//*"
# Note: Variable @DNS_ADMIN_GROUP@ replaced with "named" in field "group".
      group       : "named"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001322 - The permissions assigned to the core BIND 9.x server files must be set to utilize the least privilege possible - named.conf"
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
      solution    : "Configure the permissions of each file to the following:

named.conf : rw-r-----
root hints : rw-r-----
master zone file(s): rw-r-----
slave zone file(s): rw-rw----"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87105r1_rule,STIG-ID|BIND-9X-001322,SWIFT-CSCv1|2.3,Vuln-ID|V-72481"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
      file        : "/var/named/chroot/etc/named.conf"
      mask        : "137"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "BIND-9X-001322 - The permissions assigned to the core BIND 9.x server files must be set to utilize the least privilege possible - root hints"
      info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
      solution    : "Configure the permissions of each file to the following:

named.conf : rw-r-----
root hints : rw-r-----
master zone file(s): rw-r-----
slave zone file(s): rw-rw----"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87105r1_rule,STIG-ID|BIND-9X-001322,SWIFT-CSCv1|2.3,Vuln-ID|V-72481"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @ROOT_HINTS@ replaced with "/var/named/chroot/var/named/named.ca" in field "file".
      file        : "/var/named/chroot/var/named/named.ca"
      mask        : "137"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "Check for no 'masters' in config file on secondary/slave DNS'"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*masters[\\s]*"
          expect      : "^[\\s]*masters[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CHECK
          description : "BIND-9X-001322 - The permissions assigned to the core BIND 9.x server files must be set to utilize the least privilege possible - primary zone files"
          info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
          solution    : "Configure the permissions of each file to the following:

named.conf : rw-r-----
root hints : rw-r-----
master zone file(s): rw-r-----
slave zone file(s): rw-rw----"
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87105r1_rule,STIG-ID|BIND-9X-001322,SWIFT-CSCv1|2.3,Vuln-ID|V-72481"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @ZONE_FILE_PATH@ replaced with "/var/named/chroot/etc/" in field "file".
          file        : "/var/named/chroot/etc//*"
          mask        : "137"
        </custom_item>

        <report type:"PASSED">
          description : "BIND-9X-001322 - The permissions assigned to the core BIND 9.x server files must be set to utilize the least privilege possible - secondary zone files"
          info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
          solution    : "Configure the permissions of each file to the following:

named.conf : rw-r-----
root hints : rw-r-----
master zone file(s): rw-r-----
slave zone file(s): rw-rw----"
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87105r1_rule,STIG-ID|BIND-9X-001322,SWIFT-CSCv1|2.3,Vuln-ID|V-72481"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </then>

      <else>
        <custom_item>
          type        : FILE_CHECK
          description : "BIND-9X-001322 - The permissions assigned to the core BIND 9.x server files must be set to utilize the least privilege possible - secondary zone files"
          info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
          solution    : "Configure the permissions of each file to the following:

named.conf : rw-r-----
root hints : rw-r-----
master zone file(s): rw-r-----
slave zone file(s): rw-rw----"
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87105r1_rule,STIG-ID|BIND-9X-001322,SWIFT-CSCv1|2.3,Vuln-ID|V-72481"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @ZONE_FILE_PATH@ replaced with "/var/named/chroot/etc/" in field "file".
          file        : "/var/named/chroot/etc//*"
          mask        : "117"
        </custom_item>

        <report type:"PASSED">
          description : "BIND-9X-001322 - The permissions assigned to the core BIND 9.x server files must be set to utilize the least privilege possible - primary zone files"
          info        : "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly."
          solution    : "Configure the permissions of each file to the following:

named.conf : rw-r-----
root hints : rw-r-----
master zone file(s): rw-r-----
slave zone file(s): rw-rw----"
          reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-87105r1_rule,STIG-ID|BIND-9X-001322,SWIFT-CSCv1|2.3,Vuln-ID|V-72481"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001400 - On a BIND 9.x server for zones split between the external and internal sides of a network, the RRs for the external hosts must be separate from the RRs for the internal hosts."
      info        : "Authoritative name servers for an enterprise may be configured to receive requests from both external and internal clients.

External clients need to receive RRs that pertain only to public services (public Web server, mail server, etc.)

Internal clients need to receive RRs pertaining to public services as well as internal hosts.

The zone information that serves the RRs on both the inside and the outside of a firewall should be split into different physical files for these two types of clients (one file for external clients and one file for internal clients).

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the 'named.conf' file.

Configure the internal and external view statements to use separate zone files.

Edit the internal and external zone files.

Configure the zone file to use RRs designated for internal or external use. The zone files should not share any RR."
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87107r1_rule,STIG-ID|BIND-9X-001400,SWIFT-CSCv1|2.3,Vuln-ID|V-72483"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*view.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"view Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001401 - On a BIND 9.x server in a split DNS configuration, where separate name servers are used between the external and internal networks, the external name server must be configured to not be reachable from inside resolvers."
      info        : "Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers.

One set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.)

The other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the 'named.conf' file.

Configure the external view statement to server external hosts only:

view 'external' {
match-clients { <ip_address> | <address_match_list>; };
};

Restart the BIND 9.x process."
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87109r1_rule,STIG-ID|BIND-9X-001401,SWIFT-CSCv1|2.3,Vuln-ID|V-72485"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*view.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"view Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001402 - On a BIND 9.x server in a split DNS configuration, where separate name servers are used between the external and internal networks, the internal name server must be configured to not be reachable from outside resolvers."
      info        : "Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers.

One set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.)

The other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the 'named.conf' file.

Configure the internal view statement to limit use authorized internal hosts:

view 'internal' {
match-clients { <ip_address> | <address_match_list>; };
};

Remove any IP address that is assigned to an external host from the internal view statement.

Restart the BIND 9.x process."
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87111r1_rule,STIG-ID|BIND-9X-001402,SWIFT-CSCv1|2.3,Vuln-ID|V-72487"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*view.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"view Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001403 - A BIND 9.x server implementation must implement internal/external role separation."
      info        : "DNS servers with an internal role only process name/address resolution requests from within the organization (i.e., internal clients). DNS servers with an external role only process name/address resolution information requests from clients external to the organization (i.e., on the external networks, including the Internet). The set of clients that can access an authoritative DNS server in a particular role is specified by the organization using address ranges, explicit access control lists, etc. In order to protect internal DNS resource information, it is important to isolate the requests to internal DNS servers.

Failure to separate internal and external roles in DNS may lead to address space that is private (e.g., 10.0.0.0/24) or is otherwise concealed by some form of Network Address Translation from leaking into the public DNS system. Allowing private IP space to leak into the public DNS system may provide a person with malicious intent the ability to footprint your network and identify potential attack targets residing on your private network.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the 'named.conf' file.

Configure the internal and external view statements to use separate network segments.

Configure all internal view statements to be listed before any external view statement.

Restart the BIND 9.x process."
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-87113r1_rule,STIG-ID|BIND-9X-001403,SWIFT-CSCv1|2.3,Vuln-ID|V-72489"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*view.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"view Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "BIND-9X-001404 - On the BIND 9.x server the IP address for hidden master authoritative name servers must not appear in the name servers set in the zone database."
      info        : "A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone. All of the name servers that do appear in the zone database as designated name servers get their zone data from the hidden master via a zone transfer request. In effect, all visible name servers are actually secondary slave servers. This prevents potential attackers from targeting the master name server because its IP address may not appear in the zone database.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Edit the zone file(s).

Remove all references to the hidden master name server.

Restart the BIND 9.x process."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87115r1_rule,STIG-ID|BIND-9X-001404,Vuln-ID|V-72491"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "BIND-9X-001405 - A BIND 9.x implementation operating in a split DNS configuration must be approved by the organizations Authorizing Official."
      info        : "BIND 9.x has implemented an option to use 'view' statements to allow for split DNS architecture to be configured on a single name server.

If the split DNS architecture is improperly configured there is a risk that internal IP addresses and host names could leak into the external view of the DNS server.

Allowing private IP space to leak into the public DNS system may provide a person with malicious intent the ability to footprint your network and identify potential attack targets residing on your private network.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Obtain approval for the split DNS implementation from the Authorizing Official."
      reference   : "CAT|I,CCI|CCI-000366,Rule-ID|SV-87117r1_rule,STIG-ID|BIND-9X-001405,Vuln-ID|V-72493"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "BIND-9X-001410 - On the BIND 9.x server the private key corresponding to the ZSK, stored on name servers accepting dynamic updates, must be owned by root."
      info        : "The private ZSK key must be protected from unauthorized access.

This strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the ownership of the ZSK private key to the root account.

# chown root <key_file>"
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87119r4_rule,STIG-ID|BIND-9X-001410,Vuln-ID|V-72495"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "BIND-9X-001411 - On the BIND 9.x server the private key corresponding to the ZSK, stored on name servers accepting dynamic updates, must be group owned by root."
      info        : "The private ZSK key must be protected from unauthorized access.

This strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change the group ownership of the ZSK private key to the root group account.

# chgrp root <key_file>"
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87121r4_rule,STIG-ID|BIND-9X-001411,Vuln-ID|V-72497"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "Check for no 'masters' in config file on primary/master DNS'"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*masters[\\s]*"
          expect      : "^[\\s]*masters[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001510 - A BIND 9.x server implementation must enforce approved authorizations for controlling the flow of information between authoritative name servers and specified secondary name servers based on DNSSEC policies - master"
          info        : "A mechanism to detect and prevent unauthorized communication flow must be configured or provided as part of the system design. If information flow is not enforced based on approved authorizations, the system may become compromised. Information flow control regulates where information is allowed to travel within a system and between interconnected systems. The flow of all application information must be monitored and controlled so it does not introduce any unacceptable risk to the systems or data.

Within the context of DNS, this is applicable in terms of controlling the flow of DNS information between systems, such as DNS zone transfers.

Authoritative name servers (especially primary name servers) should be configured with an allow-transfer access control sub statement designating the list of hosts from which DNS information, such as zone transfers, can be accepted. These restrictions address the denial-of-service threat and potential exploits from unrestricted dissemination of information about internal resources.

Zone transfer from primary name servers should be restricted to secondary name servers. The zone transfer should be completely disabled in the secondary name servers. The address match list argument for the allow-transfer sub statement should consist of IP addresses of secondary name servers and stealth secondary name servers.

Satisfies: SRG-APP-000215-DNS-000003, SRG-APP-000516-DNS-000095"
          solution    : "For an authoritative name server:

Configure each zone statement to allow transfers from authorized hosts:

allow-transfer { <ip_address_list>; };

Restart the BIND 9.x process.

For a secondary server:

Configure each zone to deny zone transfer requests:

allow-transfer { none; };

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|II,CCI|CCI-000366,CCI|CCI-001663,ITSG-33|SC-20,Rule-ID|SV-87123r1_rule,STIG-ID|BIND-9X-001510,Vuln-ID|V-72499"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk 'BEGIN { o=0; r=1; } /^\\s*zone.*{/ { k=0; s=1; } /{/ { b += 1; } /}/ { b -= 1; } s == 1 { print; o=1; } s == 1 && /^\\s*allow-transfer\\s*{.*;\\s*}/ { k=1; } s == 1 && b == 0 { if (k == 0) r = 0; s=0; } END { if (o == 0) { print \"allow-transfer Not Found\" } else if (r == 0) { print \"Not all zones have allow-transfer.\" } else { print \"Pass\" } }' /var/named/chroot/etc/named.conf"
          expect      : "^Pass$"
        </custom_item>

        <report type:"PASSED">
          description : "BIND-9X-001510 - A BIND 9.x server implementation must enforce approved authorizations for controlling the flow of information between authoritative name servers and specified secondary name servers based on DNSSEC policies - secondary"
          info        : "A mechanism to detect and prevent unauthorized communication flow must be configured or provided as part of the system design. If information flow is not enforced based on approved authorizations, the system may become compromised. Information flow control regulates where information is allowed to travel within a system and between interconnected systems. The flow of all application information must be monitored and controlled so it does not introduce any unacceptable risk to the systems or data.

Within the context of DNS, this is applicable in terms of controlling the flow of DNS information between systems, such as DNS zone transfers.

Authoritative name servers (especially primary name servers) should be configured with an allow-transfer access control sub statement designating the list of hosts from which DNS information, such as zone transfers, can be accepted. These restrictions address the denial-of-service threat and potential exploits from unrestricted dissemination of information about internal resources.

Zone transfer from primary name servers should be restricted to secondary name servers. The zone transfer should be completely disabled in the secondary name servers. The address match list argument for the allow-transfer sub statement should consist of IP addresses of secondary name servers and stealth secondary name servers.

Satisfies: SRG-APP-000215-DNS-000003, SRG-APP-000516-DNS-000095"
          solution    : "For an authoritative name server:

Configure each zone statement to allow transfers from authorized hosts:

allow-transfer { <ip_address_list>; };

Restart the BIND 9.x process.

For a secondary server:

Configure each zone to deny zone transfer requests:

allow-transfer { none; };

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|II,CCI|CCI-000366,CCI|CCI-001663,ITSG-33|SC-20,Rule-ID|SV-87123r1_rule,STIG-ID|BIND-9X-001510,Vuln-ID|V-72499"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </then>

      <else>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001510 - A BIND 9.x server implementation must enforce approved authorizations for controlling the flow of information between authoritative name servers and specified secondary name servers based on DNSSEC policies - secondary"
          info        : "A mechanism to detect and prevent unauthorized communication flow must be configured or provided as part of the system design. If information flow is not enforced based on approved authorizations, the system may become compromised. Information flow control regulates where information is allowed to travel within a system and between interconnected systems. The flow of all application information must be monitored and controlled so it does not introduce any unacceptable risk to the systems or data.

Within the context of DNS, this is applicable in terms of controlling the flow of DNS information between systems, such as DNS zone transfers.

Authoritative name servers (especially primary name servers) should be configured with an allow-transfer access control sub statement designating the list of hosts from which DNS information, such as zone transfers, can be accepted. These restrictions address the denial-of-service threat and potential exploits from unrestricted dissemination of information about internal resources.

Zone transfer from primary name servers should be restricted to secondary name servers. The zone transfer should be completely disabled in the secondary name servers. The address match list argument for the allow-transfer sub statement should consist of IP addresses of secondary name servers and stealth secondary name servers.

Satisfies: SRG-APP-000215-DNS-000003, SRG-APP-000516-DNS-000095"
          solution    : "For an authoritative name server:

Configure each zone statement to allow transfers from authorized hosts:

allow-transfer { <ip_address_list>; };

Restart the BIND 9.x process.

For a secondary server:

Configure each zone to deny zone transfer requests:

allow-transfer { none; };

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|II,CCI|CCI-000366,CCI|CCI-001663,ITSG-33|SC-20,Rule-ID|SV-87123r1_rule,STIG-ID|BIND-9X-001510,Vuln-ID|V-72499"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk 'BEGIN { o=0; r=1; } /^\\s*zone.*{/ { k=0; s=1; } /{/ { b += 1; } /}/ { b -= 1; } s == 1 { print; o=1; } s == 1 && /^\\s*allow-transfer\\s*{\\s*none;\\s*}/ { k=1; } s == 1 && b == 0 { if (k == 0) r = 0; s=0; } END { if (o == 0) { print \"allow-transfer Not Found\" } else if (r == 0) { print \"Not all zones have allow-transfer.\" } else { print \"Pass\" } }' /var/named/chroot/etc/named.conf"
          expect      : "^Pass$"
        </custom_item>

        <report type:"PASSED">
          description : "BIND-9X-001510 - A BIND 9.x server implementation must enforce approved authorizations for controlling the flow of information between authoritative name servers and specified secondary name servers based on DNSSEC policies - master"
          info        : "A mechanism to detect and prevent unauthorized communication flow must be configured or provided as part of the system design. If information flow is not enforced based on approved authorizations, the system may become compromised. Information flow control regulates where information is allowed to travel within a system and between interconnected systems. The flow of all application information must be monitored and controlled so it does not introduce any unacceptable risk to the systems or data.

Within the context of DNS, this is applicable in terms of controlling the flow of DNS information between systems, such as DNS zone transfers.

Authoritative name servers (especially primary name servers) should be configured with an allow-transfer access control sub statement designating the list of hosts from which DNS information, such as zone transfers, can be accepted. These restrictions address the denial-of-service threat and potential exploits from unrestricted dissemination of information about internal resources.

Zone transfer from primary name servers should be restricted to secondary name servers. The zone transfer should be completely disabled in the secondary name servers. The address match list argument for the allow-transfer sub statement should consist of IP addresses of secondary name servers and stealth secondary name servers.

Satisfies: SRG-APP-000215-DNS-000003, SRG-APP-000516-DNS-000095"
          solution    : "For an authoritative name server:

Configure each zone statement to allow transfers from authorized hosts:

allow-transfer { <ip_address_list>; };

Restart the BIND 9.x process.

For a secondary server:

Configure each zone to deny zone transfer requests:

allow-transfer { none; };

Restart the BIND 9.x process."
          reference   : "800-53|SC-20,CAT|II,CCI|CCI-000366,CCI|CCI-001663,ITSG-33|SC-20,Rule-ID|SV-87123r1_rule,STIG-ID|BIND-9X-001510,Vuln-ID|V-72499"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>

    <report type:"WARNING">
      description : "BIND-9X-001600 - A BIND 9.x server validity period for the RRSIGs covering a zones DNSKEY RRSet must be no less than two days and no more than one week."
      info        : "The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Resign each zone that is outside of the validity period.

Restart the BIND 9.x process."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87125r2_rule,STIG-ID|BIND-9X-001600,Vuln-ID|V-72501"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "BIND-9X-001610 - A BIND 9.x server NSEC3 must be used for all internal DNS zones."
      info        : "To ensure that RRs associated with a query are really missing in a zone file and have not been removed in transit, the DNSSEC mechanism provides a means for authenticating the nonexistence of an RR. It generates a special RR called an NSEC (or NSEC3) RR that lists the RRTypes associated with an owner name as well as the next name in the zone file. It sends this special RR, along with its signatures, to the resolving name server. By verifying the signature, a DNSSEC-aware resolving name server can determine which authoritative owner name exists in a zone and which authoritative RRTypes exist at those owner names.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Resign each zone that is missing NSEC records.

Restart the BIND 9.x process."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87127r4_rule,STIG-ID|BIND-9X-001610,Vuln-ID|V-72503"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001611 - Every NS record in a zone file on a BIND 9.x server must point to an active name server and that name server must be authoritative for the domain specified in that record."
      info        : "Poorly constructed NS records pose a security risk because they create conditions under which an adversary might be able to provide the missing authoritative name services that are improperly specified in the zone file. The adversary could issue bogus responses to queries that clients would accept because they learned of the adversary's name server from a valid authoritative name server, one that need not be compromised for this attack to be successful. The list of slave servers must remain current within 72 hours of any changes to the zone architecture that would affect the list of slaves. If a slave server has been retired or is not operational but remains on the list, then an adversary might have a greater opportunity to impersonate that slave without detection, rather than if the slave were actually online. For example, the adversary may be able to spoof the retired slave's IP address without an IP address conflict, which would not be likely to occur if the true slave were active.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the zone file(s).

Remove any name server that the BIND 9.x server is not authoritative for.

Restart the BIND 9.x process."
      reference   : "800-171|3.4.2,800-53|SC-22,CAT|II,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87129r1_rule,STIG-ID|BIND-9X-001611,Vuln-ID|V-72505"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001612 - On a BIND 9.x server all authoritative name servers for a zone must be located on different network segments."
      info        : "Most enterprises have an authoritative primary server and a host of authoritative secondary name servers. It is essential that these authoritative name servers for an enterprise be located on different network segments. This dispersion ensures the availability of an authoritative name server not only in situations in which a particular router or switch fails but also during events involving an attack on an entire network segment.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the zone file and configure each name server on a separate network segment."
      reference   : "800-171|3.4.2,800-53|SC-22,CAT|II,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87131r1_rule,STIG-ID|BIND-9X-001612,Vuln-ID|V-72507"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "BIND-9X-001613 - On a BIND 9.x server all authoritative name servers for a zone must have the same version of zone information."
      info        : "It is important to maintain the integrity of a zone file. The serial number of the SOA record is used to indicate to secondary name server that a change to the zone has occurred and a zone transfer should be performed. The serial number used in the SOA record provides the DNS administrator a method to verify the integrity of the zone file based on the serial number of the last update and ensure that all slave servers are using the correct zone file.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Edit the zone file.

Update the SOA record serial number."
      reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-87133r1_rule,STIG-ID|BIND-9X-001613,Vuln-ID|V-72509"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "Check for recusion"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*recursion yes;"
          expect      : "^[\\s]*recursion yes;"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001620 - On a BIND 9.x server all root name servers listed in the local root zone file hosted on a BIND 9.x authoritative name server must be valid for that zone."
          info        : "All caching name servers must be authoritative for the root zone because, without this starting point, they would have no knowledge of the DNS infrastructure and thus would be unable to respond to any queries. The security risk is that an adversary could change the root hints and direct the caching name server to a bogus root server. At that point, every query response from that name server is suspect, which would give the adversary substantial control over the network communication of the name servers' clients.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the local root zone file.

Remove any reference to a domain that is outside of the name server's primary domain.

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87135r1_rule,STIG-ID|BIND-9X-001620,Vuln-ID|V-72511"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*zone\\s*\"\.\"\\s*IN\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "BIND-9X-001620 - On a BIND 9.x server all root name servers listed in the local root zone file hosted on a BIND 9.x authoritative name server must be valid for that zone."
          info        : "All caching name servers must be authoritative for the root zone because, without this starting point, they would have no knowledge of the DNS infrastructure and thus would be unable to respond to any queries. The security risk is that an adversary could change the root hints and direct the caching name server to a bogus root server. At that point, every query response from that name server is suspect, which would give the adversary substantial control over the network communication of the name servers' clients."
          solution    : "Edit the local root zone file.

Remove any reference to a domain that is outside of the name server's primary domain.

Restart the BIND 9.x process."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87135r1_rule,STIG-ID|BIND-9X-001620,Vuln-ID|V-72511"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "Check for recusion"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*recursion yes;"
          expect      : "^[\\s]*recursion yes;"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "BIND-9X-001621 - On a BIND 9.x server all root name servers listed in the local root zone file hosted on a BIND 9.x authoritative name server must be empty or removed."
          info        : "A potential vulnerability of DNS is that an attacker can poison a name servers cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. The DNS architecture needs to maintain one name server whose zone records are correct and the cache is not poisoned, in this effort the authoritative name server may not forward queries, one of the ways to prevent this, the root hints file is to be deleted.

When authoritative servers are sent queries for zones that they are not authoritative for, and they are configured as a non-caching server (as recommended), they can either be configured to return a referral to the root servers or they can be configured to refuse to answer the query. The requirement is to configure authoritative servers to refuse to answer queries for any zones for which they are not authoritative. This is more efficient for the server, and allows it to spend more of its resources doing what its intended purpose is; answering authoritatively for its zone."
          solution    : "Remove the local root zone file from the name server."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87137r1_rule,STIG-ID|BIND-9X-001621,Vuln-ID|V-72513"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </then>

      <else>
        <custom_item>
          type        : CMD_EXEC
          description : "BIND-9X-001621 - On a BIND 9.x server all root name servers listed in the local root zone file hosted on a BIND 9.x authoritative name server must be empty or removed."
          info        : "A potential vulnerability of DNS is that an attacker can poison a name servers cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. The DNS architecture needs to maintain one name server whose zone records are correct and the cache is not poisoned, in this effort the authoritative name server may not forward queries, one of the ways to prevent this, the root hints file is to be deleted.

When authoritative servers are sent queries for zones that they are not authoritative for, and they are configured as a non-caching server (as recommended), they can either be configured to return a referral to the root servers or they can be configured to refuse to answer the query. The requirement is to configure authoritative servers to refuse to answer queries for any zones for which they are not authoritative. This is more efficient for the server, and allows it to spend more of its resources doing what its intended purpose is; answering authoritatively for its zone.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Remove the local root zone file from the name server."
          reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87137r1_rule,STIG-ID|BIND-9X-001621,Vuln-ID|V-72513"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
          cmd         : "/usr/bin/awk '/^\\s*zone\\s*\"\.\"\\s*IN\\s*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001700 - On the BIND 9.x server a zone file must not include resource records that resolve to a fully qualified domain name residing in another zone."
      info        : "If a name server were able to claim authority for a resource record in a domain for which it was not authoritative, this would pose a security risk. In this environment, an adversary could use illicit control of a name server to impact IP address resolution beyond the scope of that name server (i.e., by claiming authority for records outside of that server's zones). Fortunately, all but the oldest versions of BIND and most other DNS implementations do not allow for this behavior. Nevertheless, the best way to eliminate this risk is to eliminate from the zone files any records for hosts in another zone.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "In the case of third-party CDNs or cloud offerings, document the mission need with the AO.

Edit the zone file.

Remove any record that points to a different zone, with the exception of approved CDNs or cloud offerings.

Restart the BIND 9.x process."
      reference   : "800-171|3.4.2,800-53|SC-22,CAT|II,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87139r1_rule,STIG-ID|BIND-9X-001700,Vuln-ID|V-72515"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "BIND-9X-001701 - On the BIND 9.x server CNAME records must not point to a zone with lesser security for more than six months."
      info        : "The use of CNAME records for exercises, tests, or zone-spanning aliases should be temporary (e.g., to facilitate a migration). When a host name is an alias for a record in another zone, an adversary has two points of attack: the zone in which the alias is defined and the zone authoritative for the alias's canonical name. This configuration also reduces the speed of client resolution because it requires a second lookup after obtaining the canonical name. Furthermore, in the case of an authoritative name server, this information is promulgated throughout the enterprise to caching servers and thus compounds the vulnerability.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "In the case of third-party CDNs or cloud offerings, document the mission need with the AO.

Edit the zone file.

Remove CNAME records that are older than six months that do not meet the CDN or cloud offering criteria.

Restart the BIND 9.x process."
      reference   : "800-171|3.4.2,800-53|SC-22,CAT|III,CCI|CCI-000366,CSF|PR.IP-1,ITSG-33|SC-22,NESA|T4.5.1,NIAv2|NS17,NIAv2|NS18,NIAv2|NS19,NIAv2|NS20,NIAv2|NS21,NIAv2|NS22,NIAv2|NS23,Rule-ID|SV-87141r1_rule,STIG-ID|BIND-9X-001701,Vuln-ID|V-72517"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "cmd".
      cmd         : "/usr/bin/awk '/^\\s*zone.*{/ { l=1 } /{/ { b += 1 } /}/ { b -= 1 } l == 1 { print; o=1 } b == 0 { l = 0 } END { if (o == 0) print \"zone Not Found\" }' /var/named/chroot/etc/named.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "Check for recusion"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*recursion yes;"
          expect      : "^[\\s]*recursion yes;"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "BIND-9X-001702 - The BIND 9.x server implementation must prohibit the forwarding of queries to servers controlled by organizations outside of the U.S. Government - forward only"
          info        : "If remote servers to which DoD DNS servers send queries are controlled by entities outside of the U.S. Government the possibility of a DNS attack is increased.

The Enterprise Recursive Service (ERS) provides the ability to apply enterprise-wide policy to all recursive DNS traffic that traverses the NIPRNet-to-Internet boundary. All recursive DNS servers on the NIPRNet must be configured to exclusively forward DNS traffic traversing NIPRNet-to-Internet boundary to the ERS anycast IPs.

Organizations need to carefully configure any forwarding that is being used by their caching name servers. They should only configure 'forwarding of all queries' to servers within the DoD. Systems configured to use domain-based forwarding should not forward queries for mission critical domains to any servers that are not under the control of the US Government."
          solution    : "Configure the BIND 9.x caching name server to utilize the DISA ERS anycast IP addresses.

Edit the 'named.conf' file and add the following to the global options statement:

forward only;
forwarders { <IP_ADDRESS_LIST>; };

Note: '<IP_ADDRESS_LIST>' should be replaced with the current ERS IP addresses.

Restart the BIND 9.x process."
          reference   : "800-171|3.13.1,800-53|SC-7(19),CAT|II,CCI|CCI-000366,CSF|PR.PT-4,Rule-ID|SV-87143r2_rule,STIG-ID|BIND-9X-001702,Vuln-ID|V-72519"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
          regex       : "^[\\s]*forward only;"
          expect      : "^[\\s]*forward only;"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "BIND-9X-001702 - The BIND 9.x server implementation must prohibit the forwarding of queries to servers controlled by organizations outside of the U.S. Government - forwarders"
          info        : "If remote servers to which DoD DNS servers send queries are controlled by entities outside of the U.S. Government the possibility of a DNS attack is increased.

The Enterprise Recursive Service (ERS) provides the ability to apply enterprise-wide policy to all recursive DNS traffic that traverses the NIPRNet-to-Internet boundary. All recursive DNS servers on the NIPRNet must be configured to exclusively forward DNS traffic traversing NIPRNet-to-Internet boundary to the ERS anycast IPs.

Organizations need to carefully configure any forwarding that is being used by their caching name servers. They should only configure 'forwarding of all queries' to servers within the DoD. Systems configured to use domain-based forwarding should not forward queries for mission critical domains to any servers that are not under the control of the US Government."
          solution    : "Configure the BIND 9.x caching name server to utilize the DISA ERS anycast IP addresses.

Edit the 'named.conf' file and add the following to the global options statement:

forward only;
forwarders { <IP_ADDRESS_LIST>; };

Note: '<IP_ADDRESS_LIST>' should be replaced with the current ERS IP addresses.

Restart the BIND 9.x process."
          reference   : "800-171|3.13.1,800-53|SC-7(19),CAT|II,CCI|CCI-000366,CSF|PR.PT-4,Rule-ID|SV-87143r2_rule,STIG-ID|BIND-9X-001702,Vuln-ID|V-72519"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
# Note: Variable @NAMED_CONF@ replaced with "/var/named/chroot/etc/named.conf" in field "file".
          file        : "/var/named/chroot/etc/named.conf"
# Note: Variable @ERS_IP_ADDRESSES@ replaced with "10.2.3.4; 10.2.3.5;" in field "regex".
          regex       : "^[\\s]*forwarders[\\s]*{[\\s]*10.2.3.4; 10.2.3.5;[\\s]*};"
# Note: Variable @ERS_IP_ADDRESSES@ replaced with "10.2.3.4; 10.2.3.5;" in field "expect".
          expect      : "^[\\s]*forwarders[\\s]*{[\\s]*10.2.3.4; 10.2.3.5;[\\s]*};"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "BIND-9X-001702 - The BIND 9.x server implementation must prohibit the forwarding of queries to servers controlled by organizations outside of the U.S. Government - forward only"
          info        : "If remote servers to which DoD DNS servers send queries are controlled by entities outside of the U.S. Government the possibility of a DNS attack is increased.

The Enterprise Recursive Service (ERS) provides the ability to apply enterprise-wide policy to all recursive DNS traffic that traverses the NIPRNet-to-Internet boundary. All recursive DNS servers on the NIPRNet must be configured to exclusively forward DNS traffic traversing NIPRNet-to-Internet boundary to the ERS anycast IPs.

Organizations need to carefully configure any forwarding that is being used by their caching name servers. They should only configure 'forwarding of all queries' to servers within the DoD. Systems configured to use domain-based forwarding should not forward queries for mission critical domains to any servers that are not under the control of the US Government."
          solution    : "Configure the BIND 9.x caching name server to utilize the DISA ERS anycast IP addresses.

Edit the 'named.conf' file and add the following to the global options statement:

forward only;
forwarders { <IP_ADDRESS_LIST>; };

Note: '<IP_ADDRESS_LIST>' should be replaced with the current ERS IP addresses.

Restart the BIND 9.x process."
          reference   : "800-171|3.13.1,800-53|SC-7(19),CAT|II,CCI|CCI-000366,CSF|PR.PT-4,Rule-ID|SV-87143r2_rule,STIG-ID|BIND-9X-001702,Vuln-ID|V-72519"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "BIND-9X-001702 - The BIND 9.x server implementation must prohibit the forwarding of queries to servers controlled by organizations outside of the U.S. Government - forwarders"
          info        : "If remote servers to which DoD DNS servers send queries are controlled by entities outside of the U.S. Government the possibility of a DNS attack is increased.

The Enterprise Recursive Service (ERS) provides the ability to apply enterprise-wide policy to all recursive DNS traffic that traverses the NIPRNet-to-Internet boundary. All recursive DNS servers on the NIPRNet must be configured to exclusively forward DNS traffic traversing NIPRNet-to-Internet boundary to the ERS anycast IPs.

Organizations need to carefully configure any forwarding that is being used by their caching name servers. They should only configure 'forwarding of all queries' to servers within the DoD. Systems configured to use domain-based forwarding should not forward queries for mission critical domains to any servers that are not under the control of the US Government."
          solution    : "Configure the BIND 9.x caching name server to utilize the DISA ERS anycast IP addresses.

Edit the 'named.conf' file and add the following to the global options statement:

forward only;
forwarders { <IP_ADDRESS_LIST>; };

Note: '<IP_ADDRESS_LIST>' should be replaced with the current ERS IP addresses.

Restart the BIND 9.x process."
          reference   : "800-171|3.13.1,800-53|SC-7(19),CAT|II,CCI|CCI-000366,CSF|PR.PT-4,Rule-ID|SV-87143r2_rule,STIG-ID|BIND-9X-001702,Vuln-ID|V-72519"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
        </report>
      </else>
    </if>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_STIG_BIND_9_v1r9.audit from DISA BIND 9.x v1r9 STIG"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_BIND_9-x_V1R9_STIG.zip"
    </report>
  </else>
</if>

</check_type>
