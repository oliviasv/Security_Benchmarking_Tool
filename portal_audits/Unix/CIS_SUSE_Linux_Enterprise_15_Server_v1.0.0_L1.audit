#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
#
# $Revision: 1.0 $
# $Date: 2020/08/25 $
#
# description	: This document implements CIS Level 1 benchmarks for SUSE Linux Enterprise 15 v1.0.0
#               https://workbench.cisecurity.org/files/2854
#
#<ui_metadata>
#<display_name>CIS SUSE Linux Enterprise 15 Server L1 v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>SUSE Linux Enterprise 15 Server L1 v1.0.0</name>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/2854</link>
#</spec>
#<labels>unix,cis,suse,linux,enterprise,workstation,suse_15,agent</labels>
#<benchmark_refs>LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>BANNER_TEXT</name>
#    <default>All activities performed on this system will be monitored.</default>
#    <description>Banner Text</description>
#    <info>This is the text for the warning a user receives when logging onto the system.</info>
#  </variable>
#  <variable>
#    <name>NTP_SERVER</name>
#    <default>0\.pool\.ntp\.org</default>
#    <description>NTP server address</description>
#    <info>The IP address for the NTP server.</info>
#  </variable>
#  <variable>
#    <name>FIREWALLD_DEFAULT_ZONE</name>
#    <default>public</default>
#    <description>Firewalld default zone</description>
#    <info>The default zone adhering to company policy. Default is public.</info>
#  </variable>
#  <variable>
#    <name>SYSLOG_SERVER</name>
#    <default>192\.168\.0\.1</default>
#    <description>Log server address</description>
#    <info>The IP address or FQDN of the syslog server for your organization.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "SUSE Linux 15 is installed - VERSION"
      file        : "/etc/os-release"
      regex       : "^[\\s]*VERSION[\\s]*="
      expect      : "^[\\s]*VERSION[\\s]*=\"[\\s]*15.*\""
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "SUSE Linux 15 is installed - NAME"
      file        : "/etc/os-release"
      regex       : "^[\\s]*NAME[\\s]*="
      expect      : "^[\\s]*NAME[\\s]*=\"[\\s]*SLES.*\""
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_SUSE_Linux_Enterprise_15_Server_v1.0.0_L1.audit Level 1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
    </report>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.2 Ensure mounting of udf filesystems is disabled"
      info        : "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vi /etc/modprobe.d/udf.conf
and add the following line:

install udf /bin/true

Run the following command to unload the udf module:

# modprobe -r udf"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -E \'^[[:space:]]*install udf /bin/true\' /etc/modprobe.d/* |/bin/awk \'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\'"
      expect      : "pass"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check tmp.mount through systemctl"
          cmd         : "/bin/systemctl is-enabled tmp.mount"
          expect      : "enabled"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.1.2 Ensure /tmp is configured"
          info        : "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

Notes:

If an entry for /tmp exists in /etc/fstab it will take precedence over entries in the tmp.mount file.

tmpfs can be resized using the size={size} parameter in /etc/fstab or on the Options line in the tmp.mount file. If we don't specify the size, it will be half the RAM.

Resize tmpfs examples:

/etc/fstab

  tmpfs   /tmp         tmpfs   rw,noexec,nodev,nosuid,size=2G          0  0

tmp.mount

  [Mount]

  What=tmpfs

  Where=/tmp

  Type=tmpfs

  Options=mode=1777,strictatime,size=2G,noexec,nodev,nosuid

Rationale:

Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp."
          solution    : "Create or update an entry for /tmp in either /etc/fstab OR in a systemd tmp.mount file:
If /etc/fstab is used:

Configure /etc/fstab as appropriate.

  Example:
  tmpfs/tmptmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp

  # mount -o remount,noexec,nodev,nosuid /tmp

OR
If systemd tmp.mount file is used:




Run the following command to create the file /etc/systemd/system/tmp.mount if it doesn't exist:

  # [ ! -f /etc/systemd/system/tmp.mount ] && cp -v /usr/share/systemd/tmp.mount /etc/systemd/system/

Edit the file /etc/systemd/system/tmp.mount:

Example tmp.mount file:

#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation; either version 2.1 of the License, or
#  (at your option) any later version.

[Unit]
Description=Temporary Directory (/tmp)
Documentation=man:hier(7)
Documentation=https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems
ConditionPathIsSymbolicLink=!/tmp
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target
After=swap.target

[Mount]
What=tmpfs
Where=/tmp
Type=tmpfs
Options=mode=1777,strictatime,nosuid,nodev,nosuid

[Install]
WantedBy=local-fs.targe

Run the following command to reload the systemd daemon:

  # systemctl daemon-reload

Run the following command to unmask tmp.mount:

  # systemctl unmask tmp.mpunt

Run the following command to enable and start tmp.mount:

  # systemctl enable --now tmp.mount




Impact:

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily."
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|9.4,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl is-enabled tmp.mount"
          expect      : "enabled"
        </custom_item>
      </then>

      <else>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "Check for /tmp on tmpfs with mount"
              cmd         : "/bin/mount | /bin/grep 'on /tmp '"
              expect      : ".* on /tmp type tmpfs .*"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "1.1.2 Ensure /tmp is configured"
              info        : "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

Notes:

If an entry for /tmp exists in /etc/fstab it will take precedence over entries in the tmp.mount file.

tmpfs can be resized using the size={size} parameter in /etc/fstab or on the Options line in the tmp.mount file. If we don't specify the size, it will be half the RAM.

Resize tmpfs examples:

/etc/fstab

  tmpfs   /tmp         tmpfs   rw,noexec,nodev,nosuid,size=2G          0  0

tmp.mount

  [Mount]

  What=tmpfs

  Where=/tmp

  Type=tmpfs

  Options=mode=1777,strictatime,size=2G,noexec,nodev,nosuid

Rationale:

Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp."
              solution    : "Create or update an entry for /tmp in either /etc/fstab OR in a systemd tmp.mount file:
If /etc/fstab is used:

Configure /etc/fstab as appropriate.

  Example:
  tmpfs/tmptmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp

  # mount -o remount,noexec,nodev,nosuid /tmp

OR
If systemd tmp.mount file is used:




Run the following command to create the file /etc/systemd/system/tmp.mount if it doesn't exist:

  # [ ! -f /etc/systemd/system/tmp.mount ] && cp -v /usr/share/systemd/tmp.mount /etc/systemd/system/

Edit the file /etc/systemd/system/tmp.mount:

Example tmp.mount file:

#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation; either version 2.1 of the License, or
#  (at your option) any later version.

[Unit]
Description=Temporary Directory (/tmp)
Documentation=man:hier(7)
Documentation=https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems
ConditionPathIsSymbolicLink=!/tmp
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target
After=swap.target

[Mount]
What=tmpfs
Where=/tmp
Type=tmpfs
Options=mode=1777,strictatime,nosuid,nodev,nosuid

[Install]
WantedBy=local-fs.targe

Run the following command to reload the systemd daemon:

  # systemctl daemon-reload

Run the following command to unmask tmp.mount:

  # systemctl unmask tmp.mpunt

Run the following command to enable and start tmp.mount:

  # systemctl enable --now tmp.mount




Impact:

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily."
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|9.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/mount | /bin/egrep 'on /tmp '"
              expect      : ".* on /tmp type tmpfs .*"
            </custom_item>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "1.1.2 Ensure /tmp is configured"
              info        : "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

Notes:

If an entry for /tmp exists in /etc/fstab it will take precedence over entries in the tmp.mount file.

tmpfs can be resized using the size={size} parameter in /etc/fstab or on the Options line in the tmp.mount file. If we don't specify the size, it will be half the RAM.

Resize tmpfs examples:

/etc/fstab

  tmpfs   /tmp         tmpfs   rw,noexec,nodev,nosuid,size=2G          0  0

tmp.mount

  [Mount]

  What=tmpfs

  Where=/tmp

  Type=tmpfs

  Options=mode=1777,strictatime,size=2G,noexec,nodev,nosuid

Rationale:

Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp."
              solution    : "Create or update an entry for /tmp in either /etc/fstab OR in a systemd tmp.mount file:
If /etc/fstab is used:

Configure /etc/fstab as appropriate.

  Example:
  tmpfs/tmptmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp

  # mount -o remount,noexec,nodev,nosuid /tmp

OR
If systemd tmp.mount file is used:




Run the following command to create the file /etc/systemd/system/tmp.mount if it doesn't exist:

  # [ ! -f /etc/systemd/system/tmp.mount ] && cp -v /usr/share/systemd/tmp.mount /etc/systemd/system/

Edit the file /etc/systemd/system/tmp.mount:

Example tmp.mount file:

#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation; either version 2.1 of the License, or
#  (at your option) any later version.

[Unit]
Description=Temporary Directory (/tmp)
Documentation=man:hier(7)
Documentation=https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems
ConditionPathIsSymbolicLink=!/tmp
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target
After=swap.target

[Mount]
What=tmpfs
Where=/tmp
Type=tmpfs
Options=mode=1777,strictatime,nosuid,nodev,nosuid

[Install]
WantedBy=local-fs.targe

Run the following command to reload the systemd daemon:

  # systemctl daemon-reload

Run the following command to unmask tmp.mount:

  # systemctl unmask tmp.mpunt

Run the following command to enable and start tmp.mount:

  # systemctl enable --now tmp.mount




Impact:

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily."
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|9.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/egrep '\\s/tmp\\s' /etc/fstab | /bin/egrep -v '^\\s*#'"
              expect      : ".*tmpfs[\\s]+/tmp[\\s]+tmpfs"
            </custom_item>
          </else>
        </if>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.3 Ensure noexec option set on /tmp partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp ."
      solution    : "Edit the /etc/fstab file OR the /etc/systemd/system/local-fs.target.wants/tmp.mount file:
IF /etc/fstab is used to mount /tmp
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /tmp :

# mount -o remount,noexec /tmp

OR
IF systemd is used to mount /tmp:
Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add noexec to the /tmp mount options:

[Mount]
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to restart the systemd daemon:

#  systemctl daemon-reload

Run the following command to restart tmp.mount

# systemctl restart tmp.mount"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|2.6,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/grep 'on /tmp '"
      expect      : "noexec"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.4 Ensure nodev option set on /tmp partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /tmp ."
      solution    : "Edit the /etc/fstab file OR the /etc/systemd/system/local-fs.target.wants/tmp.mount file:
IF /etc/fstab is used to mount /tmp:
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /tmp :

# mount -o remount,nodev /tmp

OR
IF systemd is used to mount /tmp:
Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nodev to the /tmp mount options:

[Mount]
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to restart the systemd daemon:

#  systemctl daemon-reload

Run the following command to restart tmp.mount

# systemctl restart tmp.mount"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/grep 'on /tmp '"
      expect      : "nodev"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.5 Ensure nosuid option set on /tmp partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp."
      solution    : "IF /etc/fstab is used to mount /tmp
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /tmp :

# mount -o remount,nosuid /tmp

OR
IF systemd is used to mount /tmp:
Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nosuid to the /tmp mount options:

[Mount]
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to restart the systemd daemon:

#  systemctl daemon-reload

Run the following command to restart tmp.mount:

# systemctl restart tmp.mount"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/grep 'on /tmp '"
      expect      : "nosuid"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.6 Ensure /dev/shm is configured - mount"
      info        : "/dev/shm is a traditional shared memory concept. One program will create a memory portion, which other processes (if permitted) can access. If /dev/shm is not configured, tmpfs will be mounted to /dev/shm by systemd.

Notes:

An entry for /dev/shm in /etc/fstab will take precedence.

tmpfs can be resized using the size={size} parameter in /etc/fstab. If we don't specify the size, it will be half the RAM.

Resize tmpfs example:

  tmpfs   /dev/shm    tmpfs   defaults,noexec,nodev,nosuid,size=2G  0   0

Rationale:

Any user can upload and execute files inside the /dev/shm similar to the /tmp partition. Configuring /dev/shm allows an administrator to set the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw."
      solution    : "Edit /etc/fstab and add or edit the following line:

tmpfs      /dev/shm    tmpfs   defaults,noexec,nodev,nosuid   0 0

Run the following command to remount /dev/shm:

# mount -o remount,noexec,nodev,nosuid /dev/shm"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/egrep '\\s/dev/shm\\s'"
      expect      : "tmpfs[\\s]+on[\\s]+/dev/shm[\\s]+type[\\s]+tmpfs"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.6 Ensure /dev/shm is configured - fstab"
      info        : "/dev/shm is a traditional shared memory concept. One program will create a memory portion, which other processes (if permitted) can access. If /dev/shm is not configured, tmpfs will be mounted to /dev/shm by systemd.

Notes:

An entry for /dev/shm in /etc/fstab will take precedence.

tmpfs can be resized using the size={size} parameter in /etc/fstab. If we don't specify the size, it will be half the RAM.

Resize tmpfs example:

  tmpfs   /dev/shm    tmpfs   defaults,noexec,nodev,nosuid,size=2G  0   0

Rationale:

Any user can upload and execute files inside the /dev/shm similar to the /tmp partition. Configuring /dev/shm allows an administrator to set the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw."
      solution    : "Edit /etc/fstab and add or edit the following line:

tmpfs      /dev/shm    tmpfs   defaults,noexec,nodev,nosuid   0 0

Run the following command to remount /dev/shm:

# mount -o remount,noexec,nodev,nosuid /dev/shm"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep '\\s/dev/shm\\s' /etc/fstab | /bin/awk '{print} END {if (NR == 0) print \"none\"; else print}'"
      expect      : "tmpfs[\\s]+/dev/shm[\\s]+tmpfs"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.7 Ensure noexec option set on /dev/shm partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Note: /dev/shm is mounted automatically by systemd. /dev/shm needs to be added to /etc/fstab to add mount options even though it is already being mounted on boot.

Rationale:

Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system."
      solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.
Run the following command to remount /dev/shm:

# mount -o remount,noexec,nodev,nosuid /dev/shm"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|2.6,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/grep 'on /dev/shm '"
      expect      : "noexec"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.8 Ensure nodev option set on /dev/shm partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Note: /dev/shm is mounted automatically by systemd. /dev/shm needs to be added to /etc/fstab to add mount options even though it is already being mounted on boot.

Rationale:

Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions."
      solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.
Run the following command to remount /dev/shm:

# mount -o remount,noexec,nodev,nosuid /dev/shm"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/grep 'on /dev/shm '"
      expect      : "nodev"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.9 Ensure nosuid option set on /dev/shm partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Note: /dev/shm is mounted automatically by systemd. /dev/shm needs to be added to /etc/fstab to add mount options even though it is already being mounted on boot.

Rationale:

Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them."
      solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.
Run the following command to remount /dev/shm:

# mount -o remount,noexec,nodev,nosuid /dev/shm"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/grep 'on /dev/shm '"
      expect      : "nosuid"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for /var/tmp partition"
          cmd         : "/bin/mount | /bin/grep 'on /var/tmp '"
          expect      : ".* on /var/tmp type .*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.1.12 Ensure noexec option set on /var/tmp partition"
          info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp ."
          solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp :

# mount -o remount,noexec /var/tmp"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|2.6,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/mount | /bin/grep 'on /var/tmp '"
          expect      : "noexec"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.1.13 Ensure nodev option set on /var/tmp partition"
          info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /var/tmp ."
          solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp :

# mount -o remount,nodev /var/tmp"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/mount | /bin/grep 'on /var/tmp '"
          expect      : "nodev"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.1.14 Ensure nosuid option set on /var/tmp partition"
          info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp ."
          solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp :

# mount -o remount,nosuid /var/tmp"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/mount | /bin/grep 'on /var/tmp '"
          expect      : "nosuid"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.1.12 Ensure noexec option set on /var/tmp partition"
          info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp ."
          solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp :

# mount -o remount,noexec /var/tmp"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|2.6,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.1.13 Ensure nodev option set on /var/tmp partition"
          info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /var/tmp ."
          solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp :

# mount -o remount,nodev /var/tmp"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.1.14 Ensure nosuid option set on /var/tmp partition"
          info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp ."
          solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp :

# mount -o remount,nosuid /var/tmp"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for seprate /home partition"
          cmd         : "/bin/mount | /bin/grep 'on /home '"
          expect      : ".* on /home type .*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.1.18 Ensure nodev option set on /home partition"
          info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Note: The actions in this recommendation refer to the /home partition, which is the default user partition. If you have created other user partitions, it is recommended that the Remediation and Audit steps be applied to these partitions as well.

Rationale:

Since the user partitions are not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices."
          solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition. See the fstab(5) manual page for more information.
Run the following command to remount /home/ with the nodev mount option:

# mount -o remount,nodev /home"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/mount | /bin/grep 'on /home '"
          expect      : "nodev"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.1.18 Ensure nodev option set on /home partition"
          info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Note: The actions in this recommendation refer to the /home partition, which is the default user partition. If you have created other user partitions, it is recommended that the Remediation and Audit steps be applied to these partitions as well.

Rationale:

Since the user partitions are not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices."
          solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition. See the fstab(5) manual page for more information.
Run the following command to remount /home/ with the nodev mount option:

# mount -o remount,nodev /home"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.19 Ensure noexec option set on removable media partitions"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Setting this option on a file system prevents users from executing programs from the removable media. This deters users from being able to introduce potentially malicious software on the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information."
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|2.6,CSF|PR.AC-4,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/egrep 'on[\\s]*/dev/(floppy|cdrom|corder|mmcblk)' | /bin/awk '{print} END {if (NR == 0) print \"pass\"; else print}'"
      expect      : "noexec"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.20 Ensure nodev option set on removable media partitions"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Removable media containing character and block special devices could be used to circumvent security controls by allowing non-root users to access sensitive device files such as /dev/kmem or the raw disk partitions.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information."
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/egrep 'on[\\s]*/dev/(floppy|cdrom|corder|mmcblk)'"
      expect      : "nodev"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.21 Ensure nosuid option set on removable media partitions"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information."
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/mount | /bin/egrep 'on[\\s]*/dev/(floppy|cdrom|corder|mmcblk)'"
      expect      : "nosuid"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.22 Ensure sticky bit is set on all world-writable directories"
      info        : "Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.

Rationale:

This feature prevents the ability to delete or rename files in world writable directories (such as /tmp ) that are owned by another user."
      solution    : "Run the following command to set the sticky bit on all world writable directories:

# df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null | xargs -I '{}' chmod a+t '{}'"
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|1A,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/df --local -P 2> /dev/null | /bin/awk '{if (NR!=1) print $6}' | /usr/bin/xargs -I '{}' /bin/find '{}' -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) 2>/dev/null | /bin/awk '{print} END {if (NR == 0) print \"none\"; else print}'"
      expect      : "none"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.23 Disable Automounting"
      info        : "autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.

Notes:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods.

This control should align with the tolerance of the use of portable drives and optical media in the organization.

On a server requiring an admin to manually mount media can be part of defense-in-depth to reduce the risk of unapproved software or information being introduced or proprietary software or information being exfiltrated.

If admins commonly use flash drives and Server access has sufficient physical controls, requiring manual mounting may not increase security.

Rationale:

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves."
      solution    : "Run the following command to mask autofs:

# systemctl --now mask autofs

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting."
      reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|8.4,LEVEL|1A,LEVEL|2A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/systemctl is-enabled autofs | /bin/awk \'{print} END {if(NR==0) print \"disabled\" }\'"
      expect      : "disabled"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.2.1 Ensure GPG keys are configured"
      info        : "Most packages managers implement GPG key signing to verify package integrity during installation.

Rationale:

It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Update your package manager GPG keys in accordance with site policy."
      reference   : "800-53|SI-7(6),CSCv7|3.4,CSF|PR.DS-6,LEVEL|1M,SWIFT-CSCv1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\\n'"
      expect      : "Manual review required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.2.2 Ensure package manager repositories are configured"
      info        : "Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.

Rationale:

If a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure your package manager repositories according to site policy."
      reference   : "800-171|3.14.1,800-53|SI-2,CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.4.4(e),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,LEVEL|1M,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,SWIFT-CSCv1|2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/bin/zypper repos"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "1.2.3 Ensure gpgcheck is globally activated"
      info        : "The gpgcheck option, found in the main section of the /etc/zypp/zypp.conf and individual /etc/zypp/repos.d/*.repo files determines if an RPM package's signature is checked prior to its installation.

Rationale:

It is important to ensure that an RPM's package signature is always checked prior to installation to ensure that the software is obtained from a trusted source."
      solution    : "Edit /etc/zypp/zypp.conf and set 'gpgcheck=1' in the [main] section.
Edit any failing files in /etc/zypp/repos.d/*.repo and set all instances of gpgcheck to 1."
      reference   : "800-53|SI-7(6),CSCv7|3.4,CSF|PR.DS-6,LEVEL|1A,SWIFT-CSCv1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/zypp/zypp.conf /etc/zypp/repos.d/*.repo"
      regex       : "^[\\s]*gpgcheck[\\s]*="
      expect      : "^[\\s]*gpgcheck[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.3.1 Ensure sudo is installed"
      info        : "sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.

Rationale:

sudo supports a plugin architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plugins to work seamlessly with the sudo front end. The default security policy is sudoers, which is configured via the file /etc/sudoers.

The security policy determines what privileges, if any, a user has to run sudo. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific."
      solution    : "Run the following command to install sudo.

# zypper install sudo"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "sudo-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.3.2 Ensure sudo commands use pty"
      info        : "sudo can be configured to run only from a pseudo-pty

Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks for parse errors. If the sudoers file is currently being edited you will receive a message to try again later. The -f option allows you to tell visudo which file to edit.

Rationale:

Attackers can run a malicious program using sudo, which would again fork a background process that remains even when the main program has finished executing.

This can be mitigated by configuring sudo to run other commands only from a pseudo-pty, whether I/O logging is turned on or not."
      solution    : "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty"
      reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -si '^\\s*Defaults\\s+([^#]\\S+,\\s*)?use_pty\\b' /etc/sudoers /etc/sudoers.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.3.3 Ensure sudo log file exists"
      info        : "sudo can use a custom log file

Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks for parse errors. If the sudoers file is currently being edited you will receive a message to try again later. The -f option allows you to tell visudo which file to edit.

Rationale:

A sudo log file simplifies auditing of sudo commands"
      solution    : "edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:

Defaults  logfile='<PATH TO CUSTOM LOG FILE>'

Example

Defaults  logfile='/var/log/sudo.log'

Impact:

Editing the sudo configuration incorrectly can cause sudo to stop functioning"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -si '^\\s*Defaults\\s+([^#;]+,\\s*)?logfile\\s*=\\s*(\")?[^#;]+(\")?' /etc/sudoers /etc/sudoers.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.4.1 Ensure AIDE is installed"
      info        : "AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.

Note: The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Run prelink -ua to restore the binaries to their prelinked state, thus avoiding false positives from AIDE.

Rationale:

By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries."
      solution    : "Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.
Run the following command to install AIDE:

# zypper install aide

Run the following commands to initialize AIDE:

# aide --init

# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|14.9,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "aide-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <if>
      <condition type:"OR">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for aide in crontab command"
          cmd         : "/usr/bin/crontab -u root -l | /bin/grep aide"
          expect      : "^((\\d{1,2}|\\*)[\\s]+){5}/usr/bin/aide[\\s]+--check[\\s]*(.*)$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for aide in cron files"
          cmd         : "/bin/grep -sr aide /etc/cron.* /etc/crontab"
          expect      : "^((\\d{1,2}|\\*)[\\s]+){5}/usr/bin/aide[\\s]+--check[\\s]*(.*)$"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "Check for aide in crontab command"
              cmd         : "/usr/bin/crontab -u root -l | /bin/grep aide"
              expect      : "^((\\d{1,2}|\\*)[\\s]+){5}/usr/bin/aide[\\s]+--check[\\s]*(.*)$"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "1.4.2 Ensure filesystem integrity is regularly checked - cron"
              info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Note: The checking in this recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
              solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR
If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
              reference   : "800-53|SI-7(1),CN-L3|7.1.3.5(b),CSCv7|14.9,CSF|PR.DS-6,ITSG-33|SI-7(1),LEVEL|1A,NESA|T7.3.3,SWIFT-CSCv1|6.2"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/usr/bin/crontab -u root -l | /bin/grep aide"
              expect      : "^((\\d{1,2}|\\*)[\\s]+){5}/usr/bin/aide[\\s]+--check[\\s]*(.*)$"
            </custom_item>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "1.4.2 Ensure filesystem integrity is regularly checked - cron"
              info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Note: The checking in this recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
              solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR
If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
              reference   : "800-53|SI-7(1),CN-L3|7.1.3.5(b),CSCv7|14.9,CSF|PR.DS-6,ITSG-33|SI-7(1),LEVEL|1A,NESA|T7.3.3,SWIFT-CSCv1|6.2"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/grep -sr aide /etc/cron.* /etc/crontab"
              expect      : "^((\\d{1,2}|\\*)[\\s]+){5}/usr/bin/aide[\\s]+--check[\\s]*(.*)$"
            </custom_item>
          </else>
        </if>

        <report type:"PASSED">
          description : "1.4.2 Ensure filesystem integrity is regularly checked - aidecheck.service"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Note: The checking in this recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR
If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|14.9,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.4.2 Ensure filesystem integrity is regularly checked - aidecheck.timer"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Note: The checking in this recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR
If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|14.9,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.4.2 Ensure filesystem integrity is regularly checked - cron"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Note: The checking in this recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR
If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-53|SI-7(1),CN-L3|7.1.3.5(b),CSCv7|14.9,CSF|PR.DS-6,ITSG-33|SI-7(1),LEVEL|1A,NESA|T7.3.3,SWIFT-CSCv1|6.2"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.4.2 Ensure filesystem integrity is regularly checked - aidecheck.service"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Note: The checking in this recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR
If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|14.9,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/systemctl is-enabled aidecheck.service | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.4.2 Ensure filesystem integrity is regularly checked - aidecheck.timer"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Note: The checking in this recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR
If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|14.9,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/systemctl is-enabled aidecheck.timer | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.5.1 Ensure bootloader password is set - superusers"
      info        : "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters

Notes:

This recommendation is designed around the grub2 bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings. Replace '/boot/grub2/grub.cfg with the appropriate grub configuration file for your environment

The information can be placed in any /etc/grub.d file as long as that file is incorporated into grub.cfg

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file.

A custom file, such as /etc/grub.d/40_custom should be used so it is not overwritten should the Grub package be updated.

Rationale:

Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off SELinux at boot time)."
      solution    : "Create an encrypted password with grub2-mkpasswd-pbkdf2:

# grub2-mkpasswd-pbkdf2

Enter password: <password>
Reenter password: <password>

Your PBKDF2 is <encrypted-password>

Add the following into /etc/grub.d/40_custom

set superusers='<username>'
password_pbkdf2 <username> <encrypted-password>

Run the following command to update the grub2 configuration:

# grub2-mkconfig -o /boot/grub2/grub.cfg

Impact:

If password protection is enabled, only the designated superuser can edit a Grub 2 menu item by pressing 'e' or access the GRUB 2 command line by pressing 'c'

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable, the configuration files will have to be edited via the LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. Password will still be required to edit menu items."
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv7|5.1,CSF|PR.DS-6,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/boot/grub2/grub.cfg"
      regex       : "^[\\s]*set[\\s]*superusers[\\s]*="
      expect      : "^[\\s]*set[\\s]*superusers[\\s]*=\".+\"*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.5.1 Ensure bootloader password is set - password"
      info        : "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters

Notes:

This recommendation is designed around the grub2 bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings. Replace '/boot/grub2/grub.cfg with the appropriate grub configuration file for your environment

The information can be placed in any /etc/grub.d file as long as that file is incorporated into grub.cfg

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file.

A custom file, such as /etc/grub.d/40_custom should be used so it is not overwritten should the Grub package be updated.

Rationale:

Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off SELinux at boot time)."
      solution    : "Create an encrypted password with grub2-mkpasswd-pbkdf2:

# grub2-mkpasswd-pbkdf2

Enter password: <password>
Reenter password: <password>

Your PBKDF2 is <encrypted-password>

Add the following into /etc/grub.d/40_custom

set superusers='<username>'
password_pbkdf2 <username> <encrypted-password>

Run the following command to update the grub2 configuration:

# grub2-mkconfig -o /boot/grub2/grub.cfg

Impact:

If password protection is enabled, only the designated superuser can edit a Grub 2 menu item by pressing 'e' or access the GRUB 2 command line by pressing 'c'

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable, the configuration files will have to be edited via the LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. Password will still be required to edit menu items."
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv7|5.1,CSF|PR.DS-6,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/boot/grub2/grub.cfg"
      regex       : "^[\\s]*password"
      expect      : "^[\\s]*password_pbkdf2[\\s]+[^\\s]+[\\s]+[^\\s]+[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.5.2 Ensure permissions on bootloader config are configured"
      info        : "The grub configuration file contains information on boot settings and passwords for unlocking boot options. The grub2 configuration is usually grub.cfg stored in /boot/grub2/.

Notes:

This recommendation is designed around the grub2 bootloader.

If LILO or another bootloader is in use in your environment:

Enact equivalent settings

Replace /boot/grub2/grub.cfg and /boot/grub2/user.cfg with the appropriate boot configuration files for your environment

Rationale:

Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them."
      solution    : "Run the following commands to set ownership and permissions on your grub configuration:

# chown root:root /boot/grub2/grub.cfg

# chmod og-rwx /boot/grub2/grub.cfg"
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv6|3.1,CSCv7|5.1,CSF|PR.DS-6,LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/boot/grub2/grub.cfg"
      owner       : "root"
      mask        : "177"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.5.3 Ensure authentication required for single user mode - rescue.service"
      info        : "Single user mode (rescue mode) is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.

Rationale:

Requiring authentication in single user mode (rescue mode) prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials."
      solution    : "Edit /usr/lib/systemd/system/rescue.service and add/modify the following line:

ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue

Edit /usr/lib/systemd/system/emergency.service and add/modify the following line:

ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency"
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv7|5.1,CSF|PR.DS-6,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/usr/lib/systemd/system/rescue.service"
      regex       : "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue"
      expect      : "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.5.3 Ensure authentication required for single user mode - rescue.emergency"
      info        : "Single user mode (rescue mode) is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.

Rationale:

Requiring authentication in single user mode (rescue mode) prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials."
      solution    : "Edit /usr/lib/systemd/system/rescue.service and add/modify the following line:

ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue

Edit /usr/lib/systemd/system/emergency.service and add/modify the following line:

ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency"
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv7|5.1,CSF|PR.DS-6,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/usr/lib/systemd/system/emergency.service"
      regex       : "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency"
      expect      : "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1 Ensure core dumps are restricted - limits.conf"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -s '^\\s*\\*\\s+hard\\s+core\\s+0\\s*$' /etc/security/limits.conf /etc/security/limits.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1 Ensure core dumps are restricted - sysctl fs.suid_dumpable"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl fs.suid_dumpable"
      expect      : "^[\\s]*fs\\.suid_dumpable[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1 Ensure core dumps are restricted - fs.suid_dumpable sysctl.conf"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -s '^\\s*fs\\.suid_dumpable\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for systemd-coredump"
          rpm         : "systemd-coredump-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.6.1 Ensure core dumps are restricted - systemd-coredump Storage"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/systemd/coredump.conf"
          regex       : "^[\\s]*Storage[\\s]*="
          expect      : "^[\\s]*Storage[\\s]*=[\\s]*none$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.6.1 Ensure core dumps are restricted - systemd-coredump ProcessSizeMax"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
          reference   : "CSCv7|5.1,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/systemd/coredump.conf"
          regex       : "^[\\s]*ProcessSizeMax[\\s]*="
          expect      : "^[\\s]*ProcessSizeMax[\\s]*=[\\s]*0$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.6.1 Ensure core dumps are restricted - systemd-coredump Storage"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.6.1 Ensure core dumps are restricted - systemd-coredump ProcessSizeMax"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
          reference   : "CSCv7|5.1,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for journalctl NX protection"
          cmd         : "/usr/bin/journalctl | /bin/grep 'protection:\\s*active'"
          expect      : "NX[\\s]+\\(Execute[\\s]+Disable\\)[\\s]+protection:[\\s]+active"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "1.6.2 Ensure XD/NX support is enabled"
          info        : "Recent processors in the x86 family support the ability to prevent code execution on a per memory page basis. Generically and on AMD processors, this ability is called No Execute (NX), while on Intel processors it is called Execute Disable (XD). This ability can help prevent exploitation of buffer overflow vulnerabilities and should be activated whenever possible. Extra steps must be taken to ensure that this protection is enabled, particularly on 32-bit x86 systems. Other processors, such as Itanium and POWER, have included such support since inception and the standard kernel for those platforms supports the feature.

Rationale:

Enabling any feature that can protect against buffer overflow attacks enhances the security of the system.

Note: Ensure your system supports the XD or NX bit and has PAE support before implementing this recommendation as this may prevent it from booting if these are not supported by your hardware."
          solution    : "On 32 bit systems install a kernel with PAE support, no installation is required on 64 bit systems:
If necessary configure your bootloader to load the new kernel and reboot the system.
You may need to enable NX or XD support in your bios."
          reference   : "800-53|SI-16,CSCv7|8.3,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/journalctl | /bin/grep 'protection:\\s*active'"
          expect      : "NX[\\s]+\\(Execute[\\s]+Disable\\)[\\s]+protection:[\\s]+active"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : CMD_EXEC
          description : "1.6.2 Ensure XD/NX support is enabled"
          info        : "Recent processors in the x86 family support the ability to prevent code execution on a per memory page basis. Generically and on AMD processors, this ability is called No Execute (NX), while on Intel processors it is called Execute Disable (XD). This ability can help prevent exploitation of buffer overflow vulnerabilities and should be activated whenever possible. Extra steps must be taken to ensure that this protection is enabled, particularly on 32-bit x86 systems. Other processors, such as Itanium and POWER, have included such support since inception and the standard kernel for those platforms supports the feature.

Rationale:

Enabling any feature that can protect against buffer overflow attacks enhances the security of the system.

Note: Ensure your system supports the XD or NX bit and has PAE support before implementing this recommendation as this may prevent it from booting if these are not supported by your hardware."
          solution    : "On 32 bit systems install a kernel with PAE support, no installation is required on 64 bit systems:
If necessary configure your bootloader to load the new kernel and reboot the system.
You may need to enable NX or XD support in your bios."
          reference   : "800-53|SI-16,CSCv7|8.3,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "if [[ -n $(/bin/egrep 'noexec[0-9]*=off' /proc/cmdline) || -z $(/bin/egrep -i ' (pae|nx)' /proc/cpuinfo) || -n $(/bin/egrep '\\sNX\\s.*\\sprotection:\\s' /var/log/dmesg | /bin/grep -v active) ]]; then echo \"NX Protection is not active\"; else echo \"NX Protection is active\";fi"
          expect      : "^NX Protection is active$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.3 Ensure address space layout randomization (ASLR) is enabled - sysctl"
      info        : "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Rationale:

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting."
      solution    : "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

kernel.randomize_va_space = 2

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2"
      reference   : "CSCv6|3.1,CSCv7|8.3,LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl kernel.randomize_va_space"
      expect      : "^[\\s]*kernel\\.randomize_va_space[\\s]*=[\\s]*2[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.3 Ensure address space layout randomization (ASLR) is enabled - sysctl.conf"
      info        : "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Rationale:

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting."
      solution    : "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

kernel.randomize_va_space = 2

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2"
      reference   : "800-53|SI-16,CSCv7|8.3,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -s '^\\s*kernel\\.randomize_va_space\\s*=\\s*2\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.6.4 Ensure prelink is disabled"
      info        : "prelinkis a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.

Rationale:

The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc."
      solution    : "Run the following command to restore binaries to normal:

# prelink -ua

Run the following command to uninstall prelink:

# zypper remove prelink"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|14.9,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "prelink-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.7.1.1 Ensure AppArmor is installed - apparmor-docs"
      info        : "AppArmor provides Mandatory Access Controls.

Rationale:

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
      solution    : "Run the following command to install AppArmor:

# zypper install -t pattern apparmor

Default Value:

AppArmor is installed on SLES 15 SP1 by default"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|14.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "apparmor-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.7.1.1 Ensure AppArmor is installed - apparmor-parser"
      info        : "AppArmor provides Mandatory Access Controls.

Rationale:

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
      solution    : "Run the following command to install AppArmor:

# zypper install -t pattern apparmor

Default Value:

AppArmor is installed on SLES 15 SP1 by default"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|14.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "apparmor-parser-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.7.1.1 Ensure AppArmor is installed - apparmor-profiles"
      info        : "AppArmor provides Mandatory Access Controls.

Rationale:

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
      solution    : "Run the following command to install AppArmor:

# zypper install -t pattern apparmor

Default Value:

AppArmor is installed on SLES 15 SP1 by default"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|14.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "apparmor-profiles-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.7.1.1 Ensure AppArmor is installed - apparmor-utils"
      info        : "AppArmor provides Mandatory Access Controls.

Rationale:

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
      solution    : "Run the following command to install AppArmor:

# zypper install -t pattern apparmor

Default Value:

AppArmor is installed on SLES 15 SP1 by default"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|14.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "apparmor-utils-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.7.1.1 Ensure AppArmor is installed - libapparmor1"
      info        : "AppArmor provides Mandatory Access Controls.

Rationale:

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
      solution    : "Run the following command to install AppArmor:

# zypper install -t pattern apparmor

Default Value:

AppArmor is installed on SLES 15 SP1 by default"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|14.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "libapparmor1-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.7.1.2 Ensure AppArmor is enabled in the bootloader configuration - apparmor=1"
      info        : "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.

Note: This recommendation is designed around the grub2 bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Rationale:

AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden."
      solution    : "Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX='apparmor=1 security=apparmor'

Run the following command to update the grub2 configuration:

# grub2-mkconfig -o /boot/grub2/grub.cfg"
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv7|14.6,CSF|PR.DS-6,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/boot/grub2/grub.cfg"
      regex       : "^[\\s]*linux.*"
      expect      : "[\\s]*[Aa][Pp][Pp][Aa][Rr][Mm][Oo][Rr][\\s]*=[\\s]*1"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.7.1.2 Ensure AppArmor is enabled in the bootloader configuration - security=apparmor"
      info        : "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.

Note: This recommendation is designed around the grub2 bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Rationale:

AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden."
      solution    : "Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX='apparmor=1 security=apparmor'

Run the following command to update the grub2 configuration:

# grub2-mkconfig -o /boot/grub2/grub.cfg"
      reference   : "800-53|SI-7(9),CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv7|14.6,CSF|PR.DS-6,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/boot/grub2/grub.cfg"
      regex       : "^[\\s]*linux.*"
      expect      : "[\\s]*[Ss][Ee][Cc][Uu][Rr][Ii][Tt][Yy][\\s]*=[\\s]*[Aa][Pp][Pp][Aa][Rr][Mm][Oo][Rr]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.7.1.3 Ensure all AppArmor Profiles are in enforce or complain mode - profiles loaded"
      info        : "AppArmor profiles define what resources applications are able to access.

Rationale:

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated."
      solution    : "Run one of the following commands to set all profiles to either enforce OR complain mode

Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Run the following command to list unconfined processes:

# aa-unconfined

Any unconfined processes may need to have a profile created or activated for them and then be restarted."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|1A,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/apparmor_status"
      expect      : "^[\\s]*[1-9][0-9]*[\\s]+profiles[\\s]+are[\\s]+loaded"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.7.1.3 Ensure all AppArmor Profiles are in enforce or complain mode - processes unconfined"
      info        : "AppArmor profiles define what resources applications are able to access.

Rationale:

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated."
      solution    : "Run one of the following commands to set all profiles to either enforce OR complain mode

Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Run the following command to list unconfined processes:

# aa-unconfined

Any unconfined processes may need to have a profile created or activated for them and then be restarted."
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(3),LEVEL|1A,NESA|T5.5.4,NESA|T7.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/apparmor_status"
      expect      : "^[\\s]*0[\\s]+processes[\\s]+are[\\s]+unconfined"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "Check for existence of /etc/motd"
          file        : "/etc/motd"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for /etc/motd to not be blank"
          cmd         : "cat /etc/motd | /usr/bin/wc -l"
          expect      : "^[^0]$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : BANNER_CHECK
          description : "1.8.1.1 Ensure message of the day is configured properly - site policy banner"
          info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
          solution    : "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
OR
If the motd is not used, this file can be removed.
Run the following command to remove the motd file:

# rm /etc/motd"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/motd"
# Note: Variable @BANNER_TEXT@ replaced with "All activities performed on this system will be monitored." in field "content".
          content     : "All activities performed on this system will be monitored."
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.8.1.1 Ensure message of the day is configured properly - content"
          info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
          solution    : "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
OR
If the motd is not used, this file can be removed.
Run the following command to remove the motd file:

# rm /etc/motd"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/motd"
          regex       : "(\\\\[mrsv]|[Ss][Ll][Ee][Ss]|[Ss][Uu][Ss][Ee])"
          expect      : "(\\\\[mrsv]|[Ss][Ll][Ee][Ss]|[Ss][Uu][Ss][Ee])"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.8.1.1 Ensure message of the day is configured properly - site policy banner"
          info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
          solution    : "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
OR
If the motd is not used, this file can be removed.
Run the following command to remove the motd file:

# rm /etc/motd"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.8.1.1 Ensure message of the day is configured properly - content"
          info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
          solution    : "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
OR
If the motd is not used, this file can be removed.
Run the following command to remove the motd file:

# rm /etc/motd"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      type        : BANNER_CHECK
      description : "1.8.1.2 Ensure local login warning banner is configured properly - site policy banner"
      info        : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version - or the operating system's name

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue"
      reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/issue"
# Note: Variable @BANNER_TEXT@ replaced with "All activities performed on this system will be monitored." in field "content".
      content     : "All activities performed on this system will be monitored."
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.8.1.2 Ensure local login warning banner is configured properly - invalid entries"
      info        : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version - or the operating system's name

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/issue"
      regex       : "(\\\\[mrsv]|[Ss][Ll][Ee][Ss]|[Ss][Uu][Ss][Ee])"
      expect      : "(\\\\[mrsv]|[Ss][Ll][Ee][Ss]|[Ss][Uu][Ss][Ee])"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : BANNER_CHECK
      description : "1.8.1.3 Ensure remote login warning banner is configured properly - site policy banner"
      info        : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue.net"
      reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/issue.net"
# Note: Variable @BANNER_TEXT@ replaced with "All activities performed on this system will be monitored." in field "content".
      content     : "All activities performed on this system will be monitored."
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.8.1.3 Ensure remote login warning banner is configured properly - invalid entries"
      info        : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue.net"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/issue.net"
      regex       : "(\\\\[mrsv]|[Ss][Ll][Ee][Ss]|[Ss][Uu][Ss][Ee])"
      expect      : "(\\\\[mrsv]|[Ss][Ll][Ee][Ss]|[Ss][Uu][Ss][Ee])"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.8.1.4 Ensure permissions on /etc/motd are configured"
      info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Rationale:

If the /etc/motd file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/motd :

# chown root:root /etc/motd

# chmod u-x,go-wx /etc/motd"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/motd"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.8.1.5 Ensure permissions on /etc/issue are configured"
      info        : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Rationale:

If the /etc/issue file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/issue:

# chown root:root /etc/issue

# chmod u-x,go-wx /etc/issue"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/issue"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.8.1.6 Ensure permissions on /etc/issue.net are configured"
      info        : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Rationale:

If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/issue.net:

# chown root:root /etc/issue.net

# chmod u-x,go-wx /etc/issue.net"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/issue.net"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.9 Ensure updates, patches, and additional security software are installed"
      info        : "Periodically patches are released for included software either due to security flaws or to include additional functionality.

Note: Site policy may mandate a testing period before install onto production systems for available updates.

Rationale:

Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected."
      solution    : "Use your package manager to update all packages on the system according to site policy. The following command will install all available updates:

# zypper update"
      reference   : "800-171|3.14.1,800-53|SI-2,CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.4.4(e),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,LEVEL|1M,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|PR9,NIAv2|SS14b,SWIFT-CSCv1|2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/bin/zypper list-updates"
      expect      : "^No updates found"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for GDM"
          rpm         : "gdm-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.10 Ensure GDM is removed or login is configured - user-db"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/dconf/profile/gdm"
          regex       : "^[\\s]*user-db:user[\\s]*"
          expect      : "^[\\s]*user-db:user[\\s]*"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.10 Ensure GDM is removed or login is configured - system-db"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/dconf/profile/gdm"
          regex       : "^[\\s]*system-db:gdm[\\s]*"
          expect      : "^[\\s]*system-db:gdm[\\s]*"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.10 Ensure GDM is removed or login is configured - file-db"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/dconf/profile/gdm"
          regex       : "^[\\s]*file-db:/usr/share/gdm/greeter-dconf-defaults[\\s]*"
          expect      : "^[\\s]*file-db:/usr/share/gdm/greeter-dconf-defaults[\\s]*"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.10 Ensure GDM is removed or login is configured - banner-message-enable"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/dconf/db/gdm.d/01-banner-message"
          regex       : "^[\\s]*banner-message-enable[\\s]*="
          expect      : "^[\\s]*banner-message-enable[\\s]*=[\\s]*true[\\s]*$"
        </custom_item>

        <custom_item>
          system       : "Linux"
          type         : BANNER_CHECK
          description  : "1.10 Ensure GDM is removed or login is configured - banner-message-text"
          info         : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution     : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference    : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
          see_also     : "https://workbench.cisecurity.org/files/2854"
          file         : "/etc/dconf/db/gdm.d/01-banner-message"
# Note: Variable @BANNER_TEXT@ replaced with "All activities performed on this system will be monitored." in field "content".
          content      : "All activities performed on this system will be monitored."
          is_substring : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.10 Ensure GDM is removed or login is configured - disable-user-list"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/dconf/db/gdm.d/00-login-screen"
          regex       : "^[\\s]*disable-user-list[\\s]*="
          expect      : "^[\\s]*disable-user-list[\\s]*=[\\s]*true[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.10 Ensure GDM is removed or login is configured - user-db"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.10 Ensure GDM is removed or login is configured - system-db"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.10 Ensure GDM is removed or login is configured - file-db"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.10 Ensure GDM is removed or login is configured - banner-message-enable"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.10 Ensure GDM is removed or login is configured - banner-message-text"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "1.10 Ensure GDM is removed or login is configured - disable-user-list"
          info        : "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems.

Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users.

Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.

Rationale:

If a graphical login is not required, it should be removed to reduce the attack surface of the system.

If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured.

Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Notes:

This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message and/or /etc/dconf/db/gdm.d/00-login-screen file.

If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner."
          solution    : "Run the following command to remove GDM

# zypper remove gdm

OR
If GDM is required:
Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm)

user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults

Run the following Run to display a login banner:
Note: the directory /etc/dconf/db/gdm.d/ may need to be created
Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message)

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='<banner message>'

Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.'
Run the following to disable the user list:
Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen)

[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true

Run the following command to update the system databases:

# dconf update"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.1.1 Ensure xinetd is not installed"
      info        : "The eXtended InterNET Daemon ( xinetd ) is an open source super daemon that replaced the original inetd daemon. The xinetd daemon listens for well known services and dispatches the appropriate daemon to properly respond to service requests.

Rationale:

If there are no xinetd services required, it is recommended that the package be removed to reduce the attack surface are of the system.

Note: If an xinetd service or services are required, ensure that any xinetd service not required is stopped and disabled"
      solution    : "Run the following command to remove xinetd:

# zypper remove xinetd"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "xinetd-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for package chrony"
          rpm         : "chrony-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "2.2.1.1 Ensure time synchronization is in use"
          info        : "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Notes:

On systems where host based time synchronization is not available, verify that chrony is installed or systemd-timesyncd is enabled.

On systems where host based time synchronization is available consult your documentation and verify that host based synchronization is in use.

If another method for time synchronization is being used, this section may be skipped.

Rationale:

Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations."
          solution    : "On systems where host based time synchronization is not available, install chrony OR enable systemd-timesyncd:
Run the following command to install chrony:

# zypper install chrony

OR
Run the following command to enable systemd-timesyncd

# systemctl enable systemd-timesyncd

Note: On systems where host based time synchronization is available consult your virtualization software documentation and setup host based synchronization."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|6.1,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1M,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "chrony-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.2.1.1 Ensure time synchronization is in use"
          info        : "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Notes:

On systems where host based time synchronization is not available, verify that chrony is installed or systemd-timesyncd is enabled.

On systems where host based time synchronization is available consult your documentation and verify that host based synchronization is in use.

If another method for time synchronization is being used, this section may be skipped.

Rationale:

Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations."
          solution    : "On systems where host based time synchronization is not available, install chrony OR enable systemd-timesyncd:
Run the following command to install chrony:

# zypper install chrony

OR
Run the following command to enable systemd-timesyncd

# systemctl enable systemd-timesyncd

Note: On systems where host based time synchronization is available consult your virtualization software documentation and setup host based synchronization."
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|6.1,LEVEL|1M,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl is-enabled systemd-timesyncd"
          expect      : "enabled"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for systemd-timesyncd"
          cmd         : "/bin/systemctl is-enabled systemd-timesyncd"
          expect      : "enabled"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.2.1.2 Ensure systemd-timesyncd is configured"
          info        : "systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network.

The systemd-timesyncd daemon:

Implements an SNTP client.

Only implements a client side

Does not bother with the full NTP complexity

Only on querys time from one remote server, synchronizing the local clock to it

runs with minimal privileges

saves the current clock to disk every time a new NTP sync has been acquired

Uses this to correct the system clock early at bootup

to make sure that time monotonically progresses on these systems, even if it is not always correct

Requires a new system user and group 'systemd-timesync' to be created on installation of systemd

Hooked up with networkd to only operate when network connectivity is available

Notes:

The systemd-timesyncd service specifically implements only SNTP. This minimalistic service will set the system clock for large offsets or slowly adjust it for smaller deltas. More complex use cases are not covered by systemd-timesyncd.

This recommendation only applies if timesyncd is in use on the system

Rationale:

Proper configuration is vital to ensuring time synchronization is working properly.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the file /etc/systemd/timesyncd.conf and add/modify the following lines:

NTP=0.suse.pool.ntp.org 1.suse.pool.ntp.org #Servers listed should be In Accordance With Local Policy

FallbackNTP=2.suse.pool.ntp.org 3.suse.pool.ntp.org #Servers listed should be In Accordance With Local Policy

RootDistanceMax=1 #should be In Accordance With Local Policy

Run the following commands to enable and start systemd-timesyncd:

# systemctl --now enable systemd-timesyncd.service

# timedatectl set-ntp true"
          reference   : "800-171|3.3.7,800-53|AU-8(1),CSCv7|6.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.4,ITSG-33|AU-8(1),LEVEL|1M,NESA|T3.6.7,NIAv2|NS44,NIAv2|NS45,NIAv2|NS46,NIAv2|NS47"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/timedatectl status"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.2.1.2 Ensure systemd-timesyncd is configured"
          info        : "systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network.

The systemd-timesyncd daemon:

Implements an SNTP client.

Only implements a client side

Does not bother with the full NTP complexity

Only on querys time from one remote server, synchronizing the local clock to it

runs with minimal privileges

saves the current clock to disk every time a new NTP sync has been acquired

Uses this to correct the system clock early at bootup

to make sure that time monotonically progresses on these systems, even if it is not always correct

Requires a new system user and group 'systemd-timesync' to be created on installation of systemd

Hooked up with networkd to only operate when network connectivity is available

Notes:

The systemd-timesyncd service specifically implements only SNTP. This minimalistic service will set the system clock for large offsets or slowly adjust it for smaller deltas. More complex use cases are not covered by systemd-timesyncd.

This recommendation only applies if timesyncd is in use on the system

Rationale:

Proper configuration is vital to ensuring time synchronization is working properly."
          solution    : "Edit the file /etc/systemd/timesyncd.conf and add/modify the following lines:

NTP=0.suse.pool.ntp.org 1.suse.pool.ntp.org #Servers listed should be In Accordance With Local Policy

FallbackNTP=2.suse.pool.ntp.org 3.suse.pool.ntp.org #Servers listed should be In Accordance With Local Policy

RootDistanceMax=1 #should be In Accordance With Local Policy

Run the following commands to enable and start systemd-timesyncd:

# systemctl --now enable systemd-timesyncd.service

# timedatectl set-ntp true"
          reference   : "800-171|3.3.7,800-53|AU-8(1),CSCv7|6.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.4,ITSG-33|AU-8(1),LEVEL|1M,NESA|T3.6.7,NIAv2|NS44,NIAv2|NS45,NIAv2|NS46,NIAv2|NS47"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for chronyd"
          cmd         : "/bin/systemctl is-enabled chronyd"
          expect      : "enabled"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.2.1.3 Ensure chrony is configured - server"
          info        : "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at: http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.

Rationale:

If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.

Note: This recommendation only applies if chrony is in use on the system. If another method of time synchronization is in use on the system, this recommendation can be skipped."
          solution    : "Add or edit server or pool lines to /etc/chrony.conf as appropriate:

server <remote-server>

Add or edit the OPTIONS in /etc/sysconfig/chronyd to include '-u chrony':

OPTIONS='-u chrony'"
          reference   : "800-171|3.3.7,800-53|AU-8(1),CSCv7|6.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.4,ITSG-33|AU-8(1),LEVEL|1A,NESA|T3.6.7,NIAv2|NS44,NIAv2|NS45,NIAv2|NS46,NIAv2|NS47"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/chrony.conf"
# Note: Variable @NTP_SERVER@ replaced with "0\\.pool\\.ntp\\.org" in field "regex".
          regex       : "^[\\s]*server[\\s]+0\\.pool\\.ntp\\.org"
# Note: Variable @NTP_SERVER@ replaced with "0\\.pool\\.ntp\\.org" in field "expect".
          expect      : "^[\\s]*server[\\s]+0\\.pool\\.ntp\\.org"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.2.1.3 Ensure chrony is configured - user"
          info        : "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at: http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.

Rationale:

If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.

Note: This recommendation only applies if chrony is in use on the system. If another method of time synchronization is in use on the system, this recommendation can be skipped."
          solution    : "Add or edit server or pool lines to /etc/chrony.conf as appropriate:

server <remote-server>

Add or edit the OPTIONS in /etc/sysconfig/chronyd to include '-u chrony':

OPTIONS='-u chrony'"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|6.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/sysconfig/chronyd"
          regex       : "^[\\s]*OPTIONS="
          expect      : "^[\\s]*OPTIONS=\"-u[\\s]+chrony[\\s]*\"[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.2.1.3 Ensure chrony is configured - server"
          info        : "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at: http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.

Rationale:

If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.

Note: This recommendation only applies if chrony is in use on the system. If another method of time synchronization is in use on the system, this recommendation can be skipped."
          solution    : "Add or edit server or pool lines to /etc/chrony.conf as appropriate:

server <remote-server>

Add or edit the OPTIONS in /etc/sysconfig/chronyd to include '-u chrony':

OPTIONS='-u chrony'"
          reference   : "800-171|3.3.7,800-53|AU-8(1),CSCv7|6.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.4,ITSG-33|AU-8(1),LEVEL|1A,NESA|T3.6.7,NIAv2|NS44,NIAv2|NS45,NIAv2|NS46,NIAv2|NS47"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "2.2.1.3 Ensure chrony is configured - user"
          info        : "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at: http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.

Rationale:

If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.

Note: This recommendation only applies if chrony is in use on the system. If another method of time synchronization is in use on the system, this recommendation can be skipped."
          solution    : "Add or edit server or pool lines to /etc/chrony.conf as appropriate:

server <remote-server>

Add or edit the OPTIONS in /etc/sysconfig/chronyd to include '-u chrony':

OPTIONS='-u chrony'"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|6.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.2 Ensure X11 Server components are not installed"
      info        : "The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.

Rationale:

Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface."
      solution    : "Run the following command to remove the X Windows Server packages:

# zypper remove xorg-x11-server*

Impact:

Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the 'headless' Java packages for your specific Java runtime."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/rpm -qa xorg-x11-server\* | /bin/awk '{print} END {if (NR == 0) print \"pass\";}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.3 Ensure Avahi Server is not installed - avahi-autoipd"
      info        : "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.

Rationale:

Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface."
      solution    : "Run the following commands to stop, mask and remove avahi-autoipd and avahi:

# systemctl stop avahi-daemon.socket avahi-daemon.service

# zypper remove avahi-autoipd avahi"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,LEVEL|2A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "avahi-autoipd-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.3 Ensure Avahi Server is not installed - avahi"
      info        : "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.

Rationale:

Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface."
      solution    : "Run the following commands to stop, mask and remove avahi-autoipd and avahi:

# systemctl stop avahi-daemon.socket avahi-daemon.service

# zypper remove avahi-autoipd avahi"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,LEVEL|2A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "avahi-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.4 Ensure CUPS is not installed"
      info        : "The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.

Rationale:

If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.

Note: Removing CUPS will prevent printing from the system"
      solution    : "Run the following command to remove cups:

# zypper remove cups

Impact:

Disabling CUPS will prevent printing from the system, a common task for workstation systems."
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "cups-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.5 Ensure DHCP Server is not installed"
      info        : "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.

Rationale:

Unless a system is specifically set up to act as a DHCP server, it is recommended that the dhcp package be removed to reduce the potential attack surface."
      solution    : "Run the following command to remove dhcp:

# zypper remove dhcp"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "dhcp-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.6 Ensure LDAP server is not installed"
      info        : "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

Rationale:

If the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface."
      solution    : "Run the following command to remove openldap-servers:

# zypper remove openldap2"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "openldap2-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for nfs-server masked"
          cmd         : "/bin/systemctl is-enabled nfs-server"
          expect      : "masked"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.2.7 Ensure nfs-utils is not installed or the nfs-server service is masked - nfs-utils"
          info        : "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

Rationale:

If the system does not require network shares, it is recommended that the nfs-utils and nfs-kernel-server packages be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization are dependent on the nfs-utils package. If the nfs-utils or nfs-kernel-server packages are required as a dependency, the nfs-server service should be disabled and masked to reduce the attack surface of the system"
          solution    : "Run the following commands to remove nfs-utils and nfs-kernel-server:

# zypper remove nfs-utils

# zypper remove nfs-kernel-server

OR
If the nfs-utils or nfs-kernel-server packages are required as a dependency
Run the following command to stop and mask the nfs-server service:

# systemctl --now mask nfs-server"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/rpm -q nfs-utils"
          expect      : "(nfs-utils-[0-9\.]+|package nfs-utils is not installed)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.2.7 Ensure nfs-utils is not installed or the nfs-server service is masked - nfs-kernel-server"
          info        : "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

Rationale:

If the system does not require network shares, it is recommended that the nfs-utils and nfs-kernel-server packages be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization are dependent on the nfs-utils package. If the nfs-utils or nfs-kernel-server packages are required as a dependency, the nfs-server service should be disabled and masked to reduce the attack surface of the system"
          solution    : "Run the following commands to remove nfs-utils and nfs-kernel-server:

# zypper remove nfs-utils

# zypper remove nfs-kernel-server

OR
If the nfs-utils or nfs-kernel-server packages are required as a dependency
Run the following command to stop and mask the nfs-server service:

# systemctl --now mask nfs-server"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/rpm -q nfs-kernel-server"
          expect      : "(nfs-kernel-server-[0-9\.]+|package nfs-kernel-server is not installed)"
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "2.2.7 Ensure nfs-utils is not installed or the nfs-server service is masked - nfs-utils"
          info        : "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

Rationale:

If the system does not require network shares, it is recommended that the nfs-utils and nfs-kernel-server packages be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization are dependent on the nfs-utils package. If the nfs-utils or nfs-kernel-server packages are required as a dependency, the nfs-server service should be disabled and masked to reduce the attack surface of the system"
          solution    : "Run the following commands to remove nfs-utils and nfs-kernel-server:

# zypper remove nfs-utils

# zypper remove nfs-kernel-server

OR
If the nfs-utils or nfs-kernel-server packages are required as a dependency
Run the following command to stop and mask the nfs-server service:

# systemctl --now mask nfs-server"
          reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "nfs-utils-0.0.0-0"
          operator    : "lte"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "2.2.7 Ensure nfs-utils is not installed or the nfs-server service is masked - nfs-kernel-server"
          info        : "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

Rationale:

If the system does not require network shares, it is recommended that the nfs-utils and nfs-kernel-server packages be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization are dependent on the nfs-utils package. If the nfs-utils or nfs-kernel-server packages are required as a dependency, the nfs-server service should be disabled and masked to reduce the attack surface of the system"
          solution    : "Run the following commands to remove nfs-utils and nfs-kernel-server:

# zypper remove nfs-utils

# zypper remove nfs-kernel-server

OR
If the nfs-utils or nfs-kernel-server packages are required as a dependency
Run the following command to stop and mask the nfs-server service:

# systemctl --now mask nfs-server"
          reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "nfs-kernel-server-0.0.0-0"
          operator    : "lte"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for package rpcbind"
          rpm         : "rpcbind-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.2.8 Ensure rpcbind is not installed or the rpcbind services are masked - service rpcbind"
          info        : "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

Rationale:

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS) are dependent on the rpcbind package. If the rpcbind is required as a dependency, the services rpcbind.service and rpcbind.socket should be stopped and masked to reduce the attack surface of the system."
          solution    : "Run the following command to remove nfs-utils:

# zypper remove rpcbind

OR
If the rpcbind package is required as a dependency
Run the following commands to stop and mask the rpcbind and rpcbind.socket services:

# systemctl --now mask rpcbind

# systemctl --now mask rpcbind.socket"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|9.2,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl is-enabled rpcbind"
          expect      : "(masked|disabled)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.2.8 Ensure rpcbind is not installed or the rpcbind services are masked - service rpcbind.socket"
          info        : "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

Rationale:

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS) are dependent on the rpcbind package. If the rpcbind is required as a dependency, the services rpcbind.service and rpcbind.socket should be stopped and masked to reduce the attack surface of the system."
          solution    : "Run the following command to remove nfs-utils:

# zypper remove rpcbind

OR
If the rpcbind package is required as a dependency
Run the following commands to stop and mask the rpcbind and rpcbind.socket services:

# systemctl --now mask rpcbind

# systemctl --now mask rpcbind.socket"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|9.2,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl is-enabled rpcbind.socket"
          expect      : "(masked|disabled)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "2.2.8 Ensure rpcbind is not installed or the rpcbind services are masked - package rpcbind"
          info        : "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

Rationale:

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS) are dependent on the rpcbind package. If the rpcbind is required as a dependency, the services rpcbind.service and rpcbind.socket should be stopped and masked to reduce the attack surface of the system."
          solution    : "Run the following command to remove nfs-utils:

# zypper remove rpcbind

OR
If the rpcbind package is required as a dependency
Run the following commands to stop and mask the rpcbind and rpcbind.socket services:

# systemctl --now mask rpcbind

# systemctl --now mask rpcbind.socket"
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "rpcbind-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.2.8 Ensure rpcbind is not installed or the rpcbind services are masked - service rpcbind"
          info        : "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

Rationale:

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS) are dependent on the rpcbind package. If the rpcbind is required as a dependency, the services rpcbind.service and rpcbind.socket should be stopped and masked to reduce the attack surface of the system."
          solution    : "Run the following command to remove nfs-utils:

# zypper remove rpcbind

OR
If the rpcbind package is required as a dependency
Run the following commands to stop and mask the rpcbind and rpcbind.socket services:

# systemctl --now mask rpcbind

# systemctl --now mask rpcbind.socket"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|9.2,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "2.2.8 Ensure rpcbind is not installed or the rpcbind services are masked - service rpcbind.socket"
          info        : "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

Rationale:

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS) are dependent on the rpcbind package. If the rpcbind is required as a dependency, the services rpcbind.service and rpcbind.socket should be stopped and masked to reduce the attack surface of the system."
          solution    : "Run the following command to remove nfs-utils:

# zypper remove rpcbind

OR
If the rpcbind package is required as a dependency
Run the following commands to stop and mask the rpcbind and rpcbind.socket services:

# systemctl --now mask rpcbind

# systemctl --now mask rpcbind.socket"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|9.2,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "2.2.8 Ensure rpcbind is not installed or the rpcbind services are masked - package rpcbind"
          info        : "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

Rationale:

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system.

Note: many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS) are dependent on the rpcbind package. If the rpcbind is required as a dependency, the services rpcbind.service and rpcbind.socket should be stopped and masked to reduce the attack surface of the system."
          solution    : "Run the following command to remove nfs-utils:

# zypper remove rpcbind

OR
If the rpcbind package is required as a dependency
Run the following commands to stop and mask the rpcbind and rpcbind.socket services:

# systemctl --now mask rpcbind

# systemctl --now mask rpcbind.socket"
          reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "rpcbind-0.0.0-0"
          operator    : "lte"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.9 Ensure DNS Server is not installed"
      info        : "The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.

Rationale:

Unless a system is specifically designated to act as a DNS server, it is recommended that the package be removed to reduce the potential attack surface."
      solution    : "Run the following command to remove bind:

# zypper remove bind"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "bind-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.10 Ensure FTP Server is not installed"
      info        : "FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).

Rationale:

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface.

Note: Additional FTP servers also exist and should be removed if not required."
      solution    : "Run the following command to remove vsftpd:

# zypper remove vsftpd"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "vsftpd-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.11 Ensure HTTP server is not installed"
      info        : "HTTP or web servers provide the ability to host web site content.

Rationale:

Unless there is a need to run the system as a web server, it is recommended that the package be removed to reduce the potential attack surface.

Notes:

Several http servers exist. apache, apache2, lighttpd, and nginx are example packages that provide an HTTP server

These and other packages should also be audited, and removed if not required"
      solution    : "Run the following command to remove apache2:

# zypper remove apache2"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "apache2-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.12 Ensure IMAP and POP3 server is not installed"
      info        : "dovecot is an open source IMAP and POP3 server for Linux based systems.

Rationale:

Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.

Notes:

Several IMAP/POP3 servers exist and can use other service names. courier-imap and cyrus-imap are example services that provide a mail server.

These and other services should also be audited and the packages removed if not required."
      solution    : "Run the following command to remove dovecot:

# zypper remove dovecot"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "dovecot-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.13 Ensure Samba is not installed"
      info        : "The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.

Rationale:

If there is no need to mount directories and file systems to Windows systems, then this package can be removed to reduce the potential attack surface."
      solution    : "Run the following command to remove samba:

# zypper remove samba"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "samba-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.14 Ensure HTTP Proxy Server is not installed"
      info        : "Squid is a standard proxy server used in many distributions and environments.

Rationale:

Unless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface.

Note: Several HTTP proxy servers exist. These should be checked and removed unless required."
      solution    : "Run the following command to remove the squid package:

# zypper remove squid"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "squid-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.15 Ensure net-snmp is not installed"
      info        : "Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs.

Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.

Support for SNMPv2 classic (a.k.a. 'SNMPv2 historic' - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.

The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.

Rationale:

The SNMP server can communicate using SNMPv1, which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the net-snmp package should be removed to reduce the attack surface of the system.

Note: If SNMP is required:

The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured.

If SNMP v2 is absolutely necessary, modify the community strings' values."
      solution    : "Run the following command to remove net-snmpd:

# zypper remove net-snmp"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "net-snmp-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.16 Ensure mail transfer agent is configured for local-only mode"
      info        : "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.

Rationale:

The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.

Notes:

This recommendation is designed around the postfix mail server.

Depending on your environment you may have an alternative MTA installed such as sendmail. If this is the case consult the documentation for your installed MTA to configure the recommended state."
      solution    : "Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the folloing command to restart postfix:

# systemctl restart postfix"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/ss -lntu | /bin/grep -E ':25\s' | /bin/grep -E -v '\s(127\.0\.0\.1|::1):25\s' | /bin/awk \'{print} END { if(NR==0) print \"pass\" ; else print \"fail\"}\'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for package rsync"
          rpm         : "rsync-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.2.17 Ensure rsync is not installed or the rsyncd service is masked"
          info        : "The rsyncd service can be used to synchronize files between systems over network links.

Rationale:

Unless required, the rsync package should be removed to reduce the attack surface area of the system.

The rsyncd service presents a security risk as it uses unencrypted protocols for communication.

Note: If a required dependency exists for the rsync package, but the rsyncd service is not required, the service should be masked."
          solution    : "Run the following command to remove the rsync package:

# zypper remove rsync

OR
Run the following command to mask the rsyncd service:

# systemctl --now mask rsyncd

Impact:

There are packages that are dependent on the rsync package. If the rsync package is removed, these packages will be removed as well.

Before removing the rsync package, review any dependent packages to determine if they are required on the system. If a dependent package is required, mask the rsyncd service and leave the rsync package installed."
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|9.2,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl is-enabled rsyncd"
          expect      : "masked"
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "2.2.17 Ensure rsync is not installed or the rsyncd service is masked"
          info        : "The rsyncd service can be used to synchronize files between systems over network links.

Rationale:

Unless required, the rsync package should be removed to reduce the attack surface area of the system.

The rsyncd service presents a security risk as it uses unencrypted protocols for communication.

Note: If a required dependency exists for the rsync package, but the rsyncd service is not required, the service should be masked."
          solution    : "Run the following command to remove the rsync package:

# zypper remove rsync

OR
Run the following command to mask the rsyncd service:

# systemctl --now mask rsyncd

Impact:

There are packages that are dependent on the rsync package. If the rsync package is removed, these packages will be removed as well.

Before removing the rsync package, review any dependent packages to determine if they are required on the system. If a dependent package is required, mask the rsyncd service and leave the rsync package installed."
          reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "rsync-0.0.0-0"
          operator    : "lte"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.18 Ensure NIS server is not installed"
      info        : "The ypserv package provides the Network Information Service (NIS). This service, formally known as Yellow Pages, is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files.

Rationale:

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the ypserv package be removed, and if required a more secure services be used."
      solution    : "Run the following command to remove ypserv:

# zypper remove ypserv"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "ypserv-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.2.19 Ensure telnet-server is not installed"
      info        : "The telnet package contains the telnet daemon, which accepts connections from users from other systems via the telnet protocol.

Rationale:

The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow a user with access to sniff network traffic the ability to steal credentials. The ssh package provides an encrypted session and stronger security."
      solution    : "Run the following command to remove the telnet-server package:

# zypper remove telnet"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "telnet-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.3.1 Ensure NIS Client is not installed"
      info        : "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.

Rationale:

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed."
      solution    : "Run the following command to remove the ypbind package:

# zypper remove ypbind

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "ypbind-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.3.2 Ensure rsh client is not installed"
      info        : "The rsh package contains the client commands for the rsh services.

Rationale:

These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh package removes the clients for rsh , rcp and rlogin."
      solution    : "Run the following command to remove the rsh package:

# zypper remove rsh

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "rsh-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.3.3 Ensure talk client is not installed"
      info        : "The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.

Rationale:

The software presents a security risk as it uses unencrypted protocols for communication."
      solution    : "Run the following command to remove the talk package:

# zypper remove talk

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "talk-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.3.4 Ensure telnet client is not installed"
      info        : "The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.

Rationale:

The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions."
      solution    : "Run the following command to remove the telnet package:

# zypper remove telnet

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "telnet-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.3.5 Ensure LDAP client is not installed"
      info        : "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

Rationale:

If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface."
      solution    : "Run the following command to remove the openldap-clients package:

# zypper remove openldap2-clients

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment."
      reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "openldap2-clients-0.0.0-0"
      operator    : "lte"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.4 Ensure nonessential services are removed or masked"
      info        : "A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.

A listening port is a network port on which an application or process listens on, acting as a communication endpoint.

Each listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.

Rationale:

Services listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Run the following command to remove the package containing the service:

# zypper remove <package_name>

Or If required packages have a dependency:
Run the following command to stop and mask the service:

# systemctl --now mask <service_name>"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/bin/lsof -i -P -n | /bin/grep -v \"(ESTABLISHED)\""
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.1.2 Ensure wireless interfaces are disabled - iw list"
      info        : "Wireless networking is used when wired networks are unavailable.

Rationale:

If wireless is not to be used, wireless devices should be disabled to reduce the potential attack surface."
      solution    : "Run the following command to disable any wireless interfaces:

# ip link set <interface> down

Disable any wireless interfaces in your network configuration.

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CSCv7|15.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/iw list | /bin/awk \'{print} END {if (NR == 0) print \"none\"}\'"
      expect      : "none"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.1.2 Ensure wireless interfaces are disabled - interfaces"
      info        : "Wireless networking is used when wired networks are unavailable.

Rationale:

If wireless is not to be used, wireless devices should be disabled to reduce the potential attack surface.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Run the following command to disable any wireless interfaces:

# ip link set <interface> down

Disable any wireless interfaces in your network configuration.

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|15.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/ip link show up"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.1 Ensure IP forwarding is disabled - sysctl ipv4"
      info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
      solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.ip_forward"
      expect      : "^[\\s]*net\\.ipv4\\.ip_forward[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.1 Ensure IP forwarding is disabled - sysctl ipv4 conf files"
      info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
      solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\\s*$' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "[ -n \"$passing\" ] && passing=\"\"; [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disabled=1)\" ] && passing=\"true\"; grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\"; if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.1 Ensure IP forwarding is disabled - sysctl ipv6"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/sbin/sysctl net.ipv6.conf.all.forwarding"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.forwarding[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.1 Ensure IP forwarding is disabled - sysctl ipv6 conf files"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep -s -E '^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\\s*$' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.2.1 Ensure IP forwarding is disabled - sysctl ipv6"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.2.1 Ensure IP forwarding is disabled - sysctl ipv6 conf files"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure packet redirect sending is disabled - sysctl ipv4 all"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.send_redirects=0
# sysctl -w net.ipv4.conf.default.send_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.send_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.send_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure packet redirect sending is disabled - sysctl ipv4 default"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.send_redirects=0
# sysctl -w net.ipv4.conf.default.send_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.send_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.send_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure packet redirect sending is disabled - sysctl conf ipv4 all"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.send_redirects=0
# sysctl -w net.ipv4.conf.default.send_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -s 'net\\.ipv4\\.conf\\.all\\.send_redirects[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure packet redirect sending is disabled - sysctl conf ipv4 default"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.send_redirects=0
# sysctl -w net.ipv4.conf.default.send_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -s 'net\\.ipv4\\.conf\\.default\\.send_redirects[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.1 Ensure source routed packets are not accepted - sysctl ipv4 all"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.accept_source_route"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.1 Ensure source routed packets are not accepted - sysctl ipv4 default"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.accept_source_route"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.1 Ensure source routed packets are not accepted - sysctl conf ipv4 all"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.all\\.accept_source_route\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.1 Ensure source routed packets are not accepted - sysctl conf ipv4 default"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.default\\.accept_source_route\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "[ -n \"$passing\" ] && passing=\"\"; [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disabled=1)\" ] && passing=\"true\"; grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\"; if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl ipv6 all"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/sbin/sysctl net.ipv6.conf.all.accept_source_route"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl ipv6 default"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/sbin/sysctl net.ipv6.conf.default.accept_source_route"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl conf ipv6 all"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep -s -E '^\\s*net\\.ipv6\\.conf\\.all\\.accept_source_route\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl conf ipv6 default"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep -s -E '^\\s*net\\.ipv6\\.conf\\.default\\.accept_source_route\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl ipv6 all"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl ipv6 default"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl conf ipv6 all"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl conf ipv6 default"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl ipv4 all"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.accept_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.all\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl ipv4 default"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.accept_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl.conf ipv4 all"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.all\\.accept_redirects\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl.conf ipv4 default"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.default\\.accept_redirects\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "[ -n \"$passing\" ] && passing=\"\"; [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disabled=1)\" ] && passing=\"true\"; grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\"; if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl ipv6 all"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/sbin/sysctl net.ipv6.conf.all.accept_redirects"
          expect      : "^[\\s]*net\\.ipv6\\.all\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl ipv6 default"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/sbin/sysctl net.ipv6.conf.default.accept_redirects"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl.conf ipv6 all"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep -s -E '^\\s*net\\.ipv6\\.conf\\.all\\.accept_redirects\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl.conf ipv6 default"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep -s -E '^\\s*net\\.ipv6\\.conf\\.default\\.accept_redirects\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl ipv6 all"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl ipv6 default"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl.conf ipv6 all"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl.conf ipv6 default"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.3 Ensure secure ICMP redirects are not accepted - sysctl ipv4 all"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.secure_redirects=0
# sysctl -w net.ipv4.conf.default.secure_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.secure_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.secure_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.3 Ensure secure ICMP redirects are not accepted - sysctl ipv4 default"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.secure_redirects=0
# sysctl -w net.ipv4.conf.default.secure_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.secure_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.secure_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.3 Ensure secure ICMP redirects are not accepted - sysctl.conf ipv4 all"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.secure_redirects=0
# sysctl -w net.ipv4.conf.default.secure_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.all\\.secure_redirects\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.3 Ensure secure ICMP redirects are not accepted - sysctl.conf ipv4 default"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.secure_redirects=0
# sysctl -w net.ipv4.conf.default.secure_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.default\\.secure_redirects\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.4 Ensure suspicious packets are logged - sysctl ipv4 all"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.log_martians=1
# sysctl -w net.ipv4.conf.default.log_martians=1
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.log_martians"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.log_martians[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.4 Ensure suspicious packets are logged - sysctl ipv4 default"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.log_martians=1
# sysctl -w net.ipv4.conf.default.log_martians=1
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.log_martians"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.log_martians[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.4 Ensure suspicious packets are logged - sysctl.conf ipv4 all"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.log_martians=1
# sysctl -w net.ipv4.conf.default.log_martians=1
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.all\\.log_martians\\s*=\\s*1\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.4 Ensure suspicious packets are logged - sysctl.conf ipv4 default"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.log_martians=1
# sysctl -w net.ipv4.conf.default.log_martians=1
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.default\\.log_martians\\s*=\\s*1\\s*$' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.5 Ensure broadcast ICMP requests are ignored - sysctl ipv4"
      info        : "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Rationale:

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.icmp_echo_ignore_broadcasts = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.icmp_echo_ignore_broadcasts"
      expect      : "^[\\s]*net\\.ipv4\\.icmp_echo_ignore_broadcasts[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.5 Ensure broadcast ICMP requests are ignored - sysctl.conf ipv4"
      info        : "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Rationale:

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.icmp_echo_ignore_broadcasts = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.icmp_echo_ignore_broadcasts\\s*=\\s*1\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.6 Ensure bogus ICMP responses are ignored - sysctl ipv4"
      info        : "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Rationale:

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages."
      solution    : "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.icmp_ignore_bogus_error_responses = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.icmp_ignore_bogus_error_responses"
      expect      : "^[\\s]*net\\.ipv4\\.icmp_ignore_bogus_error_responses[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.6 Ensure bogus ICMP responses are ignored - sysctl.conf ipv4"
      info        : "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Rationale:

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages."
      solution    : "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.icmp_ignore_bogus_error_responses = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E \'^\\s*net\\.ipv4\\.icmp_ignore_bogus_error_responses\\s*=\\s*1\\s*$\' /etc/sysctl.conf /etc/sysctl.d/* | /bin/awk \'{print} END {if (NR != 0) print \"pass\"; else print \"fail\"}\'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.7 Ensure Reverse Path Filtering is enabled - sysctl ipv4 all"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.rp_filter=1

# sysctl -w net.ipv4.conf.default.rp_filter=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.rp_filter"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.rp_filter[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.7 Ensure Reverse Path Filtering is enabled - sysctl ipv4 default"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.rp_filter=1

# sysctl -w net.ipv4.conf.default.rp_filter=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.rp_filter"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.rp_filter[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.7 Ensure Reverse Path Filtering is enabled - sysctl.conf ipv4 all"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.rp_filter=1

# sysctl -w net.ipv4.conf.default.rp_filter=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.all\\.rp_filter\\s*=\\s*1\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.7 Ensure Reverse Path Filtering is enabled - sysctl.conf ipv4 default"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.rp_filter=1

# sysctl -w net.ipv4.conf.default.rp_filter=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.conf\\.default\\.rp_filter\\s*=\\s*1\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.8 Ensure TCP SYN Cookies is enabled - sysctl ipv4"
      info        : "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Rationale:

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.tcp_syncookies = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.tcp_syncookies=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/sbin/sysctl net.ipv4.tcp_syncookies"
      expect      : "^[\\s]*net\\.ipv4\\.tcp_syncookies[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.8 Ensure TCP SYN Cookies is enabled - sysctl.conf ipv4"
      info        : "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Rationale:

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.tcp_syncookies = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.tcp_syncookies=1

# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -s -E '^\\s*net\\.ipv4\\.tcp_syncookies\\s*=\\s*1\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "[ -n \"$passing\" ] && passing=\"\"; [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disabled=1)\" ] && passing=\"true\"; grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\"; if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - sysctl ipv6 all"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0

# sysctl -w net.ipv6.conf.default.accept_ra=0

# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "sysctl net.ipv6.conf.all.accept_ra"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_ra[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - sysctl ipv6 default"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0

# sysctl -w net.ipv6.conf.default.accept_ra=0

# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "sysctl net.ipv6.conf.default.accept_ra"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_ra[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - sysctl.conf ipv6 all"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0

# sysctl -w net.ipv6.conf.default.accept_ra=0

# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep -s -E '^\\s*net\.ipv6\.conf\.all\.accept_ra\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - sysctl.conf ipv6 default"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0

# sysctl -w net.ipv6.conf.default.accept_ra=0

# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep -s -E '^\\s*net\.ipv6\.conf\.default\.accept_ra\\s*=\\s*0\\s*$' /etc/sysctl.conf /etc/sysctl.d/* |/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - sysctl ipv6 all"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0

# sysctl -w net.ipv6.conf.default.accept_ra=0

# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - sysctl ipv6 default"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0

# sysctl -w net.ipv6.conf.default.accept_ra=0

# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - sysctl.conf ipv6 all"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0

# sysctl -w net.ipv6.conf.default.accept_ra=0

# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - sysctl.conf ipv6 default"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0

# sysctl -w net.ipv6.conf.default.accept_ra=0

# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv6|9.2,CSCv7|5.1,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for firewalld"
          rpm         : "firewalld-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for firewalld service active"
          cmd         : "/bin/systemctl is-enabled firewalld | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for iptables"
          rpm         : "iptables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "3.5.1.1 Ensure FirewallD is installed - firewalld"
          info        : "firewalld is a firewall management tool for Linux operating systems. It provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the iptables backend or provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the nftables utility.

FirewallD replaces iptables as the default firewall management tool. Use the firewalld utility to configure a firewall for less complex firewalls. The utility is easy to use and covers the typical use cases scenario. FirewallD supports both IPv4 and IPv6 networks and can administer separate firewall zones with varying degrees of trust as defined in zone profiles.

Note: Starting in v0.6.0, FirewallD added support for acting as a front-end for the Linux kernel's netfilter framework via the nftables userspace utility, acting as an alternative to the nft command line program.




Rationale:

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. FirewallD is dependent on the iptables package."
          solution    : "Run the following command to install FirewallD and iptables:

# zypper install firewalld iptables

Impact:

Changing firewall settings while connected over the network can result in being locked out of the system."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "firewalld-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "3.5.1.1 Ensure FirewallD is installed - iptables"
          info        : "firewalld is a firewall management tool for Linux operating systems. It provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the iptables backend or provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the nftables utility.

FirewallD replaces iptables as the default firewall management tool. Use the firewalld utility to configure a firewall for less complex firewalls. The utility is easy to use and covers the typical use cases scenario. FirewallD supports both IPv4 and IPv6 networks and can administer separate firewall zones with varying degrees of trust as defined in zone profiles.

Note: Starting in v0.6.0, FirewallD added support for acting as a front-end for the Linux kernel's netfilter framework via the nftables userspace utility, acting as an alternative to the nft command line program.




Rationale:

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. FirewallD is dependent on the iptables package."
          solution    : "Run the following command to install FirewallD and iptables:

# zypper install firewalld iptables

Impact:

Changing firewall settings while connected over the network can result in being locked out of the system."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "iptables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "Check for package nftables"
              rpm         : "nftables-0.0.0-0"
              operator    : "lte"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - package nftables"
              info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
              solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
              reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              rpm         : "nftables-0.0.0-0"
              operator    : "lte"
            </custom_item>

            <report type:"PASSED">
              description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - nftables active"
              info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
              solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
            </report>

            <report type:"PASSED">
              description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - nftables masked"
              info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
              solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
            </report>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - package nftables"
              info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
              solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
              reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              rpm         : "name-0.0.0-0"
              operator    : "gt"
              required    : YES
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - nftables active"
              info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
              solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/systemctl status nftables | /bin/grep \"Active: \" | /bin/grep -v \"active (running) \" | /bin/awk '{print} END {if (NR == 0) print \"pass\";}'"
              expect      : "^pass$"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - nftables masked"
              info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
              solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/systemctl is-enabled nftables"
              expect      : "masked"
            </custom_item>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.3 Ensure firewalld service is enabled and running - firewalld enabled"
          info        : "firewalld.service enables the enforcement of firewall rules configured through firewalld

Rationale:

Ensure that the firewalld.service is enabled and running to enforce firewall rules configured through firewalld"
          solution    : "Run the following command to unmask firewalld

# systemctl unmask firewalld

Run the following command to enable and start firewalld

# systemctl --now enable firewalld

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CSCv6|9.2,CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl is-enabled firewalld | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.3 Ensure firewalld service is enabled and running - firewall state running"
          info        : "firewalld.service enables the enforcement of firewall rules configured through firewalld

Rationale:

Ensure that the firewalld.service is enabled and running to enforce firewall rules configured through firewalld"
          solution    : "Run the following command to unmask firewalld

# systemctl unmask firewalld

Run the following command to enable and start firewalld

# systemctl --now enable firewalld

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/firewall-cmd --state"
          expect      : "^running$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.4 Ensure default zone is set"
          info        : "A firewall zone defines the trust level for a connection, interface or source address binding. This is a one to many relation, which means that a connection, interface or source can only be part of one zone, but a zone can be used for many network connections, interfaces and sources.

The default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone.

If no zone assigned to a connection, interface or source, only the default zone is used.

The default zone is not always listed as being used for an interface or source as it will be used for it either way. This depends on the manager of the interfaces.

Connections handled by NetworkManager are listed as NetworkManager requests to add the zone binding for the interface used by the connection. Also interfaces under control of the network service are listed also because the service requests it.

Notes:

A firewalld zone configuration file contains the information for a zone.

These are the zone description, services, ports, protocols, icmp-blocks, masquerade, forward-ports and rich language rules in an XML file format.

The file name has to be zone_name.xml where length of zone_name is currently limited to 17 chars.

NetworkManager binds interfaces to zones automatically

Rationale:

Because the default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone, it is important for the default zone to set"
          solution    : "Run the following command to set the default zone:

# firewall-cmd --set-default-zone=<NAME_OF_ZONE>

Example:

# firewall-cmd --set-default-zone=public"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/firewall-cmd --get-default-zone"
# Note: Variable @FIREWALLD_DEFAULT_ZONE@ replaced with "public" in field "expect".
          expect      : "public"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.5 Ensure network interfaces are assigned to appropriate zone"
          info        : "firewall zones define the trust level of network connections or interfaces.

Note: The firewall in the Linux kernel is not able to handle network connections with the name shown by NetworkManager, it can only handle the network interfaces used by the connection. Because of this NetworkManager tells firewalld to assign the network interface that is used for this connection to the zone defined in the configuration of that connection. This assignment happens before the interface is used. The configuration of the connection can either be the NetworkManager configuration or also an ifcfg. For example: If the zone is not set in the configuration file, the interfaces will be assigned to the default zone defined in the firewalld configuration. If a connection has more than one interface, all of them will be supplied to firewalld. Also changes in the names of interfaces will be handled by NetworkManager and supplied to firewalld.

Rationale:

A network interface not assigned to the appropriate zone can allow unexpected or undesired network traffic to be accepted on the interface.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following command to assign an interface to the approprate zone.

# firewall-cmd --zone=<Zone NAME> --change-interface=<INTERFACE NAME>

Example:

# firewall-cmd --zone=customezone --change-interface=eth0

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.

Default Value:

If the zone is not set in the configuration file, the interfaces will be assigned to the default zone defined in the firewalld configuration"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/nmcli -t connection show | /bin/awk -F: \'{if($4){print $4}}\' | while read INT; do /usr/bin/firewall-cmd --get-active-zones | /bin/grep -B1 $INT; done"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.6 Ensure unnecessary services and ports are not accepted"
          info        : "Services and ports can be accepted or explicitly rejected or dropped by a zone.

For every zone, you can set a default behavior that handles incoming traffic that is not further specified. Such behavior is defined by setting the target of the zone. There are three options - default, ACCEPT, REJECT, and DROP.

ACCEPT - you accept all incoming packets except those disabled by a specific rule.

REJECT - you disable all incoming packets except those that you have allowed in specific rules and the source machine is informed about the rejection.

DROP - you disable all incoming packets except those that you have allowed in specific rules and no information sent to the source machine.

Rationale:

To reduce the attack surface of a system, all services and ports should be blocked unless required

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following command to remove an unnecessary service:

# firewall-cmd --remove-service=<service>

Example:

#firewall-cmd --remove-service=cockpit

Run the following command to remove an unnecessary port:

# firewall-cmd --remove-port=<port-number>/<port-type>

Example:

# firewall-cmd --remove-port=25/tcp

Run the following command to make new settings persistent:

# firewall-cmd --runtime-to-permanent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/firewall-cmd --get-active-zones | /bin/awk '!/:/ {print $1}' | while read ZN; do /usr/bin/firewall-cmd --list-all --zone=$ZN; done"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.1.1 Ensure FirewallD is installed - firewalld"
          info        : "firewalld is a firewall management tool for Linux operating systems. It provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the iptables backend or provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the nftables utility.

FirewallD replaces iptables as the default firewall management tool. Use the firewalld utility to configure a firewall for less complex firewalls. The utility is easy to use and covers the typical use cases scenario. FirewallD supports both IPv4 and IPv6 networks and can administer separate firewall zones with varying degrees of trust as defined in zone profiles.

Note: Starting in v0.6.0, FirewallD added support for acting as a front-end for the Linux kernel's netfilter framework via the nftables userspace utility, acting as an alternative to the nft command line program.




Rationale:

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. FirewallD is dependent on the iptables package."
          solution    : "Run the following command to install FirewallD and iptables:

# zypper install firewalld iptables

Impact:

Changing firewall settings while connected over the network can result in being locked out of the system."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.1 Ensure FirewallD is installed - iptables"
          info        : "firewalld is a firewall management tool for Linux operating systems. It provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the iptables backend or provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the nftables utility.

FirewallD replaces iptables as the default firewall management tool. Use the firewalld utility to configure a firewall for less complex firewalls. The utility is easy to use and covers the typical use cases scenario. FirewallD supports both IPv4 and IPv6 networks and can administer separate firewall zones with varying degrees of trust as defined in zone profiles.

Note: Starting in v0.6.0, FirewallD added support for acting as a front-end for the Linux kernel's netfilter framework via the nftables userspace utility, acting as an alternative to the nft command line program.




Rationale:

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. FirewallD is dependent on the iptables package."
          solution    : "Run the following command to install FirewallD and iptables:

# zypper install firewalld iptables

Impact:

Changing firewall settings while connected over the network can result in being locked out of the system."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - package nftables"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
          solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - nftables active"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
          solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.2 Ensure nftables is not installed or stopped and masked - nftables masked"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Notes:

Support for using nftables as the back-end for firewalld was added in release v0.6.0. In Fedora 19 Linux derivatives, firewalld utilizes iptables as it's back-end by default.

firewalld may be configured as the front-end to nftables. If this case, nftables should be stopped and masked instead of removed.

Rationale:

Running both firewalld and nftables may lead to conflict."
          solution    : "Run the following command to remove nftables:

# zypper remove nftables

OR
Run the following command to stop and mask nftables:

systemctl --now mask nftables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.3 Ensure firewalld service is enabled and running - firewalld enabled"
          info        : "firewalld.service enables the enforcement of firewall rules configured through firewalld

Rationale:

Ensure that the firewalld.service is enabled and running to enforce firewall rules configured through firewalld"
          solution    : "Run the following command to unmask firewalld

# systemctl unmask firewalld

Run the following command to enable and start firewalld

# systemctl --now enable firewalld

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CSCv6|9.2,CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.3 Ensure firewalld service is enabled and running - firewall state running"
          info        : "firewalld.service enables the enforcement of firewall rules configured through firewalld

Rationale:

Ensure that the firewalld.service is enabled and running to enforce firewall rules configured through firewalld"
          solution    : "Run the following command to unmask firewalld

# systemctl unmask firewalld

Run the following command to enable and start firewalld

# systemctl --now enable firewalld

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.4 Ensure default zone is set"
          info        : "A firewall zone defines the trust level for a connection, interface or source address binding. This is a one to many relation, which means that a connection, interface or source can only be part of one zone, but a zone can be used for many network connections, interfaces and sources.

The default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone.

If no zone assigned to a connection, interface or source, only the default zone is used.

The default zone is not always listed as being used for an interface or source as it will be used for it either way. This depends on the manager of the interfaces.

Connections handled by NetworkManager are listed as NetworkManager requests to add the zone binding for the interface used by the connection. Also interfaces under control of the network service are listed also because the service requests it.

Notes:

A firewalld zone configuration file contains the information for a zone.

These are the zone description, services, ports, protocols, icmp-blocks, masquerade, forward-ports and rich language rules in an XML file format.

The file name has to be zone_name.xml where length of zone_name is currently limited to 17 chars.

NetworkManager binds interfaces to zones automatically

Rationale:

Because the default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone, it is important for the default zone to set"
          solution    : "Run the following command to set the default zone:

# firewall-cmd --set-default-zone=<NAME_OF_ZONE>

Example:

# firewall-cmd --set-default-zone=public"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.5 Ensure network interfaces are assigned to appropriate zone"
          info        : "firewall zones define the trust level of network connections or interfaces.

Note: The firewall in the Linux kernel is not able to handle network connections with the name shown by NetworkManager, it can only handle the network interfaces used by the connection. Because of this NetworkManager tells firewalld to assign the network interface that is used for this connection to the zone defined in the configuration of that connection. This assignment happens before the interface is used. The configuration of the connection can either be the NetworkManager configuration or also an ifcfg. For example: If the zone is not set in the configuration file, the interfaces will be assigned to the default zone defined in the firewalld configuration. If a connection has more than one interface, all of them will be supplied to firewalld. Also changes in the names of interfaces will be handled by NetworkManager and supplied to firewalld.

Rationale:

A network interface not assigned to the appropriate zone can allow unexpected or undesired network traffic to be accepted on the interface."
          solution    : "Run the following command to assign an interface to the approprate zone.

# firewall-cmd --zone=<Zone NAME> --change-interface=<INTERFACE NAME>

Example:

# firewall-cmd --zone=customezone --change-interface=eth0

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.

Default Value:

If the zone is not set in the configuration file, the interfaces will be assigned to the default zone defined in the firewalld configuration"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.1.6 Ensure unnecessary services and ports are not accepted"
          info        : "Services and ports can be accepted or explicitly rejected or dropped by a zone.

For every zone, you can set a default behavior that handles incoming traffic that is not further specified. Such behavior is defined by setting the target of the zone. There are three options - default, ACCEPT, REJECT, and DROP.

ACCEPT - you accept all incoming packets except those disabled by a specific rule.

REJECT - you disable all incoming packets except those that you have allowed in specific rules and the source machine is informed about the rejection.

DROP - you disable all incoming packets except those that you have allowed in specific rules and no information sent to the source machine.

Rationale:

To reduce the attack surface of a system, all services and ports should be blocked unless required"
          solution    : "Run the following command to remove an unnecessary service:

# firewall-cmd --remove-service=<service>

Example:

#firewall-cmd --remove-service=cockpit

Run the following command to remove an unnecessary port:

# firewall-cmd --remove-port=<port-number>/<port-type>

Example:

# firewall-cmd --remove-port=25/tcp

Run the following command to make new settings persistent:

# firewall-cmd --runtime-to-permanent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for packages nftables"
          rpm         : "nftables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for nftables service active"
          cmd         : "/bin/systemctl is-enabled nftables | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "3.5.2.1 Ensure nftables is installed"
          info        : "nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.

Notes:

nftables is available in Linux kernel 3.13 and newer.

Only one firewall utility should be installed and configured.

Rationale:

nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host."
          solution    : "Run the following command to install nftables

# zypper install nftables

Impact:

Changing firewall settings while connected over the network can result in being locked out of the system."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "nftables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "Check for package firewalld"
              rpm         : "firewalld-0.0.0-0"
              operator    : "lte"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld package"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              rpm         : "firewalld-0.0.0-0"
              operator    : "lte"
            </custom_item>

            <report type:"PASSED">
              description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld active"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|9.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
            </report>

            <report type:"PASSED">
              description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld masked"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CSCv6|9.2,CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
            </report>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld package"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              rpm         : "firewalld-0.0.0-0"
              operator    : "lte"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld active"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|9.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/systemctl status firewalld | /bin/grep \"Active: \" | /bin/grep -v \"active (running) \" | /bin/awk '{print} END {if (NR == 0) print \"pass\";}'"
              expect      : "^pass$"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld masked"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CSCv6|9.2,CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/systemctl is-enabled firewalld"
              expect      : "masked"
            </custom_item>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.3 Ensure iptables are flushed"
          info        : "nftables is a replacement for iptables, ip6tables, ebtables and arptables

Rationale:

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following commands to flush iptables:
For iptables:

# iptables -F

For ip6tables

# ip6tables -F"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/iptables -L;/usr/sbin/ip6tables -L"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.4 Ensure a table exists"
          info        : "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

Rationale:

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic."
          solution    : "Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list tables | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.5 Ensure base chains exist - input"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables."
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook input'"
          expect      : "^type[\\s]+filter[\\s]+hook[\\s]+input[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.5 Ensure base chains exist - forward"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables."
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft -n list ruleset | /bin/grep 'hook forward'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+forward[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.5 Ensure base chains exist - output"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables."
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook output'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+output[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.6 Ensure loopback traffic is configured - lo accept"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep 'iifname \"lo\" accept' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.6 Ensure loopback traffic is configured - ip saddr 127.0.0.0/8"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep 'ip saddr 127\.0\.0\.0/8' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "Check for IPv6"
              cmd         : "[ -n \"$passing\" ] && passing=\"\"; [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disabled=1)\" ] && passing=\"true\"; grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\"; if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\"; else echo \"IPv6 is enabled on the system\"; fi"
              expect      : "IPv6 is enabled on the system"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.2.6 Ensure loopback traffic is configured - ip6 saddr"
              info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
              solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
              reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/usr/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep 'ip6 saddr ::1' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
              expect      : "^pass$"
            </custom_item>
          </then>

          <else>
            <report type:"PASSED">
              description : "3.5.2.6 Ensure loopback traffic is configured - ip6 saddr"
              info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
              solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
              reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
              see_also    : "https://workbench.cisecurity.org/files/2854"
            </report>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.7 Ensure outbound and established connections are configured - input"
          info        : "Configure the firewall rules for new outbound and established connections

Rationale:

If rules are not in place for new outbound and established connections, all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept
# nft add rule inet filter input ip protocol udp ct state established accept
# nft add rule inet filter input ip protocol icmp ct state established accept
# nft add rule inet filter output ip protocol tcp ct state new,related,established accept
# nft add rule inet filter output ip protocol udp ct state new,related,established accept
# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep -E 'ip protocol (tcp|udp|icmp) ct state' | /bin/awk '{print} END {if (NR >= 3) print \"pass\"; else print}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.7 Ensure outbound and established connections are configured - output"
          info        : "Configure the firewall rules for new outbound and established connections

Rationale:

If rules are not in place for new outbound and established connections, all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept
# nft add rule inet filter input ip protocol udp ct state established accept
# nft add rule inet filter input ip protocol icmp ct state established accept
# nft add rule inet filter output ip protocol tcp ct state new,related,established accept
# nft add rule inet filter output ip protocol udp ct state new,related,established accept
# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/awk '/hook output/,/}/' | /bin/grep -E 'ip protocol (tcp|udp|icmp) ct state' | /bin/awk '{print} END {if (NR >= 3) print \"pass\"; else print}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.8 Ensure default deny firewall policy - input"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook input'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+input[\\s]+priority[\\s]+0;[\\s]+policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.8 Ensure default deny firewall policy - forward"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook forward'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+forward[\\s]+priority[\\s]+0;[\\s]+policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.8 Ensure default deny firewall policy - output"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook output'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+output[\\s]+priority[\\s]+0;[\\s]+policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.9 Ensure nftables service is enabled"
          info        : "The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service

Rationale:

The nftables service restores the nftables rules from the rules files referenced in the /etc/sysconfig/nftables.conf file during boot or the starting of the nftables service"
          solution    : "Run the following command to enable the nftables service:

# systemctl enable nftables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl is-enabled nftables | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.10 Ensure nftables rules are permanent"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/sysconfig/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot"
          solution    : "Edit the /etc/sysconfig/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/sysconfig/nftables.conf

Add the line:

include '/etc/nftables/nftables.rules'"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/egrep '^[\\s]*include[\\s]+' /etc/sysconfig/nftables.conf | /bin/awk '{print} END {if (NR >= 1) print \"pass\";}'"
          expect      : "^pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.2.1 Ensure nftables is installed"
          info        : "nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.

Notes:

nftables is available in Linux kernel 3.13 and newer.

Only one firewall utility should be installed and configured.

Rationale:

nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host."
          solution    : "Run the following command to install nftables

# zypper install nftables

Impact:

Changing firewall settings while connected over the network can result in being locked out of the system."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld package"
          info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
          solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
          reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld active"
          info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
          solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|9.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.2 Ensure firewalld is not installed or stopped and masked - firewalld masked"
          info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running both nftables.service and firewalld.service may lead to conflict and unexpected results."
          solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CSCv6|9.2,CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.3 Ensure iptables are flushed"
          info        : "nftables is a replacement for iptables, ip6tables, ebtables and arptables

Rationale:

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded"
          solution    : "Run the following commands to flush iptables:
For iptables:

# iptables -F

For ip6tables

# ip6tables -F"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.4 Ensure a table exists"
          info        : "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

Rationale:

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic."
          solution    : "Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.5 Ensure base chains exist - input"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables."
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.5 Ensure base chains exist - forward"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables."
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.5 Ensure base chains exist - output"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables."
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.6 Ensure loopback traffic is configured - lo accept"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.6 Ensure loopback traffic is configured - ip saddr 127.0.0.0/8"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.6 Ensure loopback traffic is configured - ip6 saddr"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.7 Ensure outbound and established connections are configured - input"
          info        : "Configure the firewall rules for new outbound and established connections

Rationale:

If rules are not in place for new outbound and established connections, all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept
# nft add rule inet filter input ip protocol udp ct state established accept
# nft add rule inet filter input ip protocol icmp ct state established accept
# nft add rule inet filter output ip protocol tcp ct state new,related,established accept
# nft add rule inet filter output ip protocol udp ct state new,related,established accept
# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.7 Ensure outbound and established connections are configured - output"
          info        : "Configure the firewall rules for new outbound and established connections

Rationale:

If rules are not in place for new outbound and established connections, all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept
# nft add rule inet filter input ip protocol udp ct state established accept
# nft add rule inet filter input ip protocol icmp ct state established accept
# nft add rule inet filter output ip protocol tcp ct state new,related,established accept
# nft add rule inet filter output ip protocol udp ct state new,related,established accept
# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.8 Ensure default deny firewall policy - input"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.8 Ensure default deny firewall policy - forward"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.8 Ensure default deny firewall policy - output"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.9 Ensure nftables service is enabled"
          info        : "The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service

Rationale:

The nftables service restores the nftables rules from the rules files referenced in the /etc/sysconfig/nftables.conf file during boot or the starting of the nftables service"
          solution    : "Run the following command to enable the nftables service:

# systemctl enable nftables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.2.10 Ensure nftables rules are permanent"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/sysconfig/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot"
          solution    : "Edit the /etc/sysconfig/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/sysconfig/nftables.conf

Add the line:

include '/etc/nftables/nftables.rules'"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for package iptables"
          rpm         : "iptables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for nftables service active"
          cmd         : "/bin/systemctl is-enabled nftables | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "(disabled|masked|Failed to get unit file state)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for firewalld service active"
          cmd         : "/bin/systemctl is-enabled firewalld | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "(disabled|masked|Failed to get unit file state)"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "3.5.3.1.1 Ensure iptables package is installed"
          info        : "iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

Rationale:

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall."
          solution    : "Run the following command to install iptables

# zypper install iptables"
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "iptables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "3.5.3.1.2 Ensure nftables is not installed"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Rationale:

Running both iptables and nftables may lead to conflict."
          solution    : "Run the following command to remove nftables:

# zypper remove nftables"
          reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          rpm         : "nftables-0.0.0-0"
          operator    : "lte"
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "Check for firewalld"
              rpm         : "firewalld-0.0.0-0"
              operator    : "lte"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld package"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              rpm         : "firewalld-0.0.0-0"
              operator    : "lte"
            </custom_item>

            <report type:"PASSED">
              description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld active"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|9.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
            </report>

            <report type:"PASSED">
              description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld masked"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CSCv6|9.2,CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
            </report>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : RPM_CHECK
              description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld package"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              rpm         : "firewalld-0.0.0-0"
              operator    : "gt"
              required    : YES
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld active"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|9.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/systemctl status firewalld | /bin/grep \"Active: \" | /bin/grep -v \"active (running) \" | /bin/awk '{print} END {if (NR == 0) print \"pass\";}'"
              expect      : "^pass$"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld masked"
              info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
              solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CSCv6|9.2,CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
              see_also    : "https://workbench.cisecurity.org/files/2854"
              cmd         : "/bin/systemctl is-enabled firewalld"
              expect      : "masked"
            </custom_item>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.1 Ensure default deny firewall policy"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.6,800-53|SC-7(5),CN-L3|7.1.2.2(c),CSCv7|9.4,CSF|PR.PT-4,ITSG-33|SC-7(5),LEVEL|1A,NIAv2|GS7b,NIAv2|NS25"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/iptables -L | /bin/egrep 'Chain (INPUT|FORWARD|OUTPUT)' | /bin/grep 'policy DROP' | /bin/awk '{print} END {if (NR >= 3) print \"pass\"; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.2 Ensure loopback traffic is configured - input"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/iptables -L INPUT -v -n | /bin/awk '{ a[$3\":\"$4\":\"$6\":\"$7\":\"$8\":\"$9] = NR; print } END { if (a[\"ACCEPT:all:lo:*:0.0.0.0/0:0.0.0.0/0\"] > 0 && a[\"ACCEPT:all:lo:*:0.0.0.0/0:0.0.0.0/0\"] < a[\"DROP:all:*:*:127.0.0.0/8:0.0.0.0/0\"]) { print \"pass\" } else { print \"fail\" } }'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.2 Ensure loopback traffic is configured - output"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/iptables -L OUTPUT -v -n | /bin/awk '{ a[$3\":\"$4\":\"$6\":\"$7\":\"$8\":\"$9] = NR; print } END { if (a[\"ACCEPT:all:*:lo:0.0.0.0/0:0.0.0.0/0\"] > 0) { print \"pass\" } else { print \"fail\" } }'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.3 Ensure outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/iptables -L -v -n"
          expect      : "ManualReviewRequired"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.4 Ensure firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.2,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/ss -4tuln; /usr/sbin/iptables -L INPUT -v -n"
          expect      : ""
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.3.1.1 Ensure iptables package is installed"
          info        : "iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

Rationale:

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall."
          solution    : "Run the following command to install iptables

# zypper install iptables"
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.1.2 Ensure nftables is not installed"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Rationale:

Running both iptables and nftables may lead to conflict."
          solution    : "Run the following command to remove nftables:

# zypper remove nftables"
          reference   : "800-171|3.4.8,800-53|CM-7(4),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,LEVEL|1A,NIAv2|SS13a,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld package"
          info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
          solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
          reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld active"
          info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
          solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|9.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - firewalld masked"
          info        : "firewalld (Dynamic Firewall Manager) provides a dynamically managed firewall with support for network/firewall 'zones' to assign a level of trust to a network and its associated connections, interfaces or sources. It has support for IPv4, IPv6, Ethernet bridges and also for IPSet firewall settings. There is a separation of the runtime and permanent configuration options.

Rationale:

Running iptables.service and\or ip6tables.service with firewalld.service may lead to conflict and unexpected results."
          solution    : "Run the following command to remove firewalld

# zypper remove firewalld

OR
Run the following command to stop and mask firewalld

# systemctl --now mask firewalld"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CSCv6|9.2,CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.1 Ensure default deny firewall policy"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.6,800-53|SC-7(5),CN-L3|7.1.2.2(c),CSCv7|9.4,CSF|PR.PT-4,ITSG-33|SC-7(5),LEVEL|1A,NIAv2|GS7b,NIAv2|NS25"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.2 Ensure loopback traffic is configured - input"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.2 Ensure loopback traffic is configured - output"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.3 Ensure outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.4 Ensure firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.2,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for package iptables"
          rpm         : "iptables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "[ -n \"$passing\" ] && passing=\"\"; [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disabled=1)\" ] && passing=\"true\"; grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -sEq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\"; if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.3.1 Ensure IPv6 default deny firewall policy"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.6,800-53|SC-7(5),CN-L3|7.1.2.2(c),CSCv7|9.4,CSF|PR.PT-4,ITSG-33|SC-7(5),LEVEL|1A,NIAv2|GS7b,NIAv2|NS25"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/ip6tables -L | /bin/egrep 'Chain (INPUT|FORWARD|OUTPUT)' | /bin/grep 'policy DROP' | /bin/awk '{print} END {if (NR >= 3) print \"pass\"; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.3.2 Ensure IPv6 loopback traffic is configured - input"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/ip6tables -L INPUT -v -n | /bin/awk '{ a[$3\":\"$4\":\"$5\":\"$6\":\"$7\":\"$8] = NR; print } END { if (a[\"ACCEPT:all:lo:*:::/0:::/0\"] > 0 && a[\"ACCEPT:all:lo:*:::/0:::/0\"] < a[\"DROP:all:*:*:::1:::/0\"]) { print \"pass\" } else { print \"fail\" } }'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.3.2 Ensure IPv6 loopback traffic is configured - output"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/ip6tables -L OUTPUT -v -n | /bin/awk '{ a[$3\":\"$4\":\"$5\":\"$6\":\"$7\":\"$8] = NR; print } END { if (a[\"ACCEPT:all:*:lo:::/0:::/0\"] > 0) { print \"pass\" } else { print \"fail\" } }'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.3.3 Ensure IPv6 outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established IPv6 connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
          reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/sbin/ip6tables -L -v -n"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.3.4 Ensure IPv6 firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/usr/bin/ss -6tuln; /usr/sbin/ip6tables -L INPUT -v -n"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.3.3.1 Ensure IPv6 default deny firewall policy"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.6,800-53|SC-7(5),CN-L3|7.1.2.2(c),CSCv7|9.4,CSF|PR.PT-4,ITSG-33|SC-7(5),LEVEL|1A,NIAv2|GS7b,NIAv2|NS25"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.2 Ensure IPv6 loopback traffic is configured - input"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.2 Ensure IPv6 loopback traffic is configured - output"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Note: Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type: "PASSED">
          description : "3.5.3.3.3 Ensure IPv6 outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established IPv6 connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
          reference   : "800-171|3.13.1,800-53|SC-7(12),ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.4 Ensure IPv6 firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CSCv7|9.4,ITSG-33|SC-7(12),LEVEL|1M,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "4.2.1.1 Ensure rsyslog is installed"
      info        : "The rsyslog software is a recommended replacement to the original syslogd daemon.

rsyslog provides improvements over syslogd, including:

connection-oriented (i.e. TCP) transmission of logs

The option to log to database formats

Encryption of log data en route to a central logging server

Rationale:

The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package."
      solution    : "Run the following command to install rsyslog:

# zypper install rsyslog"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSCv7|6.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1A,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      rpm         : "rsyslog-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.1.2 Ensure rsyslog Service is enabled and running - enabled"
      info        : "rsyslog needs to be enabled and running to perform logging

Rationale:

If the rsyslog service is not activated the system may default to the syslogd service or lack logging instead."
      solution    : "Run the following command to enable and start rsyslog:

# systemctl --now enable rsyslog"
      reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|6.2,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/systemctl is-enabled rsyslog"
      expect      : "enabled"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.1.2 Ensure rsyslog Service is enabled and running - running"
      info        : "rsyslog needs to be enabled and running to perform logging

Rationale:

If the rsyslog service is not activated the system may default to the syslogd service or lack logging instead."
      solution    : "Run the following command to enable and start rsyslog:

# systemctl --now enable rsyslog"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|6.2,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/systemctl status rsyslog | /bin/grep \"Active: \" | /bin/grep -v \"active (running) \" | /bin/awk '{print} END {if (NR == 0) print \"pass\";}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.1.3 Ensure rsyslog default file permissions configured"
      info        : "rsyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

The $FileCreateMode parameter specifies the file creation mode with which rsyslogd creates new files. If not specified, the value 0644 is used.

Notes:

The value given must always be a 4-digit octal number, with the initial digit being zero.

This setting can be overridden by a less restrictive setting in any file ending in .conf in the /etc/rsyslog.d/ directory

Rationale:

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected."
      solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and set $FileCreateMode to 0640 or more restrictive:

$FileCreateMode 0640"
      reference   : "800-171|3.3.8,800-53|AU-9,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSCv7|5.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep '^[\\s]\*\\$FileCreateMode' /etc/rsyslog.conf /etc/rsyslog.d/* | /bin/awk '{ print; if(/\\$FileCreateMode 0[246][04]0/) { print \"pass\" } else { print \"fail\"; fail=1; } } END { if(fail==1){ result=\"Failures found\"; }; if(fail==0 && NR>0){ result=\"All results passing\"; }; if(NR==0){ result=\"No results found\"; }; print result; }'"
      expect      : "All results passing"
    </custom_item>

    <report type:"WARNING">
      description : "4.2.1.4 Ensure logging is configured"
      info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.).

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment:

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
news.crit                               -/var/log/news/news.crit
news.err                                -/var/log/news/news.err
news.notice                             -/var/log/news/news.notice
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
      reference   : "CSCv7|6.2,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/files/2854"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check to see if target is rsyslog client or server"
          cmd         : "/usr/bin/lsof -i -P -n | /usr/bin/grep rsyslogd | /usr/bin/awk \'{print} END {if (NR==0) print \"client\"; else print \"server\"}\'"
          expect      : "client"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.5 Ensure rsyslog is configured to send logs to a remote log host"
          info        : "The rsyslog utility supports the ability to send logs it gathers to a remote log host running syslogd(8) or to receive messages from remote hosts, reducing administrative overhead.

Note: The double 'at' sign (@@) directs rsyslog to use TCP to send log messages to the server, which is a more reliable transport mechanism than the default UDP protocol

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system"
          solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host).

*.* @@loghost.example.com

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.8,800-53|AU-9(2),CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.6,CSF|PR.PT-1,ITSG-33|AU-9(2),LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e"
          see_also    : "https://workbench.cisecurity.org/files/2854"
# Note: Variable @SYSLOG_SERVER@ replaced with "192\\.168\\.0\\.1" in field "cmd".
          cmd         : "/bin/egrep '^\\*\\.\\*[^I][^I]*\\@\\@192\\.168\\.0\\.1' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - ModLoad"
          info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Note: The $ModLoad imtcp line can have the .so extension added to the end of the module, or use the full path to the module.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
          solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep '^\s*\\$ModLoad[\\s]+imtcp' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
          expect      : "(\\#[\\s]*\\$ModLoad[\\s]+imtcp(\\.so)?[\\s]*$|none)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - InputTCPServerRun"
          info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Note: The $ModLoad imtcp line can have the .so extension added to the end of the module, or use the full path to the module.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
          solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/grep '^\s*\\$InputTCPServerRun' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
          expect      : "(\\#[\\s]*\\$InputTCPServerRun[\\s]+514[\\s]*$|none)"
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.5 Ensure rsyslog is configured to send logs to a remote log host"
          info        : "The rsyslog utility supports the ability to send logs it gathers to a remote log host running syslogd(8) or to receive messages from remote hosts, reducing administrative overhead.

Note: The double 'at' sign (@@) directs rsyslog to use TCP to send log messages to the server, which is a more reliable transport mechanism than the default UDP protocol

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system"
          solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host).

*.* @@loghost.example.com

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.8,800-53|AU-9(2),CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.6,CSF|PR.PT-1,ITSG-33|AU-9(2),LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/egrep '^[\\#]?\\s*\\*\\.\\*[^I][^I]*@' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /bin/awk '{print} END {if (NR != 0) print \"none\"}'"
# Note: Variable @SYSLOG_SERVER@ replaced with "192\\.168\\.0\\.1" in field "expect".
          expect      : "(\\#\\*\\.\\*[\\s]+\\@\\@192\\.168\\.0\\.1[\\s]*$|none)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - ModLoad"
          info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Note: The $ModLoad imtcp line can have the .so extension added to the end of the module, or use the full path to the module.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
          solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/egrep '^\\s*\\$ModLoad\\s+imtcp' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
          expect      : "\\$ModLoad[\\s]+imtcp(\\.so)?[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - InputTCPServerRun"
          info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Note: The $ModLoad imtcp line can have the .so extension added to the end of the module, or use the full path to the module.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
          solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/egrep '^\\s*\\$InputTCPServerRun' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
          expect      : "\\$InputTCPServerRun[\\s]+514[\\s]*$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.2.2.1 Ensure journald is configured to send logs to rsyslog"
      info        : "Data from journald may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of journald logs, however, use of the rsyslog service provides a consistent means of log collection and export.

Notes:

This recommendation assumes that recommendation 4.2.1.5, 'Ensure rsyslog is configured to send logs to a remote log host' has been implemented.

The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters

As noted in the journald man pages: journald logs may be exported to rsyslog either through the process mentioned here, or through a facility like systemd-journald.service. There are trade-offs involved in each implementation, where ForwardToSyslog will immediately capture all events (and forward to an external log server, if properly configured), but may not capture all boot-up activities. Mechanisms such as systemd-journald.service, on the other hand, will record bootup events, but may delay sending the information to rsyslog, leading to the potential for log manipulation prior to export. Be aware of the limitations of all tools employed to secure a system.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system."
      solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

ForwardToSyslog=yes"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/systemd/journald.conf"
      regex       : "^[\\s]*ForwardToSyslog[\\s]*="
      expect      : "^[\\s]*ForwardToSyslog[\\s]*=[\\s]*yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.2.2.2 Ensure journald is configured to compress large log files"
      info        : "The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the log's size unmanageable.

Note: The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters

Rationale:

Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts."
      solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

Compress=yes"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|6.4,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/systemd/journald.conf"
      regex       : "^[\\s]*Compress[\\s]*="
      expect      : "^[\\s]*Compress[\\s]*=[\\s]*yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.2.2.3 Ensure journald is configured to write logfiles to persistent disk"
      info        : "Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss.

Note: The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters

Rationale:

Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot."
      solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

Storage=persistent"
      reference   : "800-171|3.3.8,800-53|AU-9,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSCv7|6.2,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/systemd/journald.conf"
      regex       : "^[\\s]*Storage[\\s]*="
      expect      : "^[\\s]*Storage[\\s]*=[\\s]*persistent[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.3 Ensure permissions on all logfiles are configured"
      info        : "Log files stored in /var/log/ contain logged information from many services on the system, or on log hosts others as well.

Rationale:

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected. Other/world should not have the ability to view this information. Group should not have the ability to modify this information."
      solution    : "Run the following commands to set permissions on all existing log files:

find /var/log -type f -exec chmod g-wx,o-rwx '{}' + -o -type d -exec chmod g-wx,o-rwx '{}' +

Note: The configuration for your logging software or services may need to also be modified for any logs that had incorrect permissions, otherwise, the permissions may be reverted to the incorrect permissions"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/bin/find /var/log -type f -perm /g+wx,o+rwx -ls -o -type d -perm /g+wx,o+rwx -ls | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <report type:"WARNING">
      description : "4.2.4 Ensure logrotate is configured"
      info        : "The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making the log's size unmanageable. The file /etc/logrotate.d/syslog is the configuration file used to rotate log files created by syslog or rsyslog.

Note: If no maxage setting is set for logrotate a situation can occur where logrotate is interrupted and fails to delete rotated logfiles. It is recommended to set this to a value greater than the longest any log file should exist on your system to ensure that any such logfile is removed but standard rotation settings are not overridden.

Rationale:

By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Edit /etc/logrotate.conf and /etc/logrotate.d/* to ensure logs are rotated according to site policy."
      reference   : "CSCv7|6.4,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/files/2854"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for package cron"
          rpm         : "cron-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "5.1.1 Ensure cron daemon is enabled and running - enabled"
          info        : "The cron daemon is used to execute batch jobs on the system.

Rationale:

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run. If another method for scheduling tasks is not being used, cron is used to execute them, and needs to be enabled and running."
          solution    : "Run the following command to enable and start cron:

# systemctl --now enable cron

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|5.1,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl is-enabled cron"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "5.1.1 Ensure cron daemon is enabled and running - running"
          info        : "The cron daemon is used to execute batch jobs on the system.

Rationale:

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run. If another method for scheduling tasks is not being used, cron is used to execute them, and needs to be enabled and running."
          solution    : "Run the following command to enable and start cron:

# systemctl --now enable cron

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/systemctl status cron | /bin/grep \"Active: \" | /bin/grep -v \"active (running) \" | /bin/awk '{print} END {if (NR == 0) print \"pass\";}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "5.1.2 Ensure permissions on /etc/crontab are configured"
          info        : "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.

Rationale:

This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access."
          solution    : "Run the following commands to set ownership and permissions on /etc/crontab:

# chown root:root /etc/crontab

# chmod u-x,og-rwx /etc/crontab

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/crontab"
          owner       : "root"
          mask        : "077"
          group       : "root"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "5.1.3 Ensure permissions on /etc/cron.hourly are configured"
          info        : "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on the /etc/cron.hourly/ directory:

# chown root:root /etc/cron.hourly/

# chmod og-rwx /etc/cron.hourly/

OR
Run the following command to remove cron

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/cron.hourly"
          owner       : "root"
          mask        : "077"
          group       : "root"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "5.1.4 Ensure permissions on /etc/cron.daily are configured"
          info        : "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on /etc/cron.daily directory:

# chown root:root /etc/cron.daily

# chmod og-rwx /etc/cron.daily

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/cron.daily"
          owner       : "root"
          mask        : "077"
          group       : "root"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "5.1.5 Ensure permissions on /etc/cron.weekly are configured"
          info        : "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on /etc/cron.weekly/ directory:

# chown root:root /etc/cron.weekly/

# chmod og-rwx /etc/cron.weekly/

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/cron.weekly"
          owner       : "root"
          mask        : "077"
          group       : "root"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "5.1.6 Ensure permissions on /etc/cron.monthly are configured"
          info        : "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly

# chmod og-rwx /etc/cron.monthly

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/cron.monthly"
          owner       : "root"
          mask        : "077"
          group       : "root"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "5.1.7 Ensure permissions on /etc/cron.d are configured"
          info        : "The /etc/cron.d/ directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab , but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on /etc/cron.d directory:

# chown root:root /etc/cron.d

# chmod og-rwx /etc/cron.d

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/cron.d"
          owner       : "root"
          mask        : "077"
          group       : "root"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
          description : "5.1.8 Ensure cron is restricted to authorized users - cron.deny"
          info        : "If cron is installed in the system, configure /etc/cron.allow to allow specific users to use these services. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in those files is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron.

Note: Even though a given user is not listed in cron.allow, cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
          solution    : "Run the following command to remove /etc/cron.deny:

# rm /etc/cron.deny

Run the following command to create /etc/cron.allow

# touch /etc/cron.allow

Run the following commands to set the owner and permissions on /etc/cron.allow:

# chown root:root /etc/cron.allow

# chmod u-x,og-rwx /etc/cron.allow

OR
Run the following command to remove cron

# zypper remove cronie"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CIP|007-6-R1,CSCv6|9.1,CSF|PR.AC-4,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/cron.deny"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "5.1.8 Ensure cron is restricted to authorized users - cron.allow"
          info        : "If cron is installed in the system, configure /etc/cron.allow to allow specific users to use these services. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in those files is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron.

Note: Even though a given user is not listed in cron.allow, cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
          solution    : "Run the following command to remove /etc/cron.deny:

# rm /etc/cron.deny

Run the following command to create /etc/cron.allow

# touch /etc/cron.allow

Run the following commands to set the owner and permissions on /etc/cron.allow:

# chown root:root /etc/cron.allow

# chmod u-x,og-rwx /etc/cron.allow

OR
Run the following command to remove cron

# zypper remove cronie"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv6|3.1,CSF|PR.AC-4,LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/cron.allow"
          owner       : "root"
          mask        : "077"
          group       : "root"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "5.1.1 Ensure cron daemon is enabled and running - enabled"
          info        : "The cron daemon is used to execute batch jobs on the system.

Rationale:

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run. If another method for scheduling tasks is not being used, cron is used to execute them, and needs to be enabled and running."
          solution    : "Run the following command to enable and start cron:

# systemctl --now enable cron

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "CIP|007-6-R1,CSCv6|9.1,CSCv7|5.1,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.1 Ensure cron daemon is enabled and running - running"
          info        : "The cron daemon is used to execute batch jobs on the system.

Rationale:

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run. If another method for scheduling tasks is not being used, cron is used to execute them, and needs to be enabled and running."
          solution    : "Run the following command to enable and start cron:

# systemctl --now enable cron

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.2 Ensure permissions on /etc/crontab are configured"
          info        : "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.

Rationale:

This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access."
          solution    : "Run the following commands to set ownership and permissions on /etc/crontab:

# chown root:root /etc/crontab

# chmod u-x,og-rwx /etc/crontab

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.3 Ensure permissions on /etc/cron.hourly are configured"
          info        : "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on the /etc/cron.hourly/ directory:

# chown root:root /etc/cron.hourly/

# chmod og-rwx /etc/cron.hourly/

OR
Run the following command to remove cron

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.4 Ensure permissions on /etc/cron.daily are configured"
          info        : "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on /etc/cron.daily directory:

# chown root:root /etc/cron.daily

# chmod og-rwx /etc/cron.daily

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.5 Ensure permissions on /etc/cron.weekly are configured"
          info        : "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on /etc/cron.weekly/ directory:

# chown root:root /etc/cron.weekly/

# chmod og-rwx /etc/cron.weekly/

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.6 Ensure permissions on /etc/cron.monthly are configured"
          info        : "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly

# chmod og-rwx /etc/cron.monthly

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.7 Ensure permissions on /etc/cron.d are configured"
          info        : "The /etc/cron.d/ directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab , but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
          solution    : "Run the following commands to set ownership and permissions on /etc/cron.d directory:

# chown root:root /etc/cron.d

# chmod og-rwx /etc/cron.d

OR
Run the following command to remove cron:

# zypper remove cronie"
          reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.8 Ensure cron is restricted to authorized users - cron.deny"
          info        : "If cron is installed in the system, configure /etc/cron.allow to allow specific users to use these services. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in those files is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron.

Note: Even though a given user is not listed in cron.allow, cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
          solution    : "Run the following command to remove /etc/cron.deny:

# rm /etc/cron.deny

Run the following command to create /etc/cron.allow

# touch /etc/cron.allow

Run the following commands to set the owner and permissions on /etc/cron.allow:

# chown root:root /etc/cron.allow

# chmod u-x,og-rwx /etc/cron.allow

OR
Run the following command to remove cron

# zypper remove cronie"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CIP|007-6-R1,CSCv6|9.1,CSF|PR.AC-4,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.8 Ensure cron is restricted to authorized users - cron.allow"
          info        : "If cron is installed in the system, configure /etc/cron.allow to allow specific users to use these services. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in those files is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron.

Note: Even though a given user is not listed in cron.allow, cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
          solution    : "Run the following command to remove /etc/cron.deny:

# rm /etc/cron.deny

Run the following command to create /etc/cron.allow

# touch /etc/cron.allow

Run the following commands to set the owner and permissions on /etc/cron.allow:

# chown root:root /etc/cron.allow

# chmod u-x,og-rwx /etc/cron.allow

OR
Run the following command to remove cron

# zypper remove cronie"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv6|3.1,CSF|PR.AC-4,LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "Check for package at"
          rpm         : "at-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK_NOT
          description : "5.1.9 Ensure at is restricted to authorized users - at.deny"
          info        : "If at is installed in the system, configure /etc/at.allow to allow specific users to use these services. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in those files is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at.

Note: Even though a given user is not listed in at.allow, at jobs can still be run as that user. The at.allow file only controls administrative access to the at command for scheduling and modifying at jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
          solution    : "Run the following command to remove /etc/at.deny:

# rm /etc/at.deny

Run the following command to create /etc/at.allow

# touch /etc/at.allow

Run the following commands to set the owner and permissions on /etc/at.allow:

# chown root:root /etc/at.allow

# chmod u-x,og-rwx /etc/at.allow

OR
Run the following command to remove at:

# zypper remove at"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CIP|007-6-R1,CSCv6|9.1,CSF|PR.AC-4,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/at.deny"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CHECK
          description : "5.1.9 Ensure at is restricted to authorized users - at.allow"
          info        : "If at is installed in the system, configure /etc/at.allow to allow specific users to use these services. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in those files is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at.

Note: Even though a given user is not listed in at.allow, at jobs can still be run as that user. The at.allow file only controls administrative access to the at command for scheduling and modifying at jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
          solution    : "Run the following command to remove /etc/at.deny:

# rm /etc/at.deny

Run the following command to create /etc/at.allow

# touch /etc/at.allow

Run the following commands to set the owner and permissions on /etc/at.allow:

# chown root:root /etc/at.allow

# chmod u-x,og-rwx /etc/at.allow

OR
Run the following command to remove at:

# zypper remove at"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv6|3.1,CSF|PR.AC-4,LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          file        : "/etc/at.allow"
          owner       : "root"
          mask        : "077"
          group       : "root"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "5.1.9 Ensure at is restricted to authorized users - at.deny"
          info        : "If at is installed in the system, configure /etc/at.allow to allow specific users to use these services. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in those files is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at.

Note: Even though a given user is not listed in at.allow, at jobs can still be run as that user. The at.allow file only controls administrative access to the at command for scheduling and modifying at jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
          solution    : "Run the following command to remove /etc/at.deny:

# rm /etc/at.deny

Run the following command to create /etc/at.allow

# touch /etc/at.allow

Run the following commands to set the owner and permissions on /etc/at.allow:

# chown root:root /etc/at.allow

# chmod u-x,og-rwx /etc/at.allow

OR
Run the following command to remove at:

# zypper remove at"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CIP|007-6-R1,CSCv6|9.1,CSF|PR.AC-4,LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>

        <report type:"PASSED">
          description : "5.1.9 Ensure at is restricted to authorized users - at.allow"
          info        : "If at is installed in the system, configure /etc/at.allow to allow specific users to use these services. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in those files is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at.

Note: Even though a given user is not listed in at.allow, at jobs can still be run as that user. The at.allow file only controls administrative access to the at command for scheduling and modifying at jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
          solution    : "Run the following command to remove /etc/at.deny:

# rm /etc/at.deny

Run the following command to create /etc/at.allow

# touch /etc/at.allow

Run the following commands to set the owner and permissions on /etc/at.allow:

# chown root:root /etc/at.allow

# chmod u-x,og-rwx /etc/at.allow

OR
Run the following command to remove at:

# zypper remove at"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CSCv6|3.1,CSF|PR.AC-4,LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4"
          see_also    : "https://workbench.cisecurity.org/files/2854"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.2.1 Ensure permissions on /etc/ssh/sshd_config are configured"
      info        : "The /etc/ssh/sshd_config file contains configuration specifications for sshd. The command below sets the owner and group of the file to root.

Rationale:

The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by non-privileged users."
      solution    : "Run the following commands to set ownership and permissions on /etc/ssh/sshd_config:

# chown root:root /etc/ssh/sshd_config

# chmod og-rwx /etc/ssh/sshd_config"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/ssh/sshd_config"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.2 Ensure permissions on SSH private host key files are configured"
      info        : "An SSH private key is one of two files used in SSH public key authentication. In this authentication method, The possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.

Rationale:

If an unauthorized user obtains the private SSH host key file, the host could be impersonated"
      solution    : "Run the following commands to set permissions, ownership, and group on the private SSH host key files:

# find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod u-x,g-wx,o-rwx {} \;
# find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:ssh_keys {} \;"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec stat -c '\%a \%n \%U \%G' {} \\; | awk -F' ' 'BEGIN { f=0; print \"Octal, File, User, Group\"; } { printf \"%s, %s, %s, %s\",$1,$2,$3,$4; if($4 ~ \"root\"){ if ($3 ~ \"root\" && $1 ~ /[1-6]00/){ printf \" - pass\";} else { ++f; printf \" - fail\"; } } else if($4 ~ \"ssh_keys\"){ if ($3 ~ \"root\" &&  $1 ~ /[1-6][0-4]0/){ printf \" - pass\";} else { ++f; printf \" - fail\"; } } printf \"\\n\"; } END { if(f != 0){ print \"Failures found\"; } else { print \"All files pass\"; } }'"
      expect      : "^All files pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.2.3 Ensure permissions on SSH public host key files are configured"
      info        : "An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.

Rationale:

If a public host key file is modified by an unauthorized user, the SSH service may be compromised."
      solution    : "Run the following commands to set permissions and ownership on the SSH host public key files

# find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod u-x,go-wx {} \;
#find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \;"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/ssh/ssh_host_*_key.pub"
      owner       : "root"
      mask        : "7133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.4 Ensure SSH access is limited"
      info        : "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:

AllowUsers:

The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.

AllowGroups:

The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

DenyUsers:

The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.

DenyGroups:

The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

Rationale:

Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system."
      solution    : "Edit the /etc/ssh/sshd_config file to set one or more of the parameter as follows:

AllowUsers <userlist>

OR

AllowGroups <grouplist>

OR

DenyUsers <userlist>

OR

DenyGroups <grouplist>"
      reference   : "800-53|AC-6(7),CSCv7|4.3,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1A,NESA|M1.1.3,NESA|T5.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/egrep '^\\s*(allow|deny)(users|groups)\\s+\\S+' | /bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
      expect      : "^[\\s]*([Aa]llow|[Dd]eny)([Uu]sers|[Gg]roups)[\\s]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.5 Ensure SSH LogLevel is appropriate"
      info        : "INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.

VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.

Rationale:

SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

LogLevel VERBOSE

OR

LogLevel INFO

Default Value:

LogLevel INFO"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep loglevel | /bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
      expect      : "^[\\s]*[Ll]og[Ll]evel[\\s]+(INFO|VERBOSE)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.7 Ensure SSH MaxAuthTries is set to 4 or less"
      info        : "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.

Rationale:

Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxAuthTries 4

Default Value:

MaxAuthTries 6"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep maxauthtries"
      expect      : "^maxauthtries[\\s]+[1-4][\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.8 Ensure SSH IgnoreRhosts is enabled"
      info        : "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.

Rationale:

Setting this parameter forces users to enter a password when authenticating with ssh."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

IgnoreRhosts yes

Default Value:

IgnoreRhosts yes"
      reference   : "800-171|3.5.2,800-53|AC-14,800-53|IA-5,CSCv7|9.2,CSF|PR.AC-1,ITSG-33|AC-14,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,NESA|T5.6.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep ignorerhosts"
      expect      : "^ignorerhosts[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.9 Ensure SSH HostbasedAuthentication is disabled"
      info        : "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.

Rationale:

Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

HostbasedAuthentication no

Default Value:

HostbasedAuthentication no"
      reference   : "800-171|3.5.2,800-53|AC-14,800-53|IA-5,CSCv7|16.3,CSF|PR.AC-1,ITSG-33|AC-14,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,NESA|T5.6.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep hostbasedauthentication"
      expect      : "^hostbasedauthentication[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.10 Ensure SSH root login is disabled"
      info        : "The PermitRootLogin parameter specifies if the root user can log in using ssh. The default is no.

Rationale:

Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via sudo or su. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitRootLogin no

Default Value:

PermitRootLogin without-password"
      reference   : "800-171|3.1.15,800-171|3.1.2,800-53|AC-17(4),CSCv7|4.3,CSF|PR.AC-3,CSF|PR.PT-4,ITSG-33|AC-17(4),LEVEL|1A,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep permitrootlogin"
      expect      : "^permitrootlogin[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.11 Ensure SSH PermitEmptyPasswords is disabled"
      info        : "The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.

Rationale:

Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitEmptyPasswords no

Default Value:

PermitEmptyPasswords no"
      reference   : "800-171|3.5.2,800-53|IA-5,CSCv7|16.3,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep permitemptypasswords"
      expect      : "^permitemptypasswords[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.12 Ensure SSH PermitUserEnvironment is disabled"
      info        : "The PermitUserEnvironment option allows users to present environment options to the ssh daemon.

Rationale:

Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing a Trojan's programs)"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitUserEnvironment no

Default Value:

PermitUserEnvironment no"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep permituserenvironment"
      expect      : "^permituserenvironment[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.13 Ensure only strong Ciphers are used"
      info        : "This variable limits the ciphers that SSH can use during communication.

Notes:

Some organizations may have stricter requirements for approved ciphers. Ensure that ciphers used are in compliance with site policy

The only 'strong' ciphers currently FIPS 140-2 compliant are: aes256-ctr,aes192-ctr,aes128-ctr

CVE-2013-4548 referenced bellow applies to OpenSSH versions 6.2 and 6.3. If running these versions of Open SSH, Please upgrade to version 6.4 or later to fix the vulnerability, or disable AES-GCM in the server configuration

The Following are the supported ciphers in openSSH 7.9:

3des-cbc

aes128-cbc

aes192-cbc

aes256-cbc

aes128-ctr

aes192-ctr

aes256-ctr

aes128-gcm@openssh.com

aes256-gcm@openssh.com

chacha20-poly1305@openssh.com




Rationale:

Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised.

The DES, Triple DES, and Blowfish ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain cleartext data via a birthday attack against a long-duration encrypted session, aka a 'Sweet32' attack

The RC4 algorithm, as used in the TLS protocol and SSL protocol, does not properly combine state data with key data during the initialization phase, which makes it easier for remote attackers to conduct plaintext-recovery attacks against the initial bytes of a stream by sniffing network traffic that occasionally relies on keys affected by the Invariance Weakness, and then using a brute-force approach involving LSB values, aka the 'Bar Mitzvah' issue

The passwords used during an SSH session encrypted with RC4 can be recovered by an attacker who is able to capture and replay the session

Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plaintext data from an arbitrary block of ciphertext in an SSH session via unknown vectors

The mm_newkeys_from_blob function in monitor_wrap.c, when an AES-GCM cipher is used, does not properly initialize memory for a MAC context data structure, which allows remote authenticated users to bypass intended ForceCommand and login-shell restrictions via packet data that provides a crafted callback address"
      solution    : "Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a comma separated list of the site approved ciphers
Example:

Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

Default Value:

Ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com"
      reference   : "800-171|3.13.11,800-53|SC-13,CSCv7|14.4,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep ciphers | /usr/bin/tr ',' '\\n' | /bin/sed 's/ciphers //' | /bin/awk 'BEGIN { f=0; } { if ($1 ~ /(3des-cbc|aes128-cbc|aes192-cbc|aes256-cbc|arcfour|arcfour128|arcfour256|blowfish-cbc|cast128-cbc|rijndael-cbc@lysator\.liu\.se)/){ printf $1\" - fail\\n\"; ++f; } else { printf $1\" - pass\\n\"; } } END { if(f!=0){ print \"Failures found\" } else { print \"All results passing\" }}'"
      expect      : "^All results passing$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.14 Ensure only strong MAC algorithms are used"
      info        : "This variable limits the types of MAC algorithms that SSH can use during communication.

Notes:

Some organizations may have stricter requirements for approved MACs. Ensure that MACs used are in compliance with site policy

The only 'strong' MACs currently FIPS 140-2 approved are hmac-sha2-256 and hmac-sha2-512

The Supported MACs are:

hmac-md5

hmac-md5-96

hmac-sha1

hmac-sha1-96

hmac-sha2-256

hmac-sha2-512

umac-64@openssh.com

umac-128@openssh.com

hmac-md5-etm@openssh.com

hmac-md5-96-etm@openssh.com

hmac-sha1-etm@openssh.com

hmac-sha1-96-etm@openssh.com

hmac-sha2-256-etm@openssh.com

hmac-sha2-512-etm@openssh.com

umac-64-etm@openssh.com

umac-128-etm@openssh.com

Rationale:

MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information"
      solution    : "Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site approved MACs
Example:

MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256

Default Value:

MACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1"
      reference   : "800-171|3.13.11,800-53|SC-13,CSCv7|14.4,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep -i MACs | /usr/bin/tr ',' '\\n' | /bin/sed 's/macs //' | /bin/awk 'BEGIN { f=0; } { if ($1 ~ /(hmac-md5|hmac-md5-96|hmac-ripemd160|hmac-sha1|hmac-sha1-96|umac-64@openssh\.com|hmac-md5-etm@openssh\.com|hmac-md5-96-etm@openssh\.com|hmac-ripemd160-etm@openssh\.com|hmac-sha1-etm@openssh\.com|hmac-sha1-96-etm@openssh\.com|umac-64-etm@openssh\.com|umac-128-etm@openssh\.com)/){ printf $1\" - fail\\n\"; ++f; } else { printf $1\" - pass\\n\"; } } END { if(f!=0){ print \"Failures found\" } else { print \"All results passing\" }}'"
      expect      : "^All results passing$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.15 Ensure only strong Key Exchange algorithms are used"
      info        : "Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received

Notes:

Kex algorithms have a higher preference the earlier they appear in the list

Some organizations may have stricter requirements for approved Key exchange algorithms. Ensure that Key exchange algorithms used are in compliance with site policy.

The only Key Exchange Algorithms currently FIPS 140-2 approved are: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256

The Key Exchange algorithms supported by OpenSSH 7.9 are:

curve25519-sha256

curve25519-sha256@libssh.org

diffie-hellman-group1-sha1

diffie-hellman-group14-sha1

diffie-hellman-group14-sha256

diffie-hellman-group16-sha512

diffie-hellman-group18-sha512

diffie-hellman-group-exchange-sha1

diffie-hellman-group-exchange-sha256

ecdh-sha2-nistp256

ecdh-sha2-nistp384

ecdh-sha2-nistp521




Rationale:

Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks"
      solution    : "Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma separated list of the site approved key exchange algorithms
Example

KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256

Default Value:

KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1"
      reference   : "800-171|3.13.11,800-53|SC-13,CSCv7|14.4,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep kexalgorithms | /usr/bin/tr ',' '\\n' | /bin/sed 's/kexalgorithms //' | /bin/awk 'BEGIN { f=0; } { if ($1 ~ /(diffie-hellman-group1-sha1|diffie-hellman-group14-sha1|diffie-hellman-group-exchange-sha1)/){ printf $1\" - fail\\n\"; ++f; } else { printf $1\" - pass\\n\"; } } END { if(f!=0){ print \"Failures found\" } else { print \"All results passing\" }}'"
      expect      : "^All results passing$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.16 Ensure SSH Idle Timeout Interval is configured - clientalivecountmax"
      info        : "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions.

ClientAliveInterval sets a timeout interval in seconds after which if no data has been received from the client, sshd will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

ClientAliveCountMax sets the number of client alive messages which may be sent without sshd receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. The default value is 3.

The client alive messages are sent through the encrypted channel

Setting ClientAliveCountMax to 0 disables connection termination

Example: If the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is set to 3, the client ssh session will be terminated after 45 seconds of idle time.

Rationale:

Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value reduces this risk.

The recommended ClientAliveInterval setting is 300 seconds (5 minutes)

The recommended ClientAliveCountMax setting is 3

The ssh session would send three keep alive messages at 5 minute intervals. If no response is received after the third keep alive message, the ssh session would be terminated after 15 minutes."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy. This should include ClientAliveInterval between 1 and 300 and ClientAliveCountMax of 3 or less:

ClientAliveInterval 300

ClientAliveCountMax 3

Default Value:

ClientAliveInterval 0

ClientAliveCountMax 3"
      reference   : "800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep clientalivecountmax"
      expect      : "^[\\s]*clientalivecountmax[\\s]+[0-3][\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.16 Ensure SSH Idle Timeout Interval is configured - clientaliveinterval"
      info        : "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions.

ClientAliveInterval sets a timeout interval in seconds after which if no data has been received from the client, sshd will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

ClientAliveCountMax sets the number of client alive messages which may be sent without sshd receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. The default value is 3.

The client alive messages are sent through the encrypted channel

Setting ClientAliveCountMax to 0 disables connection termination

Example: If the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is set to 3, the client ssh session will be terminated after 45 seconds of idle time.

Rationale:

Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value reduces this risk.

The recommended ClientAliveInterval setting is 300 seconds (5 minutes)

The recommended ClientAliveCountMax setting is 3

The ssh session would send three keep alive messages at 5 minute intervals. If no response is received after the third keep alive message, the ssh session would be terminated after 15 minutes."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy. This should include ClientAliveInterval between 1 and 300 and ClientAliveCountMax of 3 or less:

ClientAliveInterval 300

ClientAliveCountMax 3

Default Value:

ClientAliveInterval 0

ClientAliveCountMax 3"
      reference   : "800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep clientaliveinterval"
      expect      : "^[\\s]*clientaliveinterval[\\s]+([1-9]|[1-8][0-9]|9[0-9]|[12][0-9]{2}|300)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.17 Ensure SSH LoginGraceTime is set to one minute or less"
      info        : "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.

Rationale:

Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

LoginGraceTime 60

Default Value:

LoginGraceTime 120"
      reference   : "800-53|SC-5,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,LEVEL|1A,NESA|T3.3.1,NIAv2|GS10c,NIAv2|GS8e"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep logingracetime"
      expect      : "^[\\s]*logingracetime[\\s]+([1-9]|[1-5][0-9]|60)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.18 Ensure SSH warning banner is configured"
      info        : "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.

Rationale:

Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

Banner /etc/issue.net"
      reference   : "800-171|3.1.9,800-53|AC-8,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep banner"
      expect      : "^[\\s]*banner[\\s]+/etc/issue\\.net[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.19 Ensure SSH PAM is enabled"
      info        : "UsePAM Enables the Pluggable Authentication Module interface. If set to 'yes' this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types

Rationale:

When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

UsePAM yes

Impact:

If UsePAM is enabled, you will not be able to run sshd(8) as a non-root user.

Default Value:

usePAM yes"
      reference   : "800-171|3.5.2,800-53|IA-5,CSCv7|5.1,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep usepam"
      expect      : "^[\\s]*usepam[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.21 Ensure SSH MaxStartups is configured"
      info        : "The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.

Rationale:

To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

maxstartups 10:30:60"
      reference   : "800-53|AC-10,CSCv7|5.1,ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep -i maxstartups"
      expect      : "^[\\s]*maxstartups 10:30:60[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.22 Ensure SSH MaxSessions is limited"
      info        : "The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.

Rationale:

To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxSessions 10

Default Value:

MaxSessions 10"
      reference   : "800-53|AC-10,CSCv7|5.1,ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/sshd -T | /bin/grep -i maxsessions"
      expect      : "^[\\s]*maxsessions ([1-9]|10)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.1 Ensure password creation requirements are configured - minlen"
      info        : "The pam_cracklib.so module checks the strength of passwords. It performs checks including ensuring a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following are definitions of the pam_cracklib.so options:

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

Additional module options may be set. This recommendation only covers:

minlen=

dcredit=

ucredit=

ocredit=

lcredit=

NOTES: The settings shown above are one possible policy. If local site policy requires stricter settings, alter these values to conform to your organization's password policies.

Rationale:

Strong passwords and limited attempts before locking an account protect systems from being hacked through brute force methods."
      solution    : "Run the following command:

# pam-config -a --cracklib-minlen=14 --cracklib-retry=3 --cracklib-lcredit=-1 --cracklib-ucredit=-1 --cracklib-dcredit=-1 --cracklib-ocredit=-1 --cracklib

OR
Edit the /etc/pam.d/common-password file to include the appropriate options for pam_cracklib.so and to conform to site policy:

password requisite pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-password"
      regex       : "^[\\s]*password[\\s]+(requisite|required).*minlen"
      expect      : "[\\s]+minlen=(1[4-9]|[1-9][0-9]+)\\b"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.1 Ensure password creation requirements are configured - dcredit"
      info        : "The pam_cracklib.so module checks the strength of passwords. It performs checks including ensuring a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following are definitions of the pam_cracklib.so options:

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

Additional module options may be set. This recommendation only covers:

minlen=

dcredit=

ucredit=

ocredit=

lcredit=

NOTES: The settings shown above are one possible policy. If local site policy requires stricter settings, alter these values to conform to your organization's password policies.

Rationale:

Strong passwords and limited attempts before locking an account protect systems from being hacked through brute force methods."
      solution    : "Run the following command:

# pam-config -a --cracklib-minlen=14 --cracklib-retry=3 --cracklib-lcredit=-1 --cracklib-ucredit=-1 --cracklib-dcredit=-1 --cracklib-ocredit=-1 --cracklib

OR
Edit the /etc/pam.d/common-password file to include the appropriate options for pam_cracklib.so and to conform to site policy:

password requisite pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-password"
      regex       : "^[\\s]*password[\\s]+(requisite|required).*dcredit"
      expect      : "[\\s]+dcredit=-[1-9]\\b"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.1 Ensure password creation requirements are configured - ucredit"
      info        : "The pam_cracklib.so module checks the strength of passwords. It performs checks including ensuring a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following are definitions of the pam_cracklib.so options:

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

Additional module options may be set. This recommendation only covers:

minlen=

dcredit=

ucredit=

ocredit=

lcredit=

NOTES: The settings shown above are one possible policy. If local site policy requires stricter settings, alter these values to conform to your organization's password policies.

Rationale:

Strong passwords and limited attempts before locking an account protect systems from being hacked through brute force methods."
      solution    : "Run the following command:

# pam-config -a --cracklib-minlen=14 --cracklib-retry=3 --cracklib-lcredit=-1 --cracklib-ucredit=-1 --cracklib-dcredit=-1 --cracklib-ocredit=-1 --cracklib

OR
Edit the /etc/pam.d/common-password file to include the appropriate options for pam_cracklib.so and to conform to site policy:

password requisite pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-password"
      regex       : "^[\\s]*password[\\s]+(requisite|required).*ucredit"
      expect      : "[\\s]+ucredit=-[1-9]\\b"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.1 Ensure password creation requirements are configured - ocredit"
      info        : "The pam_cracklib.so module checks the strength of passwords. It performs checks including ensuring a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following are definitions of the pam_cracklib.so options:

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

Additional module options may be set. This recommendation only covers:

minlen=

dcredit=

ucredit=

ocredit=

lcredit=

NOTES: The settings shown above are one possible policy. If local site policy requires stricter settings, alter these values to conform to your organization's password policies.

Rationale:

Strong passwords and limited attempts before locking an account protect systems from being hacked through brute force methods."
      solution    : "Run the following command:

# pam-config -a --cracklib-minlen=14 --cracklib-retry=3 --cracklib-lcredit=-1 --cracklib-ucredit=-1 --cracklib-dcredit=-1 --cracklib-ocredit=-1 --cracklib

OR
Edit the /etc/pam.d/common-password file to include the appropriate options for pam_cracklib.so and to conform to site policy:

password requisite pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-password"
      regex       : "^[\\s]*password[\\s]+(requisite|required).*ocredit"
      expect      : "[\\s]+ocredit=-[1-9]\\b"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.1 Ensure password creation requirements are configured - lcredit"
      info        : "The pam_cracklib.so module checks the strength of passwords. It performs checks including ensuring a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following are definitions of the pam_cracklib.so options:

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

Additional module options may be set. This recommendation only covers:

minlen=

dcredit=

ucredit=

ocredit=

lcredit=

NOTES: The settings shown above are one possible policy. If local site policy requires stricter settings, alter these values to conform to your organization's password policies.

Rationale:

Strong passwords and limited attempts before locking an account protect systems from being hacked through brute force methods."
      solution    : "Run the following command:

# pam-config -a --cracklib-minlen=14 --cracklib-retry=3 --cracklib-lcredit=-1 --cracklib-ucredit=-1 --cracklib-dcredit=-1 --cracklib-ocredit=-1 --cracklib

OR
Edit the /etc/pam.d/common-password file to include the appropriate options for pam_cracklib.so and to conform to site policy:

password requisite pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1"
      reference   : "800-171|3.5.7,800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-password"
      regex       : "^[\\s]*password[\\s]+(requisite|required).*lcredit"
      expect      : "[\\s]+lcredit=-[1-9]\\b"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.2 Ensure lockout for failed password attempts is configured - common-auth deny"
      info        : "Lock out users after n unsuccessful consecutive login attempts.

These settings are commonly configured with the pam_faillock.so module. Some environments may continue using the pam_tally2.so module, where this older method may simplify automation in mixed environments.

Set the lockout number in deny= to the policy in effect at your site.

unlock_time=_n_ is the number of seconds the account remains locked after the number of attempts configured in deny=_n_ has been met.

Notes:

Additional module options may be set, recommendation only covers those listed here.

If you want to require the administrator to unlock accounts, leave off the unlock_time option

The default location for attempted accesses is recorded in /var/log/tallylog

Use of the 'audit' keyword may log credentials in the case of user error during authentication. This risk should be evaluated in the context of the site policies of your organization.

You may also lock out root, this should be considered carefully due to the ability to have this setting lock all access to the system

As an option on the same line:

auth required pam_tally2.so deny=5 even_deny_root unlock_time=900

To define a different lockout time for root:

auth required pam_tally2.so deny=5 root_unlock_time=120  unlock_time=900

If a user has been locked out because they have reached the maximum consecutive failure count defined by deny= in the pam_tally2.so module, the user can be unlocked by issuing following command. This command sets the failed count to 0, effectively unlocking the user.

# pam_tally2 -u <username> --reset




Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
      solution    : "Modify the deny= and unlock_time= parameters to conform to local site policy, Not to be greater than deny=5:
Edit the file /etc/pam.d/common-auth and add the following line:

auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900

Note: The ordering on the lines is important. The additional line needs to below the line auth required pam_env.so and above all password validation lines.
Example:

auth        required      pam_env.so
auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900
auth        sufficient    pam_unix.so nullok try_first_pass
auth        required      pam_deny.so

Edit the /etc/pam.d/common-account file and add the following pam_tally2.so line:

account     required      pam_tally2.so"
      reference   : "800-171|3.1.8,800-53|AC-7,CN-L3|8.1.4.1(b),CSCv6|16.7,CSCv7|16.7,ITSG-33|AC-7,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-auth"
      regex       : "^[\\s]*auth[\\s]+required[\\s]+pam_tally2\\.so.*deny="
      expect      : "^[\\s]*auth[\\s]+required[\\s]+pam_tally2\\.so.*deny=[1-5]\\b"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.2 Ensure lockout for failed password attempts is configured - common-auth unlock_time"
      info        : "Lock out users after n unsuccessful consecutive login attempts.

These settings are commonly configured with the pam_faillock.so module. Some environments may continue using the pam_tally2.so module, where this older method may simplify automation in mixed environments.

Set the lockout number in deny= to the policy in effect at your site.

unlock_time=_n_ is the number of seconds the account remains locked after the number of attempts configured in deny=_n_ has been met.

Notes:

Additional module options may be set, recommendation only covers those listed here.

If you want to require the administrator to unlock accounts, leave off the unlock_time option

The default location for attempted accesses is recorded in /var/log/tallylog

Use of the 'audit' keyword may log credentials in the case of user error during authentication. This risk should be evaluated in the context of the site policies of your organization.

You may also lock out root, this should be considered carefully due to the ability to have this setting lock all access to the system

As an option on the same line:

auth required pam_tally2.so deny=5 even_deny_root unlock_time=900

To define a different lockout time for root:

auth required pam_tally2.so deny=5 root_unlock_time=120  unlock_time=900

If a user has been locked out because they have reached the maximum consecutive failure count defined by deny= in the pam_tally2.so module, the user can be unlocked by issuing following command. This command sets the failed count to 0, effectively unlocking the user.

# pam_tally2 -u <username> --reset




Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
      solution    : "Modify the deny= and unlock_time= parameters to conform to local site policy, Not to be greater than deny=5:
Edit the file /etc/pam.d/common-auth and add the following line:

auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900

Note: The ordering on the lines is important. The additional line needs to below the line auth required pam_env.so and above all password validation lines.
Example:

auth        required      pam_env.so
auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900
auth        sufficient    pam_unix.so nullok try_first_pass
auth        required      pam_deny.so

Edit the /etc/pam.d/common-account file and add the following pam_tally2.so line:

account     required      pam_tally2.so"
      reference   : "800-171|3.1.8,800-53|AC-7,CN-L3|8.1.4.1(b),CSCv6|16.7,CSCv7|16.7,ITSG-33|AC-7,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-auth"
      regex       : "^[\\s]*auth[\\s]+required[\\s]+pam_tally2\\.so.*unlock_time"
      expect      : "^[\\s]*auth[\\s]+required[\\s]+pam_tally2\\.so.*unlock_time=(9[0-9][0-9]|[1-9][0-9]{3,})\\b"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.2 Ensure lockout for failed password attempts is configured - common-account pam_tally2.so"
      info        : "Lock out users after n unsuccessful consecutive login attempts.

These settings are commonly configured with the pam_faillock.so module. Some environments may continue using the pam_tally2.so module, where this older method may simplify automation in mixed environments.

Set the lockout number in deny= to the policy in effect at your site.

unlock_time=_n_ is the number of seconds the account remains locked after the number of attempts configured in deny=_n_ has been met.

Notes:

Additional module options may be set, recommendation only covers those listed here.

If you want to require the administrator to unlock accounts, leave off the unlock_time option

The default location for attempted accesses is recorded in /var/log/tallylog

Use of the 'audit' keyword may log credentials in the case of user error during authentication. This risk should be evaluated in the context of the site policies of your organization.

You may also lock out root, this should be considered carefully due to the ability to have this setting lock all access to the system

As an option on the same line:

auth required pam_tally2.so deny=5 even_deny_root unlock_time=900

To define a different lockout time for root:

auth required pam_tally2.so deny=5 root_unlock_time=120  unlock_time=900

If a user has been locked out because they have reached the maximum consecutive failure count defined by deny= in the pam_tally2.so module, the user can be unlocked by issuing following command. This command sets the failed count to 0, effectively unlocking the user.

# pam_tally2 -u <username> --reset




Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
      solution    : "Modify the deny= and unlock_time= parameters to conform to local site policy, Not to be greater than deny=5:
Edit the file /etc/pam.d/common-auth and add the following line:

auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900

Note: The ordering on the lines is important. The additional line needs to below the line auth required pam_env.so and above all password validation lines.
Example:

auth        required      pam_env.so
auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900
auth        sufficient    pam_unix.so nullok try_first_pass
auth        required      pam_deny.so

Edit the /etc/pam.d/common-account file and add the following pam_tally2.so line:

account     required      pam_tally2.so"
      reference   : "800-171|3.1.8,800-53|AC-7,CN-L3|8.1.4.1(b),CSCv6|16.7,CSCv7|16.7,ITSG-33|AC-7,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-account"
      regex       : "^[\\s]*account[\\s]+required[\\s]+pam_tally2\\.so"
      expect      : "^[\\s]*account[\\s]+required[\\s]+pam_tally2\\.so"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.3 Ensure password reuse is limited"
      info        : "The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.

Notes:

Additional module options may be set, recommendation only covers those listed here.

This setting only applies to local accounts.

This option is configured with the remember=n module option in /etc/pam.d/common-password

Rationale:

Forcing users not to reuse their past passwords make it less likely that an attacker will be able to guess the password."
      solution    : "Run the following command:

# pam-config -a --pwhistory --pwhistory-remember=5

OR
Edit the file /etc/pam.d/common-password to include the remember= option and conform to site policy as shown:

password    required      pam_pwhistory.so remember=5"
      reference   : "800-171|3.5.8,800-53|IA-5(1),CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM22c,PCI-DSSv3.1|8.2.5,PCI-DSSv3.2|8.2.5,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/pam.d/common-password"
      regex       : "^[\\s]*password[\\s]+(requisite|required).*remember"
      expect      : "remember[\\s]*=[\\s]*([5-9]|[1-9][0-9]+)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1.1 Ensure password hashing algorithm is SHA-512"
      info        : "Login passwords are hashed and stored in the /etc/shadow file.

Note: These changes only apply to accounts configured on the local system.

Rationale:

The SHA-512 algorithm provides much stronger hashing than MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords."
      solution    : "Edit the /etc/login.defs file and modify ENCRYPT_METHOD to SHA512:

ENCRYPT_METHOD sha512

Notes:

Any system accounts that need to be expired should be carefully done separately by the system administrator to prevent any potential problems

If it is determined that the password algorithm being used is not SHA-512, once it is changed, it is recommended that all user ID's be immediately expired and forced to change their passwords on next login, In accordance with local site policies

To accomplish this, the following command can be used

# awk -F: '( $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'' && $1 != 'nfsnobody' ) { print $1 }' /etc/passwd | xargs -n 1 chage -d 0

Default Value:

ENCRYPT_METHOD sha512"
      reference   : "800-171|3.13.11,800-53|SC-13,CSCv7|16.4,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*ENCRYPT_METHOD[\\s]+"
      expect      : "^[\\s]*ENCRYPT_METHOD[\\s]+SHA512[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1.2 Ensure password expiration is 365 days or less - PASS_MAX_DAYS"
      info        : "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 365 days.

Notes:

A value of -1 will disable password expiration.

The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.

Rationale:

The window of opportunity for an attacker to leverage compromised credentials via a brute force attack, using already compromised credentials, or gaining the credentials by other means, can be limited by the age of the password. Therefore, reducing the maximum age of a password can also reduce an attacker's window of opportunity.

Requiring passwords to be changed helps to mitigate the risk posed by the poor security practice of passwords being used for multiple accounts, and poorly implemented off-boarding and change of responsibility policies. This should not be considered a replacement for proper implementation of these policies and practices.

Note: If it is believed that a user's password may have been compromised, the user's account should be locked immediately. Local policy should be followed to ensure the secure update of their password."
      solution    : "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>"
      reference   : "800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_MAX_DAYS[\\s]"
      expect      : "^[\\s]*PASS_MAX_DAYS[\\s]+([1-9]|[1-8][0-9]|9[0-9]|[12][0-9]{2}|3[0-5][0-9]|36[0-5])[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.1.2 Ensure password expiration is 365 days or less - users"
      info        : "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 365 days.

Notes:

A value of -1 will disable password expiration.

The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.

Rationale:

The window of opportunity for an attacker to leverage compromised credentials via a brute force attack, using already compromised credentials, or gaining the credentials by other means, can be limited by the age of the password. Therefore, reducing the maximum age of a password can also reduce an attacker's window of opportunity.

Requiring passwords to be changed helps to mitigate the risk posed by the poor security practice of passwords being used for multiple accounts, and poorly implemented off-boarding and change of responsibility policies. This should not be considered a replacement for proper implementation of these policies and practices.

Note: If it is believed that a user's password may have been compromised, the user's account should be locked immediately. Local policy should be followed to ensure the secure update of their password."
      solution    : "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>"
      reference   : "800-53|IA-5(1),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "echo 'Username, Maximum number of days between password change'; output=\"\"; failures=0; for i in $(egrep \"^[^:]+:[^\!*]\" /etc/shadow | cut -d: -f1); do change_date=$(chage --list \"$i\" | grep 'Maximum number of days between password change' | cut -d: -f2 | awk '{$1=$1};1'); output=\"${i}, ${change_date}\"; if [ $change_date -le 365 ] && [ $change_date -ge 1 ]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; failures=$((failures+1)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1.3 Ensure minimum days between password changes is configured - PASS_MIN_DAYS"
      info        : "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 1 or more days.

Rationale:

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls."
      solution    : "Set the PASS_MIN_DAYS parameter to 1 in /etc/login.defs :

PASS_MIN_DAYS 1

Modify user parameters for all users with a password set to match:

# chage --mindays 1 <user>"
      reference   : "800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_MIN_DAYS[\\s]+"
      expect      : "^[\\s]*PASS_MIN_DAYS[\\s]+([7-9]|[1-9][0-9]+)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.1.3 Ensure minimum days between password changes is configured - users"
      info        : "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 1 or more days.

Rationale:

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls."
      solution    : "Set the PASS_MIN_DAYS parameter to 1 in /etc/login.defs :

PASS_MIN_DAYS 1

Modify user parameters for all users with a password set to match:

# chage --mindays 1 <user>"
      reference   : "800-53|IA-5(1),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "echo 'Username, Minimum number of days between password change'; output=\"\"; failures=0; for i in $(egrep \"^[^:]+:[^\!*]\" /etc/shadow | cut -d: -f1); do change_date=$(chage --list \"$i\" |/bin/grep 'Minimum number of days between password change' | cut -d: -f2 |/bin/awk '{$1=$1};1'); output=\"${i}, ${change_date}\"; if [ $change_date -ge 7 ]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; failures=$((failures+1)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1.4 Ensure password expiration warning days is 7 or more - PASS_WARN_AGE"
      info        : "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.

Rationale:

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered."
      solution    : "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs :

PASS_WARN_AGE 7

Modify user parameters for all users with a password set to match:

# chage --warndays 7 <user>"
      reference   : "800-53|IA-5(1),CIP|007-6-R5,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_WARN_AGE[\\s]+"
      expect      : "^[\\s]*PASS_WARN_AGE[\\s]+([7-9]|[1-9][0-9]+)\\s*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.1.4 Ensure password expiration warning days is 7 or more - users"
      info        : "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.

Rationale:

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered."
      solution    : "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs :

PASS_WARN_AGE 7

Modify user parameters for all users with a password set to match:

# chage --warndays 7 <user>"
      reference   : "800-53|AC-9(3),CSCv7|4.4,ITSG-33|AC-9(3),LEVEL|1A,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "echo 'Username, Number of days of warning before password expires'; output=\"\"; failures=0; for i in $(egrep \"^[^:]+:[^\!*]\" /etc/shadow | cut -d: -f1); do change_date=$(chage --list \"$i\" |/bin/grep 'Number of days of warning before password expires' | cut -d: -f2 |/bin/awk '{$1=$1};1'); output=\"${i}, ${change_date}\"; if [ $change_date -ge 7 ]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; failures=$((failures+1)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.1.5 Ensure inactive password lock is 30 days or less - INACTIVE"
      info        : "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.

Note: A value of -1 would disable this setting.

Rationale:

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies."
      solution    : "Run the following command to set the default password inactivity period to 30 days:

# useradd -D -f 30

Modify user parameters for all users with a password set to match:

# chage --inactive 30 <user>"
      reference   : "800-53|AC-2(3),CIP|004-6-R5,CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv6|16.1,CSCv6|16.6,CSCv7|16.9,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,PCI-DSSv3.1|8.1.4,PCI-DSSv3.2|8.1.4,TBA-FIISB|36.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/sbin/useradd -D | /bin/grep INACTIVE"
      expect      : "^INACTIVE=(3[0-5]|[1-2][0-9]|[0-9])$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.1.5 Ensure inactive password lock is 30 days or less - users"
      info        : "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.

Note: A value of -1 would disable this setting.

Rationale:

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies."
      solution    : "Run the following command to set the default password inactivity period to 30 days:

# useradd -D -f 30

Modify user parameters for all users with a password set to match:

# chage --inactive 30 <user>"
      reference   : "800-53|AC-2(3),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv7|16.9,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,TBA-FIISB|36.2.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "echo 'Username, Inactive password days'; output=\"\"; failures=0; for i in $(egrep \"^[^:]+:[^!*]\" /etc/shadow | cut -d: -f1); do password_expires=$(egrep \"^\\b$i\\b\" /etc/shadow | cut -d: -f7 | tr -d '\\n'); if [ -z \"$password_expires\" ]; then password_expires=-1; fi; output=\"${i}, ${password_expires}\"; if [ $password_expires -le 30 ] && [ $password_expires -ge 1 ]; then status=\"Pass\"; else status=\"Fail\"; failures=$((failures+1)); fi; echo \"${output} - ${status}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.1.6 Ensure all users last password change date is in the past"
      info        : "All users should have a password change date in the past.

Rationale:

If a users recorded password change date is in the future then they could bypass any set password expiration."
      solution    : "Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate."
      reference   : "800-171|3.5.2,800-53|IA-5,CN-L3|8.1.4.1(a),CSCv7|4.4,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,NESA|T5.5.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "echo 'Username, Current Days, Last Password Change Days'; output=\"\"; failures=0; for i in $(cut -d: -f1 < /etc/shadow); do now=$(($(date +%s) / 86400)); change_date=$(chage --list \"$i\" |/bin/grep 'Last password change' | cut -d: -f2 |/bin/awk '{$1=$1};1'); if [[ $change_date != \"never\" ]]; then epoch_change_date=$(($(date -d \"${change_date}\" +%s) / 86400)); else epoch_change_date='Never'; fi; output=\"${i}, ${now}, ${epoch_change_date}\"; if [[ $epoch_change_date < $now ]]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; ((failures++)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.2 Ensure system accounts are secured - /etc/passwd"
      info        : "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell.

Rationale:

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.

Note: The root, sync, shutdown, and halt users are exempted from requiring a non-login shell."
      solution    : "Run the commands appropriate for your distribution:
Set the shell for any accounts returned by the audit to nologin:

# usermod -s $(which nologin) <user>

Lock any non root accounts returned by the audit:

# usermod -L <user>

The following command will set all system accounts to a non login shell:

# awk -F: '($1!='root' && $1!='sync' && $1!='shutdown' && $1!='halt' && $1!~/^\+/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'' && $7!='''$(which nologin)''' && $7!='/bin/false' && $7!='/usr/bin/false') {print $1}' /etc/passwd | while read -r user; do usermod -s '$(which nologin)' '$user'; done

The following command will automatically lock not root system accounts:

# awk -F: '($1!='root' && $1!~/^\+/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!='L' && $2!='LK') {print $1}' | while read -r user; do usermod -L '$user'; done"
      reference   : "800-171|3.1.5,800-53|AC-6(1),CSF|PR.AC-4,ISO/IEC-27001|A.9.4.4,ITSG-33|AC-6(1),LEVEL|1A,NESA|T5.1.1,NESA|T5.4.4,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|VL3b,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/awk -F: '($1!=\"root\" && $1!=\"sync\" && $1!=\"shutdown\" && $1!=\"halt\" && $1!~/^\\+/ && $3<'\"$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' && $7!=\"'\"$(/usr/bin/which nologin)\"'\" && $7!=\"/bin/false\" && $7!=\"/usr/bin/false\") {print}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.2 Ensure system accounts are secured - passwd"
      info        : "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell.

Rationale:

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.

Note: The root, sync, shutdown, and halt users are exempted from requiring a non-login shell."
      solution    : "Run the commands appropriate for your distribution:
Set the shell for any accounts returned by the audit to nologin:

# usermod -s $(which nologin) <user>

Lock any non root accounts returned by the audit:

# usermod -L <user>

The following command will set all system accounts to a non login shell:

# awk -F: '($1!='root' && $1!='sync' && $1!='shutdown' && $1!='halt' && $1!~/^\+/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'' && $7!='''$(which nologin)''' && $7!='/bin/false' && $7!='/usr/bin/false') {print $1}' /etc/passwd | while read -r user; do usermod -s '$(which nologin)' '$user'; done

The following command will automatically lock not root system accounts:

# awk -F: '($1!='root' && $1!~/^\+/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!='L' && $2!='LK') {print $1}' | while read -r user; do usermod -L '$user'; done"
      reference   : "800-171|3.1.5,800-53|AC-6(1),CSF|PR.AC-4,ISO/IEC-27001|A.9.4.4,ITSG-33|AC-6(1),LEVEL|1A,NESA|T5.1.1,NESA|T5.4.4,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|VL3b,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/awk -F: '($1!=\"root\" && $1!~/^\\+/ && $3<'\"$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"') {print $1}' /etc/passwd | /usr/bin/xargs -I '{}' passwd -S '{}' | /bin/awk '($2!=\"L\" && $2!=\"LK\") {print $1}' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.3 Ensure default group for the root account is GID 0"
      info        : "The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.

Rationale:

Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users."
      solution    : "Run the following command to set the root user default group to GID 0 :

# usermod -g 0 root"
      reference   : "800-171|3.1.1,800-53|AC-2,CN-L3|7.1.3.2(d),CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NESA|T5.2.1,NESA|T5.2.2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/passwd"
      regex       : "^root:"
      expect      : "^root:x:0:0:"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Check for TMOUT in any /etc/profile.d/*.sh file"
          cmd         : "for f in /etc/profile.d/*.sh ; do grep -Eq '(^|^[^#]*;)\\s*(readonly|export(\\s+[^$#;]+\\s*)*)?\\s*TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9])\\b' $f && grep -Eq '(^|^[^#]*;)\\s*readonly\\s+TMOUT\\b' $f && grep -Eq '(^|^[^#]*;)\\s*export\\s+([^$#;]+\\s+)*TMOUT\\b' $f && echo \"TMOUT correctly configured in file: $f\"; done | /bin/awk '{print} END {if (NR == 0) print \"TMOUT not found\"}'"
          expect      : "TMOUT correctly configured in file:"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "5.4.4 Ensure default user shell timeout is configured"
          info        : "TMOUT is an environmental setting that determines the timeout of a shell in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables timeout.

readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.

export TMOUT - exports the TMOUT variable

System Wide Shell Configuration Files:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bash.bashrc - System wide version of .bashrc. etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bash.bashrc.

Rationale:

Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.

Notes:

The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files are also checked. Other methods of setting a timeout exist for other shells not covered here.

The TMOUT option applies to the active shell only. In case a user switches from one shell to another, it needs another full cycle to close the remaining shell.

/etc/profile may get updated by YaST2 Online Update

Ensure that the timeout conforms to your local policy."
          solution    : "Review /etc/bash.bashrc, /etc/profile, and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0.
Configure TMOUT in a file ending in .sh in the /etc/profile.d/ directory.
TMOUT configuration examples:

As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT

As a single line:

readonly TMOUT=900 ; export TMOUT"
          reference   : "800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "for f in /etc/profile.d/*.sh ; do grep -Eq '(^|^[^#]*;)\\s*(readonly|export(\\s+[^$#;]+\\s*)*)?\\s*TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9])\\b' $f && grep -Eq '(^|^[^#]*;)\\s*readonly\\s+TMOUT\\b' $f && grep -Eq '(^|^[^#]*;)\\s*export\\s+([^$#;]+\\s+)*TMOUT\\b' $f && echo \"TMOUT correctly configured in file: $f\"; done | /bin/awk '{print} END {if (NR == 0) print \"TMOUT not found\"}'"
          expect      : "TMOUT correctly configured in file:"
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "5.4.4 Ensure default user shell timeout is configured"
          info        : "TMOUT is an environmental setting that determines the timeout of a shell in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables timeout.

readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.

export TMOUT - exports the TMOUT variable

System Wide Shell Configuration Files:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bash.bashrc - System wide version of .bashrc. etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bash.bashrc.

Rationale:

Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.

Notes:

The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files are also checked. Other methods of setting a timeout exist for other shells not covered here.

The TMOUT option applies to the active shell only. In case a user switches from one shell to another, it needs another full cycle to close the remaining shell.

/etc/profile may get updated by YaST2 Online Update

Ensure that the timeout conforms to your local policy."
          solution    : "Review /etc/bash.bashrc, /etc/profile, and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0.
Configure TMOUT in a file ending in .sh in the /etc/profile.d/ directory.
TMOUT configuration examples:

As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT

As a single line:

readonly TMOUT=900 ; export TMOUT"
          reference   : "800-171|3.1.11,800-53|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
          see_also    : "https://workbench.cisecurity.org/files/2854"
          cmd         : "/bin/egrep '^\\s*TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9])\\b' /etc/profile /etc/profile.local /etc/bash.bashrc | /bin/awk '{print} END {if (NR > 0) { print \"TMOUT found and configured\" } else { print \"fail\" } }'"
          expect      : "TMOUT found and configured"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.5 Ensure default user umask is configured - profiles"
      info        : "The user file-creation mode mask (umask) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-rw-). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

The user creating the directories or files has the discretion of changing the permissions by:

Issuing the chmod command

Choosing a different default umask

Adding the umask command into a User Shell Configuration File, ( .bash_profile or .bashrc), in their home directory

The permissions listed are not masked by umask. ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027. This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----.

umask can be set with either octal or Symbolic values:

Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.

Symbolic Value - Represented by a comma separated list for User u, group g, and world/other o.




System Wide Shell Configuration Files:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bash.bashrc - System wide version of .bashrc. etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bashrc.

User Shell Configuration Files:

~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.

~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

Rationale:

Setting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.

Notes:

The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked.

Other methods of setting a default user umask exist.

If other methods are in use in your environment they should be audited and the shell configs should be verified to not override."
      solution    : "Configure umask in one of the following locations:

/etc/login.defs - Recommended

A file ending in .sh in the /etc/profile.d/ directory

/etc/default/login

/etc/profile.local

/etc/profile - This is not recommended, may be updated/overwritten by YaST2 Online Update

Example:
edit /etc/login.defs and add or modify the UMASK line.

UMASK 027

Review files ending in .sh in the /etc/profile.d/ directory, and the files; /etc/bash.bashrc, /etc/profile, and /etc/profile.local. Remove or edit all umask entries to follow local site policy. Any remaining entries should be: umask 027, umask u=rwx,g=rx,o= or more restrictive."
      reference   : "800-171|3.1.1,800-53|AC-3(4),CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(4),LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -RPis '(^|^[^#]*)\\s*umask\\s+([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b|[0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\\b)' /etc/login.defs /etc/default/login /etc/profile* /etc/bash.bashrc* | /bin/awk '{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.5 Ensure default user umask is configured - System Wide default"
      info        : "The user file-creation mode mask (umask) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-rw-). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

The user creating the directories or files has the discretion of changing the permissions by:

Issuing the chmod command

Choosing a different default umask

Adding the umask command into a User Shell Configuration File, ( .bash_profile or .bashrc), in their home directory

The permissions listed are not masked by umask. ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027. This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----.

umask can be set with either octal or Symbolic values:

Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.

Symbolic Value - Represented by a comma separated list for User u, group g, and world/other o.




System Wide Shell Configuration Files:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bash.bashrc - System wide version of .bashrc. etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bashrc.

User Shell Configuration Files:

~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.

~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

Rationale:

Setting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.

Notes:

The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked.

Other methods of setting a default user umask exist.

If other methods are in use in your environment they should be audited and the shell configs should be verified to not override."
      solution    : "Configure umask in one of the following locations:

/etc/login.defs - Recommended

A file ending in .sh in the /etc/profile.d/ directory

/etc/default/login

/etc/profile.local

/etc/profile - This is not recommended, may be updated/overwritten by YaST2 Online Update

Example:
edit /etc/login.defs and add or modify the UMASK line.

UMASK 027

Review files ending in .sh in the /etc/profile.d/ directory, and the files; /etc/bash.bashrc, /etc/profile, and /etc/profile.local. Remove or edit all umask entries to follow local site policy. Any remaining entries should be: umask 027, umask u=rwx,g=rx,o= or more restrictive."
      reference   : "800-171|3.1.1,800-53|AC-3(4),CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ITSG-33|AC-3(4),LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/grep -REis '^\s*UMASK\s+\s*(0[0-7][2-7]7|[0-7][2-7]7|u=(r?|w?|x?)(r?|w?|x?)(r?|w?|x?),g=(r?x?|x?r?),o=)\\b' /etc/login.defs /etc/default/login /etc/profile* /etc/bash.bashrc* | /bin/awk '{print} END {if (NR == 0) print \"fail\"; else print \"pass\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5 Ensure root login is restricted to system console"
      info        : "The file /etc/securetty contains a list of valid terminals that may be logged in directly as root.

Rationale:

Since the system console has special properties to handle emergency situations, it is important to ensure that the console is in a physically secure location and that unauthorized consoles have not been defined.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Remove entries for any consoles that are not in a physically secure location."
      reference   : "800-53|AC-6(3),CSCv7|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.1.2,ISO/IEC-27001|A.9.4.4,ITSG-33|AC-6(3),LEVEL|1M,NESA|T5.1.1,NESA|T5.5.4,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/usr/bin/cat /etc/securetty"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.6 Ensure access to the su command is restricted"
      info        : "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo, which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will only allow users in a specific groups to execute su. This group should be empty to reinforce the use of sudo for privileged access.

Rationale:

Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program."
      solution    : "Create an empty group that will be specified for use of the su command. The group should be named according to site policy.
Example

# groupadd sugroup

Add the following line to the /etc/pam.d/su file, specifying the empty group:

auth required pam_wheel.so use_uid group=sugroup"
      reference   : "800-171|3.1.1,800-53|AC-3,CN-L3|8.1.10.2(c),CN-L3|8.1.4.11(b),CN-L3|8.1.4.2(f),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "groupname=$(/bin/egrep \"^\\s*auth\\s+required\\s+pam_wheel\\.so\\s+(\\S+\\s+)*use_uid\\s+(\\S+\\s+)*group=\\S+\\s*(\\S+\\s*)*(\\s+#.*)?$\" /etc/pam.d/su | /usr/bin/cut -d'=' -f2); /bin/grep \"${groupname}\" /etc/group"
      expect      : "^[\\s]*(\\S+):x:[0-9]+:[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.2 Ensure permissions on /etc/passwd are configured"
      info        : "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.

Rationale:

It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/passwd:

# chown root:root /etc/passwd

# chmod u-x,g-wx,o-wx /etc/passwd"
      reference   : "800-53|IA-5(6),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-1,ITSG-33|IA-5(6),LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|5.4,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/passwd"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.3 Ensure permissions on /etc/shadow are configured"
      info        : "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/shadow:

# chown root:root /etc/shadow

# chmod u-x,g-wx,o-rwx /etc/shadow"
      reference   : "800-53|IA-5(6),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-1,ITSG-33|IA-5(6),LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|5.4,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/shadow"
      owner       : "root"
      mask        : "137"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.4 Ensure permissions on /etc/group are configured"
      info        : "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.

Rationale:

The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/group :

# chown root:root /etc/group

# chmod u-x,g-wx,o-wx /etc/group"
      reference   : "800-53|IA-5(6),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-1,ITSG-33|IA-5(6),LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|5.4,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/group"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.5 Ensure permissions on /etc/passwd- are configured"
      info        : "The /etc/passwd- file contains backup user account information.

Rationale:

It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/passwd- :

# chown root:root /etc/passwd-

# chmod u-x,go-wx /etc/passwd-"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/passwd-"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.6 Ensure permissions on /etc/shadow- are configured"
      info        : "The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/shadow-:

# chown root:shadow /etc/shadow-

# chmod u-x,g-wx,o-rwx /etc/shadow-"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/shadow-"
      owner       : "root"
      mask        : "137"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.7 Ensure permissions on /etc/group- are configured"
      info        : "The /etc/group- file contains a backup list of all the valid groups defined in the system.

Rationale:

It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/group-:

# chown root:root /etc/group-

# chmod u-x,go-wx /etc/group-"
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "/etc/group-"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.1.8 Ensure no world writable files exist"
      info        : "Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the chmod(2) man page for more information.

Rationale:

Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity."
      solution    : "Removing write access for the 'other' category ( chmod o-w <filename> ) is advisable, but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file."
      reference   : "800-171|3.1.5,800-53|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.10.6(a),CN-L3|8.1.4.2(d),CSCv7|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "find_world_writeable_files"
    </item>

    <item>
      system      : "Linux"
      description : "6.1.9 Ensure no unowned files or directories exist"
      info        : "Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system.

Rationale:

A new user who is assigned the deleted user's user ID or group ID may then end up 'owning' these files, and thus have more access on the system than was intended."
      solution    : "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate."
      reference   : "800-53|AC-16(3),CSCv7|13.2,CSF|PR.AC-4,ITSG-33|AC-16(3),LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "find_orphan_files"
      find_option : "nouser"
    </item>

    <item>
      system      : "Linux"
      description : "6.1.10 Ensure no ungrouped files or directories exist"
      info        : "Sometimes when administrators delete users or groups from the system they neglect to remove all files owned by those users or groups.

Rationale:

A new user who is assigned the deleted user's user ID or group ID may then end up 'owning' these files, and thus have more access on the system than was intended."
      solution    : "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate."
      reference   : "800-53|AC-16(3),CSCv7|13.2,CSF|PR.AC-4,ITSG-33|AC-16(3),LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "find_orphan_files"
      find_option : "nogroup"
    </item>

    <item>
      description : "6.1.11 Audit SUID executables"
      info        : "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID program is to enable users to perform functions (such as changing their password) that require root privileges.

Rationale:

There are valid reasons for SUID programs, but it is important to identify and review such programs to ensure they are legitimate."
      solution    : "Ensure that no rogue SUID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries."
      reference   : "800-53|AC-6(8),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "find_suid_sgid_files"
    </item>

    <item>
      description : "6.1.12 Audit SGID executables"
      info        : "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SGID program is to enable users to perform functions (such as changing their password) that require root privileges.

Rationale:

There are valid reasons for SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different md5 checksum than what from the package. This is an indication that the binary may have been replaced."
      solution    : "Ensure that no rogue SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries."
      reference   : "800-53|AC-6(8),CSCv7|5.1,CSF|PR.AC-4,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "find_suid_sgid_files"
    </item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.1 Ensure accounts in /etc/passwd use shadowed passwords"
      info        : "Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow, encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd.

Rationale:

The /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow. The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack.

Notes:

All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.

A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username."
      solution    : "If any accounts in the /etc/passwd file do not have a single x in the password field, run the following command to set these accounts to use shadowed passwords:

# sed -e 's/^\([a-zA-Z0-9_]*\):[^:]*:/\1:x:/' -i /etc/passwd

Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off."
      reference   : "800-171|3.5.10,800-53|IA-5(1),CSCv7|4.4,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NIAv2|CY6,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/awk -F: '($2 != \"x\" ) { print $1 \" is not set to shadowed passwords \"}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.2 Ensure /etc/shadow password fields are not empty"
      info        : "An account with an empty password field means that anybody may log in as that user without providing a password.

Rationale:

All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user."
      solution    : "If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off."
      reference   : "800-53|IA-5(1),CSCv7|4.4,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/awk -F: '($2 == \"\" ) { print $1 \" does not have a password \"}' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.2.3 Ensure root is the only UID 0 account"
      info        : "Any account with UID 0 has superuser privileges on the system.

Rationale:

This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted."
      solution    : "Remove any users other than root with UID 0 or assign them a new UID if appropriate."
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|5.1,CSCv7|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "passwd_zero_uid"
    </item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.4 Ensure root PATH Integrity"
      info        : "The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.

Rationale:

Including the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program."
      solution    : "Correct or justify any items discovered in the Audit step."
      reference   : "800-171|3.4.7,800-53|CM-7(2),CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7(2),LEVEL|1A,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "if echo \"$PATH\" | /bin/grep -q \"::\"; then echo \"Empty Directory in PATH (::)\"; fi; if echo \"$PATH\" | /bin/grep -q \":$\"; then echo \"Trailing : in PATH\"; fi; for x in $(echo \"$PATH\" | tr \":\" \" \") ; do if [ -d \"$x\" ]; then /bin/ls -ldH \"$x\" | /bin/awk '$9 == \".\" {print \"PATH contains current working directory (.)\"}; $3 != \"root\" {print $9, \"is not owned by root\"}; substr($1,6,1) != \"-\" {print $9, \"is group writable\"}; substr($1,9,1) != \"-\" {print $9, \"is world writable\"}'; else echo \"$x is not a directory\"; fi; done | /bin/awk '{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.5 Ensure all users' home directories exist - test1"
      info        : "Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.

Rationale:

If the user's home directory does not exist or is unassigned, the user will be placed in '/' and will not be able to write any files or have local environment variables set."
      solution    : "If any users' home directories do not exist, create them and make sure the respective user owns the directory. Users without an assigned home directory should be removed or assigned a home directory as appropriate."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -v '^(halt|sync|shutdown)' /etc/passwd | /bin/egrep -v '((/usr)?/sbin/nologin|/bin/false)' | /bin/awk -F: '{ print $1 \" \" $6 }' | while read -r user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\"; fi; done | /bin/awk '{print} END {if (NR == 0) print \"all user homes valid\"; else print \"fail\"}'"
      expect      : "^all user homes valid$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.6 Ensure users' home directories permissions are 750 or more restrictive"
      info        : "While the system administrator can establish secure permissions for users' home directories, the users can easily override these.

Rationale:

Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges."
      solution    : "Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user file permissions and determine the action to be taken in accordance with site policy."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -v '^(halt|sync|shutdown)' /etc/passwd | /bin/egrep -v '((/usr)?/sbin/nologin|/bin/false)' | /bin/awk -F: '{ print $1 \" \" $6 }' | while read -r user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\"; else dirperm=$(ls -ld $dir | cut -f1 -d\" \"); if [ $(echo $dirperm | cut -c6) != \"-\" ]; then echo \"Group Write permission set on the home directory ($dir) of user $user\"; fi; if [ $(echo $dirperm | cut -c8) != \"-\" ]; then echo \"Other Read permission set on the home directory ($dir) of user $user\"; fi; if [ $(echo $dirperm | cut -c9) != \"-\" ]; then echo \"Other Write permission set on the home directory ($dir) of user $user\"; fi; if [ $(echo $dirperm | cut -c10) != \"-\" ]; then echo \"Other Execute permission set on the home directory ($dir) of user $user\"; fi; fi; done | /bin/awk '{print} END {if (NR == 0) print \"all user homes valid\"; else print \"fail\"}'"
      expect      : "^all user homes valid$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.7 Ensure users own their home directories"
      info        : "The user home directory is space defined for the particular user to set local environment variables and to store personal files.

Rationale:

Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory."
      solution    : "Change the ownership of any home directories that are not owned by the defined user to the correct user."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/egrep -v '^(halt|sync|shutdown)' /etc/passwd | /bin/egrep -v '((/usr)?/sbin/nologin|/bin/false)' | /bin/awk -F: '{ print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\"; else owner=$(stat -L -c \"%U\" \"$dir\"); if [ \"$owner\" != \"$user\" ]; then echo \"The home directory ($dir) of user $user is owned by $owner.\"; fi; fi; done | /bin/awk '{ print } END { if (NR==0) print \"All home directories have proper owners\"}'"
      expect      : "All home directories have proper owners"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.2.8 Ensure users' dot files are not group or world writable"
      info        : "While the system administrator can establish secure permissions for users' 'dot' files, the users can easily override these.

Rationale:

Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "~/.*"
      mask        : "0002"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "6.2.9 Ensure no users have .forward files"
      info        : "The .forward file specifies an email address to forward the user's mail to.

Rationale:

Use of the .forward file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The .forward file also poses a risk as it can be used to execute commands that may perform unintended actions."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .forward files and determine the action to be taken in accordance with site policy."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "~/.forward"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "6.2.10 Ensure no users have .netrc files"
      info        : "The .netrc file contains data for logging into a remote host for file transfers via FTP.

Rationale:

The .netrc file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over .netrc files from other systems which could pose a risk to those systems."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc files and determine the action to be taken in accordance with site policy."
      reference   : "800-53|IA-5(7),CIP|007-6-R1,CSCv6|9.1,CSCv7|16.4,CSF|PR.AC-1,ITSG-33|IA-5(7),LEVEL|1A,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "~/.netrc"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.2.11 Ensure users' .netrc Files are not group or world accessible"
      info        : "While the system administrator can establish secure permissions for users' .netrc files, the users can easily override these.

Rationale:

.netrc files may contain unencrypted passwords that may be used to attack other systems.

Note: While the complete removal of .netrc files is recommended if any are required on the system secure permissions must be applied."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc file permissions and determine the action to be taken in accordance with site policy."
      reference   : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "~/.netrc"
      mask        : "0077"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "6.2.12 Ensure no users have .rhosts files"
      info        : "While no .rhosts files are shipped by default, users can easily create them.

Rationale:

This action is only meaningful if .rhosts support is permitted in the file /etc/pam.conf . Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf , they may have been brought over from other systems and could contain information useful to an attacker for those other systems."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .rhosts files and determine the action to be taken in accordance with site policy."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CIP|007-6-R1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|16.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      file        : "~/.rhosts"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.2.13 Ensure all groups in /etc/passwd exist in /etc/group"
      info        : "Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group .

Rationale:

Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed."
      solution    : "Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found."
      reference   : "800-171|3.1.1,800-53|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NESA|T5.2.1,NESA|T5.2.2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "passwd_invalid_gid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.14 Ensure no duplicate UIDs exist"
      info        : "Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.

Rationale:

Users must be assigned unique UIDs for accountability and to ensure appropriate access protections."
      solution    : "Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to."
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4,CN-L3|7.1.2.7(b),CN-L3|8.1.4.1(a),CSF|PR.AC-1,ITSG-33|IA-4,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "passwd_duplicate_uid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.15 Ensure no duplicate GIDs exist"
      info        : "Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.

Note: You can also use the grpck command to check for other inconsistencies in the /etc/group file.

Rationale:

User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections."
      solution    : "Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to."
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4,CN-L3|7.1.2.7(b),CN-L3|8.1.4.1(a),CSF|PR.AC-1,ITSG-33|IA-4,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "group_duplicate_gid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.16 Ensure no duplicate user names exist"
      info        : "Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.

Rationale:

If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd .

Example: If 'test4' has a UID of 1000 and a subsequent 'test4' entry has a UID of 2000, logging in as 'test4' will use UID 1000. Effectively, the UID is shared, which is a security problem"
      solution    : "Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs."
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4,CN-L3|7.1.2.7(b),CN-L3|8.1.4.1(a),CSF|PR.AC-1,ITSG-33|IA-4,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "passwd_duplicate_username"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.17 Ensure no duplicate group names exist"
      info        : "Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.

Rationale:

If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group . Effectively, the GID is shared, which is a security problem."
      solution    : "Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs."
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4,CN-L3|7.1.2.7(b),CN-L3|8.1.4.1(a),CSF|PR.AC-1,ITSG-33|IA-4,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      name        : "group_duplicate_name"
    </item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.18 Ensure shadow group is empty"
      info        : "The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.

Rationale:

Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts."
      solution    : "Remove all users from the shadow group, and change the primary group of any users with shadow as their primary group."
      reference   : "800-171|3.1.1,800-53|AC-2,CN-L3|7.1.3.2(d),CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NESA|M4.4.3,NESA|T5.2.1,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14d,NIAv2|SS14e"
      see_also    : "https://workbench.cisecurity.org/files/2854"
      cmd         : "/bin/awk -F: 'FILENAME == \"/etc/group\" && $1 == \"shadow\" { gid=$3; if ($4!=\"\") { print \"secondary \"$4; f=1 } } FILENAME == \"/etc/passwd\" && $4 == gid && gid != \"\" { print \"primary \"$1; f=1; } END { if (!f) print \"shadow group empty\" }' /etc/group /etc/passwd"
      expect      : "^shadow group empty$"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_SUSE_Linux_Enterprise_15_Server_v1.0.0_L1.audit Level 1"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/2854"
    </report>
  </else>
</if>

</check_type>
