#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2020/04/22 $
#
# description	: This .audit file is based on the recommendations from the CIS MongoDB 3.6 Benchmark v1.0.0
#
#<ui_metadata>
#<display_name>CIS MongoDB 3.6 L1 Windows Audit v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS MongoDB 3.6 L1 Windows Audit</name>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/2605</link>
#</spec>
#<labels>mongodb,mongodb_3,mongodb_3.6,cis</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7</benchmark_refs>
#<variables>
#  <variable>
#    <name>MONGOD_CONF_FULL_PATH</name>
#    <default>c:\mongodb\mongod.conf</default>
#    <description>Full path to the mongodb conf file</description>
#    <info>Full path to the mongodb conf file</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"MongoDB">

<if>
  <condition type:"AND">
    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "Check for MongoDB 3.6"
      value_type      : POLICY_TEXT
      value_data      : "^3.6"
      powershell_args : "Get-WmiObject -Class Win32_Product | Where-Object Name -like '*Mongo*' | Select-Object -ExpandProperty Version"
      check_type      : CHECK_REGEX
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_MongoDB_3.6_Benchmark_Level_1_OS_Windows_v1.0.0.audit from CIS MongoDB 3.6 Benchmark"
      see_also    : "https://workbench.cisecurity.org/files/2605"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.1 Ensure Authentication is configured"
      info        : "This setting ensures that all clients, users, and/or servers are required to authenticate prior to being granted access to the MongoDB database.

Rationale:

Failure to authenticate clients, users, and/or servers can enable unauthorized access to the MongoDB database and can prevent tracing actions back to their sources."
      solution    : "The authentication mechanism should be implemented before anyone accesses the MongoDB Server.

To enable the authentication mechanism:

 Start the MongoDB instance without authentication.

mongod --port 27017 --dbpath /data/db1

Or

mongod.exe --port 27017 --dbpath db1

 Create the system user administrator, ensuring that its password meets organizationally-defined password complexity requirements.

use admin

db.createUser({user: 'siteUserAdmin',pwd: 'admin',roles: [ { role: 'userAdminAnyDatabase', db: 'admin' } ]})

 Restart the MongoDB instance with authentication enabled.

mongod --auth --config /etc/mongod.conf

Or

mongod.exe --auth --config mongod.conf

Default Value:

Not configured"
      reference   : "800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv6|16,CSF|PR.AC-1,ITSG-33|IA-2,LEVEL|1S,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : "^[\s]*authorization[\s]*:"
      expect      : "^[\s]*authorization[\s]*:[\s]*[Ee][Nn][Aa][Bb][Ll][Ee][Dd]"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.2 Ensure that MongoDB does not bypass authentication via the localhost exception"
      info        : "MongoDB should not be set to bypass authentication via the localhost exception. The localhost exception allows the user to enable authorization before creating the first user in the system. When active, the localhost exception allows all connections from the localhost interface to have full access to that instance. The exception applies only when there are no users created in the MongoDB instance.

Note: This recommendation only applies when there are no users created in the MongoDB instance.

Rationale:

Disabling this exception will prevent unauthorized local access to the MongoDB database. It will also ensure the traceability of each database activity to a specific user. Localhost Exception allows direct connect to Mongod's without any UN/PW."
      solution    : "To disable local authentication on the MongoDB database.

Type OS Console Command

mongod --setParameter enableLocalhostAuthBypass=0

or
To manually configure use the setParameter option in the mongo configuration file to set it to false.

setParameter:
  enableLocalhostAuthBypass: false

Default Value:

By default, localhost exception value (enableLocalhostAuthBypass) is true.

References:

https://docs.mongodb.com/v3.6/reference/parameters/#param.enableLocalhostAuthBypass"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|16,CSCv7|16.3,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : "^[\s]*enableLocalhostAuthBypass[\s]*:"
      expect      : "^[\s]*enableLocalhostAuthBypass[\s]*:[\s]*[Ff][Aa][Ll][Ss][Ee]"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.3 Ensure authentication is enabled in the sharded cluster"
      info        : "Authentication is enabled in a sharded cluster when the certificate or key files are created and configured for all components. This ensures that every client that accesses the cluster must provide credentials, to include MongoDB instances that access each other within the cluster.

With keyfile authentication, each mongod or mongos instance in the sharded cluster uses the contents of the keyfile as the shared password for authenticating other members in the deployment. Only mongod or mongos instances with the correct keyfile can join the sharded cluster.

For Production Environment: x.509 certificate authentication with secure TSL/SSL connection must be used for authentication.

For Development Purpose: Key file can be used as an authentication mechanism between the shared cluster. Keyfiles are bare-minimum forms of security and are best suited for testing or development environments.

Rationale:

Enforcing a key or certificate on a sharded cluster prevents unauthorized access to the MongoDB database and provides traceability of database activities to a specific user or component. A MongoDB sharded cluster can enforce user authentication as well as internal authentication of its components to secure against unauthorized access."
      solution    : "To authenticate to servers, clients can use x.509 certificates instead of usernames and passwords. MongoDB supports x.509 certificate authentication for use with a secure TLS/SSL connection. The x.509 client authentication allows clients to authenticate to servers with certificates rather than with a username and password.

Change the configuration file /etc/mongod.conf on each host, adding the following rows:

net:
   port: 27017
   ssl:
      mode: requireSSL
      PEMKeyFile: /etc/mongodb/ssl/server1.pem
      CAFile: /etc/mongodb/ssl/mongoCA.crt
      clusterFile: /etc/mongodb/ssl/server1.pem
   security:
      authorization: enabled
      clusterAuthMode: x509

Restart the daemon

sudo service mongodb restart



To enable authentication in the sharded cluster, perform the following steps:(Only for Development Purpose)

Generate A Key File

On each component in the shared cluster, enable authentication by editing the configuration file /etc/mongod.conf. Set the keyFile option to the key file's path and then start the component with this command:

keyFile = /srv/mongodb/keyfile

When starting the component, set --keyFile option, which is an option for both mongos instances and mongod instances. Set the --keyFile to the key file's path.

Default Value:

Not configured

References:

https://docs.mongodb.com/v3.6/tutorial/enforce-keyfile-access-control-in-existing-sharded-cluster-no-downtime/

https://docs.mongodb.com/v3.6/tutorial/enforce-keyfile-access-control-in-existing-sharded-cluster/

https://docs.mongodb.com/v3.6/tutorial/configure-x509-member-authentication/"
      reference   : "800-171|3.5.1,800-53|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv6|16,CSCv7|1.8,CSF|PR.AC-1,ITSG-33|IA-2,LEVEL|1S,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM14b,NIAv2|AM2,NIAv2|AM8,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : "^[\s]*keyFile[\s]*="
      expect      : "^[\s]*keyFile[\s]*=[\s]*.+"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "3.2 Ensure that MongoDB only listens for network connections on authorized interfaces"
      info        : "Ensuring that MongoDB runs in a trusted network environment involves limiting the network interfaces on which MongoDB instances listen for incoming connections. Any untrusted network connections should be dropped by MongoDB.

Firewalls allow administrators to filter and control access to a system by providing granular control over network communications. For administrators of MongoDB, the following capabilities are important:

Limiting incoming traffic on a specific port to specific systems

Limiting incoming traffic from untrusted hosts.

On Linux systems, the iptables interface provides access to the underlying netfilter firewall. On Windows systems, netsh command line interface provides access to the underlying Windows Firewall.

Rationale:

This configuration blocks connections from untrusted networks, leaving only systems on authorized and trusted networks able to attempt to connect to the MongoDB. If not configured, this may lead to unauthorized connections from untrusted networks to MongoDB."
      solution    : "Configure the MongoDB configuration file to limit its exposure to only the network interfaces on which MongoDB instances should listen for incoming connections.

Default Value:

Not configured

References:

https://docs.mongodb.com/v3.6/tutorial/configure-linux-iptables-firewall/

https://docs.mongodb.com/v3.6/tutorial/configure-windows-netsh-firewall/

https://docs.mongodb.com/v3.6/core/security-network/"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : "^[\s]*bindIp[\s]*:"
      expect      : "^[\s]*bindIp[\s]*:[\s]*.+"
    </custom_item>

    <report type:"WARNING">
      description : "3.3 Ensure that MongoDB is run using a Least Privileges, dedicated service account"
      info        : "The MongoDB service should not be run using a privileged account such as 'root' because this unnecessarily exposes the operating system to high risk.

Rationale:

Using a non-privileged, dedicated service account restricts the database from accessing the critical areas of the operating system which are not required by the MongoDB. This will also mitigate the potential for unauthorized access via a compromised, privileged account on the operating system.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. Create a dedicated user for performing MongoDB database activity.

2. Set the Database data files, the keyfile, and the SSL private key files to only be readable by the mongod/mongos user.

3. Set the log files to only be writable by the mongod/mongos user and readable only by root.

Default Value:

Not configured"
      reference   : "CSCv6|5.1,LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/2605"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "4.1 Ensure Encryption of Data in Transit TLS/SSL (Transport Encryption)"
      info        : "Use TLS or SSL to protect all incoming and outgoing connections. This should include using TLS or SSL to encrypt communication between mongod and mongos components of a MongoDB client as well as between all applications and MongoDB.

Most MongoDB distributions include support for SSL or TLS.

Rationale:

This prevents sniffing of cleartext traffic between MongoDB components or performing a man-in-the-middle attack for MongoDB."
      solution    : "Configure MongoDB servers to require the use of SSL or TLS to encrypt all MongoDB network communications.

To implement SSL or TLS to encrypt all MongoDB network communication, perform the following steps:

For mongod (Primary daemon process for the MongoDB system)

In the configuration file /etc/mongod.conf, set the PEMKeyFile option to the certificate files path and then start the component with this command:

   ssl:

      mode: requireSSL

      PEMKeyFile: /etc/ssl/mongodb.pem

      CAFile: /etc/ssl/ca.pem

And restart monogdb instance with

mongod --config /etc/mongod.conf

Or

mongod --sslMode requireSSL --sslPEMKeyFile /etc/ssl/mongodb.pem --sslCAFile /etc/ssl/ca.pem

Default Value:

Not configured"
      reference   : "800-171|3.13.11,800-53|SC-13,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CSCv6|14.2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,LEVEL|1S,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : '^[\s]*mode:'
      expect      : "^[\s]*mode[\s]*:[\s]*requireSSL"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "5.1 Ensure that system activity is audited"
      info        : "Track access and changes to database configurations and data. MongoDB Enterprise includes a system auditing facility that can record system events (e.g. user operations, connection events) on a MongoDB instance. These audit records permit forensic analysis and allow administrators to verify proper controls.

Rationale:

System level logs can be handy while troubleshooting an operational problem or handling a security incident."
      solution    : "Set the value of auditLog.destination to the appropriate value from the following options:

Syslog
To enable auditing and print audit events to syslog

mongod --dbpath data/db --auditDestination syslog

Console
To enable auditing and print audit events to standard output (i.e., stdout)

mongod --dbpath data/db --auditDestination console

Json File
To enable auditing and print audit events to a file in JSON format. Printing audit events to file in JSON format degrades server performance more than printing to a file in BSON format.

mongod --dbpath data/db --auditDestination file --auditFormat JSON --auditPath data/db/auditLog.json

Bson File
To enable auditing and print audit events to a file in BSON binary format

mongod --dbpath data/db --auditDestination file --auditFormat BSON --auditPath data/db/auditLog.bson

Default Value:

By default, Audit Logs are not configured.

References:

https://docs.mongodb.com/v3.6/tutorial/configure-auditing/"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : '^[\s]*destination[\s]*:'
      expect      : "^[\s]*destination[\s]*:[\s]*(syslog|console|file)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "5.2 Ensure that audit filters are configured properly"
      info        : "MongoDB Enterprise supports auditing of various operations. When enabled, the audit facility, by default, records all auditable operations as detailed in Audit Event Actions, Details, and Results. To specify which events to record, the audit feature includes the --auditFilter option. This check is only for Enterprise editions.

Rationale:

All operations carried out on the database are logged. This helps in backtracking and tracing any incident that occurs.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Set the audit filters based on the organization's requirements.

Default Value:

Not configured

References:

https://docs.mongodb.com/v3.6/reference/audit-message/

https://docs.mongodb.com/v3.6/tutorial/configure-audit-filters/"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : '^[\s]*filter[\s]*:'
      expect      : "^[\s]*filter[\s]*:[\s]*.+"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "5.3 Ensure that logging captures as much information as possible"
      info        : "The SystemLog.quiet option stops logging of information such as:

 connection events

 authentication events

 replication sync activities

 evidence of some potentially impactful commands being run (eg: drop, dropIndexes, validate)

This information should be logged whenever possible. This check is only for Enterprise editions.

Rationale:

The use of SystemLog.quiet makes troubleshooting problems and investigating possible security incidents much more difficult."
      solution    : "Set SystemLog.quiet to false in the /etc/mongod.conf file to disable it."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1NS,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : '^[\s]*quiet[\s]*:'
      expect      : "^[\s]*quiet[\s]*:[\s]*false"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "5.4 Ensure that new entries are appended to the end of the log file"
      info        : "By default, new log entries will overwrite old entries after a restart of the mongod or Mongols service. Enabling the systemLog.logAppend setting causes new entries to be appended to the end of the log file rather than overwriting the existing content of the log when the mongos or mongod instance restarts.

Rationale:

Allowing old entries to be overwritten by new entries instead of appending new entries to the end of the log may destroy old log data that is needed for a variety of purposes."
      solution    : "Set systemLog.logAppend to true in the /etc/mongod.conf file."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,LEVEL|1NS,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      value_type  : POLICY_TEXT
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "value_data".
      value_data  : "c:\\mongodb\\mongod.conf"
      regex       : '^[\s]*logAppend[\s]*:'
      expect      : "^[\s]*logAppend[\s]*:[\s]*true"
    </custom_item>

    <custom_item>
      type            : AUDIT_POWERSHELL
      description     : "6.1 Ensure that MongoDB uses a non-default port"
      info            : "Changing the port used by MongoDB makes it harder for attackers to find the database and target it.

Rationale:

Standard ports are used in automated attacks and by attackers to verify which applications are running on a server."
      solution        : "Change the port for MongoDB server to a number other than 27017.

Impact:

Hackers frequently scan IP addresses for commonly used ports, so it's not uncommon to use a different port to 'fly under the radar'. This is just to avoid detection, other than that there is no added safety by using a different port."
      reference       : "800-171|3.4.2,800-53|CM-6,CN-L3|8.1.10.6(d),CSCv6|9,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also        : "https://workbench.cisecurity.org/files/2605"
      value_type      : POLICY_TEXT
      value_data      : "^[\s]*port[\s]*:[\s]*\d+[\s]*$"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "c:\\mongodb\\mongod.conf" in field "powershell_args".
      powershell_args : "get-content c:\\mongodb\\mongod.conf| select-string -pattern '^[\s]*port' | where-object {$_ -notmatch '27017'}"
      check_type      : CHECK_REGEX
    </custom_item>

    <report type:"WARNING">
      description : "7.1 Ensure authentication file permissions are set correctly"
      info        : "The key file is used for authentication in the sharded cluster. Implementing proper file permissions on the key file will prevent unauthorized access to it.

Rationale:

Protecting the key file strengthens authentication in the sharded cluster and prevents unauthorized access to the MongoDB database.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Set the keyFile ownership to mongodb user and remove other permissions by executing these commands:

chmod 600 /keyfile

sudo chown mongodb:mongodb /keyfile

Default Value:

Not configured"
      reference   : "CSCv6|16.14,LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/2605"
    </report>

    <report type:"WARNING">
      description : "7.2 Ensure that database file permissions are set correctly"
      info        : "MongoDB database files need to be protected using file permissions.

Rationale:

This will restrict unauthorized users from accessing the database.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Set ownership of the database file to mongodb user and remove other permissions using the following commands:

chmod 770 /var/lib/mongodb
sudo chown mongodb:mongodb /var/lib/mongodb

Default Value:

Not configured

References:

https://docs.mongodb.com/v3.6/reference/configuration-options/#storage.dbPath"
      reference   : "CSCv6|14.4,CSCv7|14.6,LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/2605"
    </report>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_MongoDB_3.6_Benchmark_Level_1_OS_Windows_v1.0.0.audit from CIS MongoDB 3.6 Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/2605"
    </report>
  </else>
</if>

</group_policy>
</check_type>
