#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.4 $
# $Date: 2020/04/22 $
#
# description	: This .audit file is based on the recommendations from the CIS MongoDB Benchmark v1.0.0
#
#<ui_metadata>
#<display_name>CIS MongoDB Database Audit L1 v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS MongoDB L1 Database Audit</name>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/168</link>
#</spec>
#<labels>mongodb,cis</labels>
#<benchmark_refs>LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"MongoDB">

<custom_item>
  description    : "1.1 Ensure the appropriate MongoDB software version/patches are installed"
  info           : "The MongoDB installation version, along with the patch level, should be the most recent that is compatible with the organization's operational needs.

Rationale:

Using the most recent MongoDB software version along with all applicable patches helps limit the possibilities for vulnerabilities in the software. The installation version and/or patches applied should be selected according to the needs of the organization. At minimum, the software version should be supported.

Note that as of October 2016, only MongoDB versions 3.0 and 3.2 are still supported."
  solution       : "Upgrade to the latest version of the MongoDB software:

1. Backup the data set.

2. Download the binaries for the latest MongoDB revision from the MongoDB Download Page and store the binaries in a temporary location. The binaries download as compressed files that extract to the directory structure used by the MongoDB installation.

3. Shutdown the MongoDB instance.

4. Replace the existing MongoDB binaries with the downloaded binaries.

5. Restart the MongoDB instance.

Default Value:

Patches are not installed by default."
  reference      : "800-171|3.4.8,800-53|CM-7(5),CSCv6|2.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,LEVEL|1S,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
  see_also       : "https://workbench.cisecurity.org/files/168"
  collection     : "admin.$cmd"
  fieldsSelector : '{"version": 0}'
  query          : '{"buildInfo":1}'
  expect         : '"version" : "3\..*\..*'
</custom_item>

<custom_item>
  description    : "3.1 Ensure that role-based access control is enabled and configured appropriately"
  info           : "Role-based access control (RBAC) is a method of regulating access to resources based on the roles of individual users within an enterprise. A user is granted one or more roles that determine the users access to database resources and operations. Outside of role assignments, the user has no access to the system. MongoDB can use RBAC to govern access to MongoDB systems. MongoDB does not enable authorization by default.

Rationale:

When properly implemented, RBAC enables users to carry out a wide range of authorized tasks by dynamically regulating their actions according to flexible functions. This allows an organization to control employeesaccess to all database tables through RBAC.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "1. Establish roles for MongoDB.

2. Assign the appropriate privileges to each role.

3. Assign the appropriate users to each role.

4. Remove any individual privileges assigned to users that are now addressed by the roles.

5. See the reference below for more Information."
  reference      : "800-53|AC-6(7),CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,LEVEL|1S,NESA|M1.1.3,NESA|T5.1.1"
  see_also       : "https://workbench.cisecurity.org/files/168"
  collection     : "admin.system.users"
  query          : '{}'
  fieldsSelector : '{}'
  expect         : ".*"
  severity       : MEDIUM
</custom_item>

</check_type>
