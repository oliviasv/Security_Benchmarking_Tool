#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2020/04/22 $
#
# description	: This .audit file is based on the recommendations from the CIS MongoDB 3.6 Benchmark v1.0.0
#
#<ui_metadata>
#<display_name>CIS MongoDB 3.6 Database Audit L2 v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS MongoDB 3.6 L2 Database Audit</name>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/2605</link>
#</spec>
#<labels>mongodb,mongodb_3,mongodb_3.6,cis</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7</benchmark_refs>
#</ui_metadata>

<check_type:"MongoDB">

<if>
  <condition type:"AND">
    <custom_item>
      description    : "Check for MongoDB 3.6"
      expect         : '"version" : "3\.6\..*'
      collection     : "admin.$cmd"
      fieldsSelector : '{"version": 0}'
      query          : '{"buildInfo":1}'
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_MongoDB_3.6_Benchmark_Level_2_DB_v1.0.0.audit from CIS MongoDB 3.6 Benchmark"
      see_also    : "https://workbench.cisecurity.org/files/2605"
    </report>

    <custom_item>
      description : "3.4 Ensure that each role for each MongoDB database is needed and grants only the necessary privileges"
      info        : "Reviewing all roles periodically and eliminating unneeded roles as well as unneeded privileges from necessary roles helps minimize the privileges for each user.

Rationale:

Although role-based access control (RBAC) has many advantages for regulating access to resources, over time, some roles may no longer be needed, and some roles may grant privileges that are no longer needed.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Revoke specified privileges from the user-defined role on the database where the command is run. The revokePrivilegesFromRole command has the following syntax:

{
revokePrivilegesFromRole: '<role>',
privileges:
   [
   { resource: { <resource> }, actions: [ '<action>', ... ] },
   ...
   ],
}

References:

https://docs.mongodb.com/v3.6/reference/method/db.revokePrivilegesFromRole/

https://docs.mongodb.com/v3.6/reference/method/db.revokePrivilegesFromRole/#db.revokePrivilegesFromRole

Notes:

You must have the dropRole action on a database to drop a role from that database."
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|2S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":1,"showPrivileges": true, "showBuiltinRoles": true}'
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      description : "3.5 Review User-Defined Roles"
      info        : "Reviewing all roles periodically and removing all users from those roles who do not require them helps minimize the privileges for each user.

Important Roles which should be reviewed periodically.

createRole: Creates a role and specifies its privileges.

dropRole: Deletes the user-defined role.

grantPrivilegesToRole: Assigns privileges to a user-defined role.

grantRolesToRole: Specifies roles from which a user-defined role inherits privileges.

updateRole: Updates a user-defined role.

Rationale:

Although role-based access control (RBAC) has many advantages for regulating access to resources, over time some users may be assigned roles which are no longer necessary, e.g. a user changing jobs within the organization. Users who have excessive privileges pose an unnecessary risk to the organization.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To remove a user from one or more roles on the current database, use the following command:

>use dbName
>db.revokeRolesFromUser('<username>',[<roles>])

References:

https://docs.mongodb.com/v3.6/reference/method/db.revokeRolesFromUser/

https://docs.mongodb.com/v3.6/reference/privilege-actions/

https://docs.mongodb.com/v3.6/reference/command/nav-role-management/

Notes:

Logged-in user must have the revokeRole action on a database to revoke a role on that database. Also, roleInfo works for both user-defined roles and built-in roles."
      reference   : "800-171|3.1.5,800-53|AC-6(5),CN-L3|8.1.10.6(a),CSCv6|16.1,CSCv7|16.8,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|2S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,SWIFT-CSCv1|1.2"
      see_also    : "https://workbench.cisecurity.org/files/2605"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":1,"showPrivileges": true, "showBuiltinRoles": true}'
      severity    : MEDIUM
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_MongoDB_3.6_Benchmark_Level_2_DB_v1.0.0.audit from CIS MongoDB 3.6 Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/2605"
    </report>
  </else>
</if>

</check_type>
