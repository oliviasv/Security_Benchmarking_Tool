#
# This script is Copyright (C) 2004-2020 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2020/04/22 $
#
# description : This document implements the security configuration as recommended by the
#               DISA MongoDB Enterprise Advanced 3.x STIG V1R1
#
#              https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip
#
#<ui_metadata>
#<display_name>DISA STIG MongoDB Enterprise Advanced 3.x v1r1</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>MongoDB Enterprise Advanced 3.x</name>
#  <version>1.1.0</version>
#  <link>https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip</link>
#</spec>
#<labels>mongodb,mongodb_3,disa</labels>
#<benchmark_refs>CAT,CCI,Rule-ID,STIG-ID,Vuln-ID,Group-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>MONGOD_CONF_FULL_PATH</name>
#    <default>/etc/mongod.conf</default>
#    <description>Absolute path to the mongodb conf file</description>
#    <info>Absolute path to the mongodb conf file</info>
#  </variable>
#  <variable>
#    <name>MONGO_DATA_DIR_PATH</name>
#    <default>/data/db</default>
#    <description>Path to the mongodb data directory</description>
#    <info>Path to the mongodb data directory</info>
#  </variable>
#  <variable>
#    <name>AUDITLOG_PATH</name>
#    <default>/var/lib/mongo</default>
#    <description>auditlog destination file</description>
#    <info>Absolute path to the auditlog destination file</info>
#  </variable>
#  <variable>
#    <name>PEMKEYFILE_PATH</name>
#    <default>/etc/ssl/mongodb.pem</default>
#    <description>Path to .pem file</description>
#    <info>Path to the .pem file that contains both the TLS/SSL cerfificate and key.</info>
#  </variable>
#  <variable>
#    <name>CAFILE_PATH</name>
#    <default>/etc/ssl/mongodbca.pem</default>
#    <description>Path to .pem CA file</description>
#    <info>Path to the .pem file that contains the root certificate chain from the Certificate Authority.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000010 - MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
  info        : "MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
  solution    : "Edit the MongoDB configuration file (default location: /etc/mongod.conf) to include the following:

	security:
	  authorization: \"enabled\"

	This will enable SCRAM-SHA-1 authentication (default).

	Instruction on configuring the default authentication is provided here:

	https://docs.mongodb.com/v3.4/tutorial/enable-authentication/

	The high-level steps described by the above will require the following:

	1. Start MongoDB without access control.
	2. Connect to the instance.
	3. Create the user administrator.
	4. Restart the MongoDB instance with access control.
	5. Connect and authenticate as the user administrator.
	6. Create additional users as needed for your deployment."
  reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|II,CCI|CCI-000015,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,Rule-ID|SV-96557r1_rule,STIG-ID|MD3X-00-000010,Vuln-ID|V-81843"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^security:' | /bin/grep 'authorization:'"
  regex       : "^[\\s]*authorization:[\\s]*"
  expect      : "^[\\s]*authorization:[\\s]*[\"\']*enabled[\"\']*[\\s]*"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000040 - MongoDB must provide audit record generation for DoD-defined auditable events within all DBMS/database components."
  info        : "MongoDB must provide audit record generation capability for DoD-defined auditable events within all DBMS/database components.

	Satisfies: SRG-APP-000089-DB-000064, SRG-APP-000080-DB-000063, SRG-APP-000090-DB-000065, SRG-APP-000091-DB-000066, SRG-APP-000091-DB-000325, SRG-APP-000092-DB-000208, SRG-APP-000093-DB-000052, SRG-APP-000095-DB-000039, SRG-APP-000096-DB-000040, SRG-APP-000097-DB-000041, SRG-APP-000098-DB-000042, SRG-APP-000099-DB-000043, SRG-APP-000100-DB-000201, SRG-APP-000101-DB-000044, SRG-APP-000109-DB-000049, SRG-APP-000356-DB-000315, SRG-APP-000360-DB-000320, SRG-APP-000381-DB-000361, SRG-APP-000492-DB-000332, SRG-APP-000492-DB-000333, SRG-APP-000494-DB-000344, SRG-APP-000494-DB-000345, SRG-APP-000495-DB-000326, SRG-APP-000495-DB-000327, SRG-APP-000495-DB-000328, SRG-APP-000495-DB-000329, SRG-APP-000496-DB-000334, SRG-APP-000496-DB-000335, SRG-APP-000498-DB-000346, SRG-APP-000498-DB-000347, SRG-APP-000499-DB-000330, SRG-APP-000499-DB-000331, SRG-APP-000501-DB-000336, SRG-APP-000501-DB-000337, SRG-APP-000502-DB-000348, SRG-APP-000502-DB-000349, SRG-APP-000503-DB-000350, SRG-APP-000503-DB-000351, SRG-APP-000504-DB-000354, SRG-APP-000504-DB-000355, SRG-APP-000505-DB-000352, SRG-APP-000506-DB-000353, SRG-APP-000507-DB-000356, SRG-APP-000507-DB-000357, SRG-APP-000508-DB-000358, SRG-APP-000515-DB-000318"
  solution    : "If the 'auditLog' setting was not present in the MongoDB configuration file (default location: '/etc/mongod.conf)' edit this file and add a configured 'auditLog' setting:

	auditLog:
	destination: syslog

	Stop/start (restart) the mongod or mongos instance using this configuration.

	If the 'auditLog' setting was present and contained a 'filter:' parameter, ensure the 'filter:' expression does not prevent the auditing of events that should be audited or remove the 'filter:' parameter to enable auditing all events."
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,CAT|II,CCI|CCI-000130,CCI|CCI-000131,CCI|CCI-000132,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000135,CCI|CCI-000140,CCI|CCI-000166,CCI|CCI-000171,CCI|CCI-000172,CCI|CCI-001462,CCI|CCI-001464,CCI|CCI-001487,CCI|CCI-001814,CCI|CCI-001844,CCI|CCI-001851,CCI|CCI-001858,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,Rule-ID|SV-96561r1_rule,STIG-ID|MD3X-00-000040,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-81847"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A4 '^auditLog:' | /bin/grep 'destination'"
  regex       : "^[\\s]*destination:[\\s]*"
  expect      : "^[\\s]*destination:[\\s]*[\"\']*(syslog|console|file)[\"\']*[\\s]*"
</custom_item>

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check if auditLog destination is set to 'file'"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
      cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A4 '^auditLog:' | /bin/grep 'destination:'"
      regex       : "^[\\s]*destination:[\\s]*"
      expect      : "^[\\s]*destination:[\\s]*[\"\']*file[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "Check if auditLog path is set"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
      cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A4 '^auditLog:' | /bin/grep 'path:'"
      regex       : "^[\\s]*path:[\\s]*.+"
      expect      : "^[\\s]*path:[\\s]*.+"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "MD3X-00-000190 - The audit information produced by MongoDB must be protected from unauthorized read access."
      info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.

    To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

    This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.

    Additionally, applications with user interfaces to audit records should not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

    Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

    Satisfies: SRG-APP-000118-DB-000059, SRG-APP-000119-DB-000060, SRG-APP-000120-DB-000061"
      solution    : "Run these commands:

    'chown mongod <MongoDB auditLog directory>'
    'chgrp mongod <MongoDB auditLog directory>'
    'chmod 700 <<MongoDB auditLog directory>'

    (The path for the MongoDB auditLog directory will vary according to local circumstances. The auditLog directory will be found in the MongoDB configuration file whose default location is '/etc/mongod.conf'.)

    To find the auditLog directory name, view and search for the entry in the MongoDB configuration file for the auditLog.path:

    Example:

    auditLog:
    destination: file
    format: BSON
    path: /var/lib/mongo/auditLog.bson

    Given the example above, to find the auditLog directory name run the following command:

    > dirname /var/lib/mongo/auditLog.bson
    the output will be the '<MongoDB auditLog directory>'

    /var/lib/mongo"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000162,CCI|CCI-000163,CCI|CCI-000164,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-96563r1_rule,STIG-ID|MD3X-00-000190,SWIFT-CSCv1|2.3,Vuln-ID|V-81849"
      see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @AUDITLOG_PATH@ replaced with "/var/lib/mongo" in field "file".
      file        : "/var/lib/mongo"
      owner       : "mongod"
      group       : "mongod"
      mask        : "077"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "MD3X-00-000190 - The audit information produced by MongoDB must be protected from unauthorized read access."
      info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.

      To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

      This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.

      Additionally, applications with user interfaces to audit records should not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

      Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

      Satisfies: SRG-APP-000118-DB-000059, SRG-APP-000119-DB-000060, SRG-APP-000120-DB-000061

      NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Run these commands:

      'chown mongod <MongoDB auditLog directory>'
      'chgrp mongod <MongoDB auditLog directory>'
      'chmod 700 <<MongoDB auditLog directory>'

      (The path for the MongoDB auditLog directory will vary according to local circumstances. The auditLog directory will be found in the MongoDB configuration file whose default location is '/etc/mongod.conf'.)

      To find the auditLog directory name, view and search for the entry in the MongoDB configuration file for the auditLog.path:

      Example:

      auditLog:
      destination: file
      format: BSON
      path: /var/lib/mongo/auditLog.bson

      Given the example above, to find the auditLog directory name run the following command:

      > dirname /var/lib/mongo/auditLog.bson
      the output will be the '<MongoDB auditLog directory>'

      /var/lib/mongo"
      reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-000162,CCI|CCI-000163,CCI|CCI-000164,CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-96563r1_rule,STIG-ID|MD3X-00-000190,SWIFT-CSCv1|2.3,Vuln-ID|V-81849"
      see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
    </report>
  </else>
</if>

<custom_item>
  system      : "Linux"
  type        : FILE_CHECK
  description : "MD3X-00-000220 - MongoDB must protect its audit features from unauthorized access."
  info        : "Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data.

	Depending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. It is, therefore, imperative that access to audit tools be controlled and protected from unauthorized access.

	Applications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the access to audit tools.

	Audit tools include, but are not limited to, OS-provided audit tools, vendor-provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records.

	If an attacker were to gain access to audit tools, he could analyze audit logs for system weaknesses or weaknesses in the auditing itself. An attacker could also manipulate logs to hide evidence of malicious activity.

	Satisfies: SRG-APP-000121-DB-000202, SRG-APP-000122-DB-000203, SRG-APP-000122-DB-000204"
  solution    : "Run these commands:

	'chown mongod <MongoDB configuration file>'
	'chgrp mongod <MongoDB configuration file>'
	'chmod 700 <<MongoDB configuration file>'

	(The name and location for the MongoDB configuration file will vary according to local circumstances. The default name and location is '/etc/mongod.conf'.)

	Using the default name and location the commands would be:

	> chown mongod /etc/mongod.conf
	> chgrp mongod /etc/mongod.conf
	> chmod 700 /etc/mongod.conf"
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001493,CCI|CCI-001494,CCI|CCI-001495,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-96565r1_rule,STIG-ID|MD3X-00-000220,SWIFT-CSCv1|2.3,Vuln-ID|V-81851"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "file".
  file        : "/etc/mongod.conf"
  owner       : "mongod"
  group       : "mongod"
  mask        : "077"
</custom_item>

<report type:"WARNING">
  description : "MD3X-00-000250 - MongoDB software installation account must be restricted to authorized users."
  info        : "When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system.

	If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

	Accordingly, only qualified and authorized individuals must be allowed access to information system components for purposes of initiating changes, including upgrades and modifications.

	DBA and other privileged administrative or application owner accounts are granted privileges that allow actions that can have a great impact on database security and operation. It is especially important to grant privileged access to only those persons who are qualified and authorized to use them.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Develop, document, and implement procedures to restrict and track use of the DBMS software installation account."
  reference   : "CAT|II,CCI|CCI-001499,Rule-ID|SV-96567r1_rule,STIG-ID|MD3X-00-000250,Vuln-ID|V-81853"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<report type:"WARNING">
  description : "MD3X-00-000260 - Database software, including DBMS configuration files, must be stored in dedicated directories, or DASD pools, separate from the host OS and other applications."
  info        : "When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

	Multiple applications can provide a cumulative negative effect. A vulnerability and subsequent exploit to one application can lead to an exploit of other applications sharing the same security context. For example, an exploit to a web server process that leads to unauthorized administrative access to host system directories can most likely lead to a compromise of all applications hosted by the same system. Database software not installed using dedicated directories both threatens and is threatened by other hosted applications. Access controls defined for one application may by default provide access to the other application's database objects or directories. Any method that provides any level of separation of security context assists in the protection between applications.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Install all applications on directories separate from the MongoDB software library directory. Relocate any directories or reinstall other application software that currently shares the MongoDB software library directory."
  reference   : "CAT|II,CCI|CCI-001499,Rule-ID|SV-96569r1_rule,STIG-ID|MD3X-00-000260,Vuln-ID|V-81855"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000280 - Unused database components, DBMS software, and database objects must be removed."
  info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

	It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

	DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

	NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "On data-bearing nodes and arbiter nodes, the mongodb-enterprise-tools, mongodb-enterprise-shell and mongodb-enterprise-mongos can be removed (or not installed).

	On applications servers that typically run the mongos process when connecting to a shared cluster, the only package required is the mongodb-enterprise-mongos package."
  reference   : "800-53|SI-7(1),CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(b),CSF|PR.DS-6,ITSG-33|SI-7(1),NESA|T7.3.3,Rule-ID|SV-96573r1_rule,STIG-ID|MD3X-00-000280,SWIFT-CSCv1|6.2,Vuln-ID|V-81859"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
  cmd         : "/bin/rpm -qa | /bin/grep mongodb-*"
  expect      : "^Manual Review Required$"
  severity    : MEDIUM
</custom_item>

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check if net.http exists in /etc/mongod.conf"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
      cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A15 '^net:' | /bin/grep 'http:'"
      regex       : "^[\\s]*http:[\\s]*"
      expect      : "^[\\s]*http:[\\s]*"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "MD3X-00-000290 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled. - enabled"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

			It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

			DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

			Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions.

			Satisfies: SRG-APP-000141-DB-000092, SRG-APP-000142-DB-000094"
      solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters either:

			Does not exist in the file
			OR
			Are set to 'false' as shown below:

			http:
			enabled: false
			JSONPEnabled: false
			RESTInterfaceEnabled: false"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96575r1_rule,STIG-ID|MD3X-00-000290,SWIFT-CSCv1|2.3,Vuln-ID|V-81861"
      see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
      cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A5 '^http:' | /bin/grep '^[\\s]*enabled:'"
      regex       : "^[\\s]*enabled:"
      expect      : "^[\\s]*enabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "MD3X-00-000290 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled. - JSONPEnabled"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

			It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

			DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

			Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions.

			Satisfies: SRG-APP-000141-DB-000092, SRG-APP-000142-DB-000094"
      solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters either:

			Does not exist in the file
			OR
			Are set to 'false' as shown below:

			http:
			enabled: false
			JSONPEnabled: false
			RESTInterfaceEnabled: false"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96575r1_rule,STIG-ID|MD3X-00-000290,SWIFT-CSCv1|2.3,Vuln-ID|V-81861"
      see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
      cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A5 '^http:' | /bin/grep '^[\\s]*JSONPEnabled:'"
      regex       : "^[\\s]*JSONPEnabled:[\\s]*"
      expect      : "^[\\s]*JSONPEnabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "MD3X-00-000290 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled. - RESTInterfaceEnabled"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

			It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

			DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

			Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions.

			Satisfies: SRG-APP-000141-DB-000092, SRG-APP-000142-DB-000094"
      solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters either:

			Does not exist in the file
			OR
			Are set to 'false' as shown below:

			http:
			enabled: false
			JSONPEnabled: false
			RESTInterfaceEnabled: false"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96575r1_rule,STIG-ID|MD3X-00-000290,SWIFT-CSCv1|2.3,Vuln-ID|V-81861"
      see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
      cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A5 '^http:' | /bin/grep '^[\\s]*RESTInterfaceEnabled:'"
      regex       : "^[\\s]*RESTInterfaceEnabled:[\\s]*"
      expect      : "^[\\s]*RESTInterfaceEnabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
    </custom_item>
  </then>

  <else>
    <report type:"PASSED">
      description : "MD3X-00-000290 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled. - enabled"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

			It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

			DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

			Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions.

			Satisfies: SRG-APP-000141-DB-000092, SRG-APP-000142-DB-000094"
      solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters either:

			Does not exist in the file
			OR
			Are set to 'false' as shown below:

			http:
			enabled: false
			JSONPEnabled: false
			RESTInterfaceEnabled: false"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96575r1_rule,STIG-ID|MD3X-00-000290,SWIFT-CSCv1|2.3,Vuln-ID|V-81861"
      see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
    </report>

    <report type:"PASSED">
      description : "MD3X-00-000290 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled. - JSONPEnabled"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

			It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

			DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

			Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions.

			Satisfies: SRG-APP-000141-DB-000092, SRG-APP-000142-DB-000094"
      solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters either:

			Does not exist in the file
			OR
			Are set to 'false' as shown below:

			http:
			enabled: false
			JSONPEnabled: false
			RESTInterfaceEnabled: false"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96575r1_rule,STIG-ID|MD3X-00-000290,SWIFT-CSCv1|2.3,Vuln-ID|V-81861"
      see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
    </report>

    <report type:"PASSED">
      description : "MD3X-00-000290 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled. - RESTInterfaceEnabled"
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

			It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

			DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

			Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions.

			Satisfies: SRG-APP-000141-DB-000092, SRG-APP-000142-DB-000094"
      solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters either:

			Does not exist in the file
			OR
			Are set to 'false' as shown below:

			http:
			enabled: false
			JSONPEnabled: false
			RESTInterfaceEnabled: false"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-000381,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96575r1_rule,STIG-ID|MD3X-00-000290,SWIFT-CSCv1|2.3,Vuln-ID|V-81861"
      see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
    </report>
  </else>
</if>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000310 - MongoDB must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)."
  info        : "To assure accountability and prevent unauthenticated access, organizational users must be identified and authenticated to prevent potential misuse and compromise of the system.

	Organizational users include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors). Organizational users (and any processes acting on behalf of users) must be uniquely identified and authenticated for all accesses, except the following:

	(i) Accesses explicitly identified and documented by the organization. Organizations document specific user actions that can be performed on the information system without identification or authentication; and
	(ii) Accesses that occur through authorized use of group authenticators without individual authentication. Organizations may require unique identification of individuals using shared accounts, for detailed accountability of individual activity."
  solution    : "Prereq: To drop a user from a database, must have the 'dropUser' action on the database.

	For any user not a member of an appropriate organization and has access to a database in the system run the following command:

	// Change to the appropriate database
	use <database>
	db.dropUser(<username>, {w: \"majority\", wtimeout: 5000}

	If the MongoDB configuration file (default location: /etc/mongod.conf) does not contain

	security: authorization: \"enabled\"

	Edit the MongoDB configuration file, add these parameters, stop/start (restart) any mongod or mongos process using this MongoDB configuration file."
  reference   : "800-171|3.1.1,800-53|AC-3(7),CAT|II,CCI|CCI-000764,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSF|PR.AC-4,CSF|PR.PT-3,Rule-ID|SV-96577r1_rule,STIG-ID|MD3X-00-000310,Vuln-ID|V-81863"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^security:' | /bin/grep 'authorization:'"
  regex       : "^[\\s]*authorization:[\\s]*"
  expect      : "^[\\s]*authorization:[\\s]*[\"\']*enabled[\"\']*[\\s]*"
</custom_item>

<report type:"WARNING">
  description : "MD3X-00-000320 - If DBMS authentication, using passwords, is employed, MongoDB must enforce the DoD standards for password complexity and lifetime."
  info        : "OS/enterprise authentication and identification must be used (SQL2-00-023600). Native DBMS authentication may be used only when circumstances make it unavoidable; and must be documented and AO-approved.

	The DoD standard for authentication is DoD-approved PKI certificates. Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

	In such cases, the DoD standards for password complexity and lifetime must be implemented. DBMS products that can inherit the rules for these from the operating system or access control program (e.g., Microsoft Active Directory) must be configured to do so. For other DBMSs, the rules must be enforced using available configuration parameters or custom code.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Either configure MongoDB for Native LDAP authentication where LDAP is configured to enforce password complexity and lifetime.
	OR
	Configure MongoDB Kerberos authentication where Kerberos is configured to enforce password complexity and lifetime."
  reference   : "CAT|II,CCI|CCI-000192,Rule-ID|SV-96579r1_rule,STIG-ID|MD3X-00-000320,Vuln-ID|V-81865"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<report type:"WARNING">
  description : "MD3X-00-000330 - If passwords are used for authentication, MongoDB must store only hashed, salted representations of passwords."
  info        : "The DoD standard for authentication is DoD-approved PKI certificates.

	Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

	In such cases, database passwords stored in clear text, using reversible encryption, or using unsalted hashes would be vulnerable to unauthorized disclosure. Database passwords must always be in the form of one-way, salted hashes when stored internally or externally to MongoDB.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Do the following:
	- Create local CA and signing keys.
	- Generate and sign server certificates for member authentication.
	- Generate and sign client certificates for client authentication.
	- Start MongoDB cluster in non-auth mode.
	- Set up replica set and initial users.
	- Restart MongoDB replica set in X.509 mode using server certificates.

	Example shown here for x.509 Authentication: https://www.mongodb.com/blog/post/secure-mongodb-with-x-509-authentication

	Additionally, SSL/TLS must be on as documented here: https://docs.mongodb.com/v3.4/tutorial/configure-ssl/"
  reference   : "CAT|II,CCI|CCI-000196,Rule-ID|SV-96581r1_rule,STIG-ID|MD3X-00-000330,Vuln-ID|V-81867"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000340 - If passwords are used for authentication, MongoDB must transmit only encrypted representations of passwords. - mode"
  info        : "The DoD standard for authentication is DoD-approved PKI certificates.

	Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

	In such cases, passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission.

	DBMS passwords sent in clear text format across the network are vulnerable to discovery by unauthorized users. Disclosure of passwords may easily lead to unauthorized access to the database.

	Satisfies: SRG-APP-000172-DB-000075, SRG-APP-000175-DB-000067"
  solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf) ensure the following parameters following parameter are set and configured correctly:

	net:
	ssl:
	mode: requireSSL
	PEMKeyFile: /etc/ssl/mongodb.pem
	CAFile: /etc/ssl/mongodbca.pem

	Remove any occurrence of the 'allowInvalidCertificates' parameter:

	net:
	ssl:
	allowInvalidCertificates: true

	Stop/start (restart) the mongod or mongos instance using this configuration."
  reference   : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-000185,CCI|CCI-000197,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-96583r1_rule,STIG-ID|MD3X-00-000340,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-81869"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A14 '^net:' | /bin/grep -A16 'ssl:' | /bin/grep 'mode:'"
  regex       : "^[\\s]*mode:[\\s]*"
  expect      : "^[\\s]*mode:[\\s]*[\"\']*requireSSL[\"\']*[\\s]*"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000340 - If passwords are used for authentication, MongoDB must transmit only encrypted representations of passwords. - PEMKeyFile"
  info        : "The DoD standard for authentication is DoD-approved PKI certificates.

	Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

	In such cases, passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission.

	DBMS passwords sent in clear text format across the network are vulnerable to discovery by unauthorized users. Disclosure of passwords may easily lead to unauthorized access to the database.

	Satisfies: SRG-APP-000172-DB-000075, SRG-APP-000175-DB-000067"
  solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf) ensure the following parameters following parameter are set and configured correctly:

	net:
	ssl:
	mode: requireSSL
	PEMKeyFile: /etc/ssl/mongodb.pem
	CAFile: /etc/ssl/mongodbca.pem

	Remove any occurrence of the 'allowInvalidCertificates' parameter:

	net:
	ssl:
	allowInvalidCertificates: true

	Stop/start (restart) the mongod or mongos instance using this configuration."
  reference   : "800-53|SC-17,CAT|II,CCI|CCI-000185,CCI|CCI-000197,ITSG-33|SC-17,NESA|T7.4.2,NIAv2|CY10,NIAv2|CY12,NIAv2|CY5a,NIAv2|SS25,Rule-ID|SV-96583r1_rule,STIG-ID|MD3X-00-000340,Vuln-ID|V-81869"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A14 '^net:' | /bin/grep -A16 'ssl:' | /bin/grep 'PEMKeyFile:'"
  regex       : "^[\\s]*PEMKeyFile:[\\s]*"
# Note: Variable @PEMKEYFILE_PATH@ replaced with "/etc/ssl/mongodb.pem" in field "expect".
  expect      : "^[\\s]*PEMKeyFile:[\\s]*[\"\']*/etc/ssl/mongodb.pem[\"\']*[\\s]*"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000340 - If passwords are used for authentication, MongoDB must transmit only encrypted representations of passwords. - CAFile"
  info        : "The DoD standard for authentication is DoD-approved PKI certificates.

	Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

	In such cases, passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission.

	DBMS passwords sent in clear text format across the network are vulnerable to discovery by unauthorized users. Disclosure of passwords may easily lead to unauthorized access to the database.

	Satisfies: SRG-APP-000172-DB-000075, SRG-APP-000175-DB-000067"
  solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf) ensure the following parameters following parameter are set and configured correctly:

	net:
	ssl:
	mode: requireSSL
	PEMKeyFile: /etc/ssl/mongodb.pem
	CAFile: /etc/ssl/mongodbca.pem

	Remove any occurrence of the 'allowInvalidCertificates' parameter:

	net:
	ssl:
	allowInvalidCertificates: true

	Stop/start (restart) the mongod or mongos instance using this configuration."
  reference   : "800-53|SC-17,CAT|II,CCI|CCI-000185,CCI|CCI-000197,ITSG-33|SC-17,NESA|T7.4.2,NIAv2|CY10,NIAv2|CY12,NIAv2|CY5a,NIAv2|SS25,Rule-ID|SV-96583r1_rule,STIG-ID|MD3X-00-000340,Vuln-ID|V-81869"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A14 '^net:' | /bin/grep -A16 'ssl:' | /bin/grep 'CAFile:'"
  regex       : "^[\\s]*CAFile:[\\s]*"
# Note: Variable @CAFILE_PATH@ replaced with "/etc/ssl/mongodbca.pem" in field "expect".
  expect      : "^[\\s]*CAFile:[\\s]*[\"\']*/etc/ssl/mongodbca.pem[\"\']*[\\s]*"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000340 - If passwords are used for authentication, MongoDB must transmit only encrypted representations of passwords. - allowInvalidCertificates"
  info        : "The DoD standard for authentication is DoD-approved PKI certificates.

	Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

	In such cases, passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission.

	DBMS passwords sent in clear text format across the network are vulnerable to discovery by unauthorized users. Disclosure of passwords may easily lead to unauthorized access to the database.

	Satisfies: SRG-APP-000172-DB-000075, SRG-APP-000175-DB-000067"
  solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf) ensure the following parameters following parameter are set and configured correctly:

	net:
	ssl:
	mode: requireSSL
	PEMKeyFile: /etc/ssl/mongodb.pem
	CAFile: /etc/ssl/mongodbca.pem

	Remove any occurrence of the 'allowInvalidCertificates' parameter:

	net:
	ssl:
	allowInvalidCertificates: true

	Stop/start (restart) the mongod or mongos instance using this configuration."
  reference   : "800-53|SC-17,CAT|II,CCI|CCI-000185,CCI|CCI-000197,ITSG-33|SC-17,NESA|T7.4.2,NIAv2|CY10,NIAv2|CY12,NIAv2|CY5a,NIAv2|SS25,Rule-ID|SV-96583r1_rule,STIG-ID|MD3X-00-000340,Vuln-ID|V-81869"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A14 '^net:' | /bin/grep -A16 'ssl:' | /bin/grep 'allowInvalidCertificates:'"
  regex       : "^[\\s]*allowInvalidCertificates:[\\s]*"
  expect      : "^[\\s]*allowInvalidCertificates:[\\s]*[\"\']*false[\"\']*[\\s]*"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : FILE_CHECK
  description : "MD3X-00-000360 - MongoDB must enforce authorized access to all PKI private keys stored/utilized by MongoDB. - PEMKeyFile"
  info        : "The DoD standard for authentication is DoD-approved PKI certificates. PKI certificate-based authentication is performed by requiring the certificate holder to cryptographically prove possession of the corresponding private key.

	If the private key is stolen, an attacker can use the private key(s) to impersonate the certificate holder. In cases where MongoDB-stored private keys are used to authenticate MongoDB to the systems clients, loss of the corresponding private keys would allow an attacker to successfully perform undetected man in the middle attacks against MongoDB system and its clients.

	Both the holder of a digital certificate and the issuing authority must take careful measures to protect the corresponding private key. Private keys should always be generated and protected in FIPS 140-2 validated cryptographic modules.

	All access to the private key(s) of MongoDB must be restricted to authorized and authenticated users. If unauthorized users have access to one or more of MongoDB's private keys, an attacker could gain access to the key(s) and use them to impersonate the database on the network or otherwise perform unauthorized actions."
  solution    : "Run these commands:
	'chown mongodb:mongodb /etc/ssl/mongodb.pem'
	'chmod 600 /etc/ssl/mongodb.pem'
	'chown mongodb:mongodb /etc/ssl/mongodbca.pem'
	'chmod 600 /etc/ssl/mongodbca.pem'"
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|I,CCI|CCI-000186,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-96585r1_rule,STIG-ID|MD3X-00-000360,SWIFT-CSCv1|2.3,Vuln-ID|V-81871"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @PEMKEYFILE_PATH@ replaced with "/etc/ssl/mongodb.pem" in field "file".
  file        : "/etc/ssl/mongodb.pem"
  owner       : "mongodb"
  group       : "mongodb"
  mask        : "177"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : FILE_CHECK
  description : "MD3X-00-000360 - MongoDB must enforce authorized access to all PKI private keys stored/utilized by MongoDB. - CAFile"
  info        : "The DoD standard for authentication is DoD-approved PKI certificates. PKI certificate-based authentication is performed by requiring the certificate holder to cryptographically prove possession of the corresponding private key.

	If the private key is stolen, an attacker can use the private key(s) to impersonate the certificate holder. In cases where MongoDB-stored private keys are used to authenticate MongoDB to the systems clients, loss of the corresponding private keys would allow an attacker to successfully perform undetected man in the middle attacks against MongoDB system and its clients.

	Both the holder of a digital certificate and the issuing authority must take careful measures to protect the corresponding private key. Private keys should always be generated and protected in FIPS 140-2 validated cryptographic modules.

	All access to the private key(s) of MongoDB must be restricted to authorized and authenticated users. If unauthorized users have access to one or more of MongoDB's private keys, an attacker could gain access to the key(s) and use them to impersonate the database on the network or otherwise perform unauthorized actions."
  solution    : "Run these commands:
	'chown mongodb:mongodb /etc/ssl/mongodb.pem'
	'chmod 600 /etc/ssl/mongodb.pem'
	'chown mongodb:mongodb /etc/ssl/mongodbca.pem'
	'chmod 600 /etc/ssl/mongodbca.pem'"
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|I,CCI|CCI-000186,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-96585r1_rule,STIG-ID|MD3X-00-000360,SWIFT-CSCv1|2.3,Vuln-ID|V-81871"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @CAFILE_PATH@ replaced with "/etc/ssl/mongodbca.pem" in field "file".
  file        : "/etc/ssl/mongodbca.pem"
  owner       : "mongodb"
  group       : "mongodb"
  mask        : "177"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000380 - MongoDB must use NIST FIPS 140-2-validated cryptographic modules for cryptographic operations."
  info        : "Use of weak or not validated cryptographic algorithms undermines the purposes of utilizing encryption and digital signatures to protect data. Weak algorithms can be easily broken and not validated cryptographic modules may not implement algorithms correctly. Unapproved cryptographic modules or algorithms should not be relied on for authentication, confidentiality, or integrity. Weak cryptography could allow an attacker to gain access to and modify data stored in the database as well as the administration settings of MongoDB.

	Applications, including DBMSs, utilizing cryptography are required to use approved NIST FIPS 140-2-validated cryptographic modules that meet the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.

	The security functions validated as part of FIPS 140-2 for cryptographic modules are described in FIPS 140-2 Annex A.

	NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based encryption modules.

	Satisfies: SRG-APP-000179-DB-000114, SRG-APP-000514-DB-000381, SRG-APP-000514-DB-000382, SRG-APP-000514-DB-000383, SRG-APP-000416-DB-000380"
  solution    : "Enable FIPS 140-2 mode for MongoDB Enterprise.

	Edit the MongoDB database configuration file (default location: /etc/mongod.conf) to contain the following parameter setting:

	net:
	ssl:
	FIPSMode: true

	Stop/start (restart) the mongod or mongos instance using this configuration.

	For the operating system finding, please refer to the appropriate operating system documentation for the procedure to install, configure, and test FIPS mode."
  reference   : "800-171|3.13.11,800-53|SC-13,CAT|I,CCI|CCI-000803,CCI|CCI-002450,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,Rule-ID|SV-96589r1_rule,STIG-ID|MD3X-00-000380,Vuln-ID|V-81875"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^net:' | /bin/grep -A3 'ssl:' | /bin/grep -A3 'FIPSMode:'"
  regex       : "^[\\s]*FIPSMode:[\\s]*"
  expect      : "^[\\s]*FIPSMode:[\\s]*[\"\']*true[\"\']*[\\s]*"
</custom_item>

<report type:"WARNING">
  description : "MD3X-00-000410 - MongoDB must maintain the authenticity of communications sessions by guarding against man-in-the-middle attacks that guess at Session ID values."
  info        : "One class of man-in-the-middle, or session hijacking, attack involves the adversary guessing at valid session identifiers based on patterns in identifiers already known.

	The preferred technique for thwarting guesses at Session IDs is the generation of unique session identifiers using a FIPS 140-2 approved random number generator.

	However, it is recognized that available DBMS products do not all implement the preferred technique yet may have other protections against session hijacking. Therefore, other techniques are acceptable, provided they are demonstrated to be effective.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Follow the documentation guide at https://docs.mongodb.com/v3.4/tutorial/configure-ssl/.

	Stop/start (restart) and mongod or mongos using the MongoDB configuration file."
  reference   : "CAT|II,CCI|CCI-001188,Rule-ID|SV-96593r1_rule,STIG-ID|MD3X-00-000410,Vuln-ID|V-81879"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000420 - MongoDB must fail to a secure state if system initialization fails, shutdown fails, or aborts fail."
  info        : "Failure to a known state can address safety or security in accordance with the mission/business needs of the organization.

	Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system.

	Failure to a known safe state helps prevent systems from failing to a state that may cause loss of data or unauthorized access to system resources. Systems that fail suddenly and with no incorporated failure state planning may leave the hosting system available but with a reduced security protection capability. Preserving information system state data also facilitates system restart and return to the operational mode of the organization with less disruption of mission/business processes.

	Databases must fail to a known consistent state. Transactions must be successfully completed or rolled back.

	In general, security mechanisms should be designed so that a failure will follow the same execution path as disallowing the operation. For example, application security methods, such as isAuthorized(), isAuthenticated(), and validate(), should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means.

	Abort refers to stopping a program or function before it has finished naturally. The term abort refers to both requested and unexpected terminations.

	Satisfies: SRG-APP-000225-DB-000153, SRG-APP-000226-DB-000147"
  solution    : "Modify the mongod startup command-line options by removing the \"--nojournal\" option.

	Edit the MongoDB database configuration file (default location: /etc/mongod.conf) to ensure it contains the following parameter setting:

	storage:
	journal:
	enabled: true

	Stop/start (restart) any or all mongod processes."
  reference   : "800-171|3.13.16,800-53|SC-28(1),CAT|II,CCI|CCI-001190,CCI|CCI-001665,CSF|PR.DS-1,ITSG-33|SC-28(1),Rule-ID|SV-96595r1_rule,STIG-ID|MD3X-00-000420,TBA-FIISB|28.1,Vuln-ID|V-81881"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^storage:' | /bin/grep -A2 'journal:' | /bin/grep 'enabled:'"
  regex       : "^[\\s]*enabled:[\\s]*"
  expect      : "^[\\s]*enabled:[\\s]*[\"\']*true[\"\']*[\\s]*"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000440 - MongoDB must protect the confidentiality and integrity of all information at rest."
  info        : "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information. Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.

	User data generated, as well as application-specific configuration data, needs to be protected. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.

	If the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification."
  solution    : "Ensure that the MongoDB Configuration file (default location: /etc/mongod.conf) has the following set:

	security:
	enableEncryption: \"true\"

	Ensure that any mongod process that contains the option '--enableEcryption' has 'true' as its parameter <boolean> value (e.g., '--enableEncryption true').

	Stop/start (restart) and mongod process using either the MongoDB configuration file or that contains the '--enableEncryption' option."
  reference   : "800-171|3.13.11,800-53|SC-13,CAT|II,CCI|CCI-001199,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,Rule-ID|SV-96597r1_rule,STIG-ID|MD3X-00-000440,Vuln-ID|V-81883"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^security:' | /bin/grep 'enableEncryption:'"
  regex       : "^[\\s]*enableEncryption:[\\s]*"
  expect      : "^[\\s]*enableEncryption:[\\s]*[\"\']*true[\"\']*[\\s]*"
</custom_item>

<report type:"WARNING">
  description : "MD3X-00-000460 - Database contents must be protected from unauthorized and unintended information transfer by enforcement of a data-transfer policy."
  info        : "Applications, including DBMSs, must prevent unauthorized and unintended information transfer via shared system resources.

	Data used for the development and testing of applications often involves copying data from production. It is important that specific procedures exist for this process, to include the conditions under which such transfer may take place, where the copies may reside, and the rules for ensuring sensitive data are not exposed.

	Copies of sensitive data must not be misplaced or left in a temporary location without the proper controls.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Modify any code used for moving data from production to development/test systems to comply with the organization-defined data transfer policy, and to ensure copies of production data are not left in unsecured locations."
  reference   : "CAT|II,CCI|CCI-001090,Rule-ID|SV-96599r1_rule,STIG-ID|MD3X-00-000460,Vuln-ID|V-81885"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<custom_item>
  system      : "Linux"
  type        : FILE_CHECK
  description : "MD3X-00-000470 - MongoDB must prevent unauthorized and unintended information transfer via shared system resources. - .conf file"
  info        : "The purpose of this control is to prevent information, including encrypted representations of information, produced by the actions of a prior user/role (or the actions of a process acting on behalf of a prior user/role) from being available to any current user/role (or current process) that obtains access to a shared system resource (e.g., registers, main memory, secondary storage) after the resource has been released back to the information system. Control of information in shared resources is also referred to as object reuse.

	Satisfies: SRG-APP-000243-DB-000373, SRG-APP-000243-DB-000374"
  solution    : "Correct the permission to the files and/or directories that are in violation.

	MongoDB Configuration file (default location):
	chown mongod:mongod /etc/mongod.conf
	chmod 755 /etc/mongod.conf

	MongoDB data file directory (default location):
	chown -R mongod:mongod /var/lib/mongo
	chmod -R 755 /var/lib/mongo"
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001090,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-96601r1_rule,STIG-ID|MD3X-00-000470,SWIFT-CSCv1|2.3,Vuln-ID|V-81887"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "file".
  file        : "/etc/mongod.conf"
  owner       : "mongod"
  group       : "mongod"
  mask        : "022"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : FILE_CHECK
  description : "MD3X-00-000470 - MongoDB must prevent unauthorized and unintended information transfer via shared system resources. - Data Dir"
  info        : "The purpose of this control is to prevent information, including encrypted representations of information, produced by the actions of a prior user/role (or the actions of a process acting on behalf of a prior user/role) from being available to any current user/role (or current process) that obtains access to a shared system resource (e.g., registers, main memory, secondary storage) after the resource has been released back to the information system. Control of information in shared resources is also referred to as object reuse.

	Satisfies: SRG-APP-000243-DB-000373, SRG-APP-000243-DB-000374"
  solution    : "Correct the permission to the files and/or directories that are in violation.

	MongoDB Configuration file (default location):
	chown mongod:mongod /etc/mongod.conf
	chmod 755 /etc/mongod.conf

	MongoDB data file directory (default location):
	chown -R mongod:mongod /var/lib/mongo
	chmod -R 755 /var/lib/mongo"
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001090,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,Rule-ID|SV-96601r1_rule,STIG-ID|MD3X-00-000470,SWIFT-CSCv1|2.3,Vuln-ID|V-81887"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGO_DATA_DIR_PATH@ replaced with "/data/db" in field "file".
  file        : "/data/db"
  owner       : "mongod"
  group       : "mongod"
  mask        : "022"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000490 - MongoDB must check the validity of all data inputs except those specifically identified by the organization."
  info        : "Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid user input is one of the primary methods employed when attempting to compromise an application.

	With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.

	Even when no such hijacking takes place, invalid input that gets recorded in the database, whether accidental or malicious, reduces the reliability and usability of the system. Available protections include data types, referential constraints, uniqueness constraints, range checking, and application-specific logic. Application-specific logic can be implemented within the database in stored procedures and triggers, where appropriate.

	This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered."
  solution    : "Disable the javascriptEnabled option in the config file.

	security:
	javascriptEnabled: false

	If document validation is needed, it should be configured according to the documentation page at https://docs.mongodb.com/manual/core/document-validation/."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-001310,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96603r1_rule,STIG-ID|MD3X-00-000490,SWIFT-CSCv1|2.3,Vuln-ID|V-81889"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^security:' | /bin/grep 'javascriptEnabled:'"
  regex       : "^[\\s]*javascriptEnabled:[\\s]*"
  expect      : "^[\\s]*javascriptEnabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000500 - MongoDB and associated applications must reserve the use of dynamic code execution for situations that require it."
  info        : "With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. In such cases, the attacker deduces the manner in which SQL statements are being processed, either from inside knowledge or by observing system behavior in response to invalid inputs. When the attacker identifies scenarios where SQL queries are being assembled by application code (which may be within the database or separate from it) and executed dynamically, the attacker is then able to craft input strings that subvert the intent of the query. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.

	The principal protection against code injection is not to use dynamic execution except where it provides necessary functionality that cannot be utilized otherwise. Use strongly typed data items rather than general-purpose strings as input parameters to task-specific, pre-compiled stored procedures and functions (and triggers).

	This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.

	Satisfies: SRG-APP-000251-DB-000391, SRG-APP-000251-DB-000392"
  solution    : "Disable the 'javascriptEnabled' option.

	Edit the MongoDB configuration file (default location: /etc/mongod.conf to include the following:

	security:
	javascriptEnabled: false"
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-001310,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96605r1_rule,STIG-ID|MD3X-00-000500,SWIFT-CSCv1|2.3,Vuln-ID|V-81891"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^security:' | /bin/grep 'javascriptEnabled:'"
  regex       : "^[\\s]*javascriptEnabled:[\\s]*"
  expect      : "^[\\s]*javascriptEnabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
</custom_item>

<report type:"WARNING">
  description : "MD3X-00-000520 - MongoDB must provide non-privileged users with error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries."
  info        : "Any DBMS or associated application providing too much information in error messages on the screen or printout risks compromising the data and security of the system. The structure and content of error messages need to be carefully considered by the organization and development team.

	Databases can inadvertently provide a wealth of information to an attacker through improperly handled error messages. In addition to sensitive business or personal information, database errors can provide host names, IP addresses, user names, and other system information not required for troubleshooting but very useful to someone targeting the system.

	Carefully consider the structure/content of error messages. The extent to which information systems are able to identify and handle error conditions is guided by organizational policy and operational requirements. Information that could be exploited by adversaries includes, for example, logon attempts with passwords entered by mistake as the username, mission/business information that can be derived from (if not stated explicitly by) information recorded, and personal information, such as account numbers, social security numbers, and credit card numbers.

	This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Configure custom database code and associated application code not to divulge sensitive information or information useful for system identification in error messages."
  reference   : "CAT|II,CCI|CCI-001312,Rule-ID|SV-96607r1_rule,STIG-ID|MD3X-00-000520,Vuln-ID|V-81893"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000530 - MongoDB must reveal detailed error messages only to the ISSO, ISSM, SA, and DBA."
  info        : "If MongoDB provides too much information in error logs and administrative messages to the screen, this could lead to compromise. The structure and content of error messages need to be carefully considered by the organization and development team. The extent to which the information system is able to identify and handle error conditions is guided by organizational policy and operational requirements.

	Some default DBMS error messages can contain information that could aid an attacker in, among others things, identifying the database type, host address, or state of the database. Custom errors may contain sensitive customer information.

	It is important that detailed error messages be visible only to those who are authorized to view them; that general users receive only generalized acknowledgment that errors have occurred; and that these generalized messages appear only when relevant to the user's task. For example, a message along the lines of, \"An error has occurred. Unable to save your changes. If this problem persists, contact your help desk\" would be relevant. A message such as \"Warning: your transaction generated a large number of page splits\" would likely not be relevant.

	Administrative users authorized to review detailed error messages typically are the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified according to organization-specific needs, with appropriate approval.

	This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered."
  solution    : "Edit the MongoDB configuration file (default location: /etc/mongod.conf) and add the following parameter 'redactClientLogData' in the security section of that file:

	security:
	redactClientLogData: \"true\"

	Stop/start (restart) any mongod or mongos using the MongoDB configuration file."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,CAT|II,CCI|CCI-001314,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,Rule-ID|SV-96609r1_rule,STIG-ID|MD3X-00-000530,SWIFT-CSCv1|2.3,Vuln-ID|V-81895"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^security:' | /bin/grep 'redactClientLogData:'"
  regex       : "^[\\s]*redactClientLogData:[\\s]*"
  expect      : "^[\\s]*redactClientLogData:[\\s]*[\"\']*true[\"\']*[\\s]*"
</custom_item>

<report type:"WARNING">
  description : "MD3X-00-000590 - MongoDB must provide the means for individuals in authorized roles to change the auditing to be performed on all application components, based on all selectable event criteria within organization-defined time thresholds."
  info        : "If authorized individuals do not have the ability to modify auditing parameters in response to a changing threat environment, the organization may not be able to effectively respond, and important forensic information may be lost.

	This requirement enables organizations to extend or limit auditing as necessary to meet organizational requirements. Auditing that is limited to conserve information system resources may be extended to address certain threat situations. In addition, auditing may be limited to a specific set of events to facilitate audit reduction, analysis, and reporting. Organizations can establish time thresholds in which audit actions are changed, for example, near real time, within minutes, or within hours.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Use the rolling maintenance procedure.

	For each member of a replica set, starting with a secondary member, perform the following sequence of events, ending with the primary:

	1. Restart the mongod instance as a standalone.
	2. Perform the configure auditing task on the standalone instance.
	3. Restart the mongod instance as a member of the replica set."
  reference   : "CAT|II,CCI|CCI-001914,Rule-ID|SV-96615r1_rule,STIG-ID|MD3X-00-000590,Vuln-ID|V-81901"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000600 - MongoDB must utilize centralized management of the content captured in audit records generated by all components of MongoDB."
  info        : "Without the ability to centrally manage the content captured in the audit records, identification, troubleshooting, and correlation of suspicious behavior would be difficult and could lead to a delayed or incomplete analysis of an ongoing attack.

	The content captured in audit records must be managed from a central location (necessitating automation). Centralized management of audit records and logs provides for efficiency in maintenance and management of records, as well as the backup and archiving of those records.

	MongoDB may write audit records to database tables, to files in the file system, to other kinds of local repository, or directly to a centralized log management system. Whatever the method used, it must be compatible with off-loading the records to the centralized system."
  solution    : "Install a centralized syslog collecting tool and configured it as instructed in its documentation.

	To enable auditing and print audit events to the syslog in JSON format, specify the syslog for the --auditDestination setting:
	mongod --dbpath data/db --auditDestination syslog

	Alternatively, these options can also be specified in the configuration file:
	storage:
	dbPath: data/db
	auditLog:
	destination: syslog"
  reference   : "800-171|3.4.2,800-53|CM-6,CAT|II,CCI|CCI-001844,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6,NESA|T3.2.1,Rule-ID|SV-96617r1_rule,STIG-ID|MD3X-00-000600,SWIFT-CSCv1|2.3,Vuln-ID|V-81903"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A10 '^storage:' | /bin/grep 'dbPath:'"
  regex       : "^[\\s]*dbPath:[\\s]*"
# Note: Variable @MONGO_DATA_DIR_PATH@ replaced with "/data/db" in field "expect".
  expect      : "^[\\s]*dbPath:[\\s]*[\"\']*/data/db[\"\']*[\\s]*"
</custom_item>

<report type:"WARNING">
  description : "MD3X-00-000620 - MongoDB must allocate audit record storage capacity in accordance with site audit record storage requirements."
  info        : "In order to ensure sufficient storage capacity for the audit logs, MongoDB must be able to allocate audit record storage capacity. Although another requirement (SRG-APP-000515-DB-000318) mandates that audit data be off-loaded to a centralized log management system, it remains necessary to provide space on the database server to serve as a buffer against outages and capacity limits of the off-loading mechanism.

	The task of allocating audit record storage capacity is usually performed during initial installation of MongoDB and is closely associated with the DBA and system administrator roles. The DBA or system administrator will usually coordinate the allocation of physical drive space with the application owner/installer and the application will prompt the installer to provide the capacity information, the physical location of the disk, or both.

	In determining the capacity requirements, consider such factors as: total number of users; expected number of concurrent users during busy periods; number and type of events being monitored; types and amounts of data being captured; the frequency/speed with which audit records are off-loaded to the central log management system; and any limitations that exist on MongoDB's ability to reuse the space formerly occupied by off-loaded records.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "View the mongodb configuration file (default location: /etc/mongod.conf) and view the 'auditlog.path' to identify the storage volume.

	Allocate sufficient space to the storage volume hosting the file identified in the MongoDB configuration 'auditLog.path' to support audit file peak demand."
  reference   : "CAT|II,CCI|CCI-001849,Rule-ID|SV-96619r1_rule,STIG-ID|MD3X-00-000620,Vuln-ID|V-81905"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<report type:"WARNING">
  description : "MD3X-00-000630 - MongoDB must provide a warning to appropriate support staff when allocated audit record storage volume reaches 75% of maximum audit record storage capacity."
  info        : "Organizations are required to use a central log management system, so, under normal conditions, the audit space allocated to MongoDB on its own server will not be an issue. However, space will still be required on MongoDB server for audit records in transit, and, under abnormal conditions, this could fill up. Since a requirement exists to halt processing upon audit failure, a service outage would result.

	If support personnel are not notified immediately upon storage volume utilization reaching 75%, they are unable to plan for storage capacity expansion.

	The appropriate support staff include, at a minimum, the ISSO and the DBA/SA.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "View the mongodb configuration file (default location: /etc/mongod.conf) and view the 'auditlog.path' to identify the storage volume.

	Install MongoDB Ops Manager or other organization approved monitoring software.

	Configure the required alert in the monitoring software to send an alert where storage volume holding the auditLog file utilization reaches 75%."
  reference   : "CAT|II,CCI|CCI-001855,Rule-ID|SV-96621r1_rule,STIG-ID|MD3X-00-000630,Vuln-ID|V-81907"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<report type:"WARNING">
  description : "MD3X-00-000700 - MongoDB must require users to reauthenticate when organization-defined circumstances or situations require reauthentication."
  info        : "The DoD standard for authentication of an interactive user is the presentation of a Common Access Card (CAC) or other physical token bearing a valid, current, DoD-issued Public Key Infrastructure (PKI) certificate, coupled with a Personal Identification Number (PIN) to be entered by the user at the beginning of each session and whenever reauthentication is required.

	Without reauthentication, users may access resources or perform tasks for which they do not have authorization.

	When applications provide the capability to change security roles or escalate the functional capability of the application, it is critical the user reauthenticate.

	In addition to the reauthentication requirements associated with session locks, organizations may require reauthentication of individuals and/or devices in other situations, including (but not limited to) the following circumstances:

	(i) When authenticators change;
	(ii) When roles change;
	(iii) When security categories of information systems change;
	(iv) When the execution of privileged functions occurs;
	(v) After a fixed period of time; or
	(vi) Periodically.

	Within the DoD, the minimum circumstances requiring reauthentication are privilege escalation and role changes.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Determine the organization-defined circumstances or situations that require reauthentication and ensure that the mongod and mongos processes are stopped/started (restart)."
  reference   : "CAT|II,CCI|CCI-002038,Rule-ID|SV-96627r1_rule,STIG-ID|MD3X-00-000700,Vuln-ID|V-81913"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<report type:"WARNING">
  description : "MD3X-00-000710 - MongoDB must prohibit the use of cached authenticators after an organization-defined time period."
  info        : "If cached authentication information is out-of-date, the validity of the authentication information may be questionable.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "If MongoDB is configured to authenticate using SASL and LDAP/Active Directory modify and restart the saslauthd command line options in the system boot script and set the '-t' option to the appropriate timeout in seconds.

	From the Linux Command line (with root/sudo privs) run the following command to restart the saslauthd process after making the change for the '-t' parameter:

	systemctl restart saslauthd

	If any mongos process is running (a MongoDB shared cluster) the 'userCacheInvalidationIntervalSecs' option to adjust the timeout in seconds can be changed from the default '30' seconds.

	This is accomplished by modifying the mongos configuration file (default location: /etc/mongos.conf) and then restarting mongos."
  reference   : "CAT|II,CCI|CCI-002007,Rule-ID|SV-96629r1_rule,STIG-ID|MD3X-00-000710,Vuln-ID|V-81915"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<report type:"WARNING">
  description : "MD3X-00-000730 - MongoDB must only accept end entity certificates issued by DoD PKI or DoD-approved PKI Certification Authorities (CAs) for the establishment of all encrypted sessions."
  info        : "Only DoD-approved external PKIs have been evaluated to ensure that they have security controls and identity vetting procedures in place which are sufficient for DoD systems to rely on the identity asserted in the certificate. PKIs lacking sufficient security controls and identity vetting procedures risk being compromised and issuing certificates that enable adversaries to impersonate legitimate users.

	The authoritative list of DoD-approved PKIs is published at http://iase.disa.mil/pki-pke/interoperability.

	This requirement focuses on communications protection for MongoDB session rather than for the network packet.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remove any certificate that was not issued by an approved DoD certificate authority. Contact the organization's certificate issuer and request a new certificate that is issued by a valid DoD certificate authorities."
  reference   : "CAT|II,CCI|CCI-002470,Rule-ID|SV-96631r1_rule,STIG-ID|MD3X-00-000730,Vuln-ID|V-81917"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<report type:"WARNING">
  description : "MD3X-00-000740 - MongoDB must implement cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components."
  info        : "DBMSs handling data requiring 'data at rest' protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. These cryptographic mechanisms may be native to MongoDB or implemented via additional software or operating system/file system settings, as appropriate to the situation.

	Selection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields).

	The decision whether and what to encrypt rests with the data owner and is also influenced by the physical measures taken to secure the equipment and media on which the information resides.

	Satisfies: SRG-APP-000428-DB-000386, SRG-APP-000429-DB-000387
	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Configure MongoDB to use the Encrypted Storage Engine and a KMIP appliance as documented here:

	https://docs.mongodb.com/v3.4/core/security-encryption-at-rest/
	https://docs.mongodb.com/v3.4/tutorial/configure-encryption/"
  reference   : "CAT|II,CCI|CCI-002475,Rule-ID|SV-96633r1_rule,STIG-ID|MD3X-00-000740,Vuln-ID|V-81919"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000760 - MongoDB must maintain the confidentiality and integrity of information during preparation for transmission. - mode"
  info        : "Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.

	Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.

	When transmitting data, MongoDB, associated applications, and infrastructure must leverage transmission protection mechanisms."
  solution    : "Stop the MongoDB instance if it is running. Obtain a certificate from a valid DoD certificate authority to be used for encrypted data transmission. Modify the MongoDB configuration file with ssl configuration options such as:

	net:
	ssl:
	mode: requireSSL
	PEMKeyFile: /etc/ssl/mongodb.pem

	Set 'net.ssl.mode' to the 'requireSSL'.
	Set 'net.ssl.KeyFile' to the full path of the certificate (.pem) file.

	Start/stop (restart) all mongod or mongos instances using the MongoDB configuration file (default location: /etc/mongod.conf)."
  reference   : "800-171|3.13.8,800-53|SC-8(1),CAT|II,CCI|CCI-002420,CSF|PR.DS-2,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,Rule-ID|SV-96635r1_rule,STIG-ID|MD3X-00-000760,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-81921"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A14 '^net:' | /bin/grep -A16 'ssl:' | /bin/grep 'mode:'"
  regex       : "^[\\s]*mode:[\\s]*"
  expect      : "^[\\s]*mode:[\\s]*[\"\']*requireSSL[\"\']*[\\s]*"
</custom_item>

<custom_item>
  system      : "Linux"
  type        : CMD_EXEC
  description : "MD3X-00-000770 - MongoDB must maintain the confidentiality and integrity of information during reception. - PEMKeyFile"
  info        : "Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.

	This requirement applies only to those applications that are either distributed or can allow access to data nonlocally. Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.

	When receiving data, MongoDB, associated applications, and infrastructure must leverage protection mechanisms."
  solution    : "Obtain a certificate from a valid DoD certificate authority to be used for encrypted data transmission.

	Modify the MongoDB configuration file (default location: /etc/mongod.conf) with the network configuration options.

	net:
	ssl:
	mode: requireSSL
	PEMKeyFile: /etc/ssl/mongodb.pem

	Set 'net.ssl.mode' to the 'requireSSL'.
	Set 'net.ssl.KeyFile' to the full path of the certificate (.pem) file.

	Start/stop (restart) all mongod or mongos instances using the MongoDB configuration file (default location: /etc/mongod.conf)."
  reference   : "800-53|SC-17,CAT|II,CCI|CCI-002422,ITSG-33|SC-17,NESA|T7.4.2,NIAv2|CY10,NIAv2|CY12,NIAv2|CY5a,NIAv2|SS25,Rule-ID|SV-96637r1_rule,STIG-ID|MD3X-00-000770,Vuln-ID|V-81923"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
# Note: Variable @MONGOD_CONF_FULL_PATH@ replaced with "/etc/mongod.conf" in field "cmd".
  cmd         : "/bin/cat /etc/mongod.conf | /bin/grep -A14 '^net:' | /bin/grep -A16 'ssl:' | /bin/grep 'PEMKeyFile:'"
  regex       : "^[\\s]*PEMKeyFile:[\\s]*"
# Note: Variable @PEMKEYFILE_PATH@ replaced with "/etc/ssl/mongodb.pem" in field "expect".
  expect      : "^[\\s]*PEMKeyFile:[\\s]*[\"\']*/etc/ssl/mongodb.pem[\"\']*[\\s]*"
</custom_item>

<report type:"WARNING">
  description : "MD3X-00-000800 - MongoDB must obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals."
  info        : "The DoD standard for authentication is DoD-approved PKI certificates.

	Normally, with PKI authentication, the interaction with the user for authentication will be handled by a software component separate from MongoDB, such as ActivIdentity ActivClient. However, in cases where MongoDB controls the interaction, this requirement applies.

	To prevent the compromise of authentication information such as passwords and PINs during the authentication process, the feedback from the system must not provide any information that would allow an unauthorized user to compromise the authentication mechanism.

	Obfuscation of user-provided authentication secrets when typed into the system is a method used in addressing this risk.

	Displaying asterisks when a user types in a password or a smart card PIN is an example of obscuring feedback of authentication secrets.

	This calls for review of applications, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "For the 'mongo shell', 'mongodump', 'mongorestore', 'mongoimport', 'mongoexport', which can accept a plain-text password, and any other essential tool with the same limitation:

	Document the need for it, who uses it, and any relevant mitigations, and obtain AO approval.

	Train all users of the tool in the nature of using the plain-text password option and in how to keep the password protected from unauthorized viewing/capture and document they have been trained."
  reference   : "CAT|I,CCI|CCI-000206,Rule-ID|SV-96641r1_rule,STIG-ID|MD3X-00-000800,Vuln-ID|V-81927"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

<report type:"WARNING">
  description : "MD3X-00-001100 - MongoDB must be configured in accordance with the security configuration settings based on DoD security configuration and implementation guidance, including STIGs, NSA configuration guides, CTOs, DTMs, and IAVMs."
  info        : "Configuring MongoDB to implement organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements.

	In addition to this SRG, sources of guidance on security and information assurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs. MongoDB must be configured in compliance with guidance from all such relevant sources.

	NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Configure MongoDB in accordance with security configuration settings by reviewing the Operation System and MongoDB documentation and applying the necessary configuration parameters to meet the configurations required by the STIG, NSA configuration guidelines, CTOs, DTMs, and IAVMs."
  reference   : "CAT|II,CCI|CCI-000366,Rule-ID|SV-96643r1_rule,STIG-ID|MD3X-00-001100,Vuln-ID|V-81929"
  see_also    : "https://iasecontent.disa.mil/stigs/zip/U_MongoDB_Enterprise_Advanced_3-x_V1R1_STIG.zip"
</report>

</check_type>
